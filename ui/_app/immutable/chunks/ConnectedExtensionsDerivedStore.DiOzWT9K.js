import{C as l,u as f,E as o,F as m,A as E,b as A,R as j,j as n}from"./CachedExtensionsStore.BIpYKcFJ.js";import{d as z}from"./index.BbfaIbAQ.js";import"./index.BJ6aBsbe.js";let b;const p=new Promise(t=>{b=t});async function O(t,s){var d;const i={},r=await p;for(const e of Object.values(t)){const u={...e};if(e.installed=f(e.injectedName),r&&e.installed&&e.authorized===o.Authorized){const c=new m(r,E);try{await c.connect(e.injectedName);const a=await c.getAccounts(),h=(d=A)==null?void 0:d[e.injectedName],N={...e,...h,connector:c,accounts:a};i[N.injectedName]=N,e.authorized=o.Authorized}catch(a){if(a instanceof j)switch(a.reason){case n.UNKNOWN:case n.PENDING_AUTH:e.authorized=o.None;break;case n.NO_ACCOUNTS_AUTHORIZED:case n.UNAUTHORIZED:e.authorized=o.Rejected;break;case n.NO_EXTENSION:e.installed=!1;break}console.error(a)}}(u.authorized!==e.authorized||u.installed!==e.installed)&&l.updateExtension(e)}s(i)}const R=z([l],([t],s)=>{O(t,s)},{});export{R as C,b as r};
