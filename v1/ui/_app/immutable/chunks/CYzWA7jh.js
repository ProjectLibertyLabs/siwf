import{C as l,v as f,E as o,h as m,A as E,i as A,O,J as n}from"./Bz1-qmYa.js";import{d as z}from"./BD0tBxJa.js";import"./C4UniOSA.js";let j;const p=new Promise(t=>{j=t});async function b(t,s){var d;const i={},r=await p;for(const e of Object.values(t)){const N={...e};if(e.installed=f(e.injectedName),r&&e.installed&&e.authorized===o.Authorized){const c=new m(r,E);try{await c.connect(e.injectedName);const a=await c.getAccounts(),h=(d=A)==null?void 0:d[e.injectedName],u={...e,...h,connector:c,accounts:a};i[u.injectedName]=u,e.authorized=o.Authorized}catch(a){if(a instanceof O)switch(a.reason){case n.UNKNOWN:case n.PENDING_AUTH:e.authorized=o.None;break;case n.NO_ACCOUNTS_AUTHORIZED:case n.UNAUTHORIZED:e.authorized=o.Rejected;break;case n.NO_EXTENSION:e.installed=!1;break}console.error(a)}}(N.authorized!==e.authorized||N.installed!==e.installed)&&l.updateExtension(e)}s(i)}const v=z([l],([t],s)=>{b(t,s)},{});export{v as C,j as r};
