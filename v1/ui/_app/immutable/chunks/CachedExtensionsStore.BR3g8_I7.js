import{w as Zm}from"./index.BFANTigx.js";import{S as dd,i as ud}from"./index.CakdKvcd.js";import{s as ld,x as Y,y as J,b as _,f as G,m as I,i as fd,h as Q,n as wa,U as bc}from"./scheduler.B__lA1Ni.js";function Pz(t,e){const n={},r={},a={$$scope:1};let i=t.length;for(;i--;){const s=t[i],o=e[i];if(o){for(const d in s)d in o||(r[d]=1);for(const d in o)a[d]||(n[d]=o[d],a[d]=1);t[i]=o}else for(const d in s)a[d]=1}for(const s in r)s in n||(n[s]=void 0);return n}function Mz(t){return typeof t=="object"&&t!==null?t:{}}var Wm=Object.defineProperty,Gm=(t,e,n)=>e in t?Wm(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,S=(t,e,n)=>Gm(t,typeof e!="symbol"?e+"":e,n),Km=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function E0(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function Ym(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(r){var a=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(n,r,a.get?a:{enumerable:!0,get:function(){return t[r]}})}),n}var z0={},js={},Us={};Object.defineProperty(Us,"__esModule",{value:!0});Us.BrowserRandomSource=void 0;const Tu=65536;class Jm{constructor(){this.isAvailable=!1,this.isInstantiated=!1;const e=typeof self<"u"?self.crypto||self.msCrypto:null;e&&e.getRandomValues!==void 0&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error("Browser random byte generator is not available.");const n=new Uint8Array(e);for(let r=0;r<n.length;r+=Tu)this._crypto.getRandomValues(n.subarray(r,r+Math.min(n.length-r,Tu)));return n}}Us.BrowserRandomSource=Jm;function _m(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Xs={},Ds={};Object.defineProperty(Ds,"__esModule",{value:!0});function Qm(t){for(var e=0;e<t.length;e++)t[e]=0;return t}Ds.wipe=Qm;const $m={},eb=Object.freeze(Object.defineProperty({__proto__:null,default:$m},Symbol.toStringTag,{value:"Module"})),H0=Ym(eb);Object.defineProperty(Xs,"__esModule",{value:!0});Xs.NodeRandomSource=void 0;const tb=Ds;class nb{constructor(){if(this.isAvailable=!1,this.isInstantiated=!1,typeof _m<"u"){const e=H0;e&&e.randomBytes&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error("Node.js random byte generator is not available.");let n=this._crypto.randomBytes(e);if(n.length!==e)throw new Error("NodeRandomSource: got fewer bytes than requested");const r=new Uint8Array(e);for(let a=0;a<r.length;a++)r[a]=n[a];return(0,tb.wipe)(n),r}}Xs.NodeRandomSource=nb;Object.defineProperty(js,"__esModule",{value:!0});js.SystemRandomSource=void 0;const rb=Us,ab=Xs;class ib{constructor(){if(this.isAvailable=!1,this.name="",this._source=new rb.BrowserRandomSource,this._source.isAvailable){this.isAvailable=!0,this.name="Browser";return}if(this._source=new ab.NodeRandomSource,this._source.isAvailable){this.isAvailable=!0,this.name="Node";return}}randomBytes(e){if(!this.isAvailable)throw new Error("System random byte generator is not available.");return this._source.randomBytes(e)}}js.SystemRandomSource=ib;var Je={},L0={};(function(t){Object.defineProperty(t,"__esModule",{value:!0});function e(o,d){var f=o>>>16&65535,p=o&65535,g=d>>>16&65535,P=d&65535;return p*P+(f*P+p*g<<16>>>0)|0}t.mul=Math.imul||e;function n(o,d){return o+d|0}t.add=n;function r(o,d){return o-d|0}t.sub=r;function a(o,d){return o<<d|o>>>32-d}t.rotl=a;function i(o,d){return o<<32-d|o>>>d}t.rotr=i;function s(o){return typeof o=="number"&&isFinite(o)&&Math.floor(o)===o}t.isInteger=Number.isInteger||s,t.MAX_SAFE_INTEGER=9007199254740991,t.isSafeInteger=function(o){return t.isInteger(o)&&o>=-t.MAX_SAFE_INTEGER&&o<=t.MAX_SAFE_INTEGER}})(L0);Object.defineProperty(Je,"__esModule",{value:!0});var R0=L0;function sb(t,e){return e===void 0&&(e=0),(t[e+0]<<8|t[e+1])<<16>>16}Je.readInt16BE=sb;function ob(t,e){return e===void 0&&(e=0),(t[e+0]<<8|t[e+1])>>>0}Je.readUint16BE=ob;function cb(t,e){return e===void 0&&(e=0),(t[e+1]<<8|t[e])<<16>>16}Je.readInt16LE=cb;function db(t,e){return e===void 0&&(e=0),(t[e+1]<<8|t[e])>>>0}Je.readUint16LE=db;function B0(t,e,n){return e===void 0&&(e=new Uint8Array(2)),n===void 0&&(n=0),e[n+0]=t>>>8,e[n+1]=t>>>0,e}Je.writeUint16BE=B0;Je.writeInt16BE=B0;function A0(t,e,n){return e===void 0&&(e=new Uint8Array(2)),n===void 0&&(n=0),e[n+0]=t>>>0,e[n+1]=t>>>8,e}Je.writeUint16LE=A0;Je.writeInt16LE=A0;function yc(t,e){return e===void 0&&(e=0),t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3]}Je.readInt32BE=yc;function xc(t,e){return e===void 0&&(e=0),(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}Je.readUint32BE=xc;function gc(t,e){return e===void 0&&(e=0),t[e+3]<<24|t[e+2]<<16|t[e+1]<<8|t[e]}Je.readInt32LE=gc;function vc(t,e){return e===void 0&&(e=0),(t[e+3]<<24|t[e+2]<<16|t[e+1]<<8|t[e])>>>0}Je.readUint32LE=vc;function hs(t,e,n){return e===void 0&&(e=new Uint8Array(4)),n===void 0&&(n=0),e[n+0]=t>>>24,e[n+1]=t>>>16,e[n+2]=t>>>8,e[n+3]=t>>>0,e}Je.writeUint32BE=hs;Je.writeInt32BE=hs;function ps(t,e,n){return e===void 0&&(e=new Uint8Array(4)),n===void 0&&(n=0),e[n+0]=t>>>0,e[n+1]=t>>>8,e[n+2]=t>>>16,e[n+3]=t>>>24,e}Je.writeUint32LE=ps;Je.writeInt32LE=ps;function ub(t,e){e===void 0&&(e=0);var n=yc(t,e),r=yc(t,e+4);return n*4294967296+r-(r>>31)*4294967296}Je.readInt64BE=ub;function lb(t,e){e===void 0&&(e=0);var n=xc(t,e),r=xc(t,e+4);return n*4294967296+r}Je.readUint64BE=lb;function fb(t,e){e===void 0&&(e=0);var n=gc(t,e),r=gc(t,e+4);return r*4294967296+n-(n>>31)*4294967296}Je.readInt64LE=fb;function hb(t,e){e===void 0&&(e=0);var n=vc(t,e),r=vc(t,e+4);return r*4294967296+n}Je.readUint64LE=hb;function C0(t,e,n){return e===void 0&&(e=new Uint8Array(8)),n===void 0&&(n=0),hs(t/4294967296>>>0,e,n),hs(t>>>0,e,n+4),e}Je.writeUint64BE=C0;Je.writeInt64BE=C0;function j0(t,e,n){return e===void 0&&(e=new Uint8Array(8)),n===void 0&&(n=0),ps(t>>>0,e,n),ps(t/4294967296>>>0,e,n+4),e}Je.writeUint64LE=j0;Je.writeInt64LE=j0;function pb(t,e,n){if(n===void 0&&(n=0),t%8!==0)throw new Error("readUintBE supports only bitLengths divisible by 8");if(t/8>e.length-n)throw new Error("readUintBE: array is too short for the given bitLength");for(var r=0,a=1,i=t/8+n-1;i>=n;i--)r+=e[i]*a,a*=256;return r}Je.readUintBE=pb;function mb(t,e,n){if(n===void 0&&(n=0),t%8!==0)throw new Error("readUintLE supports only bitLengths divisible by 8");if(t/8>e.length-n)throw new Error("readUintLE: array is too short for the given bitLength");for(var r=0,a=1,i=n;i<n+t/8;i++)r+=e[i]*a,a*=256;return r}Je.readUintLE=mb;function bb(t,e,n,r){if(n===void 0&&(n=new Uint8Array(t/8)),r===void 0&&(r=0),t%8!==0)throw new Error("writeUintBE supports only bitLengths divisible by 8");if(!R0.isSafeInteger(e))throw new Error("writeUintBE value must be an integer");for(var a=1,i=t/8+r-1;i>=r;i--)n[i]=e/a&255,a*=256;return n}Je.writeUintBE=bb;function yb(t,e,n,r){if(n===void 0&&(n=new Uint8Array(t/8)),r===void 0&&(r=0),t%8!==0)throw new Error("writeUintLE supports only bitLengths divisible by 8");if(!R0.isSafeInteger(e))throw new Error("writeUintLE value must be an integer");for(var a=1,i=r;i<r+t/8;i++)n[i]=e/a&255,a*=256;return n}Je.writeUintLE=yb;function xb(t,e){e===void 0&&(e=0);var n=new DataView(t.buffer,t.byteOffset,t.byteLength);return n.getFloat32(e)}Je.readFloat32BE=xb;function gb(t,e){e===void 0&&(e=0);var n=new DataView(t.buffer,t.byteOffset,t.byteLength);return n.getFloat32(e,!0)}Je.readFloat32LE=gb;function vb(t,e){e===void 0&&(e=0);var n=new DataView(t.buffer,t.byteOffset,t.byteLength);return n.getFloat64(e)}Je.readFloat64BE=vb;function wb(t,e){e===void 0&&(e=0);var n=new DataView(t.buffer,t.byteOffset,t.byteLength);return n.getFloat64(e,!0)}Je.readFloat64LE=wb;function Pb(t,e,n){e===void 0&&(e=new Uint8Array(4)),n===void 0&&(n=0);var r=new DataView(e.buffer,e.byteOffset,e.byteLength);return r.setFloat32(n,t),e}Je.writeFloat32BE=Pb;function Mb(t,e,n){e===void 0&&(e=new Uint8Array(4)),n===void 0&&(n=0);var r=new DataView(e.buffer,e.byteOffset,e.byteLength);return r.setFloat32(n,t,!0),e}Je.writeFloat32LE=Mb;function Tb(t,e,n){e===void 0&&(e=new Uint8Array(8)),n===void 0&&(n=0);var r=new DataView(e.buffer,e.byteOffset,e.byteLength);return r.setFloat64(n,t),e}Je.writeFloat64BE=Tb;function Sb(t,e,n){e===void 0&&(e=new Uint8Array(8)),n===void 0&&(n=0);var r=new DataView(e.buffer,e.byteOffset,e.byteLength);return r.setFloat64(n,t,!0),e}Je.writeFloat64LE=Sb;(function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.randomStringForEntropy=t.randomString=t.randomUint32=t.randomBytes=t.defaultRandomSource=void 0;const e=js,n=Je,r=Ds;t.defaultRandomSource=new e.SystemRandomSource;function a(f,p=t.defaultRandomSource){return p.randomBytes(f)}t.randomBytes=a;function i(f=t.defaultRandomSource){const p=a(4,f),g=(0,n.readUint32LE)(p);return(0,r.wipe)(p),g}t.randomUint32=i;const s="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";function o(f,p=s,g=t.defaultRandomSource){if(p.length<2)throw new Error("randomString charset is too short");if(p.length>256)throw new Error("randomString charset is too long");let P="";const T=p.length,k=256-256%T;for(;f>0;){const M=a(Math.ceil(f*256/k),g);for(let O=0;O<M.length&&f>0;O++){const V=M[O];V<k&&(P+=p.charAt(V%T),f--)}(0,r.wipe)(M)}return P}t.randomString=o;function d(f,p=s,g=t.defaultRandomSource){const P=Math.ceil(f/(Math.log(p.length)/Math.LN2));return o(P,p,g)}t.randomStringForEntropy=d})(z0);function Tz(){return z0.randomStringForEntropy(96)}function kb(t){return t("return this")}const qt=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:kb(Function);function hd(t,e){return typeof qt[t]>"u"?e:qt[t]}let Ob=class{constructor(t){S(this,"__encoding"),this.__encoding=t}decode(t){let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);return e}};const Nb=hd("TextDecoder",Ob);let Vb=class{encode(t){const e=t.length,n=new Uint8Array(e);for(let r=0;r<e;r++)n[r]=t.charCodeAt(r);return n}};const Ib=hd("TextEncoder",Vb);function fe(t){return typeof t=="function"}function wc(t,e){const n=Math.ceil(t.length/e);if(n===1)return[t];const r=Array(n);for(let a=0;a<n;a++){const i=a*e;r[a]=t.slice(i,i+e)}return r}function ya(t){const e=t.length;if(e===0)return[];if(e===1)return t[0];let n=0;for(let i=0;i<e;i++)n+=t[i].length;const r=new Array(n);let a=-1;for(let i=0;i<e;i++){const s=t[i];for(let o=0,d=s.length;o<d;o++)r[++a]=s[o]}return r}function Eb(t,e){if(!t)throw new Error(fe(e)?e():e)}function dr(t,e){return Eb(t!=null,e),t}function zb(t){throw new Error(`This codepath should be unreachable. Unhandled input: ${t}`)}function U0(t){return(...e)=>{const n=e.length;if(n===0)throw new Error("Must provide one or more arguments");let r=e[0];for(let a=1;a<n;a++)t(e[a],r)&&(r=e[a]);return r}}function Hb(){return Number.NaN}const tt=hd("BigInt",Hb),Lb=tt(0),Rb=tt(1),go="0123456789abcdef",ms=new Uint8Array(256),X0=new Uint8Array(256*256);for(let t=0,e=go.length;t<e;t++)ms[go[t].charCodeAt(0)|0]=t|0,t>9&&(ms[go[t].toUpperCase().charCodeAt(0)|0]=t|0);for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)X0[e|n]=ms[t]<<4|ms[n]}function Fn(t,e=-1){if(!t)return new Uint8Array;let n=t.startsWith("0x")?2:0;const r=Math.ceil((t.length-n)/2),a=Math.ceil(e===-1?r:e/8),i=new Uint8Array(a),s=a>r?a-r:0;for(let o=s;o<a;o++,n+=2)i[o]=X0[t.charCodeAt(n)<<8|t.charCodeAt(n+1)];return i}var D0={exports:{}};(function(t){(function(e,n){function r(c,l){if(!c)throw new Error(l||"Assertion failed")}function a(c,l){c.super_=l;var h=function(){};h.prototype=l.prototype,c.prototype=new h,c.prototype.constructor=c}function i(c,l,h){if(i.isBN(c))return c;this.negative=0,this.words=null,this.length=0,this.red=null,c!==null&&((l==="le"||l==="be")&&(h=l,l=10),this._init(c||0,l||10,h||"be"))}typeof e=="object"?e.exports=i:n.BN=i,i.BN=i,i.wordSize=26;var s;try{typeof window<"u"&&typeof window.Buffer<"u"?s=window.Buffer:s=H0.Buffer}catch{}i.isBN=function(c){return c instanceof i?!0:c!==null&&typeof c=="object"&&c.constructor.wordSize===i.wordSize&&Array.isArray(c.words)},i.max=function(c,l){return c.cmp(l)>0?c:l},i.min=function(c,l){return c.cmp(l)<0?c:l},i.prototype._init=function(c,l,h){if(typeof c=="number")return this._initNumber(c,l,h);if(typeof c=="object")return this._initArray(c,l,h);l==="hex"&&(l=16),r(l===(l|0)&&l>=2&&l<=36),c=c.toString().replace(/\s+/g,"");var m=0;c[0]==="-"&&(m++,this.negative=1),m<c.length&&(l===16?this._parseHex(c,m,h):(this._parseBase(c,l,m),h==="le"&&this._initArray(this.toArray(),l,h)))},i.prototype._initNumber=function(c,l,h){c<0&&(this.negative=1,c=-c),c<67108864?(this.words=[c&67108863],this.length=1):c<4503599627370496?(this.words=[c&67108863,c/67108864&67108863],this.length=2):(r(c<9007199254740992),this.words=[c&67108863,c/67108864&67108863,1],this.length=3),h==="le"&&this._initArray(this.toArray(),l,h)},i.prototype._initArray=function(c,l,h){if(r(typeof c.length=="number"),c.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(c.length/3),this.words=new Array(this.length);for(var m=0;m<this.length;m++)this.words[m]=0;var y,v,w=0;if(h==="be")for(m=c.length-1,y=0;m>=0;m-=3)v=c[m]|c[m-1]<<8|c[m-2]<<16,this.words[y]|=v<<w&67108863,this.words[y+1]=v>>>26-w&67108863,w+=24,w>=26&&(w-=26,y++);else if(h==="le")for(m=0,y=0;m<c.length;m+=3)v=c[m]|c[m+1]<<8|c[m+2]<<16,this.words[y]|=v<<w&67108863,this.words[y+1]=v>>>26-w&67108863,w+=24,w>=26&&(w-=26,y++);return this._strip()};function o(c,l){var h=c.charCodeAt(l);if(h>=48&&h<=57)return h-48;if(h>=65&&h<=70)return h-55;if(h>=97&&h<=102)return h-87;r(!1,"Invalid character in "+c)}function d(c,l,h){var m=o(c,h);return h-1>=l&&(m|=o(c,h-1)<<4),m}i.prototype._parseHex=function(c,l,h){this.length=Math.ceil((c.length-l)/6),this.words=new Array(this.length);for(var m=0;m<this.length;m++)this.words[m]=0;var y=0,v=0,w;if(h==="be")for(m=c.length-1;m>=l;m-=2)w=d(c,l,m)<<y,this.words[v]|=w&67108863,y>=18?(y-=18,v+=1,this.words[v]|=w>>>26):y+=8;else{var b=c.length-l;for(m=b%2===0?l+1:l;m<c.length;m+=2)w=d(c,l,m)<<y,this.words[v]|=w&67108863,y>=18?(y-=18,v+=1,this.words[v]|=w>>>26):y+=8}this._strip()};function f(c,l,h,m){for(var y=0,v=0,w=Math.min(c.length,h),b=l;b<w;b++){var u=c.charCodeAt(b)-48;y*=m,u>=49?v=u-49+10:u>=17?v=u-17+10:v=u,r(u>=0&&v<m,"Invalid character"),y+=v}return y}i.prototype._parseBase=function(c,l,h){this.words=[0],this.length=1;for(var m=0,y=1;y<=67108863;y*=l)m++;m--,y=y/l|0;for(var v=c.length-h,w=v%m,b=Math.min(v,v-w)+h,u=0,x=h;x<b;x+=m)u=f(c,x,x+m,l),this.imuln(y),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(w!==0){var R=1;for(u=f(c,x,c.length,l),x=0;x<w;x++)R*=l;this.imuln(R),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this._strip()},i.prototype.copy=function(c){c.words=new Array(this.length);for(var l=0;l<this.length;l++)c.words[l]=this.words[l];c.length=this.length,c.negative=this.negative,c.red=this.red};function p(c,l){c.words=l.words,c.length=l.length,c.negative=l.negative,c.red=l.red}if(i.prototype._move=function(c){p(c,this)},i.prototype.clone=function(){var c=new i(null);return this.copy(c),c},i.prototype._expand=function(c){for(;this.length<c;)this.words[this.length++]=0;return this},i.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},i.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{i.prototype[Symbol.for("nodejs.util.inspect.custom")]=g}catch{i.prototype.inspect=g}else i.prototype.inspect=g;function g(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var P=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],T=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],k=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];i.prototype.toString=function(c,l){c=c||10,l=l|0||1;var h;if(c===16||c==="hex"){h="";for(var m=0,y=0,v=0;v<this.length;v++){var w=this.words[v],b=((w<<m|y)&16777215).toString(16);y=w>>>24-m&16777215,m+=2,m>=26&&(m-=26,v--),y!==0||v!==this.length-1?h=P[6-b.length]+b+h:h=b+h}for(y!==0&&(h=y.toString(16)+h);h.length%l!==0;)h="0"+h;return this.negative!==0&&(h="-"+h),h}if(c===(c|0)&&c>=2&&c<=36){var u=T[c],x=k[c];h="";var R=this.clone();for(R.negative=0;!R.isZero();){var L=R.modrn(x).toString(c);R=R.idivn(x),R.isZero()?h=L+h:h=P[u-L.length]+L+h}for(this.isZero()&&(h="0"+h);h.length%l!==0;)h="0"+h;return this.negative!==0&&(h="-"+h),h}r(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var c=this.words[0];return this.length===2?c+=this.words[1]*67108864:this.length===3&&this.words[2]===1?c+=4503599627370496+this.words[1]*67108864:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-c:c},i.prototype.toJSON=function(){return this.toString(16,2)},s&&(i.prototype.toBuffer=function(c,l){return this.toArrayLike(s,c,l)}),i.prototype.toArray=function(c,l){return this.toArrayLike(Array,c,l)};var M=function(c,l){return c.allocUnsafe?c.allocUnsafe(l):new c(l)};i.prototype.toArrayLike=function(c,l,h){this._strip();var m=this.byteLength(),y=h||Math.max(1,m);r(m<=y,"byte array longer than desired length"),r(y>0,"Requested array length <= 0");var v=M(c,y),w=l==="le"?"LE":"BE";return this["_toArrayLike"+w](v,m),v},i.prototype._toArrayLikeLE=function(c,l){for(var h=0,m=0,y=0,v=0;y<this.length;y++){var w=this.words[y]<<v|m;c[h++]=w&255,h<c.length&&(c[h++]=w>>8&255),h<c.length&&(c[h++]=w>>16&255),v===6?(h<c.length&&(c[h++]=w>>24&255),m=0,v=0):(m=w>>>24,v+=2)}if(h<c.length)for(c[h++]=m;h<c.length;)c[h++]=0},i.prototype._toArrayLikeBE=function(c,l){for(var h=c.length-1,m=0,y=0,v=0;y<this.length;y++){var w=this.words[y]<<v|m;c[h--]=w&255,h>=0&&(c[h--]=w>>8&255),h>=0&&(c[h--]=w>>16&255),v===6?(h>=0&&(c[h--]=w>>24&255),m=0,v=0):(m=w>>>24,v+=2)}if(h>=0)for(c[h--]=m;h>=0;)c[h--]=0},Math.clz32?i.prototype._countBits=function(c){return 32-Math.clz32(c)}:i.prototype._countBits=function(c){var l=c,h=0;return l>=4096&&(h+=13,l>>>=13),l>=64&&(h+=7,l>>>=7),l>=8&&(h+=4,l>>>=4),l>=2&&(h+=2,l>>>=2),h+l},i.prototype._zeroBits=function(c){if(c===0)return 26;var l=c,h=0;return l&8191||(h+=13,l>>>=13),l&127||(h+=7,l>>>=7),l&15||(h+=4,l>>>=4),l&3||(h+=2,l>>>=2),l&1||h++,h},i.prototype.bitLength=function(){var c=this.words[this.length-1],l=this._countBits(c);return(this.length-1)*26+l};function O(c){for(var l=new Array(c.bitLength()),h=0;h<l.length;h++){var m=h/26|0,y=h%26;l[h]=c.words[m]>>>y&1}return l}i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var c=0,l=0;l<this.length;l++){var h=this._zeroBits(this.words[l]);if(c+=h,h!==26)break}return c},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(c){return this.negative!==0?this.abs().inotn(c).iaddn(1):this.clone()},i.prototype.fromTwos=function(c){return this.testn(c-1)?this.notn(c).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return this.negative!==0},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(c){for(;this.length<c.length;)this.words[this.length++]=0;for(var l=0;l<c.length;l++)this.words[l]=this.words[l]|c.words[l];return this._strip()},i.prototype.ior=function(c){return r((this.negative|c.negative)===0),this.iuor(c)},i.prototype.or=function(c){return this.length>c.length?this.clone().ior(c):c.clone().ior(this)},i.prototype.uor=function(c){return this.length>c.length?this.clone().iuor(c):c.clone().iuor(this)},i.prototype.iuand=function(c){var l;this.length>c.length?l=c:l=this;for(var h=0;h<l.length;h++)this.words[h]=this.words[h]&c.words[h];return this.length=l.length,this._strip()},i.prototype.iand=function(c){return r((this.negative|c.negative)===0),this.iuand(c)},i.prototype.and=function(c){return this.length>c.length?this.clone().iand(c):c.clone().iand(this)},i.prototype.uand=function(c){return this.length>c.length?this.clone().iuand(c):c.clone().iuand(this)},i.prototype.iuxor=function(c){var l,h;this.length>c.length?(l=this,h=c):(l=c,h=this);for(var m=0;m<h.length;m++)this.words[m]=l.words[m]^h.words[m];if(this!==l)for(;m<l.length;m++)this.words[m]=l.words[m];return this.length=l.length,this._strip()},i.prototype.ixor=function(c){return r((this.negative|c.negative)===0),this.iuxor(c)},i.prototype.xor=function(c){return this.length>c.length?this.clone().ixor(c):c.clone().ixor(this)},i.prototype.uxor=function(c){return this.length>c.length?this.clone().iuxor(c):c.clone().iuxor(this)},i.prototype.inotn=function(c){r(typeof c=="number"&&c>=0);var l=Math.ceil(c/26)|0,h=c%26;this._expand(l),h>0&&l--;for(var m=0;m<l;m++)this.words[m]=~this.words[m]&67108863;return h>0&&(this.words[m]=~this.words[m]&67108863>>26-h),this._strip()},i.prototype.notn=function(c){return this.clone().inotn(c)},i.prototype.setn=function(c,l){r(typeof c=="number"&&c>=0);var h=c/26|0,m=c%26;return this._expand(h+1),l?this.words[h]=this.words[h]|1<<m:this.words[h]=this.words[h]&~(1<<m),this._strip()},i.prototype.iadd=function(c){var l;if(this.negative!==0&&c.negative===0)return this.negative=0,l=this.isub(c),this.negative^=1,this._normSign();if(this.negative===0&&c.negative!==0)return c.negative=0,l=this.isub(c),c.negative=1,l._normSign();var h,m;this.length>c.length?(h=this,m=c):(h=c,m=this);for(var y=0,v=0;v<m.length;v++)l=(h.words[v]|0)+(m.words[v]|0)+y,this.words[v]=l&67108863,y=l>>>26;for(;y!==0&&v<h.length;v++)l=(h.words[v]|0)+y,this.words[v]=l&67108863,y=l>>>26;if(this.length=h.length,y!==0)this.words[this.length]=y,this.length++;else if(h!==this)for(;v<h.length;v++)this.words[v]=h.words[v];return this},i.prototype.add=function(c){var l;return c.negative!==0&&this.negative===0?(c.negative=0,l=this.sub(c),c.negative^=1,l):c.negative===0&&this.negative!==0?(this.negative=0,l=c.sub(this),this.negative=1,l):this.length>c.length?this.clone().iadd(c):c.clone().iadd(this)},i.prototype.isub=function(c){if(c.negative!==0){c.negative=0;var l=this.iadd(c);return c.negative=1,l._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(c),this.negative=1,this._normSign();var h=this.cmp(c);if(h===0)return this.negative=0,this.length=1,this.words[0]=0,this;var m,y;h>0?(m=this,y=c):(m=c,y=this);for(var v=0,w=0;w<y.length;w++)l=(m.words[w]|0)-(y.words[w]|0)+v,v=l>>26,this.words[w]=l&67108863;for(;v!==0&&w<m.length;w++)l=(m.words[w]|0)+v,v=l>>26,this.words[w]=l&67108863;if(v===0&&w<m.length&&m!==this)for(;w<m.length;w++)this.words[w]=m.words[w];return this.length=Math.max(this.length,w),m!==this&&(this.negative=1),this._strip()},i.prototype.sub=function(c){return this.clone().isub(c)};function V(c,l,h){h.negative=l.negative^c.negative;var m=c.length+l.length|0;h.length=m,m=m-1|0;var y=c.words[0]|0,v=l.words[0]|0,w=y*v,b=w&67108863,u=w/67108864|0;h.words[0]=b;for(var x=1;x<m;x++){for(var R=u>>>26,L=u&67108863,X=Math.min(x,l.length-1),te=Math.max(0,x-c.length+1);te<=X;te++){var Z=x-te|0;y=c.words[Z]|0,v=l.words[te]|0,w=y*v+L,R+=w/67108864|0,L=w&67108863}h.words[x]=L|0,u=R|0}return u!==0?h.words[x]=u|0:h.length--,h._strip()}var N=function(c,l,h){var m=c.words,y=l.words,v=h.words,w=0,b,u,x,R=m[0]|0,L=R&8191,X=R>>>13,te=m[1]|0,Z=te&8191,K=te>>>13,_e=m[2]|0,ae=_e&8191,de=_e>>>13,Re=m[3]|0,ue=Re&8191,se=Re>>>13,ft=m[4]|0,he=ft&8191,Me=ft>>>13,zt=m[5]|0,Te=zt&8191,ce=zt>>>13,Ht=m[6]|0,ye=Ht&8191,be=Ht>>>13,Tt=m[7]|0,xe=Tt&8191,ge=Tt>>>13,St=m[8]|0,ve=St&8191,Se=St>>>13,Lt=m[9]|0,ke=Lt&8191,Oe=Lt>>>13,Jt=y[0]|0,He=Jt&8191,Ne=Jt>>>13,kt=y[1]|0,Be=kt&8191,we=kt>>>13,Ot=y[2]|0,Ie=Ot&8191,Ve=Ot>>>13,jt=y[3]|0,Le=jt&8191,Ee=jt>>>13,_t=y[4]|0,ze=_t&8191,pe=_t>>>13,ja=y[5]|0,Ae=ja&8191,Ce=ja>>>13,Ua=y[6]|0,je=Ua&8191,Ue=Ua>>>13,Xa=y[7]|0,Xe=Xa&8191,De=Xa>>>13,Da=y[8]|0,Fe=Da&8191,qe=Da>>>13,Fa=y[9]|0,Ze=Fa&8191,We=Fa>>>13;h.negative=c.negative^l.negative,h.length=19,b=Math.imul(L,He),u=Math.imul(L,Ne),u=u+Math.imul(X,He)|0,x=Math.imul(X,Ne);var yr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(yr>>>26)|0,yr&=67108863,b=Math.imul(Z,He),u=Math.imul(Z,Ne),u=u+Math.imul(K,He)|0,x=Math.imul(K,Ne),b=b+Math.imul(L,Be)|0,u=u+Math.imul(L,we)|0,u=u+Math.imul(X,Be)|0,x=x+Math.imul(X,we)|0;var xr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(xr>>>26)|0,xr&=67108863,b=Math.imul(ae,He),u=Math.imul(ae,Ne),u=u+Math.imul(de,He)|0,x=Math.imul(de,Ne),b=b+Math.imul(Z,Be)|0,u=u+Math.imul(Z,we)|0,u=u+Math.imul(K,Be)|0,x=x+Math.imul(K,we)|0,b=b+Math.imul(L,Ie)|0,u=u+Math.imul(L,Ve)|0,u=u+Math.imul(X,Ie)|0,x=x+Math.imul(X,Ve)|0;var gr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(gr>>>26)|0,gr&=67108863,b=Math.imul(ue,He),u=Math.imul(ue,Ne),u=u+Math.imul(se,He)|0,x=Math.imul(se,Ne),b=b+Math.imul(ae,Be)|0,u=u+Math.imul(ae,we)|0,u=u+Math.imul(de,Be)|0,x=x+Math.imul(de,we)|0,b=b+Math.imul(Z,Ie)|0,u=u+Math.imul(Z,Ve)|0,u=u+Math.imul(K,Ie)|0,x=x+Math.imul(K,Ve)|0,b=b+Math.imul(L,Le)|0,u=u+Math.imul(L,Ee)|0,u=u+Math.imul(X,Le)|0,x=x+Math.imul(X,Ee)|0;var vr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(vr>>>26)|0,vr&=67108863,b=Math.imul(he,He),u=Math.imul(he,Ne),u=u+Math.imul(Me,He)|0,x=Math.imul(Me,Ne),b=b+Math.imul(ue,Be)|0,u=u+Math.imul(ue,we)|0,u=u+Math.imul(se,Be)|0,x=x+Math.imul(se,we)|0,b=b+Math.imul(ae,Ie)|0,u=u+Math.imul(ae,Ve)|0,u=u+Math.imul(de,Ie)|0,x=x+Math.imul(de,Ve)|0,b=b+Math.imul(Z,Le)|0,u=u+Math.imul(Z,Ee)|0,u=u+Math.imul(K,Le)|0,x=x+Math.imul(K,Ee)|0,b=b+Math.imul(L,ze)|0,u=u+Math.imul(L,pe)|0,u=u+Math.imul(X,ze)|0,x=x+Math.imul(X,pe)|0;var wr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(wr>>>26)|0,wr&=67108863,b=Math.imul(Te,He),u=Math.imul(Te,Ne),u=u+Math.imul(ce,He)|0,x=Math.imul(ce,Ne),b=b+Math.imul(he,Be)|0,u=u+Math.imul(he,we)|0,u=u+Math.imul(Me,Be)|0,x=x+Math.imul(Me,we)|0,b=b+Math.imul(ue,Ie)|0,u=u+Math.imul(ue,Ve)|0,u=u+Math.imul(se,Ie)|0,x=x+Math.imul(se,Ve)|0,b=b+Math.imul(ae,Le)|0,u=u+Math.imul(ae,Ee)|0,u=u+Math.imul(de,Le)|0,x=x+Math.imul(de,Ee)|0,b=b+Math.imul(Z,ze)|0,u=u+Math.imul(Z,pe)|0,u=u+Math.imul(K,ze)|0,x=x+Math.imul(K,pe)|0,b=b+Math.imul(L,Ae)|0,u=u+Math.imul(L,Ce)|0,u=u+Math.imul(X,Ae)|0,x=x+Math.imul(X,Ce)|0;var Pr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Pr>>>26)|0,Pr&=67108863,b=Math.imul(ye,He),u=Math.imul(ye,Ne),u=u+Math.imul(be,He)|0,x=Math.imul(be,Ne),b=b+Math.imul(Te,Be)|0,u=u+Math.imul(Te,we)|0,u=u+Math.imul(ce,Be)|0,x=x+Math.imul(ce,we)|0,b=b+Math.imul(he,Ie)|0,u=u+Math.imul(he,Ve)|0,u=u+Math.imul(Me,Ie)|0,x=x+Math.imul(Me,Ve)|0,b=b+Math.imul(ue,Le)|0,u=u+Math.imul(ue,Ee)|0,u=u+Math.imul(se,Le)|0,x=x+Math.imul(se,Ee)|0,b=b+Math.imul(ae,ze)|0,u=u+Math.imul(ae,pe)|0,u=u+Math.imul(de,ze)|0,x=x+Math.imul(de,pe)|0,b=b+Math.imul(Z,Ae)|0,u=u+Math.imul(Z,Ce)|0,u=u+Math.imul(K,Ae)|0,x=x+Math.imul(K,Ce)|0,b=b+Math.imul(L,je)|0,u=u+Math.imul(L,Ue)|0,u=u+Math.imul(X,je)|0,x=x+Math.imul(X,Ue)|0;var Mr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Mr>>>26)|0,Mr&=67108863,b=Math.imul(xe,He),u=Math.imul(xe,Ne),u=u+Math.imul(ge,He)|0,x=Math.imul(ge,Ne),b=b+Math.imul(ye,Be)|0,u=u+Math.imul(ye,we)|0,u=u+Math.imul(be,Be)|0,x=x+Math.imul(be,we)|0,b=b+Math.imul(Te,Ie)|0,u=u+Math.imul(Te,Ve)|0,u=u+Math.imul(ce,Ie)|0,x=x+Math.imul(ce,Ve)|0,b=b+Math.imul(he,Le)|0,u=u+Math.imul(he,Ee)|0,u=u+Math.imul(Me,Le)|0,x=x+Math.imul(Me,Ee)|0,b=b+Math.imul(ue,ze)|0,u=u+Math.imul(ue,pe)|0,u=u+Math.imul(se,ze)|0,x=x+Math.imul(se,pe)|0,b=b+Math.imul(ae,Ae)|0,u=u+Math.imul(ae,Ce)|0,u=u+Math.imul(de,Ae)|0,x=x+Math.imul(de,Ce)|0,b=b+Math.imul(Z,je)|0,u=u+Math.imul(Z,Ue)|0,u=u+Math.imul(K,je)|0,x=x+Math.imul(K,Ue)|0,b=b+Math.imul(L,Xe)|0,u=u+Math.imul(L,De)|0,u=u+Math.imul(X,Xe)|0,x=x+Math.imul(X,De)|0;var Tr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Tr>>>26)|0,Tr&=67108863,b=Math.imul(ve,He),u=Math.imul(ve,Ne),u=u+Math.imul(Se,He)|0,x=Math.imul(Se,Ne),b=b+Math.imul(xe,Be)|0,u=u+Math.imul(xe,we)|0,u=u+Math.imul(ge,Be)|0,x=x+Math.imul(ge,we)|0,b=b+Math.imul(ye,Ie)|0,u=u+Math.imul(ye,Ve)|0,u=u+Math.imul(be,Ie)|0,x=x+Math.imul(be,Ve)|0,b=b+Math.imul(Te,Le)|0,u=u+Math.imul(Te,Ee)|0,u=u+Math.imul(ce,Le)|0,x=x+Math.imul(ce,Ee)|0,b=b+Math.imul(he,ze)|0,u=u+Math.imul(he,pe)|0,u=u+Math.imul(Me,ze)|0,x=x+Math.imul(Me,pe)|0,b=b+Math.imul(ue,Ae)|0,u=u+Math.imul(ue,Ce)|0,u=u+Math.imul(se,Ae)|0,x=x+Math.imul(se,Ce)|0,b=b+Math.imul(ae,je)|0,u=u+Math.imul(ae,Ue)|0,u=u+Math.imul(de,je)|0,x=x+Math.imul(de,Ue)|0,b=b+Math.imul(Z,Xe)|0,u=u+Math.imul(Z,De)|0,u=u+Math.imul(K,Xe)|0,x=x+Math.imul(K,De)|0,b=b+Math.imul(L,Fe)|0,u=u+Math.imul(L,qe)|0,u=u+Math.imul(X,Fe)|0,x=x+Math.imul(X,qe)|0;var Sr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Sr>>>26)|0,Sr&=67108863,b=Math.imul(ke,He),u=Math.imul(ke,Ne),u=u+Math.imul(Oe,He)|0,x=Math.imul(Oe,Ne),b=b+Math.imul(ve,Be)|0,u=u+Math.imul(ve,we)|0,u=u+Math.imul(Se,Be)|0,x=x+Math.imul(Se,we)|0,b=b+Math.imul(xe,Ie)|0,u=u+Math.imul(xe,Ve)|0,u=u+Math.imul(ge,Ie)|0,x=x+Math.imul(ge,Ve)|0,b=b+Math.imul(ye,Le)|0,u=u+Math.imul(ye,Ee)|0,u=u+Math.imul(be,Le)|0,x=x+Math.imul(be,Ee)|0,b=b+Math.imul(Te,ze)|0,u=u+Math.imul(Te,pe)|0,u=u+Math.imul(ce,ze)|0,x=x+Math.imul(ce,pe)|0,b=b+Math.imul(he,Ae)|0,u=u+Math.imul(he,Ce)|0,u=u+Math.imul(Me,Ae)|0,x=x+Math.imul(Me,Ce)|0,b=b+Math.imul(ue,je)|0,u=u+Math.imul(ue,Ue)|0,u=u+Math.imul(se,je)|0,x=x+Math.imul(se,Ue)|0,b=b+Math.imul(ae,Xe)|0,u=u+Math.imul(ae,De)|0,u=u+Math.imul(de,Xe)|0,x=x+Math.imul(de,De)|0,b=b+Math.imul(Z,Fe)|0,u=u+Math.imul(Z,qe)|0,u=u+Math.imul(K,Fe)|0,x=x+Math.imul(K,qe)|0,b=b+Math.imul(L,Ze)|0,u=u+Math.imul(L,We)|0,u=u+Math.imul(X,Ze)|0,x=x+Math.imul(X,We)|0;var kr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(kr>>>26)|0,kr&=67108863,b=Math.imul(ke,Be),u=Math.imul(ke,we),u=u+Math.imul(Oe,Be)|0,x=Math.imul(Oe,we),b=b+Math.imul(ve,Ie)|0,u=u+Math.imul(ve,Ve)|0,u=u+Math.imul(Se,Ie)|0,x=x+Math.imul(Se,Ve)|0,b=b+Math.imul(xe,Le)|0,u=u+Math.imul(xe,Ee)|0,u=u+Math.imul(ge,Le)|0,x=x+Math.imul(ge,Ee)|0,b=b+Math.imul(ye,ze)|0,u=u+Math.imul(ye,pe)|0,u=u+Math.imul(be,ze)|0,x=x+Math.imul(be,pe)|0,b=b+Math.imul(Te,Ae)|0,u=u+Math.imul(Te,Ce)|0,u=u+Math.imul(ce,Ae)|0,x=x+Math.imul(ce,Ce)|0,b=b+Math.imul(he,je)|0,u=u+Math.imul(he,Ue)|0,u=u+Math.imul(Me,je)|0,x=x+Math.imul(Me,Ue)|0,b=b+Math.imul(ue,Xe)|0,u=u+Math.imul(ue,De)|0,u=u+Math.imul(se,Xe)|0,x=x+Math.imul(se,De)|0,b=b+Math.imul(ae,Fe)|0,u=u+Math.imul(ae,qe)|0,u=u+Math.imul(de,Fe)|0,x=x+Math.imul(de,qe)|0,b=b+Math.imul(Z,Ze)|0,u=u+Math.imul(Z,We)|0,u=u+Math.imul(K,Ze)|0,x=x+Math.imul(K,We)|0;var Or=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Or>>>26)|0,Or&=67108863,b=Math.imul(ke,Ie),u=Math.imul(ke,Ve),u=u+Math.imul(Oe,Ie)|0,x=Math.imul(Oe,Ve),b=b+Math.imul(ve,Le)|0,u=u+Math.imul(ve,Ee)|0,u=u+Math.imul(Se,Le)|0,x=x+Math.imul(Se,Ee)|0,b=b+Math.imul(xe,ze)|0,u=u+Math.imul(xe,pe)|0,u=u+Math.imul(ge,ze)|0,x=x+Math.imul(ge,pe)|0,b=b+Math.imul(ye,Ae)|0,u=u+Math.imul(ye,Ce)|0,u=u+Math.imul(be,Ae)|0,x=x+Math.imul(be,Ce)|0,b=b+Math.imul(Te,je)|0,u=u+Math.imul(Te,Ue)|0,u=u+Math.imul(ce,je)|0,x=x+Math.imul(ce,Ue)|0,b=b+Math.imul(he,Xe)|0,u=u+Math.imul(he,De)|0,u=u+Math.imul(Me,Xe)|0,x=x+Math.imul(Me,De)|0,b=b+Math.imul(ue,Fe)|0,u=u+Math.imul(ue,qe)|0,u=u+Math.imul(se,Fe)|0,x=x+Math.imul(se,qe)|0,b=b+Math.imul(ae,Ze)|0,u=u+Math.imul(ae,We)|0,u=u+Math.imul(de,Ze)|0,x=x+Math.imul(de,We)|0;var Nr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Nr>>>26)|0,Nr&=67108863,b=Math.imul(ke,Le),u=Math.imul(ke,Ee),u=u+Math.imul(Oe,Le)|0,x=Math.imul(Oe,Ee),b=b+Math.imul(ve,ze)|0,u=u+Math.imul(ve,pe)|0,u=u+Math.imul(Se,ze)|0,x=x+Math.imul(Se,pe)|0,b=b+Math.imul(xe,Ae)|0,u=u+Math.imul(xe,Ce)|0,u=u+Math.imul(ge,Ae)|0,x=x+Math.imul(ge,Ce)|0,b=b+Math.imul(ye,je)|0,u=u+Math.imul(ye,Ue)|0,u=u+Math.imul(be,je)|0,x=x+Math.imul(be,Ue)|0,b=b+Math.imul(Te,Xe)|0,u=u+Math.imul(Te,De)|0,u=u+Math.imul(ce,Xe)|0,x=x+Math.imul(ce,De)|0,b=b+Math.imul(he,Fe)|0,u=u+Math.imul(he,qe)|0,u=u+Math.imul(Me,Fe)|0,x=x+Math.imul(Me,qe)|0,b=b+Math.imul(ue,Ze)|0,u=u+Math.imul(ue,We)|0,u=u+Math.imul(se,Ze)|0,x=x+Math.imul(se,We)|0;var Vr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Vr>>>26)|0,Vr&=67108863,b=Math.imul(ke,ze),u=Math.imul(ke,pe),u=u+Math.imul(Oe,ze)|0,x=Math.imul(Oe,pe),b=b+Math.imul(ve,Ae)|0,u=u+Math.imul(ve,Ce)|0,u=u+Math.imul(Se,Ae)|0,x=x+Math.imul(Se,Ce)|0,b=b+Math.imul(xe,je)|0,u=u+Math.imul(xe,Ue)|0,u=u+Math.imul(ge,je)|0,x=x+Math.imul(ge,Ue)|0,b=b+Math.imul(ye,Xe)|0,u=u+Math.imul(ye,De)|0,u=u+Math.imul(be,Xe)|0,x=x+Math.imul(be,De)|0,b=b+Math.imul(Te,Fe)|0,u=u+Math.imul(Te,qe)|0,u=u+Math.imul(ce,Fe)|0,x=x+Math.imul(ce,qe)|0,b=b+Math.imul(he,Ze)|0,u=u+Math.imul(he,We)|0,u=u+Math.imul(Me,Ze)|0,x=x+Math.imul(Me,We)|0;var Ir=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Ir>>>26)|0,Ir&=67108863,b=Math.imul(ke,Ae),u=Math.imul(ke,Ce),u=u+Math.imul(Oe,Ae)|0,x=Math.imul(Oe,Ce),b=b+Math.imul(ve,je)|0,u=u+Math.imul(ve,Ue)|0,u=u+Math.imul(Se,je)|0,x=x+Math.imul(Se,Ue)|0,b=b+Math.imul(xe,Xe)|0,u=u+Math.imul(xe,De)|0,u=u+Math.imul(ge,Xe)|0,x=x+Math.imul(ge,De)|0,b=b+Math.imul(ye,Fe)|0,u=u+Math.imul(ye,qe)|0,u=u+Math.imul(be,Fe)|0,x=x+Math.imul(be,qe)|0,b=b+Math.imul(Te,Ze)|0,u=u+Math.imul(Te,We)|0,u=u+Math.imul(ce,Ze)|0,x=x+Math.imul(ce,We)|0;var Er=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Er>>>26)|0,Er&=67108863,b=Math.imul(ke,je),u=Math.imul(ke,Ue),u=u+Math.imul(Oe,je)|0,x=Math.imul(Oe,Ue),b=b+Math.imul(ve,Xe)|0,u=u+Math.imul(ve,De)|0,u=u+Math.imul(Se,Xe)|0,x=x+Math.imul(Se,De)|0,b=b+Math.imul(xe,Fe)|0,u=u+Math.imul(xe,qe)|0,u=u+Math.imul(ge,Fe)|0,x=x+Math.imul(ge,qe)|0,b=b+Math.imul(ye,Ze)|0,u=u+Math.imul(ye,We)|0,u=u+Math.imul(be,Ze)|0,x=x+Math.imul(be,We)|0;var zr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(zr>>>26)|0,zr&=67108863,b=Math.imul(ke,Xe),u=Math.imul(ke,De),u=u+Math.imul(Oe,Xe)|0,x=Math.imul(Oe,De),b=b+Math.imul(ve,Fe)|0,u=u+Math.imul(ve,qe)|0,u=u+Math.imul(Se,Fe)|0,x=x+Math.imul(Se,qe)|0,b=b+Math.imul(xe,Ze)|0,u=u+Math.imul(xe,We)|0,u=u+Math.imul(ge,Ze)|0,x=x+Math.imul(ge,We)|0;var Hr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Hr>>>26)|0,Hr&=67108863,b=Math.imul(ke,Fe),u=Math.imul(ke,qe),u=u+Math.imul(Oe,Fe)|0,x=Math.imul(Oe,qe),b=b+Math.imul(ve,Ze)|0,u=u+Math.imul(ve,We)|0,u=u+Math.imul(Se,Ze)|0,x=x+Math.imul(Se,We)|0;var Lr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Lr>>>26)|0,Lr&=67108863,b=Math.imul(ke,Ze),u=Math.imul(ke,We),u=u+Math.imul(Oe,Ze)|0,x=Math.imul(Oe,We);var Rr=(w+b|0)+((u&8191)<<13)|0;return w=(x+(u>>>13)|0)+(Rr>>>26)|0,Rr&=67108863,v[0]=yr,v[1]=xr,v[2]=gr,v[3]=vr,v[4]=wr,v[5]=Pr,v[6]=Mr,v[7]=Tr,v[8]=Sr,v[9]=kr,v[10]=Or,v[11]=Nr,v[12]=Vr,v[13]=Ir,v[14]=Er,v[15]=zr,v[16]=Hr,v[17]=Lr,v[18]=Rr,w!==0&&(v[19]=w,h.length++),h};Math.imul||(N=V);function E(c,l,h){h.negative=l.negative^c.negative,h.length=c.length+l.length;for(var m=0,y=0,v=0;v<h.length-1;v++){var w=y;y=0;for(var b=m&67108863,u=Math.min(v,l.length-1),x=Math.max(0,v-c.length+1);x<=u;x++){var R=v-x,L=c.words[R]|0,X=l.words[x]|0,te=L*X,Z=te&67108863;w=w+(te/67108864|0)|0,Z=Z+b|0,b=Z&67108863,w=w+(Z>>>26)|0,y+=w>>>26,w&=67108863}h.words[v]=b,m=w,w=y}return m!==0?h.words[v]=m:h.length--,h._strip()}function A(c,l,h){return E(c,l,h)}i.prototype.mulTo=function(c,l){var h,m=this.length+c.length;return this.length===10&&c.length===10?h=N(this,c,l):m<63?h=V(this,c,l):m<1024?h=E(this,c,l):h=A(this,c,l),h},i.prototype.mul=function(c){var l=new i(null);return l.words=new Array(this.length+c.length),this.mulTo(c,l)},i.prototype.mulf=function(c){var l=new i(null);return l.words=new Array(this.length+c.length),A(this,c,l)},i.prototype.imul=function(c){return this.clone().mulTo(c,this)},i.prototype.imuln=function(c){var l=c<0;l&&(c=-c),r(typeof c=="number"),r(c<67108864);for(var h=0,m=0;m<this.length;m++){var y=(this.words[m]|0)*c,v=(y&67108863)+(h&67108863);h>>=26,h+=y/67108864|0,h+=v>>>26,this.words[m]=v&67108863}return h!==0&&(this.words[m]=h,this.length++),l?this.ineg():this},i.prototype.muln=function(c){return this.clone().imuln(c)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(c){var l=O(c);if(l.length===0)return new i(1);for(var h=this,m=0;m<l.length&&l[m]===0;m++,h=h.sqr());if(++m<l.length)for(var y=h.sqr();m<l.length;m++,y=y.sqr())l[m]!==0&&(h=h.mul(y));return h},i.prototype.iushln=function(c){r(typeof c=="number"&&c>=0);var l=c%26,h=(c-l)/26,m=67108863>>>26-l<<26-l,y;if(l!==0){var v=0;for(y=0;y<this.length;y++){var w=this.words[y]&m,b=(this.words[y]|0)-w<<l;this.words[y]=b|v,v=w>>>26-l}v&&(this.words[y]=v,this.length++)}if(h!==0){for(y=this.length-1;y>=0;y--)this.words[y+h]=this.words[y];for(y=0;y<h;y++)this.words[y]=0;this.length+=h}return this._strip()},i.prototype.ishln=function(c){return r(this.negative===0),this.iushln(c)},i.prototype.iushrn=function(c,l,h){r(typeof c=="number"&&c>=0);var m;l?m=(l-l%26)/26:m=0;var y=c%26,v=Math.min((c-y)/26,this.length),w=67108863^67108863>>>y<<y,b=h;if(m-=v,m=Math.max(0,m),b){for(var u=0;u<v;u++)b.words[u]=this.words[u];b.length=v}if(v!==0)if(this.length>v)for(this.length-=v,u=0;u<this.length;u++)this.words[u]=this.words[u+v];else this.words[0]=0,this.length=1;var x=0;for(u=this.length-1;u>=0&&(x!==0||u>=m);u--){var R=this.words[u]|0;this.words[u]=x<<26-y|R>>>y,x=R&w}return b&&x!==0&&(b.words[b.length++]=x),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},i.prototype.ishrn=function(c,l,h){return r(this.negative===0),this.iushrn(c,l,h)},i.prototype.shln=function(c){return this.clone().ishln(c)},i.prototype.ushln=function(c){return this.clone().iushln(c)},i.prototype.shrn=function(c){return this.clone().ishrn(c)},i.prototype.ushrn=function(c){return this.clone().iushrn(c)},i.prototype.testn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,h=(c-l)/26,m=1<<l;if(this.length<=h)return!1;var y=this.words[h];return!!(y&m)},i.prototype.imaskn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,h=(c-l)/26;if(r(this.negative===0,"imaskn works only with positive numbers"),this.length<=h)return this;if(l!==0&&h++,this.length=Math.min(h,this.length),l!==0){var m=67108863^67108863>>>l<<l;this.words[this.length-1]&=m}return this._strip()},i.prototype.maskn=function(c){return this.clone().imaskn(c)},i.prototype.iaddn=function(c){return r(typeof c=="number"),r(c<67108864),c<0?this.isubn(-c):this.negative!==0?this.length===1&&(this.words[0]|0)<=c?(this.words[0]=c-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(c),this.negative=1,this):this._iaddn(c)},i.prototype._iaddn=function(c){this.words[0]+=c;for(var l=0;l<this.length&&this.words[l]>=67108864;l++)this.words[l]-=67108864,l===this.length-1?this.words[l+1]=1:this.words[l+1]++;return this.length=Math.max(this.length,l+1),this},i.prototype.isubn=function(c){if(r(typeof c=="number"),r(c<67108864),c<0)return this.iaddn(-c);if(this.negative!==0)return this.negative=0,this.iaddn(c),this.negative=1,this;if(this.words[0]-=c,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var l=0;l<this.length&&this.words[l]<0;l++)this.words[l]+=67108864,this.words[l+1]-=1;return this._strip()},i.prototype.addn=function(c){return this.clone().iaddn(c)},i.prototype.subn=function(c){return this.clone().isubn(c)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(c,l,h){var m=c.length+h,y;this._expand(m);var v,w=0;for(y=0;y<c.length;y++){v=(this.words[y+h]|0)+w;var b=(c.words[y]|0)*l;v-=b&67108863,w=(v>>26)-(b/67108864|0),this.words[y+h]=v&67108863}for(;y<this.length-h;y++)v=(this.words[y+h]|0)+w,w=v>>26,this.words[y+h]=v&67108863;if(w===0)return this._strip();for(r(w===-1),w=0,y=0;y<this.length;y++)v=-(this.words[y]|0)+w,w=v>>26,this.words[y]=v&67108863;return this.negative=1,this._strip()},i.prototype._wordDiv=function(c,l){var h=this.length-c.length,m=this.clone(),y=c,v=y.words[y.length-1]|0,w=this._countBits(v);h=26-w,h!==0&&(y=y.ushln(h),m.iushln(h),v=y.words[y.length-1]|0);var b=m.length-y.length,u;if(l!=="mod"){u=new i(null),u.length=b+1,u.words=new Array(u.length);for(var x=0;x<u.length;x++)u.words[x]=0}var R=m.clone()._ishlnsubmul(y,1,b);R.negative===0&&(m=R,u&&(u.words[b]=1));for(var L=b-1;L>=0;L--){var X=(m.words[y.length+L]|0)*67108864+(m.words[y.length+L-1]|0);for(X=Math.min(X/v|0,67108863),m._ishlnsubmul(y,X,L);m.negative!==0;)X--,m.negative=0,m._ishlnsubmul(y,1,L),m.isZero()||(m.negative^=1);u&&(u.words[L]=X)}return u&&u._strip(),m._strip(),l!=="div"&&h!==0&&m.iushrn(h),{div:u||null,mod:m}},i.prototype.divmod=function(c,l,h){if(r(!c.isZero()),this.isZero())return{div:new i(0),mod:new i(0)};var m,y,v;return this.negative!==0&&c.negative===0?(v=this.neg().divmod(c,l),l!=="mod"&&(m=v.div.neg()),l!=="div"&&(y=v.mod.neg(),h&&y.negative!==0&&y.iadd(c)),{div:m,mod:y}):this.negative===0&&c.negative!==0?(v=this.divmod(c.neg(),l),l!=="mod"&&(m=v.div.neg()),{div:m,mod:v.mod}):this.negative&c.negative?(v=this.neg().divmod(c.neg(),l),l!=="div"&&(y=v.mod.neg(),h&&y.negative!==0&&y.isub(c)),{div:v.div,mod:y}):c.length>this.length||this.cmp(c)<0?{div:new i(0),mod:this}:c.length===1?l==="div"?{div:this.divn(c.words[0]),mod:null}:l==="mod"?{div:null,mod:new i(this.modrn(c.words[0]))}:{div:this.divn(c.words[0]),mod:new i(this.modrn(c.words[0]))}:this._wordDiv(c,l)},i.prototype.div=function(c){return this.divmod(c,"div",!1).div},i.prototype.mod=function(c){return this.divmod(c,"mod",!1).mod},i.prototype.umod=function(c){return this.divmod(c,"mod",!0).mod},i.prototype.divRound=function(c){var l=this.divmod(c);if(l.mod.isZero())return l.div;var h=l.div.negative!==0?l.mod.isub(c):l.mod,m=c.ushrn(1),y=c.andln(1),v=h.cmp(m);return v<0||y===1&&v===0?l.div:l.div.negative!==0?l.div.isubn(1):l.div.iaddn(1)},i.prototype.modrn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var h=(1<<26)%c,m=0,y=this.length-1;y>=0;y--)m=(h*m+(this.words[y]|0))%c;return l?-m:m},i.prototype.modn=function(c){return this.modrn(c)},i.prototype.idivn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var h=0,m=this.length-1;m>=0;m--){var y=(this.words[m]|0)+h*67108864;this.words[m]=y/c|0,h=y%c}return this._strip(),l?this.ineg():this},i.prototype.divn=function(c){return this.clone().idivn(c)},i.prototype.egcd=function(c){r(c.negative===0),r(!c.isZero());var l=this,h=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var m=new i(1),y=new i(0),v=new i(0),w=new i(1),b=0;l.isEven()&&h.isEven();)l.iushrn(1),h.iushrn(1),++b;for(var u=h.clone(),x=l.clone();!l.isZero();){for(var R=0,L=1;!(l.words[0]&L)&&R<26;++R,L<<=1);if(R>0)for(l.iushrn(R);R-- >0;)(m.isOdd()||y.isOdd())&&(m.iadd(u),y.isub(x)),m.iushrn(1),y.iushrn(1);for(var X=0,te=1;!(h.words[0]&te)&&X<26;++X,te<<=1);if(X>0)for(h.iushrn(X);X-- >0;)(v.isOdd()||w.isOdd())&&(v.iadd(u),w.isub(x)),v.iushrn(1),w.iushrn(1);l.cmp(h)>=0?(l.isub(h),m.isub(v),y.isub(w)):(h.isub(l),v.isub(m),w.isub(y))}return{a:v,b:w,gcd:h.iushln(b)}},i.prototype._invmp=function(c){r(c.negative===0),r(!c.isZero());var l=this,h=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var m=new i(1),y=new i(0),v=h.clone();l.cmpn(1)>0&&h.cmpn(1)>0;){for(var w=0,b=1;!(l.words[0]&b)&&w<26;++w,b<<=1);if(w>0)for(l.iushrn(w);w-- >0;)m.isOdd()&&m.iadd(v),m.iushrn(1);for(var u=0,x=1;!(h.words[0]&x)&&u<26;++u,x<<=1);if(u>0)for(h.iushrn(u);u-- >0;)y.isOdd()&&y.iadd(v),y.iushrn(1);l.cmp(h)>=0?(l.isub(h),m.isub(y)):(h.isub(l),y.isub(m))}var R;return l.cmpn(1)===0?R=m:R=y,R.cmpn(0)<0&&R.iadd(c),R},i.prototype.gcd=function(c){if(this.isZero())return c.abs();if(c.isZero())return this.abs();var l=this.clone(),h=c.clone();l.negative=0,h.negative=0;for(var m=0;l.isEven()&&h.isEven();m++)l.iushrn(1),h.iushrn(1);do{for(;l.isEven();)l.iushrn(1);for(;h.isEven();)h.iushrn(1);var y=l.cmp(h);if(y<0){var v=l;l=h,h=v}else if(y===0||h.cmpn(1)===0)break;l.isub(h)}while(!0);return h.iushln(m)},i.prototype.invm=function(c){return this.egcd(c).a.umod(c)},i.prototype.isEven=function(){return(this.words[0]&1)===0},i.prototype.isOdd=function(){return(this.words[0]&1)===1},i.prototype.andln=function(c){return this.words[0]&c},i.prototype.bincn=function(c){r(typeof c=="number");var l=c%26,h=(c-l)/26,m=1<<l;if(this.length<=h)return this._expand(h+1),this.words[h]|=m,this;for(var y=m,v=h;y!==0&&v<this.length;v++){var w=this.words[v]|0;w+=y,y=w>>>26,w&=67108863,this.words[v]=w}return y!==0&&(this.words[v]=y,this.length++),this},i.prototype.isZero=function(){return this.length===1&&this.words[0]===0},i.prototype.cmpn=function(c){var l=c<0;if(this.negative!==0&&!l)return-1;if(this.negative===0&&l)return 1;this._strip();var h;if(this.length>1)h=1;else{l&&(c=-c),r(c<=67108863,"Number is too big");var m=this.words[0]|0;h=m===c?0:m<c?-1:1}return this.negative!==0?-h|0:h},i.prototype.cmp=function(c){if(this.negative!==0&&c.negative===0)return-1;if(this.negative===0&&c.negative!==0)return 1;var l=this.ucmp(c);return this.negative!==0?-l|0:l},i.prototype.ucmp=function(c){if(this.length>c.length)return 1;if(this.length<c.length)return-1;for(var l=0,h=this.length-1;h>=0;h--){var m=this.words[h]|0,y=c.words[h]|0;if(m!==y){m<y?l=-1:m>y&&(l=1);break}}return l},i.prototype.gtn=function(c){return this.cmpn(c)===1},i.prototype.gt=function(c){return this.cmp(c)===1},i.prototype.gten=function(c){return this.cmpn(c)>=0},i.prototype.gte=function(c){return this.cmp(c)>=0},i.prototype.ltn=function(c){return this.cmpn(c)===-1},i.prototype.lt=function(c){return this.cmp(c)===-1},i.prototype.lten=function(c){return this.cmpn(c)<=0},i.prototype.lte=function(c){return this.cmp(c)<=0},i.prototype.eqn=function(c){return this.cmpn(c)===0},i.prototype.eq=function(c){return this.cmp(c)===0},i.red=function(c){return new C(c)},i.prototype.toRed=function(c){return r(!this.red,"Already a number in reduction context"),r(this.negative===0,"red works only with positives"),c.convertTo(this)._forceRed(c)},i.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(c){return this.red=c,this},i.prototype.forceRed=function(c){return r(!this.red,"Already a number in reduction context"),this._forceRed(c)},i.prototype.redAdd=function(c){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,c)},i.prototype.redIAdd=function(c){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,c)},i.prototype.redSub=function(c){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,c)},i.prototype.redISub=function(c){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,c)},i.prototype.redShl=function(c){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,c)},i.prototype.redMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.mul(this,c)},i.prototype.redIMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.imul(this,c)},i.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(c){return r(this.red&&!c.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,c)};var H={k256:null,p224:null,p192:null,p25519:null};function z(c,l){this.name=c,this.p=new i(l,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}z.prototype._tmp=function(){var c=new i(null);return c.words=new Array(Math.ceil(this.n/13)),c},z.prototype.ireduce=function(c){var l=c,h;do this.split(l,this.tmp),l=this.imulK(l),l=l.iadd(this.tmp),h=l.bitLength();while(h>this.n);var m=h<this.n?-1:l.ucmp(this.p);return m===0?(l.words[0]=0,l.length=1):m>0?l.isub(this.p):l.strip!==void 0?l.strip():l._strip(),l},z.prototype.split=function(c,l){c.iushrn(this.n,0,l)},z.prototype.imulK=function(c){return c.imul(this.k)};function B(){z.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}a(B,z),B.prototype.split=function(c,l){for(var h=4194303,m=Math.min(c.length,9),y=0;y<m;y++)l.words[y]=c.words[y];if(l.length=m,c.length<=9){c.words[0]=0,c.length=1;return}var v=c.words[9];for(l.words[l.length++]=v&h,y=10;y<c.length;y++){var w=c.words[y]|0;c.words[y-10]=(w&h)<<4|v>>>22,v=w}v>>>=22,c.words[y-10]=v,v===0&&c.length>10?c.length-=10:c.length-=9},B.prototype.imulK=function(c){c.words[c.length]=0,c.words[c.length+1]=0,c.length+=2;for(var l=0,h=0;h<c.length;h++){var m=c.words[h]|0;l+=m*977,c.words[h]=l&67108863,l=m*64+(l/67108864|0)}return c.words[c.length-1]===0&&(c.length--,c.words[c.length-1]===0&&c.length--),c};function F(){z.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}a(F,z);function ee(){z.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}a(ee,z);function W(){z.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}a(W,z),W.prototype.imulK=function(c){for(var l=0,h=0;h<c.length;h++){var m=(c.words[h]|0)*19+l,y=m&67108863;m>>>=26,c.words[h]=y,l=m}return l!==0&&(c.words[c.length++]=l),c},i._prime=function(c){if(H[c])return H[c];var l;if(c==="k256")l=new B;else if(c==="p224")l=new F;else if(c==="p192")l=new ee;else if(c==="p25519")l=new W;else throw new Error("Unknown prime "+c);return H[c]=l,l};function C(c){if(typeof c=="string"){var l=i._prime(c);this.m=l.p,this.prime=l}else r(c.gtn(1),"modulus must be greater than 1"),this.m=c,this.prime=null}C.prototype._verify1=function(c){r(c.negative===0,"red works only with positives"),r(c.red,"red works only with red numbers")},C.prototype._verify2=function(c,l){r((c.negative|l.negative)===0,"red works only with positives"),r(c.red&&c.red===l.red,"red works only with red numbers")},C.prototype.imod=function(c){return this.prime?this.prime.ireduce(c)._forceRed(this):(p(c,c.umod(this.m)._forceRed(this)),c)},C.prototype.neg=function(c){return c.isZero()?c.clone():this.m.sub(c)._forceRed(this)},C.prototype.add=function(c,l){this._verify2(c,l);var h=c.add(l);return h.cmp(this.m)>=0&&h.isub(this.m),h._forceRed(this)},C.prototype.iadd=function(c,l){this._verify2(c,l);var h=c.iadd(l);return h.cmp(this.m)>=0&&h.isub(this.m),h},C.prototype.sub=function(c,l){this._verify2(c,l);var h=c.sub(l);return h.cmpn(0)<0&&h.iadd(this.m),h._forceRed(this)},C.prototype.isub=function(c,l){this._verify2(c,l);var h=c.isub(l);return h.cmpn(0)<0&&h.iadd(this.m),h},C.prototype.shl=function(c,l){return this._verify1(c),this.imod(c.ushln(l))},C.prototype.imul=function(c,l){return this._verify2(c,l),this.imod(c.imul(l))},C.prototype.mul=function(c,l){return this._verify2(c,l),this.imod(c.mul(l))},C.prototype.isqr=function(c){return this.imul(c,c.clone())},C.prototype.sqr=function(c){return this.mul(c,c)},C.prototype.sqrt=function(c){if(c.isZero())return c.clone();var l=this.m.andln(3);if(r(l%2===1),l===3){var h=this.m.add(new i(1)).iushrn(2);return this.pow(c,h)}for(var m=this.m.subn(1),y=0;!m.isZero()&&m.andln(1)===0;)y++,m.iushrn(1);r(!m.isZero());var v=new i(1).toRed(this),w=v.redNeg(),b=this.m.subn(1).iushrn(1),u=this.m.bitLength();for(u=new i(2*u*u).toRed(this);this.pow(u,b).cmp(w)!==0;)u.redIAdd(w);for(var x=this.pow(u,m),R=this.pow(c,m.addn(1).iushrn(1)),L=this.pow(c,m),X=y;L.cmp(v)!==0;){for(var te=L,Z=0;te.cmp(v)!==0;Z++)te=te.redSqr();r(Z<X);var K=this.pow(x,new i(1).iushln(X-Z-1));R=R.redMul(K),x=K.redSqr(),L=L.redMul(x),X=Z}return R},C.prototype.invm=function(c){var l=c._invmp(this.m);return l.negative!==0?(l.negative=0,this.imod(l).redNeg()):this.imod(l)},C.prototype.pow=function(c,l){if(l.isZero())return new i(1).toRed(this);if(l.cmpn(1)===0)return c.clone();var h=4,m=new Array(1<<h);m[0]=new i(1).toRed(this),m[1]=c;for(var y=2;y<m.length;y++)m[y]=this.mul(m[y-1],c);var v=m[0],w=0,b=0,u=l.bitLength()%26;for(u===0&&(u=26),y=l.length-1;y>=0;y--){for(var x=l.words[y],R=u-1;R>=0;R--){var L=x>>R&1;if(v!==m[0]&&(v=this.sqr(v)),L===0&&w===0){b=0;continue}w<<=1,w|=L,b++,!(b!==h&&(y!==0||R!==0))&&(v=this.mul(v,m[w]),b=0,w=0)}u=26}return v},C.prototype.convertTo=function(c){var l=c.umod(this.m);return l===c?l.clone():l},C.prototype.convertFrom=function(c){var l=c.clone();return l.red=null,l},i.mont=function(c){return new oe(c)};function oe(c){C.call(this,c),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}a(oe,C),oe.prototype.convertTo=function(c){return this.imod(c.ushln(this.shift))},oe.prototype.convertFrom=function(c){var l=this.imod(c.mul(this.rinv));return l.red=null,l},oe.prototype.imul=function(c,l){if(c.isZero()||l.isZero())return c.words[0]=0,c.length=1,c;var h=c.imul(l),m=h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),y=h.isub(m).iushrn(this.shift),v=y;return y.cmp(this.m)>=0?v=y.isub(this.m):y.cmpn(0)<0&&(v=y.iadd(this.m)),v._forceRed(this)},oe.prototype.mul=function(c,l){if(c.isZero()||l.isZero())return new i(0)._forceRed(this);var h=c.mul(l),m=h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),y=h.isub(m).iushrn(this.shift),v=y;return y.cmp(this.m)>=0?v=y.isub(this.m):y.cmpn(0)<0&&(v=y.iadd(this.m)),v._forceRed(this)},oe.prototype.invm=function(c){var l=this.imod(c._invmp(this.m).mul(this.r2));return l._forceRed(this)}})(t,Km)})(D0);var Bb=D0.exports;const le=E0(Bb);function xn(t){return le.isBN(t)}const F0=/^0x[\da-fA-F]+$/,Ab=/^[\da-fA-F]+$/;function Qe(t,e=-1,n){return typeof t=="string"&&(t==="0x"||F0.test(t))&&(e===-1?n||t.length%2===0:t.length===2+Math.ceil(e/4))}function Wt(t){return!!t&&typeof t=="object"}function q0(...t){return e=>(Wt(e)||fe(e))&&t.every(n=>fe(e[n]))}function Cb(...t){return e=>fe(e)&&t.every(n=>fe(e[n]))}function pd(...t){return e=>Wt(e)&&t.every(n=>fe(e[n]))}const jb=q0("toBigInt"),Ub=q0("toBn"),Fs=typeof tt=="function"&&typeof tt.asIntN=="function",Xb=typeof qt.Buffer=="function"&&typeof qt.Buffer.isBuffer=="function";qt.process;function Z0(t){return Xb&&!!t&&fe(t.readDoubleLE)&&qt.Buffer.isBuffer(t)}function Pe(t){return(t&&t.constructor)===Uint8Array||t instanceof Uint8Array}const Db=new Ib;function bn(t){return t?Db.encode(t.toString()):new Uint8Array}function me(t){return Pe(t)?Z0(t)?new Uint8Array(t):t:Qe(t)?Fn(t):Array.isArray(t)?new Uint8Array(t):bn(t)}function Ct(...t){const e=t.length,n=new Array(e);let r=0;for(let a=0;a<e;a++)n[a]=me(t[a]),r+=n[a].length;return Gt(n,r)}function Gt(t,e=0){const n=t.length;let r=0;if(!e)for(let i=0;i<n;i++)e+=t[i].length;const a=new Uint8Array(e);for(let i=0;i<n;i++)a.set(t[i],r),r+=t[i].length;return a}function si(t,e){const n=me(t),r=me(e);if(n.length===r.length){const a=new DataView(n.buffer,n.byteOffset),i=new DataView(r.buffer,r.byteOffset),s=n.length%4|0,o=n.length-s|0;for(let d=0;d<o;d+=4)if(a.getUint32(d)!==i.getUint32(d))return!1;for(let d=o,f=n.length;d<f;d++)if(n[d]!==r[d])return!1;return!0}return!1}function qn(t,{isLe:e=!0,isNegative:n=!1}={}){e||(t=t.slice().reverse());const r=t.length;if(n&&r&&t[r-1]&128)switch(r){case 0:return new le(0);case 1:return new le((t[0]^255)*-1-1);case 2:return new le((t[0]+(t[1]<<8)^65535)*-1-1);case 3:return new le((t[0]+(t[1]<<8)+(t[2]<<16)^16777215)*-1-1);case 4:return new le((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)*-1-1);case 5:return new le(((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]^255)*4294967296)*-1-1);case 6:return new le(((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]+(t[5]<<8)^65535)*4294967296)*-1-1);default:return new le(t,"le").fromTwos(r*8)}switch(r){case 0:return new le(0);case 1:return new le(t[0]);case 2:return new le(t[0]+(t[1]<<8));case 3:return new le(t[0]+(t[1]<<8)+(t[2]<<16));case 4:return new le(t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216);case 5:return new le(t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8))*16777216);case 6:return new le(t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8)+(t[5]<<16))*16777216);default:return new le(t,"le")}}function Fb(t,{bitLength:e=32,isLe:n=!0}={}){if(e!==32&&e!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");if(t.length<e/8)throw new Error(`Invalid input buffer provided, expected at least ${e/8} bytes, found ${t.length}`);const r=new DataView(t.buffer,t.byteOffset);return e===32?r.getFloat32(0,n):r.getFloat64(0,n)}const bs=new Array(256),W0=new Array(256*256);for(let t=0;t<256;t++)bs[t]=t.toString(16).padStart(2,"0");for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)W0[e|n]=bs[t]+bs[n]}function vo(t,e){const n=t.length%2|0,r=t.length-n|0;for(let a=0;a<r;a+=2)e+=W0[t[a]<<8|t[a+1]];return n&&(e+=bs[t[r]|0]),e}function Ke(t,e=-1,n=!0){const r=n?"0x":"";if(t!=null&&t.length){if(e>0){const a=Math.ceil(e/8);if(t.length>a)return`${vo(t.subarray(0,a/2),r)}…${vo(t.subarray(t.length-a/2),"")}`}}else return r;return vo(t,r)}function qb(t,{isLe:e=!0,isNegative:n=!1}={}){e||(t=t.slice().reverse());const r=t.length;if(n&&r&&t[r-1]&128)switch(r){case 0:return 0;case 1:return(t[0]^255)*-1-1;case 2:return(t[0]+(t[1]<<8)^65535)*-1-1;case 3:return(t[0]+(t[1]<<8)+(t[2]<<16)^16777215)*-1-1;case 4:return(t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)*-1-1;case 5:return((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]^255)*4294967296)*-1-1;case 6:return((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]+(t[5]<<8)^65535)*4294967296)*-1-1;default:throw new Error("Value more than 48-bits cannot be reliably converted")}switch(r){case 0:return 0;case 1:return t[0];case 2:return t[0]+(t[1]<<8);case 3:return t[0]+(t[1]<<8)+(t[2]<<16);case 4:return t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216;case 5:return t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8))*16777216;case 6:return t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8)+(t[5]<<16))*16777216;default:throw new Error("Value more than 48-bits cannot be reliably converted")}}const Zb=new Nb("utf-8");function Un(t){return t?Zb.decode(t):""}const wo=me(`Ethereum Signed Message:
`),ys=me("<Bytes>"),xs=me("</Bytes>"),Wb=ys.length+xs.length;function Gb(t,e){return t.length>=Wb&&si(t.subarray(0,ys.length),ys)&&si(t.slice(-xs.length),xs)||t.length>=wo.length&&si(t.subarray(0,wo.length),wo)}function Kb(t){const e=me(t);return Gb(e)?e:Gt([ys,e,xs])}function Yb(t){if(!t||t==="0x")return"";if(F0.test(t))return t.substring(2);if(Ab.test(t))return t;throw new Error(`Expected hex value to convert, found '${t}'`)}function md(t,{isLe:e=!1,isNegative:n=!1}={}){if(!t||t==="0x")return new le(0);const r=Yb(t),a=new le(r,16,e?"le":"be");return n?a.fromTwos(r.length*4):a}const G0=U0((t,e)=>t.gt(e)),Jb=U0((t,e)=>t.lt(e)),dt=new le(0),Ha=new le(1),qs=new le(2),_b=new le(100),Qb=new le(1e6),gs=new le(1e9),$b=gs.mul(gs),e2=new le(Number.MAX_SAFE_INTEGER),t2=new le(94906265);function sa(t){return typeof t=="bigint"}function xt(t){return t?le.isBN(t)?t:Qe(t)?md(t.toString()):sa(t)?new le(t.toString()):Ub(t)?t.toBn():jb(t)?new le(t.toBigInt().toString()):new le(t):new le(0)}function K0(t){const e=xt(t);if(e.isNeg())throw new Error("square root of negative numbers is not supported");if(e.lte(e2))return new le(~~Math.sqrt(e.toNumber()));let n=t2.clone();for(;;){const r=e.div(n).iadd(n).ishrn(1);if(n.eq(r)||n.eq(r.sub(Ha)))return n;n=r}}const n2={bitLength:-1,isLe:!0,isNegative:!1};function Xn(t,{bitLength:e=-1,isLe:n=!0,isNegative:r=!1}=n2){const a=xt(t),i=Math.ceil(e===-1?a.bitLength()/8:(e||0)/8);if(!t)return e===-1?new Uint8Array(1):new Uint8Array(i);const s=new Uint8Array(i),o=r?a.toTwos(i*8):a;return s.set(o.toArray(n?"le":"be",i),0),s}function r2(t,{bitLength:e=-1,isLe:n=!1,isNegative:r=!1}={}){return Ke(Xn(t,{bitLength:e,isLe:n,isNegative:r}))}const a2=qs.pow(new le(6)).isub(Ha),i2=qs.pow(new le(14)).isub(Ha),s2=qs.pow(new le(30)).isub(Ha),o2={bitLength:16},c2={bitLength:32};function lt(t){const e=xt(t);if(e.lte(a2))return new Uint8Array([e.toNumber()<<2]);if(e.lte(i2))return Xn(e.shln(2).iadd(Ha),o2);if(e.lte(s2))return Xn(e.shln(2).iadd(qs),c2);const n=Xn(e);let r=n.length;for(;n[r-1]===0;)r--;if(r<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return Gt([new Uint8Array([(r-4<<2)+3]),n.subarray(0,r)])}function La(t){return Gt([lt(t.length),t])}function bd(t){const e=me(t);switch(e[0]&3){case 0:return[1,new le(e[0]>>>2)];case 1:return[2,new le(e[0]+(e[1]<<8)>>>2)];case 2:return[4,new le(e[0]+(e[1]<<8)+(e[2]<<16)+e[3]*16777216>>>2)];default:{const n=(e[0]>>>2)+5;switch(n){case 5:return[5,new le(e[1]+(e[2]<<8)+(e[3]<<16)+e[4]*16777216)];case 6:return[6,new le(e[1]+(e[2]<<8)+(e[3]<<16)+(e[4]+(e[5]<<8))*16777216)];case 7:return[7,new le(e[1]+(e[2]<<8)+(e[3]<<16)+(e[4]+(e[5]<<8)+(e[6]<<16))*16777216)];default:return[n,qn(e.subarray(1,n))]}}}}function oa(t){switch(t[0]&3){case 0:return[1,t[0]>>>2];case 1:return[2,t[0]+(t[1]<<8)>>>2];case 2:return[4,t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216>>>2];default:switch((t[0]>>>2)+5){case 5:return[5,t[1]+(t[2]<<8)+(t[3]<<16)+t[4]*16777216];case 6:return[6,t[1]+(t[2]<<8)+(t[3]<<16)+(t[4]+(t[5]<<8))*16777216];case 7:return[7,t[1]+(t[2]<<8)+(t[3]<<16)+(t[4]+(t[5]<<8)+(t[6]<<16))*16777216];default:throw new Error("Compact input is > Number.MAX_SAFE_INTEGER")}}}function vs(t){const[e,n]=bd(t),r=e+n.toNumber();return[r,t.subarray(e,r)]}function d2(t=0,{bitLength:e=32,isLe:n=!0}={}){if(e!==32&&e!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");const r=new Uint8Array(e/8),a=new DataView(r.buffer,r.byteOffset);return e===32?a.setFloat32(0,Number(t),n):a.setFloat64(0,Number(t),n),r}function fi(t){return typeof t=="boolean"}const Su=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function Y0(t,e=","){const n=t[0].startsWith("-"),r=n?t.substring(1).match(Su):t.match(Su);return r?`${n?"-":""}${r.join(e)}`:t}function J0(t){return{decimal:.1.toLocaleString(t).substring(1,2),thousand:1e3.toLocaleString(t).substring(1,2)}}const Mi=8,mn=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function _0(t){for(let e=0,n=mn.length;e<n;e++)if(mn[e].value===t)return mn[e];return mn[Mi]}function Q0(t,e,n){if(n)return _0(n);const r=Mi-1+Math.ceil((t.length-e)/3);return mn[r]||mn[r<0?0:mn.length-1]}const u2=0,l2=mn[Mi].text;let Pa=u2,as=l2;function f2(t,{decimals:e=Pa,forceUnit:n,locale:r="en",withAll:a=!1,withSi:i=!0,withSiFull:s=!1,withUnit:o=!0,withZero:d=!0}={}){let f=xt(t).toString();if(f.length===0||f==="0")return"0";let p="";f[0].startsWith("-")&&(p="-",f=f.substring(1));const g=Q0(f,e,n),P=f.length-(e+g.power),T=P<=0?"0":f.substring(0,P);let k=f.padStart(P<0?e:1,"0").substring(P<0?0:P).padEnd(a?Math.max(e,4):4,"0").substring(0,a?Math.max(4,e+g.power):4);if(!d){let E=k.length-1;do k[E]==="0"&&E--;while(k[E]==="0");k=k.substring(0,E+1)}const M=fi(o)?mn[Mi].text:o,O=i||s?g.value==="-"?o?` ${M}`:"":` ${s?`${g.text}${o?" ":""}`:g.value}${o?M:""}`:"",{decimal:V,thousand:N}=J0(r);return`${p}${Y0(T,N)}${k&&`${V}${k}`}${O}`}const ca=f2;ca.calcSi=(t,e=Pa)=>Q0(t,e);ca.findSi=_0;ca.getDefaults=()=>({decimals:Pa,unit:as});ca.getOptions=(t=Pa)=>mn.filter(({power:e})=>e<0?t+e>=0:!0);ca.setDefaults=({decimals:t,unit:e})=>{Pa=(Array.isArray(t)?t[0]:t)??Pa,as=(Array.isArray(e)?e[0]:e)??as,mn[Mi].text=as};function qa(t){return t.toString().padStart(2,"0")}function h2(t){const e=t.getFullYear().toString(),n=qa(t.getMonth()+1),r=qa(t.getDate()),a=qa(t.getHours()),i=qa(t.getMinutes()),s=qa(t.getSeconds());return`${e}-${n}-${r} ${a}:${i}:${s}`}function Pc(t,{locale:e="en"}={}){const{thousand:n}=J0(e);return Y0(xt(t).toString(),n)}function nt(t){return typeof t=="string"||t instanceof String}function p2(t){for(let e=0,n=t.length;e<n;e++){const r=t.charCodeAt(e);if(r<32||r>126)return!1}return!0}function ku(t){for(let e=0,n=t.length;e<n;e++){const r=t[e]|0;if(r<32||r>126)return!1}return!0}function Ou(t){return nt(t)?Qe(t)?ku(me(t)):p2(t):t?ku(t):!1}const Nu=Cb("isPrototypeOf","hasOwnProperty");function m2(t,e){return Nu(e)&&Nu(t)?t===e||t.isPrototypeOf(e):!1}const b2=pd("toHex","toHuman","toU8a"),y2=pd("get");function on(t){return b2(t)&&y2(t.registry)}const $0=pd("toBigInt","toBn","toNumber","unwrap");function x2(t,e){return sa(e)?e.toString():e}function Ye(t,e){return JSON.stringify(t,x2,e)}function Zr(t){return t===null}function $e(t){return typeof t=="number"}function st(t){return t===void 0}function g2(t){if(!t)return nt(t);const e=me(t),n=e.length;let r=0;for(;r<n;)if(e[r]<=127)r+=1;else if(e[r]>=194&&e[r]<=223){if(r+1<n){if(e[r+1]<128||e[r+1]>191)return!1}else return!1;r+=2}else if(e[r]===224){if(r+2<n){if(e[r+1]<160||e[r+1]>191||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]>=225&&e[r]<=236){if(r+2<n){if(e[r+1]<128||e[r+1]>191||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]===237){if(r+2<n){if(e[r+1]<128||e[r+1]>159||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]>=238&&e[r]<=239){if(r+2<n){if(e[r+1]<128||e[r+1]>191||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]===240){if(r+3<n){if(e[r+1]<144||e[r+1]>191||e[r+2]<128||e[r+2]>191||e[r+3]<128||e[r+3]>191)return!1}else return!1;r+=4}else if(e[r]>=241&&e[r]<=243){if(r+3<n){if(e[r+1]<128||e[r+1]>191||e[r+2]<128||e[r+2]>191||e[r+3]<128||e[r+3]>191)return!1}else return!1;r+=4}else if(e[r]===244){if(r+3<n){if(e[r+1]<128||e[r+1]>143||e[r+2]<128||e[r+2]>191||e[r+3]<128||e[r+3]>191)return!1}else return!1;r+=4}else return!1;return!0}function wt(t,e,n,r,a=0){const i=r?r(e,a):e.toString();let s;Object.defineProperty(t,i,{configurable:!0,enumerable:!0,get:function(){if(s===void 0){s=n(e,a,this);try{Object.defineProperty(this,i,{value:s})}catch{}}return s}})}function Wr(t,e,n,r){for(let a=0,i=e.length;a<i;a++)wt(t,e[a],n,r,a);return t}function da(t){return t}function Vn(){}const v2={debug:"log",error:"error",log:"log",warn:"warn"};function w2(t){if(t&&Wt(t)&&t.constructor===Object){const e={};for(const[n,r]of Object.entries(t))e[n]=yd(r);return e}return t}function yd(t){return Array.isArray(t)?t.map(yd):xn(t)?t.toString():Pe(t)||Z0(t)?Ke(me(t)):w2(t)}function P2(t){return e=>{if(t<=0)return e;const n=`${e}`;return n.length<t?e:`${n.substring(0,t)} ...`}}function ni(t,e,n,r=-1){if(n.length===1&&fe(n[0])){const a=n[0]();return ni(t,e,Array.isArray(a)?a:[a],r)}console[v2[t]](h2(new Date),e,...n.map(yd).map(P2(r)))}function M2(t,e){return!!t&&(t==="*"||e===t||t.endsWith("*")&&e.startsWith(t.slice(0,-1)))}function T2(t,e){return!!t&&t.startsWith("-")&&(e===t.slice(1)||t.endsWith("*")&&e.startsWith(t.slice(1,-1)))}function S2(t,e){let n=!1;for(const r of t)M2(r,e)?n=!0:T2(r,e)&&(n=!1);return n}function k2(t){var e,n,r,a;const i=parseInt(((n=(e=qt.process)==null?void 0:e.env)==null?void 0:n.DEBUG_MAX)||"-1",10);return[S2((((a=(r=qt.process)==null?void 0:r.env)==null?void 0:a.DEBUG)||"").toLowerCase().split(","),t),isNaN(i)?-1:i]}function Kt(t){const e=`${t.toUpperCase()}:`.padStart(16),[n,r]=k2(t.toLowerCase());return{debug:n?(...a)=>ni("debug",e,a,r):Vn,error:(...a)=>ni("error",e,a),log:(...a)=>ni("log",e,a),noop:Vn,warn:(...a)=>ni("warn",e,a)}}function O2(){return"none"}function ri(t,{getInstanceId:e=O2}={}){const n={},r=(...a)=>{const i=Ye(a),s=e();return n[s]||(n[s]={}),n[s][i]===void 0&&(n[s][i]=t(...a)),n[s][i]};return r.unmemoize=(...a)=>{var i;const s=Ye(a),o=e();((i=n[o])==null?void 0:i[s])!==void 0&&delete n[o][s]},r}function Qr(t,e){setTimeout(()=>{Promise.resolve().then(()=>{t()}).catch(n=>{console.error(n)})},0)}function N2(t){const e=Object.keys(t);for(let n=0,r=e.length;n<r;n++)delete t[e[n]];return t}function re(t,...e){for(let n=0,r=e.length;n<r;n++){const a=e[n];if(a)if(typeof a.entries=="function")for(const[i,s]of a.entries())t[i]=s;else Object.assign(t,a)}return t}function xd(t,e,n,r,a=0){const i=e;i in t||Object.defineProperty(t,i,{enumerable:!0,get:function(){return n(e,a,this)}})}function $r(t,e,n,r){for(let a=0,i=e.length;a<i;a++)xd(t,e[a],n,r,a)}const Ma=new Array(256),eh=new Array(256);for(let t=0,e=Ma.length;t<e;t++)eh[t]=String.fromCharCode(t).toLowerCase(),Ma[t]=String.fromCharCode(t).toUpperCase();function V2(t){return t.slice(0,t.length-1).toLowerCase()+Ma[t.charCodeAt(t.length-1)]}function th(t){return e=>{const n=e.replace(/[-_., ]+/g," ").trim().split(" ");let r="";for(let a=0,i=n.length;a<i;a++){const s=n[a];r+=t(/^[\dA-Z]+$/.test(s)?s.toLowerCase():s.replace(/^[\dA-Z]{2,}[^a-z]/,V2),a)}return r}}const et=th((t,e)=>(e?Ma[t.charCodeAt(0)]:eh[t.charCodeAt(0)])+t.slice(1)),gd=th(t=>Ma[t.charCodeAt(0)]+t.slice(1));function I2(t){return e=>e?t[e.charCodeAt(0)]+e.slice(1):""}const E2=I2(Ma);function nh(t){return Ke(bn(t))}var Ur;(function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.NO_EXTENSION=1]="NO_EXTENSION",t[t.PENDING_AUTH=2]="PENDING_AUTH",t[t.UNAUTHORIZED=3]="UNAUTHORIZED",t[t.NO_ACCOUNTS_AUTHORIZED=4]="NO_ACCOUNTS_AUTHORIZED"})(Ur||(Ur={}));class Za extends Error{constructor(e,n,r){super(e,r),S(this,"reason"),this.reason=n}}class Sz{constructor(e,n){if(S(this,"injectedWeb3"),S(this,"appName"),S(this,"extension"),!e)throw new Error("No web3 extensions detected on window");this.injectedWeb3=e,this.appName=n}get injectedExtension(){return this.extension}async connect(e){const n=this.injectedWeb3[e];if(!n)throw new Za(`Wallet extension ${e} not found`,Ur.NO_EXTENSION);try{if(n.connect)return this.extension=await n.connect(this.appName),console.debug(`Connected extension ${e}`),this.extension;if(n.enable){const r=await n.enable(this.appName);return e==="talisman"&&await r.accounts.get(),this.extension={...r,name:e,version:n.version||""},console.debug(`Enabled extension ${e}`),this.extension}}catch(r){if(r instanceof Error){const a=r.message;throw/pending/.test(a)||/not been auth/.test(a)?new Za(a,Ur.PENDING_AUTH,{cause:r}):/not_auth/.test(a)||/not allowed/.test(a)?new Za(a,Ur.UNAUTHORIZED,{cause:r}):/No.*wallet accounts/.test(a)?new Za(a,Ur.NO_ACCOUNTS_AUTHORIZED,{cause:r}):new Za(a,Ur.UNKNOWN,{cause:r})}}throw new Error("No connect(..) or enable(...) hook found")}async getAccounts(){if(!this.extension)throw new Error("Wallet extension connection not found");try{return(await this.extension.accounts.get()).filter(e=>(e==null?void 0:e.type)!=="ethereum")}catch(e){throw console.error(e),new Error("Failed to request accounts",{cause:e})}}async signMessageWithWrappedBytes(e,n){var r,a;const i=(a=(r=this.extension)==null?void 0:r.signer)==null?void 0:a.signRaw;if(i&&fe(i))try{const{signature:s}=await i({address:n,data:Ke(Kb(e)),type:"bytes"});return s}catch(s){console.error(s)}throw new Error("Unable to access signer interface of extension")}async signMessage(e,n){var r,a;const i=(a=(r=this.extension)==null?void 0:r.signer)==null?void 0:a.signRaw;if(i){const{signature:s}=await i({address:n,data:e,type:"bytes"});return s}throw new Error("Unable to access signer interface of extension")}}const Vu={name:"@polkadot/api",path:import.meta&&import.meta.url?new URL(import.meta.url).pathname.substring(0,new URL(import.meta.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"10.13.1"},z2=qt.crypto;function H2(t){return z2.getRandomValues(t)}const is={getRandomValues:H2},L2={crypto:is};class R2{constructor(e){S(this,"__internal__bridge"),S(this,"abort",()=>{throw new Error("abort")}),S(this,"__wbindgen_is_undefined",n=>this.__internal__bridge.getObject(n)===void 0),S(this,"__wbindgen_throw",(n,r)=>{throw new Error(this.__internal__bridge.getString(n,r))}),S(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(L2)),S(this,"__wbg_require_604837428532a733",(n,r)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(n,r)}`)}),S(this,"__wbg_crypto_968f1772287e2df0",n=>this.__internal__bridge.addObject(is)),S(this,"__wbg_getRandomValues_a3d34b4fee3c2869",n=>this.__internal__bridge.addObject(is.getRandomValues)),S(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(n,r,a)=>{is.getRandomValues(this.__internal__bridge.getU8a(r,a))}),S(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(n,r,a)=>{throw new Error("randomFillsync is not available")}),S(this,"__wbindgen_object_drop_ref",n=>{this.__internal__bridge.takeObject(n)}),this.__internal__bridge=e}}class B2{constructor(e){S(this,"__internal__createWasm"),S(this,"__internal__heap"),S(this,"__internal__wbg"),S(this,"__internal__cachegetInt32"),S(this,"__internal__cachegetUint8"),S(this,"__internal__heapNext"),S(this,"__internal__wasm"),S(this,"__internal__wasmError"),S(this,"__internal__wasmPromise"),S(this,"__internal__type"),this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new R2(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){(!this.__internal__wasmPromise||e)&&(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:n,type:r,wasm:a}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=a,this.__internal__wasmError=n,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const n=this.getObject(e);return this.dropObject(e),n}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const n=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[n],this.__internal__heap[n]=e,n}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,n){return this.getUint8().subarray(e/1,e/1+n)}getString(e,n){return Un(this.getU8a(e,n))}allocU8a(e){const n=this.__internal__wasm.__wbindgen_malloc(e.length*1);return this.getUint8().set(e,n/1),[n,e.length]}allocString(e){return this.allocU8a(bn(e))}resultU8a(){const e=this.getInt32()[2],n=this.getInt32()[8/4+1],r=this.getU8a(e,n).slice();return this.__internal__wasm.__wbindgen_free(e,n*1),r}resultString(){return Un(this.resultU8a())}}function A2(t,e,n){return async r=>{const a={error:null,type:"none",wasm:null};try{if(e!=null&&e.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const i=await WebAssembly.instantiate(e,{wbg:r});a.wasm=i.instance.exports,a.type="wasm"}catch(i){a.error=`FATAL: Unable to initialize @polkadot/wasm-${t}:: ${i.message}`,console.error(a.error)}return a}}const Iu="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",rh=new Array(256);for(let t=0,e=Iu.length;t<e;t++)rh[Iu.charCodeAt(t)]=t;function C2(t,e){let n=0,r=0,a=-1;for(let i=0,s=e.length-1;a!==s;i++)n=n<<6|rh[t.charCodeAt(i)],(r+=6)>=8&&(e[++a]=n>>>(r-=8)&255);return e}const On=Uint8Array,Gr=Uint16Array,Mc=Uint32Array,j2=new On([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ah=new On([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ih=new On([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),sh=(t,e)=>{const n=new Gr(31);for(let a=0;a<31;++a)n[a]=e+=1<<t[a-1];const r=new Mc(n[30]);for(let a=1;a<30;++a)for(let i=n[a];i<n[a+1];++i)r[i]=i-n[a]<<5|a;return[n,r]},[oh,U2]=sh(ah,2);oh[28]=258,U2[258]=28;const[X2]=sh(ih,0),ch=new Gr(32768);for(let t=0;t<32768;++t){let e=(t&43690)>>>1|(t&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,ch[t]=((e&65280)>>>8|(e&255)<<8)>>>1}const oi=(t,e,n)=>{const r=t.length;let a=0;const i=new Gr(e);for(;a<r;++a)t[a]&&++i[t[a]-1];const s=new Gr(e);for(a=1;a<e;++a)s[a]=s[a-1]+i[a-1]<<1;let o;{o=new Gr(1<<e);const d=15-e;for(a=0;a<r;++a)if(t[a]){const f=a<<4|t[a],p=e-t[a];let g=s[t[a]-1]++<<p;for(const P=g|(1<<p)-1;g<=P;++g)o[ch[g]>>d]=f}}return o},Ti=new On(288);for(let t=0;t<144;++t)Ti[t]=8;for(let t=144;t<256;++t)Ti[t]=9;for(let t=256;t<280;++t)Ti[t]=7;for(let t=280;t<288;++t)Ti[t]=8;const dh=new On(32);for(let t=0;t<32;++t)dh[t]=5;const D2=oi(Ti,9),F2=oi(dh,5),un=(t,e,n)=>{const r=e>>>3;return(t[r]|t[r+1]<<8)>>>(e&7)&n},Po=(t,e)=>{const n=e>>>3;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>>(e&7)},q2=t=>(t>>>3)+(t&7&&1),Z2=(t,e,n)=>{(n==null||n>t.length)&&(n=t.length);const r=new(t instanceof Gr?Gr:t instanceof Mc?Mc:On)(n-e);return r.set(t.subarray(e,n)),r},Mo=t=>{let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e},W2=(t,e,n)=>{const r=!n||n.i;n||(n={});const a=t.length,i=!e||!r;e||(e=new On(a*3));const s=M=>{let O=e.length;if(M>O){const V=new On(Math.max(O<<1,M));V.set(e),e=V}};let o=n.f||0,d=n.p||0,f=n.b||0,p=n.l,g=n.d,P=n.m,T=n.n;if(o&&!p)return e;const k=a<<3;do{if(!p){n.f=o=un(t,d,1);const N=un(t,d+1,3);if(d+=3,N)if(N==1)p=D2,g=F2,P=9,T=5;else if(N==2){const E=un(t,d,31)+257,A=un(t,d+10,15)+4,H=E+un(t,d+5,31)+1;d+=14;const z=new On(H),B=new On(19);for(let c=0;c<A;++c)B[j2[c]]=un(t,d+c*3,7);d+=A*3;const F=Mo(B),ee=(1<<F)-1;if(!r&&d+H*(F+7)>k)break;const W=oi(B,F);for(let c=0;c<H;){const l=W[un(t,d,ee)];d+=l&15;const h=l>>>4;if(h<16)z[c++]=h;else{let m=0,y=0;for(h==16?(y=3+un(t,d,3),d+=2,m=z[c-1]):h==17?(y=3+un(t,d,7),d+=3):h==18&&(y=11+un(t,d,127),d+=7);y--;)z[c++]=m}}const C=z.subarray(0,E),oe=z.subarray(E);P=Mo(C),T=Mo(oe),p=oi(C,P),g=oi(oe,T)}else throw"invalid block type";else{const E=q2(d)+4,A=t[E-4]|t[E-3]<<8,H=E+A;if(H>a){if(r)throw"unexpected EOF";break}i&&s(f+A),e.set(t.subarray(E,H),f),n.b=f+=A,n.p=d=H<<3;continue}if(d>k)throw"unexpected EOF"}i&&s(f+131072);const M=(1<<P)-1,O=(1<<T)-1,V=P+T+18;for(;r||d+V<k;){const N=p[Po(t,d)&M],E=N>>>4;if(d+=N&15,d>k)throw"unexpected EOF";if(!N)throw"invalid length/literal";if(E<256)e[f++]=E;else if(E==256){p=void 0;break}else{let A=E-254;if(E>264){const ee=E-257,W=ah[ee];A=un(t,d,(1<<W)-1)+oh[ee],d+=W}const H=g[Po(t,d)&O],z=H>>>4;if(!H)throw"invalid distance";d+=H&15;let B=X2[z];if(z>3){const ee=ih[z];B+=Po(t,d)&(1<<ee)-1,d+=ee}if(d>k)throw"unexpected EOF";i&&s(f+131072);const F=f+A;for(;f<F;f+=4)e[f]=e[f-B],e[f+1]=e[f+1-B],e[f+2]=e[f+2-B],e[f+3]=e[f+3-B];f=F}}n.l=p,n.p=d,n.b=f,p&&(o=1,n.m=P,n.d=g,n.n=T)}while(!o);return f==e.length?e:Z2(e,0,f)},G2=t=>{if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function K2(t,e){return W2((G2(t),t.subarray(2,-4)),e)}var Y2=171008,J2=339468,_2="";const Q2=K2(C2(_2,new Uint8Array(Y2)),new Uint8Array(J2)),$2=A2("crypto",Q2),It=new B2($2);async function ey(t){return It.init(t)}function Si(t){return(...e)=>{if(!It.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return t(It.wasm,...e)}}const ty=Si((t,e)=>(t.ext_secp_pub_expand(8,...It.allocU8a(e)),It.resultU8a())),ny=Si((t,e,n,r)=>(t.ext_blake2b(8,...It.allocU8a(e),...It.allocU8a(n),r),It.resultU8a())),ry=Si((t,e)=>(t.ext_keccak256(8,...It.allocU8a(e)),It.resultU8a())),ay=Si((t,e)=>(t.ext_keccak512(8,...It.allocU8a(e)),It.resultU8a())),iy=Si((t,e,n)=>(t.ext_twox(8,...It.allocU8a(e),n),It.resultU8a()));function ki(){return!!It.wasm}async function sy(){try{return!!await ey()}catch{return!1}}function oy(){return sy().then(()=>{if(!ki())throw new Error("Unable to initialize @polkadot/util-crypto");return!0}).catch(()=>!1)}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function cy(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function dy(...t){const e=i=>i,n=(i,s)=>o=>i(s(o)),r=t.map(i=>i.encode).reduceRight(n,e),a=t.map(i=>i.decode).reduce(n,e);return{encode:r,decode:a}}function uy(t){return{encode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return e.map(n=>{if(n<0||n>=t.length)throw new Error(`Digit index outside alphabet: ${n} (alphabet: ${t.length})`);return t[n]})},decode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="string")throw new Error("alphabet.decode input should be array of strings");return e.map(n=>{if(typeof n!="string")throw new Error(`alphabet.decode: not string element=${n}`);const r=t.indexOf(n);if(r===-1)throw new Error(`Unknown letter: "${n}". Allowed: ${t}`);return r})}}}function ly(t=""){if(typeof t!="string")throw new Error("join separator should be string");return{encode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="string")throw new Error("join.encode input should be array of strings");for(let n of e)if(typeof n!="string")throw new Error(`join.encode: non-string input=${n}`);return e.join(t)},decode:e=>{if(typeof e!="string")throw new Error("join.decode input should be string");return e.split(t)}}}function Eu(t,e,n){if(e<2)throw new Error(`convertRadix: wrong from=${e}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(t))throw new Error("convertRadix: data should be array");if(!t.length)return[];let r=0;const a=[],i=Array.from(t);for(i.forEach(s=>{if(s<0||s>=e)throw new Error(`Wrong integer: ${s}`)});;){let s=0,o=!0;for(let d=r;d<i.length;d++){const f=i[d],p=e*s+f;if(!Number.isSafeInteger(p)||e*s/e!==s||p-f!==e*s)throw new Error("convertRadix: carry overflow");s=p%n;const g=Math.floor(p/n);if(i[d]=g,!Number.isSafeInteger(g)||g*n+s!==p)throw new Error("convertRadix: carry overflow");if(o)g?o=!1:r=d;else continue}if(a.push(s),o)break}for(let s=0;s<t.length-1&&t[s]===0;s++)a.push(0);return a.reverse()}function fy(t){return{encode:e=>{if(!cy(e))throw new Error("radix.encode input should be Uint8Array");return Eu(Array.from(e),2**8,t)},decode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="number")throw new Error("radix.decode input should be array of numbers");return Uint8Array.from(Eu(e,t,2**8))}}}const hy=t=>dy(fy(58),uy(t),ly("")),py=hy("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function my({coder:t,ipfs:e},n){return(r,a)=>(n(r,a),t.decode(e&&a?r.substring(1):r))}function by({coder:t,ipfs:e}){return(n,r)=>{const a=t.encode(me(n));return e&&r?`${e}${a}`:a}}function yy({chars:t,ipfs:e,type:n,withPadding:r}){return(a,i)=>{if(typeof a!="string")throw new Error(`Expected ${n} string input`);if(e&&i&&!a.startsWith(e))throw new Error(`Expected ipfs-compatible ${n} to start with '${e}'`);for(let s=i?1:0,o=a.length;s<o;s++)if(!t.includes(a[s]))if(r&&a[s]==="="){if(s!==o-1&&a[s+1]!=="=")throw new Error(`Invalid ${n} padding sequence "${a[s]}${a[s+1]}" at index ${s}`)}else throw new Error(`Invalid ${n} character "${a[s]}" (0x${a.charCodeAt(s).toString(16)}) at index ${s}`);return!0}}const vd={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:py,ipfs:"z",type:"base58"},xy=yy(vd),gy=my(vd,xy),vy=by(vd);function Kr(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`positive integer expected, not ${t}`)}function wy(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function Oi(t,...e){if(!wy(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${t.length}`)}function Py(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");Kr(t.outputLen),Kr(t.blockLen)}function hr(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function wd(t,e){Oi(t);const n=e.outputLen;if(t.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}const To=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const hi=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4)),So=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),gn=(t,e)=>t<<32-e|t>>>e,Rn=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68,uh=t=>t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255,Hn=Rn?t=>t:t=>uh(t);function cr(t){for(let e=0;e<t.length;e++)t[e]=uh(t[e])}function My(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function Dn(t){return typeof t=="string"&&(t=My(t)),Oi(t),t}function Ty(...t){let e=0;for(let r=0;r<t.length;r++){const a=t[r];Oi(a),e+=a.length}const n=new Uint8Array(e);for(let r=0,a=0;r<t.length;r++){const i=t[r];n.set(i,a),a+=i.length}return n}let Zs=class{clone(){return this._cloneInto()}};function lh(t){const e=r=>t().update(Dn(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function Sy(t){const e=(r,a)=>t(a).update(Dn(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function ky(t=32){if(To&&typeof To.getRandomValues=="function")return To.getRandomValues(new Uint8Array(t));throw new Error("crypto.getRandomValues must be defined")}const Oy=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class Ny extends Zs{constructor(e,n,r={},a,i,s){if(super(),this.blockLen=e,this.outputLen=n,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,Kr(e),Kr(n),Kr(a),n<0||n>a)throw new Error("outputLen bigger than keyLen");if(r.key!==void 0&&(r.key.length<1||r.key.length>a))throw new Error(`key must be up 1..${a} byte long or undefined`);if(r.salt!==void 0&&r.salt.length!==i)throw new Error(`salt must be ${i} byte long or undefined`);if(r.personalization!==void 0&&r.personalization.length!==s)throw new Error(`personalization must be ${s} byte long or undefined`);this.buffer32=hi(this.buffer=new Uint8Array(e))}update(e){hr(this);const{blockLen:n,buffer:r,buffer32:a}=this;e=Dn(e);const i=e.length,s=e.byteOffset,o=e.buffer;for(let d=0;d<i;){this.pos===n&&(Rn||cr(a),this.compress(a,0,!1),Rn||cr(a),this.pos=0);const f=Math.min(n-this.pos,i-d),p=s+d;if(f===n&&!(p%4)&&d+f<i){const g=new Uint32Array(o,p,Math.floor((i-d)/4));Rn||cr(g);for(let P=0;d+n<i;P+=a.length,d+=n)this.length+=n,this.compress(g,P,!1);Rn||cr(g);continue}r.set(e.subarray(d,d+f),this.pos),this.pos+=f,this.length+=f,d+=f}return this}digestInto(e){hr(this),wd(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,this.buffer.subarray(n).fill(0),Rn||cr(r),this.compress(r,0,!0),Rn||cr(r);const a=hi(e);this.get().forEach((i,s)=>a[s]=Hn(i))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:a,destroyed:i,outputLen:s,pos:o}=this;return e||(e=new this.constructor({dkLen:s})),e.set(...this.get()),e.length=r,e.finished=a,e.destroyed=i,e.outputLen=s,e.buffer.set(n),e.pos=o,e}}const Xi=BigInt(2**32-1),Tc=BigInt(32);function fh(t,e=!1){return e?{h:Number(t&Xi),l:Number(t>>Tc&Xi)}:{h:Number(t>>Tc&Xi)|0,l:Number(t&Xi)|0}}function hh(t,e=!1){let n=new Uint32Array(t.length),r=new Uint32Array(t.length);for(let a=0;a<t.length;a++){const{h:i,l:s}=fh(t[a],e);[n[a],r[a]]=[i,s]}return[n,r]}const Vy=(t,e)=>BigInt(t>>>0)<<Tc|BigInt(e>>>0),Iy=(t,e,n)=>t>>>n,Ey=(t,e,n)=>t<<32-n|e>>>n,zy=(t,e,n)=>t>>>n|e<<32-n,Hy=(t,e,n)=>t<<32-n|e>>>n,Ly=(t,e,n)=>t<<64-n|e>>>n-32,Ry=(t,e,n)=>t>>>n-32|e<<64-n,By=(t,e)=>e,Ay=(t,e)=>t,ph=(t,e,n)=>t<<n|e>>>32-n,mh=(t,e,n)=>e<<n|t>>>32-n,bh=(t,e,n)=>e<<n-32|t>>>64-n,yh=(t,e,n)=>t<<n-32|e>>>64-n;function Cy(t,e,n,r){const a=(e>>>0)+(r>>>0);return{h:t+n+(a/2**32|0)|0,l:a|0}}const jy=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),Uy=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,Xy=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),Dy=(t,e,n,r,a)=>e+n+r+a+(t/2**32|0)|0,Fy=(t,e,n,r,a)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(a>>>0),qy=(t,e,n,r,a,i)=>e+n+r+a+i+(t/2**32|0)|0,Vt={fromBig:fh,split:hh,toBig:Vy,shrSH:Iy,shrSL:Ey,rotrSH:zy,rotrSL:Hy,rotrBH:Ly,rotrBL:Ry,rotr32H:By,rotr32L:Ay,rotlSH:ph,rotlSL:mh,rotlBH:bh,rotlBL:yh,add:Cy,add3L:jy,add3H:Uy,add4L:Xy,add4H:Dy,add5H:qy,add5L:Fy},ht=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),ie=new Uint32Array(32);function _n(t,e,n,r,a,i){const s=a[i],o=a[i+1];let d=ie[2*t],f=ie[2*t+1],p=ie[2*e],g=ie[2*e+1],P=ie[2*n],T=ie[2*n+1],k=ie[2*r],M=ie[2*r+1],O=Vt.add3L(d,p,s);f=Vt.add3H(O,f,g,o),d=O|0,{Dh:M,Dl:k}={Dh:M^f,Dl:k^d},{Dh:M,Dl:k}={Dh:Vt.rotr32H(M,k),Dl:Vt.rotr32L(M,k)},{h:T,l:P}=Vt.add(T,P,M,k),{Bh:g,Bl:p}={Bh:g^T,Bl:p^P},{Bh:g,Bl:p}={Bh:Vt.rotrSH(g,p,24),Bl:Vt.rotrSL(g,p,24)},ie[2*t]=d,ie[2*t+1]=f,ie[2*e]=p,ie[2*e+1]=g,ie[2*n]=P,ie[2*n+1]=T,ie[2*r]=k,ie[2*r+1]=M}function Qn(t,e,n,r,a,i){const s=a[i],o=a[i+1];let d=ie[2*t],f=ie[2*t+1],p=ie[2*e],g=ie[2*e+1],P=ie[2*n],T=ie[2*n+1],k=ie[2*r],M=ie[2*r+1],O=Vt.add3L(d,p,s);f=Vt.add3H(O,f,g,o),d=O|0,{Dh:M,Dl:k}={Dh:M^f,Dl:k^d},{Dh:M,Dl:k}={Dh:Vt.rotrSH(M,k,16),Dl:Vt.rotrSL(M,k,16)},{h:T,l:P}=Vt.add(T,P,M,k),{Bh:g,Bl:p}={Bh:g^T,Bl:p^P},{Bh:g,Bl:p}={Bh:Vt.rotrBH(g,p,63),Bl:Vt.rotrBL(g,p,63)},ie[2*t]=d,ie[2*t+1]=f,ie[2*e]=p,ie[2*e+1]=g,ie[2*n]=P,ie[2*n+1]=T,ie[2*r]=k,ie[2*r+1]=M}class Zy extends Ny{constructor(e={}){super(128,e.dkLen===void 0?64:e.dkLen,e,64,16,16),this.v0l=ht[0]|0,this.v0h=ht[1]|0,this.v1l=ht[2]|0,this.v1h=ht[3]|0,this.v2l=ht[4]|0,this.v2h=ht[5]|0,this.v3l=ht[6]|0,this.v3h=ht[7]|0,this.v4l=ht[8]|0,this.v4h=ht[9]|0,this.v5l=ht[10]|0,this.v5h=ht[11]|0,this.v6l=ht[12]|0,this.v6h=ht[13]|0,this.v7l=ht[14]|0,this.v7h=ht[15]|0;const n=e.key?e.key.length:0;if(this.v0l^=this.outputLen|n<<8|65536|1<<24,e.salt){const r=hi(Dn(e.salt));this.v4l^=Hn(r[0]),this.v4h^=Hn(r[1]),this.v5l^=Hn(r[2]),this.v5h^=Hn(r[3])}if(e.personalization){const r=hi(Dn(e.personalization));this.v6l^=Hn(r[0]),this.v6h^=Hn(r[1]),this.v7l^=Hn(r[2]),this.v7h^=Hn(r[3])}if(e.key){const r=new Uint8Array(this.blockLen);r.set(Dn(e.key)),this.update(r)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:a,v2l:i,v2h:s,v3l:o,v3h:d,v4l:f,v4h:p,v5l:g,v5h:P,v6l:T,v6h:k,v7l:M,v7h:O}=this;return[e,n,r,a,i,s,o,d,f,p,g,P,T,k,M,O]}set(e,n,r,a,i,s,o,d,f,p,g,P,T,k,M,O){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=a|0,this.v2l=i|0,this.v2h=s|0,this.v3l=o|0,this.v3h=d|0,this.v4l=f|0,this.v4h=p|0,this.v5l=g|0,this.v5h=P|0,this.v6l=T|0,this.v6h=k|0,this.v7l=M|0,this.v7h=O|0}compress(e,n,r){this.get().forEach((d,f)=>ie[f]=d),ie.set(ht,16);let{h:a,l:i}=Vt.fromBig(BigInt(this.length));ie[24]=ht[8]^i,ie[25]=ht[9]^a,r&&(ie[28]=~ie[28],ie[29]=~ie[29]);let s=0;const o=Oy;for(let d=0;d<12;d++)_n(0,4,8,12,e,n+2*o[s++]),Qn(0,4,8,12,e,n+2*o[s++]),_n(1,5,9,13,e,n+2*o[s++]),Qn(1,5,9,13,e,n+2*o[s++]),_n(2,6,10,14,e,n+2*o[s++]),Qn(2,6,10,14,e,n+2*o[s++]),_n(3,7,11,15,e,n+2*o[s++]),Qn(3,7,11,15,e,n+2*o[s++]),_n(0,5,10,15,e,n+2*o[s++]),Qn(0,5,10,15,e,n+2*o[s++]),_n(1,6,11,12,e,n+2*o[s++]),Qn(1,6,11,12,e,n+2*o[s++]),_n(2,7,8,13,e,n+2*o[s++]),Qn(2,7,8,13,e,n+2*o[s++]),_n(3,4,9,14,e,n+2*o[s++]),Qn(3,4,9,14,e,n+2*o[s++]);this.v0l^=ie[0]^ie[16],this.v0h^=ie[1]^ie[17],this.v1l^=ie[2]^ie[18],this.v1h^=ie[3]^ie[19],this.v2l^=ie[4]^ie[20],this.v2h^=ie[5]^ie[21],this.v3l^=ie[6]^ie[22],this.v3h^=ie[7]^ie[23],this.v4l^=ie[8]^ie[24],this.v4h^=ie[9]^ie[25],this.v5l^=ie[10]^ie[26],this.v5h^=ie[11]^ie[27],this.v6l^=ie[12]^ie[28],this.v6h^=ie[13]^ie[29],this.v7l^=ie[14]^ie[30],this.v7h^=ie[15]^ie[31],ie.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const zu=Sy(t=>new Zy(t));function Wy(t){return(...e)=>Ke(t(...e))}function Gy(t,e){return(n,r=256,a)=>{const i=me(n);return!Fs||!a&&ki()?t[r](i):e[r](i)}}function ur(t,e=256,n,r){const a=Math.ceil(e/8),i=me(t);return!Fs||!r&&ki()?ny(i,me(n),a):n?zu(i,{dkLen:a,key:n}):zu(i,{dkLen:a})}const ko=Wy(ur),Ky=bn("SS58PRE");function xh(t){return ur(Ct(Ky,t),512)}function Yy(t){const e=t[0]&64?2:1,n=e===1?t[0]:(t[0]&63)<<2|t[1]>>6|(t[1]&63)<<8,r=[34+e,35+e].includes(t.length),a=t.length-(r?2:1),i=xh(t.subarray(0,a));return[(t[0]&128)===0&&![46,47].includes(t[0])&&(r?t[t.length-2]===i[0]&&t[t.length-1]===i[1]:t[t.length-1]===i[0]),a,e,n]}const Jy=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],_y={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},Qy={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},$y={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,enjin:1155,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,pendulum:354,phala:354,picasso:434,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vtb:694,xxnetwork:1955,zeitgeist:354},e9={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},Hu=[0,2,42],t9=["testnet"];function n9(t){var e,n;const r=t.network||"",a=r.replace(/_/g,"-").split("-"),i=t;return i.slip44=$y[r],i.hasLedgerSupport=!!i.slip44,i.genesisHash=_y[r]||[],i.icon=Qy[r]||"substrate",i.isTestnet=!!e9[r]||t9.includes(a[a.length-1]),i.isIgnored=i.isTestnet||!(t.standardAccount&&(e=t.decimals)!=null&&e.length&&(n=t.symbols)!=null&&n.length)&&t.prefix!==42,i}function r9({genesisHash:t,prefix:e}){return!!t.length||e===42}function a9(t){return!t.isIgnored&&!!t.network}function i9(t,e){const n=Hu.includes(t.prefix),r=Hu.includes(e.prefix);return n===r?n?0:t.displayName.localeCompare(e.displayName):n?-1:1}const s9=Jy.map(n9),gh=s9.filter(a9).sort(i9),o9=gh.filter(r9),ss={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:gh.map(({prefix:t})=>t),prefix:42};function mr(t,e,n=-1){if(!t)throw new Error("Invalid empty address passed");if(Pe(t)||Qe(t))return me(t);try{const r=gy(t);if(!ss.allowedEncodedLengths.includes(r.length))throw new Error("Invalid decoded address length");const[a,i,s,o]=Yy(r);if(!a&&!e)throw new Error("Invalid decoded address checksum");if(n!==-1&&n!==o)throw new Error(`Expected ss58Format ${n}, received ${o}`);return r.slice(s,i)}catch(r){throw new Error(`Decoding ${t}: ${r.message}`)}}const Lu={bitLength:256,isLe:!1};function c9(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const a=BigInt(32),i=BigInt(4294967295),s=Number(n>>a&i),o=Number(n&i),d=r?4:0,f=r?0:4;t.setUint32(e+d,s,r),t.setUint32(e+f,o,r)}const d9=(t,e,n)=>t&e^~t&n,u9=(t,e,n)=>t&e^t&n^e&n;class l9 extends Zs{constructor(e,n,r,a){super(),this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=a,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=So(this.buffer)}update(e){hr(this);const{view:n,buffer:r,blockLen:a}=this;e=Dn(e);const i=e.length;for(let s=0;s<i;){const o=Math.min(a-this.pos,i-s);if(o===a){const d=So(e);for(;a<=i-s;s+=a)this.process(d,s);continue}r.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===a&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){hr(this),wd(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:a,isLE:i}=this;let{pos:s}=this;n[s++]=128,this.buffer.subarray(s).fill(0),this.padOffset>a-s&&(this.process(r,0),s=0);for(let g=s;g<a;g++)n[g]=0;c9(r,a-8,BigInt(this.length*8),i),this.process(r,0);const o=So(e),d=this.outputLen;if(d%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const f=d/4,p=this.get();if(f>p.length)throw new Error("_sha2: outputLen bigger than state");for(let g=0;g<f;g++)o.setUint32(4*g,p[g],i)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:a,finished:i,destroyed:s,pos:o}=this;return e.length=a,e.pos=o,e.finished=i,e.destroyed=s,a%n&&e.buffer.set(r),e}}const f9=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),$n=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),er=new Uint32Array(64);class h9 extends l9{constructor(){super(64,32,8,!1),this.A=$n[0]|0,this.B=$n[1]|0,this.C=$n[2]|0,this.D=$n[3]|0,this.E=$n[4]|0,this.F=$n[5]|0,this.G=$n[6]|0,this.H=$n[7]|0}get(){const{A:e,B:n,C:r,D:a,E:i,F:s,G:o,H:d}=this;return[e,n,r,a,i,s,o,d]}set(e,n,r,a,i,s,o,d){this.A=e|0,this.B=n|0,this.C=r|0,this.D=a|0,this.E=i|0,this.F=s|0,this.G=o|0,this.H=d|0}process(e,n){for(let g=0;g<16;g++,n+=4)er[g]=e.getUint32(n,!1);for(let g=16;g<64;g++){const P=er[g-15],T=er[g-2],k=gn(P,7)^gn(P,18)^P>>>3,M=gn(T,17)^gn(T,19)^T>>>10;er[g]=M+er[g-7]+k+er[g-16]|0}let{A:r,B:a,C:i,D:s,E:o,F:d,G:f,H:p}=this;for(let g=0;g<64;g++){const P=gn(o,6)^gn(o,11)^gn(o,25),T=p+P+d9(o,d,f)+f9[g]+er[g]|0,k=(gn(r,2)^gn(r,13)^gn(r,22))+u9(r,a,i)|0;p=f,f=d,d=o,o=s+T|0,s=i,i=a,a=r,r=T+k|0}r=r+this.A|0,a=a+this.B|0,i=i+this.C|0,s=s+this.D|0,o=o+this.E|0,d=d+this.F|0,f=f+this.G|0,p=p+this.H|0,this.set(r,a,i,s,o,d,f,p)}roundClean(){er.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const p9=lh(()=>new h9);class vh extends Zs{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,Py(e);const r=Dn(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const a=this.blockLen,i=new Uint8Array(a);i.set(r.length>a?e.create().update(r).digest():r);for(let s=0;s<i.length;s++)i[s]^=54;this.iHash.update(i),this.oHash=e.create();for(let s=0;s<i.length;s++)i[s]^=106;this.oHash.update(i),i.fill(0)}update(e){return hr(this),this.iHash.update(e),this}digestInto(e){hr(this),Oi(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:a,destroyed:i,blockLen:s,outputLen:o}=this;return e=e,e.finished=a,e.destroyed=i,e.blockLen=s,e.outputLen=o,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const wh=(t,e,n)=>new vh(t,e).update(n).digest();wh.create=(t,e)=>new vh(t,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Ph=BigInt(0),Ws=BigInt(1),m9=BigInt(2);function ea(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function Ni(t){if(!ea(t))throw new Error("Uint8Array expected")}const b9=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function Ta(t){Ni(t);let e="";for(let n=0;n<t.length;n++)e+=b9[t[n]];return e}function Mh(t){const e=t.toString(16);return e.length&1?`0${e}`:e}function Pd(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return BigInt(t===""?"0":`0x${t}`)}const In={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function Ru(t){if(t>=In._0&&t<=In._9)return t-In._0;if(t>=In._A&&t<=In._F)return t-(In._A-10);if(t>=In._a&&t<=In._f)return t-(In._a-10)}function Sa(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);const e=t.length,n=e/2;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let a=0,i=0;a<n;a++,i+=2){const s=Ru(t.charCodeAt(i)),o=Ru(t.charCodeAt(i+1));if(s===void 0||o===void 0){const d=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character "'+d+'" at index '+i)}r[a]=s*16+o}return r}function Yr(t){return Pd(Ta(t))}function Md(t){return Ni(t),Pd(Ta(Uint8Array.from(t).reverse()))}function ka(t,e){return Sa(t.toString(16).padStart(e*2,"0"))}function Td(t,e){return ka(t,e).reverse()}function y9(t){return Sa(Mh(t))}function hn(t,e,n){let r;if(typeof e=="string")try{r=Sa(e)}catch(i){throw new Error(`${t} must be valid hex string, got "${e}". Cause: ${i}`)}else if(ea(e))r=Uint8Array.from(e);else throw new Error(`${t} must be hex string or Uint8Array`);const a=r.length;if(typeof n=="number"&&a!==n)throw new Error(`${t} expected ${n} bytes, got ${a}`);return r}function pi(...t){let e=0;for(let r=0;r<t.length;r++){const a=t[r];Ni(a),e+=a.length}const n=new Uint8Array(e);for(let r=0,a=0;r<t.length;r++){const i=t[r];n.set(i,a),a+=i.length}return n}function x9(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return n===0}function g9(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function v9(t){let e;for(e=0;t>Ph;t>>=Ws,e+=1);return e}function w9(t,e){return t>>BigInt(e)&Ws}function P9(t,e,n){return t|(n?Ws:Ph)<<BigInt(e)}const Sd=t=>(m9<<BigInt(t-1))-Ws,Oo=t=>new Uint8Array(t),Bu=t=>Uint8Array.from(t);function Th(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");let r=Oo(t),a=Oo(t),i=0;const s=()=>{r.fill(1),a.fill(0),i=0},o=(...p)=>n(a,r,...p),d=(p=Oo())=>{a=o(Bu([0]),p),r=o(),p.length!==0&&(a=o(Bu([1]),p),r=o())},f=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let p=0;const g=[];for(;p<e;){r=o();const P=r.slice();g.push(P),p+=r.length}return pi(...g)};return(p,g)=>{s(),d(p);let P;for(;!(P=g(f()));)d();return s(),P}}const M9={bigint:t=>typeof t=="bigint",function:t=>typeof t=="function",boolean:t=>typeof t=="boolean",string:t=>typeof t=="string",stringOrUint8Array:t=>typeof t=="string"||ea(t),isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>typeof t=="function"&&Number.isSafeInteger(t.outputLen)};function Vi(t,e,n={}){const r=(a,i,s)=>{const o=M9[i];if(typeof o!="function")throw new Error(`Invalid validator "${i}", expected function`);const d=t[a];if(!(s&&d===void 0)&&!o(d,t))throw new Error(`Invalid param ${String(a)}=${d} (${typeof d}), expected ${i}`)};for(const[a,i]of Object.entries(e))r(a,i,!1);for(const[a,i]of Object.entries(n))r(a,i,!0);return t}const T9=Object.freeze(Object.defineProperty({__proto__:null,abytes:Ni,bitGet:w9,bitLen:v9,bitMask:Sd,bitSet:P9,bytesToHex:Ta,bytesToNumberBE:Yr,bytesToNumberLE:Md,concatBytes:pi,createHmacDrbg:Th,ensureBytes:hn,equalBytes:x9,hexToBytes:Sa,hexToNumber:Pd,isBytes:ea,numberToBytesBE:ka,numberToBytesLE:Td,numberToHexUnpadded:Mh,numberToVarBytesBE:y9,utf8ToBytes:g9,validateObject:Vi},Symbol.toStringTag,{value:"Module"}));/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const bt=BigInt(0),ut=BigInt(1),Xr=BigInt(2),S9=BigInt(3),Sc=BigInt(4),Au=BigInt(5),Cu=BigInt(8);BigInt(9);BigInt(16);function Bt(t,e){const n=t%e;return n>=bt?n:e+n}function k9(t,e,n){if(n<=bt||e<bt)throw new Error("Expected power/modulo > 0");if(n===ut)return bt;let r=ut;for(;e>bt;)e&ut&&(r=r*t%n),t=t*t%n,e>>=ut;return r}function Qt(t,e,n){let r=t;for(;e-- >bt;)r*=r,r%=n;return r}function kc(t,e){if(t===bt||e<=bt)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let n=Bt(t,e),r=e,a=bt,i=ut;for(;n!==bt;){const s=r/n,o=r%n,d=a-i*s;r=n,n=o,a=i,i=d}if(r!==ut)throw new Error("invert: does not exist");return Bt(a,e)}function O9(t){const e=(t-ut)/Xr;let n,r,a;for(n=t-ut,r=0;n%Xr===bt;n/=Xr,r++);for(a=Xr;a<t&&k9(a,e,t)!==t-ut;a++);if(r===1){const s=(t+ut)/Sc;return function(o,d){const f=o.pow(d,s);if(!o.eql(o.sqr(f),d))throw new Error("Cannot find square root");return f}}const i=(n+ut)/Xr;return function(s,o){if(s.pow(o,e)===s.neg(s.ONE))throw new Error("Cannot find square root");let d=r,f=s.pow(s.mul(s.ONE,a),n),p=s.pow(o,i),g=s.pow(o,n);for(;!s.eql(g,s.ONE);){if(s.eql(g,s.ZERO))return s.ZERO;let P=1;for(let k=s.sqr(g);P<d&&!s.eql(k,s.ONE);P++)k=s.sqr(k);const T=s.pow(f,ut<<BigInt(d-P-1));f=s.sqr(T),p=s.mul(p,T),g=s.mul(g,f),d=P}return p}}function N9(t){if(t%Sc===S9){const e=(t+ut)/Sc;return function(n,r){const a=n.pow(r,e);if(!n.eql(n.sqr(a),r))throw new Error("Cannot find square root");return a}}if(t%Cu===Au){const e=(t-Au)/Cu;return function(n,r){const a=n.mul(r,Xr),i=n.pow(a,e),s=n.mul(r,i),o=n.mul(n.mul(s,Xr),i),d=n.mul(s,n.sub(o,n.ONE));if(!n.eql(n.sqr(d),r))throw new Error("Cannot find square root");return d}}return O9(t)}const V9=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function I9(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},n=V9.reduce((r,a)=>(r[a]="function",r),e);return Vi(t,n)}function E9(t,e,n){if(n<bt)throw new Error("Expected power > 0");if(n===bt)return t.ONE;if(n===ut)return e;let r=t.ONE,a=e;for(;n>bt;)n&ut&&(r=t.mul(r,a)),a=t.sqr(a),n>>=ut;return r}function z9(t,e){const n=new Array(e.length),r=e.reduce((i,s,o)=>t.is0(s)?i:(n[o]=i,t.mul(i,s)),t.ONE),a=t.inv(r);return e.reduceRight((i,s,o)=>t.is0(s)?i:(n[o]=t.mul(i,n[o]),t.mul(i,s)),a),n}function Sh(t,e){const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function H9(t,e,n=!1,r={}){if(t<=bt)throw new Error(`Expected Field ORDER > 0, got ${t}`);const{nBitLength:a,nByteLength:i}=Sh(t,e);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");const s=N9(t),o=Object.freeze({ORDER:t,BITS:a,BYTES:i,MASK:Sd(a),ZERO:bt,ONE:ut,create:d=>Bt(d,t),isValid:d=>{if(typeof d!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof d}`);return bt<=d&&d<t},is0:d=>d===bt,isOdd:d=>(d&ut)===ut,neg:d=>Bt(-d,t),eql:(d,f)=>d===f,sqr:d=>Bt(d*d,t),add:(d,f)=>Bt(d+f,t),sub:(d,f)=>Bt(d-f,t),mul:(d,f)=>Bt(d*f,t),pow:(d,f)=>E9(o,d,f),div:(d,f)=>Bt(d*kc(f,t),t),sqrN:d=>d*d,addN:(d,f)=>d+f,subN:(d,f)=>d-f,mulN:(d,f)=>d*f,inv:d=>kc(d,t),sqrt:r.sqrt||(d=>s(o,d)),invertBatch:d=>z9(o,d),cmov:(d,f,p)=>p?f:d,toBytes:d=>n?Td(d,i):ka(d,i),fromBytes:d=>{if(d.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${d.length}`);return n?Md(d):Yr(d)}});return Object.freeze(o)}function kh(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function Oh(t){const e=kh(t);return e+Math.ceil(e/2)}function L9(t,e,n=!1){const r=t.length,a=kh(e),i=Oh(e);if(r<16||r<i||r>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${r}`);const s=n?Yr(t):Md(t),o=Bt(s,e-ut)+ut;return n?Td(o,a):ka(o,a)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const R9=BigInt(0),No=BigInt(1);function B9(t,e){const n=(a,i)=>{const s=i.negate();return a?s:i},r=a=>{const i=Math.ceil(e/a)+1,s=2**(a-1);return{windows:i,windowSize:s}};return{constTimeNegate:n,unsafeLadder(a,i){let s=t.ZERO,o=a;for(;i>R9;)i&No&&(s=s.add(o)),o=o.double(),i>>=No;return s},precomputeWindow(a,i){const{windows:s,windowSize:o}=r(i),d=[];let f=a,p=f;for(let g=0;g<s;g++){p=f,d.push(p);for(let P=1;P<o;P++)p=p.add(f),d.push(p);f=p.double()}return d},wNAF(a,i,s){const{windows:o,windowSize:d}=r(a);let f=t.ZERO,p=t.BASE;const g=BigInt(2**a-1),P=2**a,T=BigInt(a);for(let k=0;k<o;k++){const M=k*d;let O=Number(s&g);s>>=T,O>d&&(O-=P,s+=No);const V=M,N=M+Math.abs(O)-1,E=k%2!==0,A=O<0;O===0?p=p.add(n(E,i[V])):f=f.add(n(A,i[N]))}return{p:f,f:p}},wNAFCached(a,i,s,o){const d=a._WINDOW_SIZE||1;let f=i.get(a);return f||(f=this.precomputeWindow(a,d),d!==1&&i.set(a,o(f))),this.wNAF(d,f,s)}}}function Nh(t){return I9(t.Fp),Vi(t,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...Sh(t.n,t.nBitLength),...t,p:t.Fp.ORDER})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function A9(t){const e=Nh(t);Vi(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:n,Fp:r,a}=e;if(n){if(!r.eql(a,r.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof n!="object"||typeof n.beta!="bigint"||typeof n.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}const{bytesToNumberBE:C9,hexToBytes:j9}=T9,Fr={Err:class extends Error{constructor(t=""){super(t)}},_parseInt(t){const{Err:e}=Fr;if(t.length<2||t[0]!==2)throw new e("Invalid signature integer tag");const n=t[1],r=t.subarray(2,n+2);if(!n||r.length!==n)throw new e("Invalid signature integer: wrong length");if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return{d:C9(r),l:t.subarray(n+2)}},toSig(t){const{Err:e}=Fr,n=typeof t=="string"?j9(t):t;Ni(n);let r=n.length;if(r<2||n[0]!=48)throw new e("Invalid signature tag");if(n[1]!==r-2)throw new e("Invalid signature: incorrect length");const{d:a,l:i}=Fr._parseInt(n.subarray(2)),{d:s,l:o}=Fr._parseInt(i);if(o.length)throw new e("Invalid signature: left bytes after parsing");return{r:a,s}},hexFromSig(t){const e=f=>Number.parseInt(f[0],16)&8?"00"+f:f,n=f=>{const p=f.toString(16);return p.length&1?`0${p}`:p},r=e(n(t.s)),a=e(n(t.r)),i=r.length/2,s=a.length/2,o=n(i),d=n(s);return`30${n(s+i+4)}02${d}${a}02${o}${r}`}},An=BigInt(0),nn=BigInt(1);BigInt(2);const ju=BigInt(3);BigInt(4);function U9(t){const e=A9(t),{Fp:n}=e,r=e.toBytes||((k,M,O)=>{const V=M.toAffine();return pi(Uint8Array.from([4]),n.toBytes(V.x),n.toBytes(V.y))}),a=e.fromBytes||(k=>{const M=k.subarray(1),O=n.fromBytes(M.subarray(0,n.BYTES)),V=n.fromBytes(M.subarray(n.BYTES,2*n.BYTES));return{x:O,y:V}});function i(k){const{a:M,b:O}=e,V=n.sqr(k),N=n.mul(V,k);return n.add(n.add(N,n.mul(k,M)),O)}if(!n.eql(n.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function s(k){return typeof k=="bigint"&&An<k&&k<e.n}function o(k){if(!s(k))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function d(k){const{allowedPrivateKeyLengths:M,nByteLength:O,wrapPrivateKey:V,n:N}=e;if(M&&typeof k!="bigint"){if(ea(k)&&(k=Ta(k)),typeof k!="string"||!M.includes(k.length))throw new Error("Invalid key");k=k.padStart(O*2,"0")}let E;try{E=typeof k=="bigint"?k:Yr(hn("private key",k,O))}catch{throw new Error(`private key must be ${O} bytes, hex or bigint, not ${typeof k}`)}return V&&(E=Bt(E,N)),o(E),E}const f=new Map;function p(k){if(!(k instanceof g))throw new Error("ProjectivePoint expected")}class g{constructor(M,O,V){if(this.px=M,this.py=O,this.pz=V,M==null||!n.isValid(M))throw new Error("x required");if(O==null||!n.isValid(O))throw new Error("y required");if(V==null||!n.isValid(V))throw new Error("z required")}static fromAffine(M){const{x:O,y:V}=M||{};if(!M||!n.isValid(O)||!n.isValid(V))throw new Error("invalid affine point");if(M instanceof g)throw new Error("projective point not allowed");const N=E=>n.eql(E,n.ZERO);return N(O)&&N(V)?g.ZERO:new g(O,V,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(M){const O=n.invertBatch(M.map(V=>V.pz));return M.map((V,N)=>V.toAffine(O[N])).map(g.fromAffine)}static fromHex(M){const O=g.fromAffine(a(hn("pointHex",M)));return O.assertValidity(),O}static fromPrivateKey(M){return g.BASE.multiply(d(M))}_setWindowSize(M){this._WINDOW_SIZE=M,f.delete(this)}assertValidity(){if(this.is0()){if(e.allowInfinityPoint&&!n.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:M,y:O}=this.toAffine();if(!n.isValid(M)||!n.isValid(O))throw new Error("bad point: x or y not FE");const V=n.sqr(O),N=i(M);if(!n.eql(V,N))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:M}=this.toAffine();if(n.isOdd)return!n.isOdd(M);throw new Error("Field doesn't support isOdd")}equals(M){p(M);const{px:O,py:V,pz:N}=this,{px:E,py:A,pz:H}=M,z=n.eql(n.mul(O,H),n.mul(E,N)),B=n.eql(n.mul(V,H),n.mul(A,N));return z&&B}negate(){return new g(this.px,n.neg(this.py),this.pz)}double(){const{a:M,b:O}=e,V=n.mul(O,ju),{px:N,py:E,pz:A}=this;let H=n.ZERO,z=n.ZERO,B=n.ZERO,F=n.mul(N,N),ee=n.mul(E,E),W=n.mul(A,A),C=n.mul(N,E);return C=n.add(C,C),B=n.mul(N,A),B=n.add(B,B),H=n.mul(M,B),z=n.mul(V,W),z=n.add(H,z),H=n.sub(ee,z),z=n.add(ee,z),z=n.mul(H,z),H=n.mul(C,H),B=n.mul(V,B),W=n.mul(M,W),C=n.sub(F,W),C=n.mul(M,C),C=n.add(C,B),B=n.add(F,F),F=n.add(B,F),F=n.add(F,W),F=n.mul(F,C),z=n.add(z,F),W=n.mul(E,A),W=n.add(W,W),F=n.mul(W,C),H=n.sub(H,F),B=n.mul(W,ee),B=n.add(B,B),B=n.add(B,B),new g(H,z,B)}add(M){p(M);const{px:O,py:V,pz:N}=this,{px:E,py:A,pz:H}=M;let z=n.ZERO,B=n.ZERO,F=n.ZERO;const ee=e.a,W=n.mul(e.b,ju);let C=n.mul(O,E),oe=n.mul(V,A),c=n.mul(N,H),l=n.add(O,V),h=n.add(E,A);l=n.mul(l,h),h=n.add(C,oe),l=n.sub(l,h),h=n.add(O,N);let m=n.add(E,H);return h=n.mul(h,m),m=n.add(C,c),h=n.sub(h,m),m=n.add(V,N),z=n.add(A,H),m=n.mul(m,z),z=n.add(oe,c),m=n.sub(m,z),F=n.mul(ee,h),z=n.mul(W,c),F=n.add(z,F),z=n.sub(oe,F),F=n.add(oe,F),B=n.mul(z,F),oe=n.add(C,C),oe=n.add(oe,C),c=n.mul(ee,c),h=n.mul(W,h),oe=n.add(oe,c),c=n.sub(C,c),c=n.mul(ee,c),h=n.add(h,c),C=n.mul(oe,h),B=n.add(B,C),C=n.mul(m,h),z=n.mul(l,z),z=n.sub(z,C),C=n.mul(l,oe),F=n.mul(m,F),F=n.add(F,C),new g(z,B,F)}subtract(M){return this.add(M.negate())}is0(){return this.equals(g.ZERO)}wNAF(M){return T.wNAFCached(this,f,M,O=>{const V=n.invertBatch(O.map(N=>N.pz));return O.map((N,E)=>N.toAffine(V[E])).map(g.fromAffine)})}multiplyUnsafe(M){const O=g.ZERO;if(M===An)return O;if(o(M),M===nn)return this;const{endo:V}=e;if(!V)return T.unsafeLadder(this,M);let{k1neg:N,k1:E,k2neg:A,k2:H}=V.splitScalar(M),z=O,B=O,F=this;for(;E>An||H>An;)E&nn&&(z=z.add(F)),H&nn&&(B=B.add(F)),F=F.double(),E>>=nn,H>>=nn;return N&&(z=z.negate()),A&&(B=B.negate()),B=new g(n.mul(B.px,V.beta),B.py,B.pz),z.add(B)}multiply(M){o(M);let O=M,V,N;const{endo:E}=e;if(E){const{k1neg:A,k1:H,k2neg:z,k2:B}=E.splitScalar(O);let{p:F,f:ee}=this.wNAF(H),{p:W,f:C}=this.wNAF(B);F=T.constTimeNegate(A,F),W=T.constTimeNegate(z,W),W=new g(n.mul(W.px,E.beta),W.py,W.pz),V=F.add(W),N=ee.add(C)}else{const{p:A,f:H}=this.wNAF(O);V=A,N=H}return g.normalizeZ([V,N])[0]}multiplyAndAddUnsafe(M,O,V){const N=g.BASE,E=(H,z)=>z===An||z===nn||!H.equals(N)?H.multiplyUnsafe(z):H.multiply(z),A=E(this,O).add(E(M,V));return A.is0()?void 0:A}toAffine(M){const{px:O,py:V,pz:N}=this,E=this.is0();M==null&&(M=E?n.ONE:n.inv(N));const A=n.mul(O,M),H=n.mul(V,M),z=n.mul(N,M);if(E)return{x:n.ZERO,y:n.ZERO};if(!n.eql(z,n.ONE))throw new Error("invZ was invalid");return{x:A,y:H}}isTorsionFree(){const{h:M,isTorsionFree:O}=e;if(M===nn)return!0;if(O)return O(g,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:M,clearCofactor:O}=e;return M===nn?this:O?O(g,this):this.multiplyUnsafe(e.h)}toRawBytes(M=!0){return this.assertValidity(),r(g,this,M)}toHex(M=!0){return Ta(this.toRawBytes(M))}}g.BASE=new g(e.Gx,e.Gy,n.ONE),g.ZERO=new g(n.ZERO,n.ONE,n.ZERO);const P=e.nBitLength,T=B9(g,e.endo?Math.ceil(P/2):P);return{CURVE:e,ProjectivePoint:g,normPrivateKeyToScalar:d,weierstrassEquation:i,isWithinCurveOrder:s}}function X9(t){const e=Nh(t);return Vi(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function D9(t){const e=X9(t),{Fp:n,n:r}=e,a=n.BYTES+1,i=2*n.BYTES+1;function s(h){return An<h&&h<n.ORDER}function o(h){return Bt(h,r)}function d(h){return kc(h,r)}const{ProjectivePoint:f,normPrivateKeyToScalar:p,weierstrassEquation:g,isWithinCurveOrder:P}=U9({...e,toBytes(h,m,y){const v=m.toAffine(),w=n.toBytes(v.x),b=pi;return y?b(Uint8Array.from([m.hasEvenY()?2:3]),w):b(Uint8Array.from([4]),w,n.toBytes(v.y))},fromBytes(h){const m=h.length,y=h[0],v=h.subarray(1);if(m===a&&(y===2||y===3)){const w=Yr(v);if(!s(w))throw new Error("Point is not on curve");const b=g(w);let u;try{u=n.sqrt(b)}catch(R){const L=R instanceof Error?": "+R.message:"";throw new Error("Point is not on curve"+L)}const x=(u&nn)===nn;return(y&1)===1!==x&&(u=n.neg(u)),{x:w,y:u}}else if(m===i&&y===4){const w=n.fromBytes(v.subarray(0,n.BYTES)),b=n.fromBytes(v.subarray(n.BYTES,2*n.BYTES));return{x:w,y:b}}else throw new Error(`Point of length ${m} was invalid. Expected ${a} compressed bytes or ${i} uncompressed bytes`)}}),T=h=>Ta(ka(h,e.nByteLength));function k(h){const m=r>>nn;return h>m}function M(h){return k(h)?o(-h):h}const O=(h,m,y)=>Yr(h.slice(m,y));class V{constructor(m,y,v){this.r=m,this.s=y,this.recovery=v,this.assertValidity()}static fromCompact(m){const y=e.nByteLength;return m=hn("compactSignature",m,y*2),new V(O(m,0,y),O(m,y,2*y))}static fromDER(m){const{r:y,s:v}=Fr.toSig(hn("DER",m));return new V(y,v)}assertValidity(){if(!P(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!P(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(m){return new V(this.r,this.s,m)}recoverPublicKey(m){const{r:y,s:v,recovery:w}=this,b=B(hn("msgHash",m));if(w==null||![0,1,2,3].includes(w))throw new Error("recovery id invalid");const u=w===2||w===3?y+e.n:y;if(u>=n.ORDER)throw new Error("recovery id 2 or 3 invalid");const x=w&1?"03":"02",R=f.fromHex(x+T(u)),L=d(u),X=o(-b*L),te=o(v*L),Z=f.BASE.multiplyAndAddUnsafe(R,X,te);if(!Z)throw new Error("point at infinify");return Z.assertValidity(),Z}hasHighS(){return k(this.s)}normalizeS(){return this.hasHighS()?new V(this.r,o(-this.s),this.recovery):this}toDERRawBytes(){return Sa(this.toDERHex())}toDERHex(){return Fr.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return Sa(this.toCompactHex())}toCompactHex(){return T(this.r)+T(this.s)}}const N={isValidPrivateKey(h){try{return p(h),!0}catch{return!1}},normPrivateKeyToScalar:p,randomPrivateKey:()=>{const h=Oh(e.n);return L9(e.randomBytes(h),e.n)},precompute(h=8,m=f.BASE){return m._setWindowSize(h),m.multiply(BigInt(3)),m}};function E(h,m=!0){return f.fromPrivateKey(h).toRawBytes(m)}function A(h){const m=ea(h),y=typeof h=="string",v=(m||y)&&h.length;return m?v===a||v===i:y?v===2*a||v===2*i:h instanceof f}function H(h,m,y=!0){if(A(h))throw new Error("first arg must be private key");if(!A(m))throw new Error("second arg must be public key");return f.fromHex(m).multiply(p(h)).toRawBytes(y)}const z=e.bits2int||function(h){const m=Yr(h),y=h.length*8-e.nBitLength;return y>0?m>>BigInt(y):m},B=e.bits2int_modN||function(h){return o(z(h))},F=Sd(e.nBitLength);function ee(h){if(typeof h!="bigint")throw new Error("bigint expected");if(!(An<=h&&h<F))throw new Error(`bigint expected < 2^${e.nBitLength}`);return ka(h,e.nByteLength)}function W(h,m,y=C){if(["recovered","canonical"].some(_e=>_e in y))throw new Error("sign() legacy options not supported");const{hash:v,randomBytes:w}=e;let{lowS:b,prehash:u,extraEntropy:x}=y;b==null&&(b=!0),h=hn("msgHash",h),u&&(h=hn("prehashed msgHash",v(h)));const R=B(h),L=p(m),X=[ee(L),ee(R)];if(x!=null&&x!==!1){const _e=x===!0?w(n.BYTES):x;X.push(hn("extraEntropy",_e))}const te=pi(...X),Z=R;function K(_e){const ae=z(_e);if(!P(ae))return;const de=d(ae),Re=f.BASE.multiply(ae).toAffine(),ue=o(Re.x);if(ue===An)return;const se=o(de*o(Z+ue*L));if(se===An)return;let ft=(Re.x===ue?0:2)|Number(Re.y&nn),he=se;return b&&k(se)&&(he=M(se),ft^=1),new V(ue,he,ft)}return{seed:te,k2sig:K}}const C={lowS:e.lowS,prehash:!1},oe={lowS:e.lowS,prehash:!1};function c(h,m,y=C){const{seed:v,k2sig:w}=W(h,m,y),b=e;return Th(b.hash.outputLen,b.nByteLength,b.hmac)(v,w)}f.BASE._setWindowSize(8);function l(h,m,y,v=oe){var w;const b=h;if(m=hn("msgHash",m),y=hn("publicKey",y),"strict"in v)throw new Error("options.strict was renamed to lowS");const{lowS:u,prehash:x}=v;let R,L;try{if(typeof b=="string"||ea(b))try{R=V.fromDER(b)}catch(Re){if(!(Re instanceof Fr.Err))throw Re;R=V.fromCompact(b)}else if(typeof b=="object"&&typeof b.r=="bigint"&&typeof b.s=="bigint"){const{r:Re,s:ue}=b;R=new V(Re,ue)}else throw new Error("PARSE");L=f.fromHex(y)}catch(Re){if(Re.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(u&&R.hasHighS())return!1;x&&(m=e.hash(m));const{r:X,s:te}=R,Z=B(m),K=d(te),_e=o(Z*K),ae=o(X*K),de=(w=f.BASE.multiplyAndAddUnsafe(L,_e,ae))==null?void 0:w.toAffine();return de?o(de.x)===X:!1}return{CURVE:e,getPublicKey:E,getSharedSecret:H,sign:c,verify:l,ProjectivePoint:f,Signature:V,utils:N}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function F9(t){return{hash:t,hmac:(e,...n)=>wh(t,e,Ty(...n)),randomBytes:ky}}function q9(t,e){const n=r=>D9({...t,...F9(r)});return Object.freeze({...n(e),create:n})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Vh=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Uu=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Z9=BigInt(1),Oc=BigInt(2),Xu=(t,e)=>(t+e/Oc)/e;function W9(t){const e=Vh,n=BigInt(3),r=BigInt(6),a=BigInt(11),i=BigInt(22),s=BigInt(23),o=BigInt(44),d=BigInt(88),f=t*t*t%e,p=f*f*t%e,g=Qt(p,n,e)*p%e,P=Qt(g,n,e)*p%e,T=Qt(P,Oc,e)*f%e,k=Qt(T,a,e)*T%e,M=Qt(k,i,e)*k%e,O=Qt(M,o,e)*M%e,V=Qt(O,d,e)*O%e,N=Qt(V,o,e)*M%e,E=Qt(N,n,e)*p%e,A=Qt(E,s,e)*k%e,H=Qt(A,r,e)*f%e,z=Qt(H,Oc,e);if(!Nc.eql(Nc.sqr(z),t))throw new Error("Cannot find square root");return z}const Nc=H9(Vh,void 0,void 0,{sqrt:W9}),Ih=q9({a:BigInt(0),b:BigInt(7),Fp:Nc,n:Uu,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=Uu,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-Z9*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),a=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=n,s=BigInt("0x100000000000000000000000000000000"),o=Xu(i*t,e),d=Xu(-r*t,e);let f=Bt(t-o*n-d*a,e),p=Bt(-o*r-d*i,e);const g=f>s,P=p>s;if(g&&(f=e-f),P&&(p=e-p),f>s||p>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:g,k1:f,k2neg:P,k2:p}}}},p9);BigInt(0);Ih.ProjectivePoint;function Eh(t,e=ss.prefix){const n=mr(t);if(e<0||e>16383||[46,47].includes(e))throw new Error("Out of range ss58Format specified");if(!ss.allowedDecodedLengths.includes(n.length))throw new Error(`Expected a valid key to convert, with length ${ss.allowedDecodedLengths.join(", ")}`);const r=Ct(e<64?[e]:[(e&252)>>2|64,e>>8|(e&3)<<6],n);return vy(Ct(r,xh(r).subarray(0,[32,33].includes(n.length)?2:1)))}const zh=[],Hh=[],Lh=[],G9=BigInt(0),Wa=BigInt(1),K9=BigInt(2),Y9=BigInt(7),J9=BigInt(256),_9=BigInt(113);for(let t=0,e=Wa,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],zh.push(2*(5*r+n)),Hh.push((t+1)*(t+2)/2%64);let a=G9;for(let i=0;i<7;i++)e=(e<<Wa^(e>>Y9)*_9)%J9,e&K9&&(a^=Wa<<(Wa<<BigInt(i))-Wa);Lh.push(a)}const[Q9,$9]=hh(Lh,!0),Du=(t,e,n)=>n>32?bh(t,e,n):ph(t,e,n),Fu=(t,e,n)=>n>32?yh(t,e,n):mh(t,e,n);function e3(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let s=0;s<10;s++)n[s]=t[s]^t[s+10]^t[s+20]^t[s+30]^t[s+40];for(let s=0;s<10;s+=2){const o=(s+8)%10,d=(s+2)%10,f=n[d],p=n[d+1],g=Du(f,p,1)^n[o],P=Fu(f,p,1)^n[o+1];for(let T=0;T<50;T+=10)t[s+T]^=g,t[s+T+1]^=P}let a=t[2],i=t[3];for(let s=0;s<24;s++){const o=Hh[s],d=Du(a,i,o),f=Fu(a,i,o),p=zh[s];a=t[p],i=t[p+1],t[p]=d,t[p+1]=f}for(let s=0;s<50;s+=10){for(let o=0;o<10;o++)n[o]=t[s+o];for(let o=0;o<10;o++)t[s+o]^=~n[(o+2)%10]&n[(o+4)%10]}t[0]^=Q9[r],t[1]^=$9[r]}n.fill(0)}class kd extends Zs{constructor(e,n,r,a=!1,i=24){if(super(),this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=a,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,Kr(r),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=hi(this.state)}keccak(){Rn||cr(this.state32),e3(this.state32,this.rounds),Rn||cr(this.state32),this.posOut=0,this.pos=0}update(e){hr(this);const{blockLen:n,state:r}=this;e=Dn(e);const a=e.length;for(let i=0;i<a;){const s=Math.min(n-this.pos,a-i);for(let o=0;o<s;o++)r[this.pos++]^=e[i++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:a}=this;e[r]^=n,n&128&&r===a-1&&this.keccak(),e[a-1]^=128,this.keccak()}writeInto(e){hr(this,!1),Oi(e),this.finish();const n=this.state,{blockLen:r}=this;for(let a=0,i=e.length;a<i;){this.posOut>=r&&this.keccak();const s=Math.min(r-this.posOut,i-a);e.set(n.subarray(this.posOut,this.posOut+s),a),this.posOut+=s,a+=s}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return Kr(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(wd(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:a,rounds:i,enableXOF:s}=this;return e||(e=new kd(n,r,a,s,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=r,e.outputLen=a,e.enableXOF=s,e.destroyed=this.destroyed,e}}const Rh=(t,e,n)=>lh(()=>new kd(e,t,n)),t3=Rh(1,136,256/8),n3=Rh(1,72,512/8),Od=Gy({256:ry,512:ay},{256:t3,512:n3});function r3(t,e){if(![33,65].includes(t.length))throw new Error(`Invalid publicKey provided, received ${t.length} bytes input`);if(t.length===65)return t.subarray(1);if(!Fs||ki())return ty(t).subarray(1);const{px:n,py:r}=Ih.ProjectivePoint.fromHex(t);return Ct(Xn(n,Lu),Xn(r,Lu))}function a3(t){return[33,65].includes(t.length)&&(t=Od(r3(t))),t.slice(-20)}function i3(t){if(!t)return"0x";const e=me(t);if(![20,32,33,65].includes(e.length))throw new Error(`Invalid address or publicKey provided, received ${e.length} bytes input`);const n=Ke(a3(e),-1,!1),r=Ke(Od(n),-1,!1);let a="";for(let i=0;i<40;i++)a=`${a}${parseInt(r[i],16)>7?n[i].toUpperCase():n[i]}`;return`0x${a}`}function s3(t,e){return t!==(e>7?t.toUpperCase():t.toLowerCase())}function o3(t){const e=t.replace("0x",""),n=Ke(Od(e.toLowerCase()),-1,!1);for(let r=0;r<40;r++)if(s3(e[r],parseInt(n[r],16)))return!1;return!0}function c3(t){return!t||t.length!==42||!Qe(t)?!1:/^(0x)?[0-9a-f]{40}$/.test(t)||/^(0x)?[0-9A-F]{40}$/.test(t)?!0:o3(t)}const Nt=tt("11400714785074694791"),Sn=tt("14029467366897019727"),qu=tt("1609587929392839161"),Ga=tt("9650029242287828579"),Zu=tt("2870177450012600261"),Ln=tt("0xffffffffffffffff"),d3=tt(7),u3=tt(11),l3=tt(12),f3=tt(16),h3=tt(18),p3=tt(23),m3=tt(27),b3=tt(29),ma=tt(31),y3=tt(32),x3=tt(33),g3=tt(64),Wu=tt(256);function Ft(t,e){const n=t&Ln;return(n<<e|n>>g3-e)&Ln}function Vc(t,e,n){const r=new Array(n);let a=0;for(let s=0;s<n;s++,a+=2)r[s]=tt(t[e+a]|t[e+1+a]<<8);let i=Lb;for(let s=n-1;s>=0;s--)i=(i<<f3)+r[s];return i}function v3(t,e){const n={seed:t,u8a:new Uint8Array(32),u8asize:0,v1:t+Nt+Sn,v2:t+Sn,v3:t,v4:t-Nt};if(e.length<32)return n.u8a.set(e),n.u8asize=e.length,n;const r=e.length-32;let a=0;if(r>=0){const i=s=>Nt*Ft(s+Sn*Vc(e,a,4),ma);do n.v1=i(n.v1),a+=8,n.v2=i(n.v2),a+=8,n.v3=i(n.v3),a+=8,n.v4=i(n.v4),a+=8;while(a<=r)}return a<e.length&&(n.u8a.set(e.subarray(a,e.length)),n.u8asize=e.length-a),n}function w3(t,e){const{seed:n,u8a:r,u8asize:a,v1:i,v2:s,v3:o,v4:d}=v3(tt(e),t);let f=0,p=Ln&tt(t.length)+(t.length>=32?((((Ft(i,Rb)+Ft(s,d3)+Ft(o,l3)+Ft(d,h3)^Nt*Ft(i*Sn,ma))*Nt+Ga^Nt*Ft(s*Sn,ma))*Nt+Ga^Nt*Ft(o*Sn,ma))*Nt+Ga^Nt*Ft(d*Sn,ma))*Nt+Ga:n+Zu);for(;f<=a-8;)p=Ln&Ga+Nt*Ft(p^Nt*Ft(Sn*Vc(r,f,4),ma),m3),f+=8;for(f+4<=a&&(p=Ln&qu+Sn*Ft(p^Nt*Vc(r,f,2),p3),f+=4);f<a;)p=Ln&Nt*Ft(p^Zu*tt(r[f++]),u3);p=Ln&Sn*(p^p>>x3),p=Ln&qu*(p^p>>b3),p=Ln&(p^p>>y3);const g=new Uint8Array(8);for(let P=7;P>=0;P--)g[P]=Number(p%Wu),p=p/Wu;return g}function xa(t,e=64,n){const r=Math.ceil(e/64),a=me(t);if(!Fs||ki())return iy(a,r);const i=new Uint8Array(r*8);for(let s=0;s<r;s++)i.set(w3(a,s).reverse(),s*8);return i}const P3=qt.fetch,Bh=-99999;function Ka(t,e,n){Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:n})}class Ah extends Error{constructor(e="",n=Bh,r){if(super(),S(this,"code"),S(this,"data"),S(this,"message"),S(this,"name"),S(this,"stack"),Ka(this,"message",String(e)),Ka(this,"name",this.constructor.name),Ka(this,"data",r),Ka(this,"code",n),fe(Error.captureStackTrace))Error.captureStackTrace(this,this.constructor);else{const{stack:a}=new Error(e);a&&Ka(this,"stack",a)}}}S(Ah,"CODES",{ASSERT:-90009,INVALID_JSONRPC:-99998,METHOD_NOT_FOUND:-32601,UNKNOWN:Bh});function M3(t){if(st(t))return"";const e=`: ${nt(t)?t.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):Ye(t)}`;return e.length<=256?e:`${e.substring(0,255)}…`}function Gu(t){if(t){const{code:e,data:n,message:r}=t;throw new Ah(`${e}: ${r}${M3(n)}`,e,n)}}class Ch{constructor(){S(this,"__internal__id",0)}decodeResponse(e){if(!e||e.jsonrpc!=="2.0")throw new Error("Invalid jsonrpc field in decoded object");const n=!st(e.params)&&!st(e.method);if(!$e(e.id)&&(!n||!$e(e.params.subscription)&&!nt(e.params.subscription)))throw new Error("Invalid id field in decoded object");if(Gu(e.error),e.result===void 0&&!n)throw new Error("No result found in jsonrpc response");return n?(Gu(e.params.error),e.params.result):e.result}encodeJson(e,n){const[r,a]=this.encodeObject(e,n);return[r,Ye(a)]}encodeObject(e,n){const r=++this.__internal__id;return[r,{id:r,jsonrpc:"2.0",method:e,params:n}]}}const T3="http://127.0.0.1:9933",S3="ws://127.0.0.1:9944",jh={HTTP_URL:T3,WS_URL:S3},Uh=128;class Ku{constructor(e){S(this,"key"),S(this,"next"),S(this,"prev"),this.key=e,this.next=this.prev=this}}class Xh{constructor(e=Uh){S(this,"capacity"),S(this,"__internal__data",new Map),S(this,"__internal__refs",new Map),S(this,"__internal__length",0),S(this,"__internal__head"),S(this,"__internal__tail"),this.capacity=e,this.__internal__head=this.__internal__tail=new Ku("<empty>")}get length(){return this.__internal__length}get lengthData(){return this.__internal__data.size}get lengthRefs(){return this.__internal__refs.size}entries(){const e=this.keys(),n=e.length,r=new Array(n);for(let a=0;a<n;a++){const i=e[a];r[a]=[i,this.__internal__data.get(i)]}return r}keys(){const e=[];if(this.__internal__length){let n=this.__internal__head;for(;n!==this.__internal__tail;)e.push(n.key),n=n.next;e.push(n.key)}return e}get(e){const n=this.__internal__data.get(e);return n?(this.__internal__toHead(e),n):null}set(e,n){if(this.__internal__data.has(e))this.__internal__toHead(e);else{const r=new Ku(e);this.__internal__refs.set(r.key,r),this.length===0?this.__internal__head=this.__internal__tail=r:(this.__internal__head.prev=r,r.next=this.__internal__head,this.__internal__head=r),this.__internal__length===this.capacity?(this.__internal__data.delete(this.__internal__tail.key),this.__internal__refs.delete(this.__internal__tail.key),this.__internal__tail=this.__internal__tail.prev,this.__internal__tail.next=this.__internal__head):this.__internal__length+=1}this.__internal__data.set(e,n)}__internal__toHead(e){const n=this.__internal__refs.get(e);n&&n!==this.__internal__head&&(n.prev.next=n.next,n.next.prev=n.prev,n.next=this.__internal__head,this.__internal__head.prev=n,this.__internal__head=n)}}const Di="HTTP Provider does not have subscriptions, use WebSockets instead",Vo=Kt("api-http");let k3=class Dh{constructor(e=jh.HTTP_URL,n={}){if(S(this,"__internal__callCache",new Xh),S(this,"__internal__coder"),S(this,"__internal__endpoint"),S(this,"__internal__headers"),S(this,"__internal__stats"),!/^(https|http):\/\//.test(e))throw new Error(`Endpoint should start with 'http://' or 'https://', received '${e}'`);this.__internal__coder=new Ch,this.__internal__endpoint=e,this.__internal__headers=n,this.__internal__stats={active:{requests:0,subscriptions:0},total:{bytesRecv:0,bytesSent:0,cached:0,errors:0,requests:0,subscriptions:0,timeout:0}}}get hasSubscriptions(){return!1}clone(){return new Dh(this.__internal__endpoint,this.__internal__headers)}async connect(){}async disconnect(){}get stats(){return this.__internal__stats}get isClonable(){return!0}get isConnected(){return!0}on(e,n){return Vo.error("HTTP Provider does not have 'on' emitters, use WebSockets instead"),Vn}async send(e,n,r){this.__internal__stats.total.requests++;const[,a]=this.__internal__coder.encodeJson(e,n),i=r?`${e}::${Ye(n)}`:"";let s=r?this.__internal__callCache.get(i):null;return s?this.__internal__stats.total.cached++:(s=this.__internal__send(a),r&&this.__internal__callCache.set(i,s)),s}async __internal__send(e){this.__internal__stats.active.requests++,this.__internal__stats.total.bytesSent+=e.length;try{const n=await P3(this.__internal__endpoint,{body:e,headers:{Accept:"application/json","Content-Length":`${e.length}`,"Content-Type":"application/json",...this.__internal__headers},method:"POST"});if(!n.ok)throw new Error(`[${n.status}]: ${n.statusText}`);const r=await n.text();this.__internal__stats.total.bytesRecv+=r.length;const a=this.__internal__coder.decodeResponse(JSON.parse(r));return this.__internal__stats.active.requests--,a}catch(n){throw this.__internal__stats.active.requests--,this.__internal__stats.total.errors++,n}}async subscribe(e,n,r,a){throw Vo.error(Di),new Error(Di)}async unsubscribe(e,n,r){throw Vo.error(Di),new Error(Di)}};var Fh={exports:{}};(function(t){var e=Object.prototype.hasOwnProperty,n="~";function r(){}Object.create&&(r.prototype=Object.create(null),new r().__proto__||(n=!1));function a(d,f,p){this.fn=d,this.context=f,this.once=p||!1}function i(d,f,p,g,P){if(typeof p!="function")throw new TypeError("The listener must be a function");var T=new a(p,g||d,P),k=n?n+f:f;return d._events[k]?d._events[k].fn?d._events[k]=[d._events[k],T]:d._events[k].push(T):(d._events[k]=T,d._eventsCount++),d}function s(d,f){--d._eventsCount===0?d._events=new r:delete d._events[f]}function o(){this._events=new r,this._eventsCount=0}o.prototype.eventNames=function(){var d=[],f,p;if(this._eventsCount===0)return d;for(p in f=this._events)e.call(f,p)&&d.push(n?p.slice(1):p);return Object.getOwnPropertySymbols?d.concat(Object.getOwnPropertySymbols(f)):d},o.prototype.listeners=function(d){var f=n?n+d:d,p=this._events[f];if(!p)return[];if(p.fn)return[p.fn];for(var g=0,P=p.length,T=new Array(P);g<P;g++)T[g]=p[g].fn;return T},o.prototype.listenerCount=function(d){var f=n?n+d:d,p=this._events[f];return p?p.fn?1:p.length:0},o.prototype.emit=function(d,f,p,g,P,T){var k=n?n+d:d;if(!this._events[k])return!1;var M=this._events[k],O=arguments.length,V,N;if(M.fn){switch(M.once&&this.removeListener(d,M.fn,void 0,!0),O){case 1:return M.fn.call(M.context),!0;case 2:return M.fn.call(M.context,f),!0;case 3:return M.fn.call(M.context,f,p),!0;case 4:return M.fn.call(M.context,f,p,g),!0;case 5:return M.fn.call(M.context,f,p,g,P),!0;case 6:return M.fn.call(M.context,f,p,g,P,T),!0}for(N=1,V=new Array(O-1);N<O;N++)V[N-1]=arguments[N];M.fn.apply(M.context,V)}else{var E=M.length,A;for(N=0;N<E;N++)switch(M[N].once&&this.removeListener(d,M[N].fn,void 0,!0),O){case 1:M[N].fn.call(M[N].context);break;case 2:M[N].fn.call(M[N].context,f);break;case 3:M[N].fn.call(M[N].context,f,p);break;case 4:M[N].fn.call(M[N].context,f,p,g);break;default:if(!V)for(A=1,V=new Array(O-1);A<O;A++)V[A-1]=arguments[A];M[N].fn.apply(M[N].context,V)}}return!0},o.prototype.on=function(d,f,p){return i(this,d,f,p,!1)},o.prototype.once=function(d,f,p){return i(this,d,f,p,!0)},o.prototype.removeListener=function(d,f,p,g){var P=n?n+d:d;if(!this._events[P])return this;if(!f)return s(this,P),this;var T=this._events[P];if(T.fn)T.fn===f&&(!g||T.once)&&(!p||T.context===p)&&s(this,P);else{for(var k=0,M=[],O=T.length;k<O;k++)(T[k].fn!==f||g&&!T[k].once||p&&T[k].context!==p)&&M.push(T[k]);M.length?this._events[P]=M.length===1?M[0]:M:s(this,P)}return this},o.prototype.removeAllListeners=function(d){var f;return d?(f=n?n+d:d,this._events[f]&&s(this,f)):(this._events=new r,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=n,o.EventEmitter=o,t.exports=o})(Fh);var O3=Fh.exports;const qh=E0(O3),Io=qt.WebSocket,N3={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};function V3(t){if(t>=0&&t<=999)return"(Unused)";if(t>=1016){if(t<=1999)return"(For WebSocket standard)";if(t<=2999)return"(For WebSocket extensions)";if(t<=3999)return"(For libraries and frameworks)";if(t<=4999)return"(For applications)"}return N3[t]||"(Unknown)"}const I3={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},E3=2500,z3=60*1e3,H3=5e3,Ut=Kt("api-ws");function Yu(t,e){Object.keys(t).forEach(n=>{e&&e(t[n]),delete t[n]})}function Eo(){return{bytesRecv:0,bytesSent:0,cached:0,errors:0,requests:0,subscriptions:0,timeout:0}}let Zh=class Wh{constructor(e=jh.WS_URL,n=E3,r={},a,i){S(this,"__internal__callCache"),S(this,"__internal__coder"),S(this,"__internal__endpoints"),S(this,"__internal__headers"),S(this,"__internal__eventemitter"),S(this,"__internal__handlers",{}),S(this,"__internal__isReadyPromise"),S(this,"__internal__stats"),S(this,"__internal__waitingForId",{}),S(this,"__internal__autoConnectMs"),S(this,"__internal__endpointIndex"),S(this,"__internal__endpointStats"),S(this,"__internal__isConnected",!1),S(this,"__internal__subscriptions",{}),S(this,"__internal__timeoutId",null),S(this,"__internal__websocket"),S(this,"__internal__timeout"),S(this,"__internal__emit",(o,...d)=>{this.__internal__eventemitter.emit(o,...d)}),S(this,"__internal__onSocketClose",o=>{const d=new Error(`disconnected from ${this.endpoint}: ${o.code}:: ${o.reason||V3(o.code)}`);this.__internal__autoConnectMs>0&&Ut.error(d.message),this.__internal__isConnected=!1,this.__internal__websocket&&(this.__internal__websocket.onclose=null,this.__internal__websocket.onerror=null,this.__internal__websocket.onmessage=null,this.__internal__websocket.onopen=null,this.__internal__websocket=null),this.__internal__timeoutId&&(clearInterval(this.__internal__timeoutId),this.__internal__timeoutId=null),Yu(this.__internal__handlers,f=>{try{f.callback(d,void 0)}catch(p){Ut.error(p)}}),Yu(this.__internal__waitingForId),this.__internal__endpointStats=Eo(),this.__internal__emit("disconnected"),this.__internal__autoConnectMs>0&&setTimeout(()=>{this.connectWithRetry().catch(Vn)},this.__internal__autoConnectMs)}),S(this,"__internal__onSocketError",o=>{Ut.debug(()=>["socket error",o]),this.__internal__emit("error",o)}),S(this,"__internal__onSocketMessage",o=>{Ut.debug(()=>["received",o.data]);const d=o.data.length;this.__internal__endpointStats.bytesRecv+=d,this.__internal__stats.total.bytesRecv+=d;const f=JSON.parse(o.data);return st(f.method)?this.__internal__onSocketMessageResult(f):this.__internal__onSocketMessageSubscribe(f)}),S(this,"__internal__onSocketMessageResult",o=>{const d=this.__internal__handlers[o.id];if(!d){Ut.debug(()=>`Unable to find handler for id=${o.id}`);return}try{const{method:f,params:p,subscription:g}=d,P=this.__internal__coder.decodeResponse(o);if(d.callback(null,P),g){const T=`${g.type}::${P}`;this.__internal__subscriptions[T]=re({},g,{method:f,params:p}),this.__internal__waitingForId[T]&&this.__internal__onSocketMessageSubscribe(this.__internal__waitingForId[T])}}catch(f){this.__internal__endpointStats.errors++,this.__internal__stats.total.errors++,d.callback(f,void 0)}delete this.__internal__handlers[o.id]}),S(this,"__internal__onSocketMessageSubscribe",o=>{if(!o.method)throw new Error("No method found in JSONRPC response");const d=`${I3[o.method]||o.method}::${o.params.subscription}`,f=this.__internal__subscriptions[d];if(!f){this.__internal__waitingForId[d]=o,Ut.debug(()=>`Unable to find handler for subscription=${d}`);return}delete this.__internal__waitingForId[d];try{const p=this.__internal__coder.decodeResponse(o);f.callback(null,p)}catch(p){this.__internal__endpointStats.errors++,this.__internal__stats.total.errors++,f.callback(p,void 0)}}),S(this,"__internal__onSocketOpen",()=>{if(this.__internal__websocket===null)throw new Error("WebSocket cannot be null in onOpen");return Ut.debug(()=>["connected to",this.endpoint]),this.__internal__isConnected=!0,this.__internal__resubscribe(),this.__internal__emit("connected"),!0}),S(this,"__internal__resubscribe",()=>{const o=this.__internal__subscriptions;this.__internal__subscriptions={},Promise.all(Object.keys(o).map(async d=>{const{callback:f,method:p,params:g,type:P}=o[d];if(!P.startsWith("author_"))try{await this.subscribe(P,p,g,f)}catch(T){Ut.error(T)}})).catch(Ut.error)}),S(this,"__internal__timeoutHandlers",()=>{const o=Date.now(),d=Object.keys(this.__internal__handlers);for(let f=0,p=d.length;f<p;f++){const g=this.__internal__handlers[d[f]];if(o-g.start>this.__internal__timeout){try{g.callback(new Error(`No response received from RPC endpoint in ${this.__internal__timeout/1e3}s`),void 0)}catch{}this.__internal__endpointStats.timeout++,this.__internal__stats.total.timeout++,delete this.__internal__handlers[d[f]]}}});const s=Array.isArray(e)?e:[e];if(s.length===0)throw new Error("WsProvider requires at least one Endpoint");s.forEach(o=>{if(!/^(wss|ws):\/\//.test(o))throw new Error(`Endpoint should start with 'ws://', received '${o}'`)}),this.__internal__callCache=new Xh(i||Uh),this.__internal__eventemitter=new qh,this.__internal__autoConnectMs=n||0,this.__internal__coder=new Ch,this.__internal__endpointIndex=-1,this.__internal__endpoints=s,this.__internal__headers=r,this.__internal__websocket=null,this.__internal__stats={active:{requests:0,subscriptions:0},total:Eo()},this.__internal__endpointStats=Eo(),this.__internal__timeout=a||z3,n&&n>0&&this.connectWithRetry().catch(Vn),this.__internal__isReadyPromise=new Promise(o=>{this.__internal__eventemitter.once("connected",()=>{o(this)})})}get hasSubscriptions(){return!0}get isClonable(){return!0}get isConnected(){return this.__internal__isConnected}get isReady(){return this.__internal__isReadyPromise}get endpoint(){return this.__internal__endpoints[this.__internal__endpointIndex]}clone(){return new Wh(this.__internal__endpoints)}selectEndpointIndex(e){return(this.__internal__endpointIndex+1)%e.length}async connect(){if(this.__internal__websocket)throw new Error("WebSocket is already connected");try{this.__internal__endpointIndex=this.selectEndpointIndex(this.__internal__endpoints),this.__internal__websocket=typeof qt.WebSocket<"u"&&m2(qt.WebSocket,Io)?new Io(this.endpoint):new Io(this.endpoint,void 0,{headers:this.__internal__headers}),this.__internal__websocket&&(this.__internal__websocket.onclose=this.__internal__onSocketClose,this.__internal__websocket.onerror=this.__internal__onSocketError,this.__internal__websocket.onmessage=this.__internal__onSocketMessage,this.__internal__websocket.onopen=this.__internal__onSocketOpen),this.__internal__timeoutId=setInterval(()=>this.__internal__timeoutHandlers(),H3)}catch(e){throw Ut.error(e),this.__internal__emit("error",e),e}}async connectWithRetry(){if(this.__internal__autoConnectMs>0)try{await this.connect()}catch{setTimeout(()=>{this.connectWithRetry().catch(Vn)},this.__internal__autoConnectMs)}}async disconnect(){this.__internal__autoConnectMs=0;try{this.__internal__websocket&&this.__internal__websocket.close(1e3)}catch(e){throw Ut.error(e),this.__internal__emit("error",e),e}}get stats(){return{active:{requests:Object.keys(this.__internal__handlers).length,subscriptions:Object.keys(this.__internal__subscriptions).length},total:this.__internal__stats.total}}get endpointStats(){return this.__internal__endpointStats}on(e,n){return this.__internal__eventemitter.on(e,n),()=>{this.__internal__eventemitter.removeListener(e,n)}}send(e,n,r,a){this.__internal__endpointStats.requests++,this.__internal__stats.total.requests++;const[i,s]=this.__internal__coder.encodeJson(e,n),o=r?`${e}::${Ye(n)}`:"";let d=r?this.__internal__callCache.get(o):null;return d?(this.__internal__endpointStats.cached++,this.__internal__stats.total.cached++):(d=this.__internal__send(i,s,e,n,a),r&&this.__internal__callCache.set(o,d)),d}async __internal__send(e,n,r,a,i){return new Promise((s,o)=>{try{if(!this.isConnected||this.__internal__websocket===null)throw new Error("WebSocket is not connected");const d=(p,g)=>{p?o(p):s(g)};Ut.debug(()=>["calling",r,n]),this.__internal__handlers[e]={callback:d,method:r,params:a,start:Date.now(),subscription:i};const f=n.length;this.__internal__endpointStats.bytesSent+=f,this.__internal__stats.total.bytesSent+=f,this.__internal__websocket.send(n)}catch(d){this.__internal__endpointStats.errors++,this.__internal__stats.total.errors++,o(d)}})}subscribe(e,n,r,a){return this.__internal__endpointStats.subscriptions++,this.__internal__stats.total.subscriptions++,this.send(n,r,!1,{callback:a,type:e})}async unsubscribe(e,n,r){const a=`${e}::${r}`;if(st(this.__internal__subscriptions[a]))return Ut.debug(()=>`Unable to find active subscription=${a}`),!1;delete this.__internal__subscriptions[a];try{return this.isConnected&&!Zr(this.__internal__websocket)?this.send(n,[r]):!0}catch{return!1}}};var Ic=function(t,e){return Ic=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(n[a]=r[a])},Ic(t,e)};function Yt(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");Ic(t,e);function n(){this.constructor=t}t.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}function L3(t,e,n,r){function a(i){return i instanceof n?i:new n(function(s){s(i)})}return new(n||(n=Promise))(function(i,s){function o(p){try{f(r.next(p))}catch(g){s(g)}}function d(p){try{f(r.throw(p))}catch(g){s(g)}}function f(p){p.done?i(p.value):a(p.value).then(o,d)}f((r=r.apply(t,[])).next())})}function Gh(t,e){var n={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},r,a,i,s=Object.create((typeof Iterator=="function"?Iterator:Object).prototype);return s.next=o(0),s.throw=o(1),s.return=o(2),typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function o(f){return function(p){return d([f,p])}}function d(f){if(r)throw new TypeError("Generator is already executing.");for(;s&&(s=0,f[0]&&(n=0)),n;)try{if(r=1,a&&(i=f[0]&2?a.return:f[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,f[1])).done)return i;switch(a=0,i&&(f=[f[0]&2,i.value]),f[0]){case 0:case 1:i=f;break;case 4:return n.label++,{value:f[1],done:!1};case 5:n.label++,a=f[1],f=[0];continue;case 7:f=n.ops.pop(),n.trys.pop();continue;default:if(i=n.trys,!(i=i.length>0&&i[i.length-1])&&(f[0]===6||f[0]===2)){n=0;continue}if(f[0]===3&&(!i||f[1]>i[0]&&f[1]<i[3])){n.label=f[1];break}if(f[0]===6&&n.label<i[1]){n.label=i[1],i=f;break}if(i&&n.label<i[2]){n.label=i[2],n.ops.push(f);break}i[2]&&n.ops.pop(),n.trys.pop();continue}f=e.call(t,n)}catch(p){f=[6,p],a=0}finally{r=i=0}if(f[0]&5)throw f[1];return{value:f[0]?f[1]:void 0,done:!0}}}function Oa(t){var e=typeof Symbol=="function"&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function Na(t,e){var n=typeof Symbol=="function"&&t[Symbol.iterator];if(!n)return t;var r=n.call(t),a,i=[],s;try{for(;(e===void 0||e-- >0)&&!(a=r.next()).done;)i.push(a.value)}catch(o){s={error:o}}finally{try{a&&!a.done&&(n=r.return)&&n.call(r)}finally{if(s)throw s.error}}return i}function Va(t,e,n){if(arguments.length===2)for(var r=0,a=e.length,i;r<a;r++)(i||!(r in e))&&(i||(i=Array.prototype.slice.call(e,0,r)),i[r]=e[r]);return t.concat(i||Array.prototype.slice.call(e))}function ga(t){return this instanceof ga?(this.v=t,this):new ga(t)}function R3(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r=n.apply(t,e||[]),a,i=[];return a=Object.create((typeof AsyncIterator=="function"?AsyncIterator:Object).prototype),o("next"),o("throw"),o("return",s),a[Symbol.asyncIterator]=function(){return this},a;function s(T){return function(k){return Promise.resolve(k).then(T,g)}}function o(T,k){r[T]&&(a[T]=function(M){return new Promise(function(O,V){i.push([T,M,O,V])>1||d(T,M)})},k&&(a[T]=k(a[T])))}function d(T,k){try{f(r[T](k))}catch(M){P(i[0][3],M)}}function f(T){T.value instanceof ga?Promise.resolve(T.value.v).then(p,g):P(i[0][2],T)}function p(T){d("next",T)}function g(T){d("throw",T)}function P(T,k){T(k),i.shift(),i.length&&d(i[0][0],i[0][1])}}function B3(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=t[Symbol.asyncIterator],n;return e?e.call(t):(t=typeof Oa=="function"?Oa(t):t[Symbol.iterator](),n={},r("next"),r("throw"),r("return"),n[Symbol.asyncIterator]=function(){return this},n);function r(i){n[i]=t[i]&&function(s){return new Promise(function(o,d){s=t[i](s),a(o,d,s.done,s.value)})}}function a(i,s,o,d){Promise.resolve(d).then(function(f){i({value:f,done:o})},s)}}function it(t){return typeof t=="function"}function Nd(t){var e=function(r){Error.call(r),r.stack=new Error().stack},n=t(e);return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n}var zo=Nd(function(t){return function(e){t(this),this.message=e?e.length+` errors occurred during unsubscription:
`+e.map(function(n,r){return r+1+") "+n.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=e}});function ws(t,e){if(t){var n=t.indexOf(e);0<=n&&t.splice(n,1)}}var Zn=function(){function t(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._finalizers=null}return t.prototype.unsubscribe=function(){var e,n,r,a,i;if(!this.closed){this.closed=!0;var s=this._parentage;if(s)if(this._parentage=null,Array.isArray(s))try{for(var o=Oa(s),d=o.next();!d.done;d=o.next()){var f=d.value;f.remove(this)}}catch(M){e={error:M}}finally{try{d&&!d.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}else s.remove(this);var p=this.initialTeardown;if(it(p))try{p()}catch(M){i=M instanceof zo?M.errors:[M]}var g=this._finalizers;if(g){this._finalizers=null;try{for(var P=Oa(g),T=P.next();!T.done;T=P.next()){var k=T.value;try{Ju(k)}catch(M){i=i??[],M instanceof zo?i=Va(Va([],Na(i)),Na(M.errors)):i.push(M)}}}catch(M){r={error:M}}finally{try{T&&!T.done&&(a=P.return)&&a.call(P)}finally{if(r)throw r.error}}}if(i)throw new zo(i)}},t.prototype.add=function(e){var n;if(e&&e!==this)if(this.closed)Ju(e);else{if(e instanceof t){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=(n=this._finalizers)!==null&&n!==void 0?n:[]).push(e)}},t.prototype._hasParent=function(e){var n=this._parentage;return n===e||Array.isArray(n)&&n.includes(e)},t.prototype._addParent=function(e){var n=this._parentage;this._parentage=Array.isArray(n)?(n.push(e),n):n?[n,e]:e},t.prototype._removeParent=function(e){var n=this._parentage;n===e?this._parentage=null:Array.isArray(n)&&ws(n,e)},t.prototype.remove=function(e){var n=this._finalizers;n&&ws(n,e),e instanceof t&&e._removeParent(this)},t.EMPTY=function(){var e=new t;return e.closed=!0,e}(),t}(),Kh=Zn.EMPTY;function Yh(t){return t instanceof Zn||t&&"closed"in t&&it(t.remove)&&it(t.add)&&it(t.unsubscribe)}function Ju(t){it(t)?t():t.unsubscribe()}var Jh={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},A3={setTimeout:function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];return setTimeout.apply(void 0,Va([t,e],Na(n)))},clearTimeout:function(t){return clearTimeout(t)},delegate:void 0};function _h(t){A3.setTimeout(function(){throw t})}function _u(){}function os(t){t()}var Vd=function(t){Yt(e,t);function e(n){var r=t.call(this)||this;return r.isStopped=!1,n?(r.destination=n,Yh(n)&&n.add(r)):r.destination=X3,r}return e.create=function(n,r,a){return new Ps(n,r,a)},e.prototype.next=function(n){this.isStopped||this._next(n)},e.prototype.error=function(n){this.isStopped||(this.isStopped=!0,this._error(n))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(n){this.destination.next(n)},e.prototype._error=function(n){try{this.destination.error(n)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(Zn),C3=Function.prototype.bind;function Ho(t,e){return C3.call(t,e)}var j3=function(){function t(e){this.partialObserver=e}return t.prototype.next=function(e){var n=this.partialObserver;if(n.next)try{n.next(e)}catch(r){Fi(r)}},t.prototype.error=function(e){var n=this.partialObserver;if(n.error)try{n.error(e)}catch(r){Fi(r)}else Fi(e)},t.prototype.complete=function(){var e=this.partialObserver;if(e.complete)try{e.complete()}catch(n){Fi(n)}},t}(),Ps=function(t){Yt(e,t);function e(n,r,a){var i=t.call(this)||this,s;if(it(n)||!n)s={next:n??void 0,error:r??void 0,complete:a??void 0};else{var o;i&&Jh.useDeprecatedNextContext?(o=Object.create(n),o.unsubscribe=function(){return i.unsubscribe()},s={next:n.next&&Ho(n.next,o),error:n.error&&Ho(n.error,o),complete:n.complete&&Ho(n.complete,o)}):s=n}return i.destination=new j3(s),i}return e}(Vd);function Fi(t){_h(t)}function U3(t){throw t}var X3={closed:!0,next:_u,error:U3,complete:_u},Id=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function ua(t){return t}function D3(t){return t.length===0?ua:t.length===1?t[0]:function(e){return t.reduce(function(n,r){return r(n)},e)}}var mt=function(){function t(e){e&&(this._subscribe=e)}return t.prototype.lift=function(e){var n=new t;return n.source=this,n.operator=e,n},t.prototype.subscribe=function(e,n,r){var a=this,i=q3(e)?e:new Ps(e,n,r);return os(function(){var s=a,o=s.operator,d=s.source;i.add(o?o.call(i,d):d?a._subscribe(i):a._trySubscribe(i))}),i},t.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(n){e.error(n)}},t.prototype.forEach=function(e,n){var r=this;return n=Qu(n),new n(function(a,i){var s=new Ps({next:function(o){try{e(o)}catch(d){i(d),s.unsubscribe()}},error:i,complete:a});r.subscribe(s)})},t.prototype._subscribe=function(e){var n;return(n=this.source)===null||n===void 0?void 0:n.subscribe(e)},t.prototype[Id]=function(){return this},t.prototype.pipe=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return D3(e)(this)},t.prototype.toPromise=function(e){var n=this;return e=Qu(e),new e(function(r,a){var i;n.subscribe(function(s){return i=s},function(s){return a(s)},function(){return r(i)})})},t.create=function(e){return new t(e)},t}();function Qu(t){var e;return(e=t??Jh.Promise)!==null&&e!==void 0?e:Promise}function F3(t){return t&&it(t.next)&&it(t.error)&&it(t.complete)}function q3(t){return t&&t instanceof Vd||F3(t)&&Yh(t)}function Qh(t){return it(t==null?void 0:t.lift)}function Mt(t){return function(e){if(Qh(e))return e.lift(function(n){try{return t(n,this)}catch(r){this.error(r)}});throw new TypeError("Unable to lift unknown Observable type")}}function Pt(t,e,n,r,a){return new Z3(t,e,n,r,a)}var Z3=function(t){Yt(e,t);function e(n,r,a,i,s,o){var d=t.call(this,n)||this;return d.onFinalize=s,d.shouldUnsubscribe=o,d._next=r?function(f){try{r(f)}catch(p){n.error(p)}}:t.prototype._next,d._error=i?function(f){try{i(f)}catch(p){n.error(p)}finally{this.unsubscribe()}}:t.prototype._error,d._complete=a?function(){try{a()}catch(f){n.error(f)}finally{this.unsubscribe()}}:t.prototype._complete,d}return e.prototype.unsubscribe=function(){var n;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var r=this.closed;t.prototype.unsubscribe.call(this),!r&&((n=this.onFinalize)===null||n===void 0||n.call(this))}},e}(Vd);function Ed(){return Mt(function(t,e){var n=null;t._refCount++;var r=Pt(e,void 0,void 0,void 0,function(){if(!t||t._refCount<=0||0<--t._refCount){n=null;return}var a=t._connection,i=n;n=null,a&&(!i||a===i)&&a.unsubscribe(),e.unsubscribe()});t.subscribe(r),r.closed||(n=t.connect())})}var W3=function(t){Yt(e,t);function e(n,r){var a=t.call(this)||this;return a.source=n,a.subjectFactory=r,a._subject=null,a._refCount=0,a._connection=null,Qh(n)&&(a.lift=n.lift),a}return e.prototype._subscribe=function(n){return this.getSubject().subscribe(n)},e.prototype.getSubject=function(){var n=this._subject;return(!n||n.isStopped)&&(this._subject=this.subjectFactory()),this._subject},e.prototype._teardown=function(){this._refCount=0;var n=this._connection;this._subject=this._connection=null,n==null||n.unsubscribe()},e.prototype.connect=function(){var n=this,r=this._connection;if(!r){r=this._connection=new Zn;var a=this.getSubject();r.add(this.source.subscribe(Pt(a,void 0,function(){n._teardown(),a.complete()},function(i){n._teardown(),a.error(i)},function(){return n._teardown()}))),r.closed&&(this._connection=null,r=Zn.EMPTY)}return r},e.prototype.refCount=function(){return Ed()(this)},e}(mt),G3=Nd(function(t){return function(){t(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),Gs=function(t){Yt(e,t);function e(){var n=t.call(this)||this;return n.closed=!1,n.currentObservers=null,n.observers=[],n.isStopped=!1,n.hasError=!1,n.thrownError=null,n}return e.prototype.lift=function(n){var r=new $u(this,this);return r.operator=n,r},e.prototype._throwIfClosed=function(){if(this.closed)throw new G3},e.prototype.next=function(n){var r=this;os(function(){var a,i;if(r._throwIfClosed(),!r.isStopped){r.currentObservers||(r.currentObservers=Array.from(r.observers));try{for(var s=Oa(r.currentObservers),o=s.next();!o.done;o=s.next()){var d=o.value;d.next(n)}}catch(f){a={error:f}}finally{try{o&&!o.done&&(i=s.return)&&i.call(s)}finally{if(a)throw a.error}}}})},e.prototype.error=function(n){var r=this;os(function(){if(r._throwIfClosed(),!r.isStopped){r.hasError=r.isStopped=!0,r.thrownError=n;for(var a=r.observers;a.length;)a.shift().error(n)}})},e.prototype.complete=function(){var n=this;os(function(){if(n._throwIfClosed(),!n.isStopped){n.isStopped=!0;for(var r=n.observers;r.length;)r.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var n;return((n=this.observers)===null||n===void 0?void 0:n.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(n){return this._throwIfClosed(),t.prototype._trySubscribe.call(this,n)},e.prototype._subscribe=function(n){return this._throwIfClosed(),this._checkFinalizedStatuses(n),this._innerSubscribe(n)},e.prototype._innerSubscribe=function(n){var r=this,a=this,i=a.hasError,s=a.isStopped,o=a.observers;return i||s?Kh:(this.currentObservers=null,o.push(n),new Zn(function(){r.currentObservers=null,ws(o,n)}))},e.prototype._checkFinalizedStatuses=function(n){var r=this,a=r.hasError,i=r.thrownError,s=r.isStopped;a?n.error(i):s&&n.complete()},e.prototype.asObservable=function(){var n=new mt;return n.source=this,n},e.create=function(n,r){return new $u(n,r)},e}(mt),$u=function(t){Yt(e,t);function e(n,r){var a=t.call(this)||this;return a.destination=n,a.source=r,a}return e.prototype.next=function(n){var r,a;(a=(r=this.destination)===null||r===void 0?void 0:r.next)===null||a===void 0||a.call(r,n)},e.prototype.error=function(n){var r,a;(a=(r=this.destination)===null||r===void 0?void 0:r.error)===null||a===void 0||a.call(r,n)},e.prototype.complete=function(){var n,r;(r=(n=this.destination)===null||n===void 0?void 0:n.complete)===null||r===void 0||r.call(n)},e.prototype._subscribe=function(n){var r,a;return(a=(r=this.source)===null||r===void 0?void 0:r.subscribe(n))!==null&&a!==void 0?a:Kh},e}(Gs),mi=function(t){Yt(e,t);function e(n){var r=t.call(this)||this;return r._value=n,r}return Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(n){var r=t.prototype._subscribe.call(this,n);return!r.closed&&n.next(this._value),r},e.prototype.getValue=function(){var n=this,r=n.hasError,a=n.thrownError,i=n._value;if(r)throw a;return this._throwIfClosed(),i},e.prototype.next=function(n){t.prototype.next.call(this,this._value=n)},e}(Gs),zd={now:function(){return(zd.delegate||Date).now()},delegate:void 0},K3=function(t){Yt(e,t);function e(n,r,a){n===void 0&&(n=1/0),r===void 0&&(r=1/0),a===void 0&&(a=zd);var i=t.call(this)||this;return i._bufferSize=n,i._windowTime=r,i._timestampProvider=a,i._buffer=[],i._infiniteTimeWindow=!0,i._infiniteTimeWindow=r===1/0,i._bufferSize=Math.max(1,n),i._windowTime=Math.max(1,r),i}return e.prototype.next=function(n){var r=this,a=r.isStopped,i=r._buffer,s=r._infiniteTimeWindow,o=r._timestampProvider,d=r._windowTime;a||(i.push(n),!s&&i.push(o.now()+d)),this._trimBuffer(),t.prototype.next.call(this,n)},e.prototype._subscribe=function(n){this._throwIfClosed(),this._trimBuffer();for(var r=this._innerSubscribe(n),a=this,i=a._infiniteTimeWindow,s=a._buffer,o=s.slice(),d=0;d<o.length&&!n.closed;d+=i?1:2)n.next(o[d]);return this._checkFinalizedStatuses(n),r},e.prototype._trimBuffer=function(){var n=this,r=n._bufferSize,a=n._timestampProvider,i=n._buffer,s=n._infiniteTimeWindow,o=(s?1:2)*r;if(r<1/0&&o<i.length&&i.splice(0,i.length-o),!s){for(var d=a.now(),f=0,p=1;p<i.length&&i[p]<=d;p+=2)f=p;f&&i.splice(0,f+1)}},e}(Gs),Y3=function(t){Yt(e,t);function e(n,r){return t.call(this)||this}return e.prototype.schedule=function(n,r){return this},e}(Zn),el={setInterval:function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];return setInterval.apply(void 0,Va([t,e],Na(n)))},clearInterval:function(t){return clearInterval(t)},delegate:void 0},J3=function(t){Yt(e,t);function e(n,r){var a=t.call(this,n,r)||this;return a.scheduler=n,a.work=r,a.pending=!1,a}return e.prototype.schedule=function(n,r){var a;if(r===void 0&&(r=0),this.closed)return this;this.state=n;var i=this.id,s=this.scheduler;return i!=null&&(this.id=this.recycleAsyncId(s,i,r)),this.pending=!0,this.delay=r,this.id=(a=this.id)!==null&&a!==void 0?a:this.requestAsyncId(s,this.id,r),this},e.prototype.requestAsyncId=function(n,r,a){return a===void 0&&(a=0),el.setInterval(n.flush.bind(n,this),a)},e.prototype.recycleAsyncId=function(n,r,a){if(a===void 0&&(a=0),a!=null&&this.delay===a&&this.pending===!1)return r;r!=null&&el.clearInterval(r)},e.prototype.execute=function(n,r){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var a=this._execute(n,r);if(a)return a;this.pending===!1&&this.id!=null&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(n,r){var a=!1,i;try{this.work(n)}catch(s){a=!0,i=s||new Error("Scheduled action threw falsy error")}if(a)return this.unsubscribe(),i},e.prototype.unsubscribe=function(){if(!this.closed){var n=this,r=n.id,a=n.scheduler,i=a.actions;this.work=this.state=this.scheduler=null,this.pending=!1,ws(i,this),r!=null&&(this.id=this.recycleAsyncId(a,r,null)),this.delay=null,t.prototype.unsubscribe.call(this)}},e}(Y3),_3=1,Lo,Ec={};function tl(t){return t in Ec?(delete Ec[t],!0):!1}var $h={setImmediate:function(t){var e=_3++;return Ec[e]=!0,Lo||(Lo=Promise.resolve()),Lo.then(function(){return tl(e)&&t()}),e},clearImmediate:function(t){tl(t)}},Q3=$h.setImmediate,$3=$h.clearImmediate,nl={setImmediate:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return Q3.apply(void 0,Va([],Na(t)))},clearImmediate:function(t){return $3(t)},delegate:void 0},e8=function(t){Yt(e,t);function e(n,r){var a=t.call(this,n,r)||this;return a.scheduler=n,a.work=r,a}return e.prototype.requestAsyncId=function(n,r,a){return a===void 0&&(a=0),a!==null&&a>0?t.prototype.requestAsyncId.call(this,n,r,a):(n.actions.push(this),n._scheduled||(n._scheduled=nl.setImmediate(n.flush.bind(n,void 0))))},e.prototype.recycleAsyncId=function(n,r,a){var i;if(a===void 0&&(a=0),a!=null?a>0:this.delay>0)return t.prototype.recycleAsyncId.call(this,n,r,a);var s=n.actions;r!=null&&((i=s[s.length-1])===null||i===void 0?void 0:i.id)!==r&&(nl.clearImmediate(r),n._scheduled===r&&(n._scheduled=void 0))},e}(J3),rl=function(){function t(e,n){n===void 0&&(n=t.now),this.schedulerActionCtor=e,this.now=n}return t.prototype.schedule=function(e,n,r){return n===void 0&&(n=0),new this.schedulerActionCtor(this,e).schedule(r,n)},t.now=zd.now,t}(),t8=function(t){Yt(e,t);function e(n,r){r===void 0&&(r=rl.now);var a=t.call(this,n,r)||this;return a.actions=[],a._active=!1,a}return e.prototype.flush=function(n){var r=this.actions;if(this._active){r.push(n);return}var a;this._active=!0;do if(a=n.execute(n.state,n.delay))break;while(n=r.shift());if(this._active=!1,a){for(;n=r.shift();)n.unsubscribe();throw a}},e}(rl),n8=function(t){Yt(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e.prototype.flush=function(n){this._active=!0;var r=this._scheduled;this._scheduled=void 0;var a=this.actions,i;n=n||a.shift();do if(i=n.execute(n.state,n.delay))break;while((n=a[0])&&n.id===r&&a.shift());if(this._active=!1,i){for(;(n=a[0])&&n.id===r&&a.shift();)n.unsubscribe();throw i}},e}(t8),r8=new n8(e8),Ii=new mt(function(t){return t.complete()});function a8(t){return t&&it(t.schedule)}function ep(t){return t[t.length-1]}function i8(t){return it(ep(t))?t.pop():void 0}function Ks(t){return a8(ep(t))?t.pop():void 0}var tp=function(t){return t&&typeof t.length=="number"&&typeof t!="function"};function np(t){return it(t==null?void 0:t.then)}function rp(t){return it(t[Id])}function ap(t){return Symbol.asyncIterator&&it(t==null?void 0:t[Symbol.asyncIterator])}function ip(t){return new TypeError("You provided "+(t!==null&&typeof t=="object"?"an invalid object":"'"+t+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function s8(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var sp=s8();function op(t){return it(t==null?void 0:t[sp])}function cp(t){return R3(this,arguments,function(){var e,n,r,a;return Gh(this,function(i){switch(i.label){case 0:e=t.getReader(),i.label=1;case 1:i.trys.push([1,,9,10]),i.label=2;case 2:return[4,ga(e.read())];case 3:return n=i.sent(),r=n.value,a=n.done,a?[4,ga(void 0)]:[3,5];case 4:return[2,i.sent()];case 5:return[4,ga(r)];case 6:return[4,i.sent()];case 7:return i.sent(),[3,2];case 8:return[3,10];case 9:return e.releaseLock(),[7];case 10:return[2]}})})}function dp(t){return it(t==null?void 0:t.getReader)}function br(t){if(t instanceof mt)return t;if(t!=null){if(rp(t))return o8(t);if(tp(t))return c8(t);if(np(t))return d8(t);if(ap(t))return up(t);if(op(t))return u8(t);if(dp(t))return l8(t)}throw ip(t)}function o8(t){return new mt(function(e){var n=t[Id]();if(it(n.subscribe))return n.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function c8(t){return new mt(function(e){for(var n=0;n<t.length&&!e.closed;n++)e.next(t[n]);e.complete()})}function d8(t){return new mt(function(e){t.then(function(n){e.closed||(e.next(n),e.complete())},function(n){return e.error(n)}).then(null,_h)})}function u8(t){return new mt(function(e){var n,r;try{for(var a=Oa(t),i=a.next();!i.done;i=a.next()){var s=i.value;if(e.next(s),e.closed)return}}catch(o){n={error:o}}finally{try{i&&!i.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}e.complete()})}function up(t){return new mt(function(e){f8(t,e).catch(function(n){return e.error(n)})})}function l8(t){return up(cp(t))}function f8(t,e){var n,r,a,i;return L3(this,void 0,void 0,function(){var s,o;return Gh(this,function(d){switch(d.label){case 0:d.trys.push([0,5,6,11]),n=B3(t),d.label=1;case 1:return[4,n.next()];case 2:if(r=d.sent(),!!r.done)return[3,4];if(s=r.value,e.next(s),e.closed)return[2];d.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return o=d.sent(),a={error:o},[3,11];case 6:return d.trys.push([6,,9,10]),r&&!r.done&&(i=n.return)?[4,i.call(n)]:[3,8];case 7:d.sent(),d.label=8;case 8:return[3,10];case 9:if(a)throw a.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function lr(t,e,n,r,a){r===void 0&&(r=0),a===void 0&&(a=!1);var i=e.schedule(function(){n(),a?t.add(this.schedule(null,r)):this.unsubscribe()},r);if(t.add(i),!a)return i}function lp(t,e){return e===void 0&&(e=0),Mt(function(n,r){n.subscribe(Pt(r,function(a){return lr(r,t,function(){return r.next(a)},e)},function(){return lr(r,t,function(){return r.complete()},e)},function(a){return lr(r,t,function(){return r.error(a)},e)}))})}function fp(t,e){return e===void 0&&(e=0),Mt(function(n,r){r.add(t.schedule(function(){return n.subscribe(r)},e))})}function h8(t,e){return br(t).pipe(fp(e),lp(e))}function p8(t,e){return br(t).pipe(fp(e),lp(e))}function m8(t,e){return new mt(function(n){var r=0;return e.schedule(function(){r===t.length?n.complete():(n.next(t[r++]),n.closed||this.schedule())})})}function b8(t,e){return new mt(function(n){var r;return lr(n,e,function(){r=t[sp](),lr(n,e,function(){var a,i,s;try{a=r.next(),i=a.value,s=a.done}catch(o){n.error(o);return}s?n.complete():n.next(i)},0,!0)}),function(){return it(r==null?void 0:r.return)&&r.return()}})}function hp(t,e){if(!t)throw new Error("Iterable cannot be null");return new mt(function(n){lr(n,e,function(){var r=t[Symbol.asyncIterator]();lr(n,e,function(){r.next().then(function(a){a.done?n.complete():n.next(a.value)})},0,!0)})})}function y8(t,e){return hp(cp(t),e)}function x8(t,e){if(t!=null){if(rp(t))return h8(t,e);if(tp(t))return m8(t,e);if(np(t))return p8(t,e);if(ap(t))return hp(t,e);if(op(t))return b8(t,e);if(dp(t))return y8(t,e)}throw ip(t)}function kn(t,e){return e?x8(t,e):br(t)}function D(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=Ks(t);return kn(t,n)}var Hd=Nd(function(t){return function(){t(this),this.name="EmptyError",this.message="no elements in sequence"}});function $t(t,e){return new Promise(function(n,r){var a=new Ps({next:function(i){n(i),a.unsubscribe()},error:r,complete:function(){r(new Hd)}});t.subscribe(a)})}function U(t,e){return Mt(function(n,r){var a=0;n.subscribe(Pt(r,function(i){r.next(t.call(e,i,a++))}))})}var g8=Array.isArray;function v8(t,e){return g8(e)?t.apply(void 0,Va([],Na(e))):t(e)}function w8(t){return U(function(e){return v8(t,e)})}var P8=Array.isArray,M8=Object.getPrototypeOf,T8=Object.prototype,S8=Object.keys;function k8(t){if(t.length===1){var e=t[0];if(P8(e))return{args:e,keys:null};if(O8(e)){var n=S8(e);return{args:n.map(function(r){return e[r]}),keys:n}}}return{args:t,keys:null}}function O8(t){return t&&typeof t=="object"&&M8(t)===T8}function N8(t,e){return t.reduce(function(n,r,a){return n[r]=e[a],n},{})}function ne(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=Ks(t),r=i8(t),a=k8(t),i=a.args,s=a.keys;if(i.length===0)return kn([],n);var o=new mt(V8(i,n,s?function(d){return N8(s,d)}:ua));return r?o.pipe(w8(r)):o}function V8(t,e,n){return n===void 0&&(n=ua),function(r){al(e,function(){for(var a=t.length,i=new Array(a),s=a,o=a,d=function(p){al(e,function(){var g=kn(t[p],e),P=!1;g.subscribe(Pt(r,function(T){i[p]=T,P||(P=!0,o--),o||r.next(n(i.slice()))},function(){--s||r.complete()}))},r)},f=0;f<a;f++)d(f)},r)}}function al(t,e,n){t?lr(n,t,e):e()}function I8(t,e,n,r,a,i,s,o){var d=[],f=0,p=0,g=!1,P=function(){g&&!d.length&&!f&&e.complete()},T=function(M){return f<r?k(M):d.push(M)},k=function(M){f++;var O=!1;br(n(M,p++)).subscribe(Pt(e,function(V){e.next(V)},function(){O=!0},void 0,function(){if(O)try{f--;for(var V=function(){var N=d.shift();s||k(N)};d.length&&f<r;)V();P()}catch(N){e.error(N)}}))};return t.subscribe(Pt(e,T,function(){g=!0,P()})),function(){}}function Ys(t,e,n){return n===void 0&&(n=1/0),it(e)?Ys(function(r,a){return U(function(i,s){return e(r,i,a,s)})(br(t(r,a)))},n):(typeof e=="number"&&(n=e),Mt(function(r,a){return I8(r,a,t,n)}))}function E8(t){return Ys(ua,t)}function z8(){return E8(1)}function il(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return z8()(kn(t,Ks(t)))}function Wn(t){return Mt(function(e,n){var r=null,a=!1,i;r=e.subscribe(Pt(n,void 0,void 0,function(s){i=br(t(s,Wn(t)(e))),r?(r.unsubscribe(),r=null,i.subscribe(n)):a=!0})),a&&(r.unsubscribe(),r=null,i.subscribe(n))})}function H8(t,e,n,r,a){return function(i,s){var o=n,d=e,f=0;i.subscribe(Pt(s,function(p){var g=f++;d=o?t(d,p,g):(o=!0,p)},function(){o&&s.next(d),s.complete()}))}}function L8(t,e){return Mt(H8(t,e,arguments.length>=2,!1,!0))}var R8=function(t,e){return t.push(e),t};function Js(){return Mt(function(t,e){L8(R8,[])(t).subscribe(e)})}function B8(t){return new mt(function(e){return t.subscribe(e)})}var A8={connector:function(){return new Gs}};function C8(t,e){e===void 0&&(e=A8);var n=e.connector;return Mt(function(r,a){var i=n();br(t(B8(i))).subscribe(a),a.add(r.subscribe(i))})}function j8(t){return Mt(function(e,n){var r=!1;e.subscribe(Pt(n,function(a){r=!0,n.next(a)},function(){r||n.next(t),n.complete()}))})}function U8(t){return t<=0?function(){return Ii}:Mt(function(e,n){var r=0;e.subscribe(Pt(n,function(a){++r<=t&&(n.next(a),t<=r&&n.complete())}))})}function X8(t,e){return e===void 0&&(e=ua),t=t??D8,Mt(function(n,r){var a,i=!0;n.subscribe(Pt(r,function(s){var o=e(s);(i||!t(a,o))&&(i=!1,a=o,r.next(s))}))})}function D8(t,e){return t===e}function F8(t){return t===void 0&&(t=q8),Mt(function(e,n){var r=!1;e.subscribe(Pt(n,function(a){r=!0,n.next(a)},function(){return r?n.complete():n.error(t())}))})}function q8(){return new Hd}function sl(t,e){var n=arguments.length>=2;return function(r){return r.pipe(ua,U8(1),n?j8(e):F8(function(){return new Hd}))}}function Z8(t,e){var n=it(t)?t:function(){return t};return it(e)?C8(e,{connector:n}):function(r){return new W3(r,n)}}function pp(t,e,n,r){var a=it(n)?n:void 0;return function(i){return Z8(new K3(t,e,r),a)(i)}}function Ei(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=Ks(t);return Mt(function(r,a){(n?il(t,r,n):il(t,r)).subscribe(a)})}function $(t,e){return Mt(function(n,r){var a=null,i=0,s=!1,o=function(){return s&&!a&&r.complete()};n.subscribe(Pt(r,function(d){a==null||a.unsubscribe();var f=0,p=i++;br(t(d,p)).subscribe(a=Pt(r,function(g){return r.next(e?e(d,g,p,f++):g)},function(){a=null,o()}))},function(){s=!0,o()}))})}function pr(t,e,n){var r=it(t)||e||n?{next:t,error:e,complete:n}:t;return r?Mt(function(a,i){var s;(s=r.subscribe)===null||s===void 0||s.call(r);var o=!0;a.subscribe(Pt(i,function(d){var f;(f=r.next)===null||f===void 0||f.call(r,d),i.next(d)},function(){var d;o=!1,(d=r.complete)===null||d===void 0||d.call(r),i.complete()},function(d){var f;o=!1,(f=r.error)===null||f===void 0||f.call(r,d),i.error(d)},function(){var d,f;o&&((d=r.unsubscribe)===null||d===void 0||d.call(r)),(f=r.finalize)===null||f===void 0||f.call(r)}))}):ua}const W8=Kt("api/util");function G8(t,{block:{extrinsics:e,header:n}},r,a){for(const[i,s]of e.entries())if(s.hash.eq(t))return{blockNumber:$0(n.number)?n.number.unwrap():n.number,events:r.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eqn(i)),txIndex:i};if(a.isInBlock){const i=e.map(s=>s.hash.toHex());W8.warn(`block ${n.hash.toHex()}: Unable to find extrinsic ${t.toHex()} inside ${i.join(", ")}`)}return{}}function Ro(t){return fe(t.sign)}const K8={Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null},ol={metadata:{description:"Returns the metadata of a runtime",params:[],type:"OpaqueMetadata"}},Y8={Metadata:[{methods:{metadata_at_version:{description:"Returns the metadata at a given version.",params:[{name:"version",type:"u32"}],type:"Option<OpaqueMetadata>"},metadata_versions:{description:"Returns the supported metadata versions.",params:[],type:"Vec<u32>"},...ol},version:2},{methods:{...ol},version:1}]},J8={ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},_8={ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},Q8={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:K8}},$8={ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},e5={ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},cs={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},t5={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant:cs},n5={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:{...cs,args:"Vec<Type>"},EventMetadataV14:{...cs,args:"Vec<Type>"},FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:{...cs,args:"Vec<FunctionArgumentMetadataV14>"},ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"},r5={CustomMetadata15:{map:"BTreeMap<Text, CustomValueMetadata15>"},CustomValueMetadata15:{type:"SiLookupTypeId",value:"Bytes"},ExtrinsicMetadataV15:{version:"u8",addressType:"SiLookupTypeId",callType:"SiLookupTypeId",signatureType:"SiLookupTypeId",extraType:"SiLookupTypeId",signedExtensions:"Vec<SignedExtensionMetadataV14>"},OuterEnums15:{callType:"SiLookupTypeId",eventType:"SiLookupTypeId",errorType:"SiLookupTypeId"},PalletMetadataV15:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8",docs:"Vec<Text>"},RuntimeApiMetadataV15:{name:"Text",methods:"Vec<RuntimeApiMethodMetadataV15>",docs:"Vec<Text>"},RuntimeApiMethodMetadataV15:{name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<Text>"},RuntimeApiMethodParamMetadataV15:{name:"Text",type:"SiLookupTypeId"},MetadataV15:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV15>",extrinsic:"ExtrinsicMetadataV15",type:"SiLookupTypeId",apis:"Vec<RuntimeApiMetadataV15>",outerEnums:"OuterEnums15",custom:"CustomMetadata15"}},a5={rpc:{},runtime:Y8,types:{...J8,..._8,...Q8,...$8,...e5,...n5,...r5,ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV15",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV15",PalletCallMetadataLatest:"PalletCallMetadataV14",PalletConstantMetadataLatest:"PalletConstantMetadataV14",PalletErrorMetadataLatest:"PalletErrorMetadataV14",PalletEventMetadataLatest:"PalletEventMetadataV14",PalletMetadataLatest:"PalletMetadataV15",PalletStorageMetadataLatest:"PalletStorageMetadataV14",PortableType:"PortableTypeV14",RuntimeApiMetadataLatest:"RuntimeApiMetadataV15",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",StorageEntryMetadataLatest:"StorageEntryMetadataV14",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",OpaqueMetadata:"Opaque<Bytes>",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14",V15:"MetadataV15"}}}},ai={execute_block:{description:"Execute the given block.",params:[{name:"block",type:"Block"}],type:"Null"}},cl={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre3"}},Bo={initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}},dl={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersion"}},i5={...ai,initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"ExtrinsicInclusionMode"}},s5={Core:[{methods:{...dl,...i5},version:5},{methods:{...dl,...ai,...Bo},version:4},{methods:{version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre4"},...ai,...Bo},version:3},{methods:{...cl,...ai,...Bo},version:2},{methods:{initialise_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"},...cl,...ai},version:1}]},o5={Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},c5={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"},d5={rpc:{},runtime:s5,types:{...o5,AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId32",AccountId33:"GenericAccountId33",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeCall:"Call",RuntimeEvent:"Event",RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",SlotDuration:"u64",StorageData:"Bytes",StorageInfo:{palletName:"Bytes",storage_name:"Bytes",prefix:"Bytes",maxValues:"Option<u32>",maxSize:"Option<u32>"},StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionLongevity:"u64",TransactionTag:"Bytes",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",WeightV0:"u32",WeightV1:"u64",WeightV2:{refTime:"Compact<u64>",proofSize:"Compact<u64>"},Weight:"WeightV2",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)",ExtrinsicInclusionMode:{_enum:["AllExtrinsics","OnlyInherents"]}}},u5={Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}},l5={rpc:{},types:{...u5,...t5,SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"}},f5={AssetConversionApi:[{methods:{get_reserves:{description:"Get pool reserves",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"}],type:"Option<(Balance,Balance)>"},quote_price_exact_tokens_for_tokens:{description:"Quote price: exact tokens for tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"},quote_price_tokens_for_exact_tokens:{description:"Quote price: tokens for exact tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"}},version:1}]},h5={rpc:{},runtime:f5,types:{TAssetConversion:"Option<MultiLocation>"}},p5={AssetsApi:[{methods:{account_balances:{description:"Return the current set of authorities.",params:[{name:"account",type:"AccountId"}],type:"Vec<(u32, TAssetBalance)>"}},version:1}]},m5={rpc:{},runtime:p5,types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},b5={AuraApi:[{methods:{authorities:{description:"Return the current set of authorities.",params:[],type:"Vec<AuthorityId>"},slot_duration:{description:"Returns the slot duration for Aura.",params:[],type:"SlotDuration"}},version:1}]},y5={rpc:{},runtime:b5,types:{RawAuraPreDigest:{slotNumber:"u64"}}},x5={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}},g5={epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",isUnsafe:!0,params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},ul={current_epoch:{description:"Returns information regarding the current epoch.",params:[],type:"Epoch"},current_epoch_start:{description:"Returns the slot that started the current epoch.",params:[],type:"Slot"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the current epoch.",params:[{name:"slot",type:"Slot"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},next_epoch:{description:"Returns information regarding the next epoch (which was already previously announced).",params:[],type:"Epoch"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BabeEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},v5={BabeApi:[{methods:{configuration:{description:"Return the genesis configuration for BABE. The configuration is only read on genesis.",params:[],type:"BabeGenesisConfiguration"},...ul},version:2},{methods:{configuration:{description:"Return the configuration for BABE. Version 1.",params:[],type:"BabeGenesisConfigurationV1"},...ul},version:1}]},w5={rpc:g5,runtime:v5,types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeGenesisConfiguration:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",allowedSlots:"AllowedSlots"},BabeGenesisConfigurationV1:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",secondarySlots:"bool"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",Epoch:{epochIndex:"u64",startSlot:"Slot",duration:"u64",authorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Hash",config:"BabeEpochConfiguration"},EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},OpaqueKeyOwnershipProof:"Bytes",Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},P5={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}},M5={getFinalizedHead:{description:"Returns hash of the latest BEEFY finalized block as seen by this client.",params:[],type:"H256"},subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefyVersionedFinalityProof"}},Ao={beefy_genesis:{description:"Return the block number where BEEFY consensus is enabled/started",params:[],type:"Option<BlockNumber>"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"ValidatorSetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BeefyEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"},validator_set:{description:"Return the current active BEEFY validator set",params:[],type:"Option<ValidatorSet>"}},T5={authority_set_proof:{description:"Return the currently active BEEFY authority set proof.",params:[],type:"BeefyAuthoritySet"},next_authority_set_proof:{description:"Return the next/queued BEEFY authority set proof.",params:[],type:"BeefyNextAuthoritySet"}},S5={BeefyApi:[{methods:Ao,version:3},{methods:Ao,version:2},{methods:Ao,version:1}],BeefyMmrApi:[{methods:T5,version:1}]},k5={rpc:M5,runtime:S5,types:{BeefyAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefyEquivocationProof:{first:"BeefyVoteMessage",second:"BeefyVoteMessage"},BeefyCompactSignedCommitment:{commitment:"BeefyCommitment",signaturesFrom:"Vec<u8>",validatorSetLen:"u32",signaturesCompact:"Vec<EcdsaSignature>"},BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyVersionedFinalityProof:{_enum:{V0:"Null",V1:"BeefyCompactSignedCommitment"}},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"Vec<(BeefyPayloadId, Bytes)>",BeefyPayloadId:"[u8;2]",BeefyVoteMessage:{commitment:"BeefyCommitment",id:"AuthorityId",signature:"Signature"},MmrRootHash:"H256",ValidatorSetId:"u64",ValidatorSet:{validators:"Vec<AuthorityId>",id:"ValidatorSetId"}}},O5={Benchmark:[{methods:{benchmark_metadata:{description:"Get the benchmark metadata available for this runtime.",params:[{name:"extra",type:"bool"}],type:"(Vec<BenchmarkList>, Vec<StorageInfo>)"},dispatch_benchmark:{description:"Dispatch the given benchmark.",params:[{name:"config",type:"BenchmarkConfig"}],type:"Result<Vec<BenchmarkBatch>, Text>"}},version:1}]},N5={rpc:{},runtime:O5,types:{BenchmarkBatch:{pallet:"Text",instance:"Text",benchmark:"Text",results:"Vec<BenchmarkResult>"},BenchmarkConfig:{pallet:"Bytes",benchmark:"Bytes",selectedComponents:"Vec<(BenchmarkParameter, u32)>",verify:"bool",internalRepeats:"u32"},BenchmarkList:{pallet:"Bytes",instance:"Bytes",benchmarks:"Vec<BenchmarkMetadata>"},BenchmarkMetadata:{name:"Bytes",components:"Vec<(BenchmarkParameter, u32, u32)>"},BenchmarkParameter:{_enum:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]},BenchmarkResult:{components:"Vec<(BenchmarkParameter, u32)>",extrinsicTime:"u128",storageRootTime:"u128",reads:"u32",repeatReads:"u32",writes:"u32",repeatWrites:"u32",proofSize:"u32",benchKeys:"Vec<(Vec<u8>, u32, u32, bool)>"}}},Co={random_seed:{description:"Generate a random seed.",params:[],type:"Hash"}},ll={apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResultPre6"}},Ya={check_inherents:{description:"Check that the inherents are valid.",params:[{name:"block",type:"Block"},{name:"data",type:"InherentData"}],type:"CheckInherentsResult"},inherent_extrinsics:{description:"Generate inherent extrinsics.",params:[{name:"inherent",type:"InherentData"}],type:"Vec<Extrinsic>"}},qi={finalize_block:{description:"Finish the current block.",params:[],type:"Header"}},V5={BlockBuilder:[{methods:{apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResult"},...Ya,...qi},version:6},{methods:{...ll,...Ya,...qi},version:5},{methods:{...Co,...ll,...Ya,...qi},version:4},{methods:{...Co,...Ya,...qi},version:3},{methods:{finalise_block:{description:"Finish the current block.",params:[],type:"Header"},...Co,...Ya},version:2}]},I5={rpc:{},runtime:V5,types:{CheckInherentsResult:{okay:"bool",fatalError:"bool",errors:"InherentData"},InherentData:{data:"BTreeMap<InherentIdentifier, Bytes>"},InherentIdentifier:"[u8; 8]"}},E5={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},z5={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}},H5={call:{deprecated:"Use the runtime interface `api.call.contractsApi.call` instead",description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractExecResult"},getStorage:{deprecated:"Use the runtime interface `api.call.contractsApi.getStorage` instead",description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<Bytes>"},instantiate:{deprecated:"Use the runtime interface `api.call.contractsApi.instantiate` instead",description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequestV1"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractInstantiateResult"},rentProjection:{deprecated:"Not available in newer versions of the contracts interfaces",description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<BlockNumber>"},uploadCode:{deprecated:"Use the runtime interface `api.call.contractsApi.uploadCode` instead",description:"Upload new code without instantiating a contract from it",endpoint:"contracts_upload_code",params:[{name:"uploadRequest",type:"CodeUploadRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"CodeUploadResult"}},fl={get_storage:{description:"Query a given storage key in a given contract.",params:[{name:"address",type:"AccountId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},upload_code:{description:"Upload new code without instantiating a contract from it.",params:[{name:"origin",type:"AccountId"},{name:"code",type:"Bytes"},{name:"storageDepositLimit",type:"Option<Balance>"}],type:"CodeUploadResult"}},L5={ContractsApi:[{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResult"},...fl},version:2},{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResultU64"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResultU64"},...fl},version:1}]},R5={rpc:H5,runtime:L5,types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",CodeSource:{_enum:{Upload:"Bytes",Existing:"Hash"}},CodeUploadRequest:{origin:"AccountId",code:"Bytes",storageDepositLimit:"Option<Balance>"},CodeUploadResult:"Result<CodeUploadResultValue, DispatchError>",CodeUploadResultValue:{codeHash:"CodeHash",deposit:"Balance"},ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",storageDepositLimit:"Option<Balance>",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"ContractReturnFlags",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultOk:{flags:"ContractReturnFlags",data:"Bytes"},ContractExecResultResult:"Result<ContractExecResultOk, DispatchError>",ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"Weight",gasRequired:"Weight",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResultU64:{gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractCallFlags:{_set:{_bitLength:32,ForwardInput:1,CloneInput:2,TailCall:4,AllowReentry:8}},ContractReturnFlags:{_set:{_bitLength:32,Revert:1}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"ContractReturnFlags",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequestV1:{origin:"AccountId",value:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequestV2:{_fallback:"InstantiateRequestV1",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequest:{_fallback:"InstantiateRequestV2",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"CodeSource",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:"Result<InstantiateReturnValueTo267, Null>",ContractInstantiateResultTo299:"Result<InstantiateReturnValueOk, Null>",ContractInstantiateResult:{gasConsumed:"WeightV2",gasRequired:"WeightV2",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},ContractInstantiateResultU64:{_fallback:"ContractInstantiateResultTo299",gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValueOk:{result:"ExecReturnValue",accountId:"AccountId"},InstantiateReturnValue:"Result<InstantiateReturnValueOk, DispatchError>",InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",StorageDeposit:{_enum:{Refund:"Balance",Charge:"Balance"}},TombstoneContractInfo:"Hash",TrieId:"Bytes"}},B5=["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"],A5={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:B5},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}},C5={getBlockStats:{description:"Reexecute the specified `block_hash` and gather statistics while doing so",isUnsafe:!0,params:[{isHistoric:!0,name:"at",type:"Hash"}],type:"Option<BlockStats>"}},j5={rpc:C5,types:{BlockStats:{witnessLen:"u64",witnessCompactLen:"u64",blockLen:"u64",blockNumExtrinsics:"u64"}}},U5={AuthorityDiscoveryApi:[{methods:{authorities:{description:"Retrieve authority identifiers of the current and next authority set.",params:[],type:"Vec<AuthorityId>"}},version:1}]},X5={rpc:{},runtime:U5,types:{}},D5={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}},F5={createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{isOptional:!0,name:"parentHash",type:"BlockHash"}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{isOptional:!0,name:"justification",type:"Justification"}],type:"bool"}},q5={rpc:F5,types:{CreatedBlock:{_alias:{blockHash:"hash"},blockHash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},Z5={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmCallInfo:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCreateInfo:{exitReason:"ExitReason",value:"H160",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCallInfoV2:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmCreateInfoV2:{exitReason:"ExitReason",value:"H160",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},EvmWeightInfo:{refTimeLimit:"Option<u64>",proofSizeLimit:"Option<u64>",refTimeUsage:"Option<u64>",proofSizeUsage:"Option<u64>"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},W5={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},G5={FungiblesApi:[{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>"}},version:1},{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<XcmVersionedMultiAssets, FungiblesAccessError>"}},version:2}]},K5={rpc:{},runtime:G5,types:{FungiblesAccessError:{_enum:["AssetIdConversionFailed","AmountToBalanceConversionFailed"]}}},Y5={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},J5={GenesisBuilder:[{methods:{build_config:{description:"Build `RuntimeGenesisConfig` from a JSON blob not using any defaults and store it in the storage.",params:[{name:"json",type:"Vec<u8>"}],type:"Result<(), GenesisBuildErr>"},create_default_config:{description:"Creates the default `RuntimeGenesisConfig` and returns it as a JSON blob.",params:[],type:"Vec<u8>"}},version:1}]},_5={rpc:{},runtime:J5,types:{GenesisBuildErr:"Text"}},Q5={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}},$5={proveFinality:{description:"Prove finality for the given block number, returning the Justification for the last block in the set.",params:[{name:"blockNumber",type:"BlockNumber"}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},hl={generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"SetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},grandpa_authorities:{description:"Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.",params:[],type:"AuthorityList"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"GrandpaEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},ex={GrandpaApi:[{methods:{current_set_id:{description:"Get current GRANDPA authority set id.",params:[],type:"SetId"},...hl},version:3},{methods:hl,version:2}]},tx={rpc:$5,runtime:ex,types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},nx={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},rx={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Opaque<Bytes>",OpaquePeerId:"Opaque<Bytes>",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},ax={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}},ix={MixnetApi:[{methods:{current_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},maybe_register:{description:"Try to register a mixnode for the next session.",params:[{name:"session_index",type:"u32"},{name:"mixnode",type:"Mixnode"}],type:"bool"},prev_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},session_status:{description:"Get the index and phase of the current session.",params:[],type:"SessionStatus"}},version:1}]},sx={rpc:{},runtime:ix,types:{Mixnode:{externalAddresses:"Vec<Bytes>",kxPublic:"[u8; 32]",peerId:"[u8; 32]"},MixnodesErr:{_enum:{InsufficientRegistrations:{min:"u32",num:"u32"}}},SessionPhase:{_enum:["CoverToCurrent","RequestsToCurrent","CoverToPrev","DisconnectFromPrev"]},SessionStatus:{currentIndex:"u32",phase:"SessionPhase"}}},ox={generateProof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<u64>"},{isOptional:!0,name:"bestKnownBlockNumber",type:"u64"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafBatchProof"},root:{description:"Get the MMR root hash for the current best block.",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrHash"},verifyProof:{description:"Verify an MMR proof",params:[{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"},verifyProofStateless:{description:"Verify an MMR proof statelessly given an mmr_root",params:[{name:"root",type:"MmrHash"},{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"}},cx={generate_proof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<BlockNumber>"},{name:"bestKnownBlockNumber",type:"Option<BlockNumber>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},mmr_leaf_count:{description:"Return the number of MMR blocks in the chain.",params:[],type:"Result<U64, MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"}},dx={generate_batch_proof:{description:"Generate MMR proof for a series of leaves under given indices.",params:[{name:"leafIndices",type:"Vec<MmrLeafIndex>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},generate_proof:{description:"Generate MMR proof for a leaf under given index.",params:[{name:"leafIndex",type:"MmrLeafIndex"}],type:"Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_batch_proof:{description:"Verify MMR proof against on-chain MMR for a batch of leaves.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_batch_proof_stateless:{description:"Verify MMR proof against given root hash or a batch of leaves.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"}},ux={MmrApi:[{methods:cx,version:2},{methods:dx,version:1}]},lx={rpc:ox,runtime:ux,types:{MmrBatchProof:{leafIndices:"Vec<MmrLeafIndex>",leafCount:"MmrNodeIndex",items:"Vec<Hash>"},MmrEncodableOpaqueLeaf:"Bytes",MmrError:{_enum:["InvalidNumericOp","Push","GetRoot","Commit","GenerateProof","Verify","LeafNotFound"," PalletNotIncluded","InvalidLeafIndex","InvalidBestKnownBlock"]},MmrHash:"Hash",MmrLeafBatchProof:{blockHash:"BlockHash",leaves:"Bytes",proof:"Bytes"},MmrLeafIndex:"u64",MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"},MmrNodeIndex:"u64",MmrProof:{leafIndex:"MmrLeafIndex",leafCount:"MmrNodeIndex",items:"Vec<Hash>"}}},fx={NftsApi:[{methods:{attribute:{description:"An attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_attribute:{description:"A collection attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_owner:{description:"A collection owner",params:[{name:"collection",type:"NftCollectionId"}],type:"Option<AccountId>"},custom_attribute:{description:"A custom attribute",params:[{name:"account",type:"AccountId"},{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},owner:{description:"Collection owner",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"}],type:"Option<AccountId>"},system_attribute:{description:"System attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},version:1}]},hx={rpc:{},runtime:fx,types:{NftCollectionId:"u32",NftItemId:"u32"}},px={NominationPoolsApi:[{methods:{balance_to_points:{description:"Returns the equivalent points of `new_funds` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"newFunds",type:"Balance"}],type:"Balance"},pending_rewards:{description:"Returns the pending rewards for the given member.",params:[{name:"member",type:"AccountId"}],type:"Balance"},points_to_balance:{description:"Returns the equivalent balance of `points` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"points",type:"Balance"}],type:"Balance"}},version:1}]},mx={rpc:{},runtime:px,types:{NpApiError:{_enum:["MemberNotFound","OverflowInPendingRewards"]},NpPoolId:"u32"}},bx={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}},yx={DifficultyApi:[{methods:{difficulty:{description:"Return the target difficulty of the next block.",params:[],type:"Raw"}},version:1}],TimestampApi:[{methods:{timestamp:{description:"API necessary for timestamp-based difficulty adjustment algorithms.",params:[],type:"Moment"}},version:1}]},xx={rpc:{},runtime:yx,types:{}},gx={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},vx={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},wx={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}},Px={SessionKeys:[{methods:{decode_session_keys:{description:"Decode the given public session keys.",params:[{name:"encoded",type:"Bytes"}],type:"Option<Vec<(Bytes, KeyTypeId)>>"},generate_session_keys:{description:"Generate a set of session keys with optionally using the given seed.",params:[{name:"seed",type:"Option<Bytes>"}],type:"Bytes"}},version:1}]},Mx={BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"},Tx={rpc:{},runtime:Px,types:{...Mx,FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Bytes>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"}},Sx={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}},kx={StakingApi:[{methods:{nominations_quota:{description:"Returns the nominations quota for a nominator with a given balance.",params:[{name:"balance",type:"Balance"}],type:"u32"}},version:1}]},Ox={Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},Nx={CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"},Vx={rpc:{},runtime:kx,types:{...Ox,...Nx,ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{_fallback:"StakingLedgerTo223",stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}}},Ix={ValidateStatement:[{methods:{valdate_statement:{description:"Validate the statement.",params:[{name:"source",type:"StatementStoreStatementSource"},{name:"statement",type:"SpStatementStoreStatement"}],type:"Result<StatementStoreValidStatement, StatementStoreInvalidStatement>"}},version:1}]},Ex={rpc:{},runtime:Ix,types:{StatementStoreStatementSource:{_enum:["Chain","Network","Local"]},StatementStoreValidStatement:{maxCount:"u32",maxSize:"u32"},StatementStoreInvalidStatement:{_enum:["BadProof","NoProof","InternalError"]}}},zx={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}},Hx={genSyncSpec:{description:"Returns the json-serialized chainspec running the node, with a sync state.",endpoint:"sync_state_genSyncSpec",params:[{name:"raw",type:"bool"}],type:"Json"}},Lx={rpc:Hx,types:{}},Rx={accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},addLogFilter:{description:"Adds the supplied directives to the current log filter",isUnsafe:!0,params:[{name:"directives",type:"Text"}],type:"Null"},addReservedPeer:{description:"Adds a reserved peer",isUnsafe:!0,params:[{name:"peer",type:"Text"}],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",isUnsafe:!0,params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ApplyExtrinsicResult"},health:{description:"Return health status of the node",noErrorLog:!0,params:[],type:"Health"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},name:{description:"Retrieves the node name",params:[],type:"Text"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",isUnsafe:!0,params:[],type:"NetworkState"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},peers:{description:"Returns the currently connected peers",isUnsafe:!0,params:[],type:"Vec<PeerInfo>"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},removeReservedPeer:{description:"Remove a reserved peer",isUnsafe:!0,params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",isUnsafe:!0,params:[],type:"Null"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},version:{description:"Retrieves the version of the node",params:[],type:"Text"}},Bx={AccountNonceApi:[{methods:{account_nonce:{description:"The API to query account nonce (aka transaction index)",params:[{name:"accountId",type:"AccountId"}],type:"Index"}},version:1}]},Ax={rpc:Rx,runtime:Bx,types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ApplyExtrinsicResultPre6:"Result<DispatchOutcomePre6, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError",Exhausted:"Null",Corruption:"Null",Unavailable:"Null"}},DispatchErrorPre6:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorPre6First:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorModuleU8:{index:"u8",error:"u8"},DispatchErrorModuleU8a:{index:"u8",error:"[u8; 4]"},DispatchErrorModule:"DispatchErrorModuleU8a",DispatchErrorModulePre6:"DispatchErrorModuleU8",DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchOutcomePre6:"Result<(), DispatchErrorPre6>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null",BadSigner:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Unsupported","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},TransactionalError:{_enum:["LimitReached","NoLayer"]},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Option<Weight>",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},Cx={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},jx={rpc:{},types:{Multiplier:"Fixed128"}},Ux={TaggedTransactionQueue:[{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"},{name:"blockHash",type:"BlockHash"}],type:"TransactionValidity"}},version:3},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:2},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:1}]},Xx={rpc:{},runtime:Ux,types:{TransactionSource:{_enum:["InBlock","Local","External"]},TransactionValidity:"Result<ValidTransaction, TransactionValidityError>",ValidTransaction:{priority:"TransactionPriority",requires:"Vec<TransactionTag>",provides:"Vec<TransactionTag>",longevity:"TransactionLongevity",propagate:"bool"}}},Dx={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},Fx={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},qx={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},Zx={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},Wx={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},Gx={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},Kx={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}},Yx={CollectCollationInfo:[{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[{name:"header",type:"Header"}],type:"CollationInfo"}},version:2},{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[],type:"CollationInfoV1"}},version:1}]},Jx={CollationInfo:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber",headData:"HeadData"},CollationInfoV1:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber"},ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}},_x={rpc:{},runtime:Yx,types:Jx},Zi={methods:{best_finalized:{description:"Returns number and hash of the best finalized header known to the bridge module.",params:[],type:"(BlockNumber, Hash)"}},version:1},Qx={KusamaFinalityApi:[Zi],PolkadotFinalityApi:[Zi],RococoFinalityApi:[Zi],WestendFinalityApi:[Zi]},$x={rpc:{},runtime:Qx,types:{}},eg={HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}},vn={assumed_validation_data:{description:"Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.",params:[{name:"paraId",type:"ParaId"},{name:"hash",type:"Hash"}],type:"Option<(PersistedValidationData, ValidationCodeHash)>"},availability_cores:{description:"Yields information on all availability cores as relevant to the child block.",params:[],type:"Vec<CoreState>"},candidate_events:{description:"Get a vector of events concerning candidates that occurred within a block.",params:[],type:"Vec<CandidateEvent>"},candidate_pending_availability:{description:"Get the receipt of a candidate pending availability.",params:[{name:"paraId",type:"ParaId"}],type:"Option<CommittedCandidateReceipt>"},check_validation_outputs:{description:"Checks if the given validation outputs pass the acceptance criteria.",params:[{name:"paraId",type:"ParaId"},{name:"outputs",type:"CandidateCommitments"}],type:"bool"},dmq_contents:{description:"Get all the pending inbound messages in the downward message queue for a para.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundDownwardMessage>"},inbound_hrmp_channels_contents:{description:"Get the contents of all channels addressed to the given recipient.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundHrmpMessage>"},on_chain_votes:{description:"Scrape dispute relevant from on-chain, backing votes and resolved disputes.",params:[],type:"Option<ScrapedOnChainVotes>"},persisted_validation_data:{description:"Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<PersistedValidationData>"},session_index_for_child:{description:"Returns the session index expected at a child of the block.",params:[],type:"SessionIndex"},validation_code:{description:"Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCode>"},validation_code_by_hash:{description:"Get the validation code from its hash.",params:[{name:"hash",type:"ValidationCodeHash"}],type:"Option<ValidationCode>"},validator_groups:{description:"Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on",params:[],type:"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)"},validators:{description:"Get the current validators.",params:[],type:"Vec<ValidatorId>"}},En={pvfs_require_precheck:{description:"Returns code hashes of PVFs that require pre-checking by validators in the active set.",params:[],type:"Vec<ValidationCodeHash>"},session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<SessionInfo>"},submit_pvf_check_statement:{description:"Submits a PVF pre-checking statement into the transaction pool.",params:[{name:"stmt",type:"PvfCheckStatement"},{name:"signature",type:"ValidatorSignature"}],type:"Null"},validation_code_hash:{description:"Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCodeHash>"}},tr={disputes:{description:"Returns all onchain disputes.",params:[],type:"Vec<(SessionIndex, CandidateHash, DisputeState)>"}},Br={session_executor_params:{description:"Returns execution parameters for the session.",params:[{name:"sessionIndex",type:"SessionIndex"}],type:"Option<ExecutorParams>"}},fa={key_ownership_proof:{description:"Returns a merkle proof of a validator session key",params:[{name:"validatorId",type:"ValidatorId"}],type:"Option<OpaqueKeyOwnershipProof>"},submit_report_dispute_lost:{description:"Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session",params:[{name:"disputeProof",type:"DisputeProof"},{name:"keyOwnershipProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"},unapplied_slashes:{description:"Returns a list of validators that lost a past session dispute and need to be slashed",params:[],type:"Vec<(SessionIndex, CandidateHash, PendingSlashes)>"}},Ja={minimum_backing_votes:{description:"Get the minimum number of backing votes for a parachain candidate. This is a staging method! Do not use on production runtimes!",params:[],type:"u32"}},Wi={async_backing_params:{description:"Returns candidate's acceptance limitations for asynchronous backing for a relay parent",params:[],type:"AsyncBackingParams"},para_backing_state:{description:"Returns the state of parachain backing for a given para",params:[{name:"paraId",type:"ParaId"}],type:"Option<BackingState>"}},jo={disabled_validators:{description:"Returns a list of all disabled validators at the given block",params:[],type:"ValidatorIndex"}},pl={node_features:{description:"Get node features. This is a staging method! Do not use on production runtimes!",params:[],type:"NodeFeatures"}},tg={approval_voting_params:{description:"Approval voting configuration parameters",params:[],type:"ApprovalVotingParams"}},ng={ParachainHost:[{methods:{...vn,...En,...tr,...Br,...fa,...Ja,...Wi,...jo,...pl,...tg},version:10},{methods:{...vn,...En,...tr,...Br,...fa,...Ja,...Wi,...jo,...pl},version:9},{methods:{...vn,...En,...tr,...Br,...fa,...Ja,...Wi,...jo},version:8},{methods:{...vn,...En,...tr,...Br,...fa,...Ja,...Wi},version:7},{methods:{...vn,...En,...tr,...Br,...fa,...Ja},version:6},{methods:{...vn,...En,...tr,...Br,...fa},version:5},{methods:{...vn,...En,...tr,...Br},version:4},{methods:{...vn,...En,...tr},version:3},{methods:{...vn,...En},version:2},{methods:{session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<OldV1SessionInfo>"},...vn},version:1}]},ml={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},bl={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","ZeroFour","ZeroFive","ZeroSix","ZeroSeven","OneOne","OneTwo","OneThree","OneFour","OneFive","OneSix","OneSeven","TwoTwo","TwoThree","TwoFour","TwoFive","TwoSix","TwoSeven","ThreeThree","ThreeFour","ThreeFive","ThreeSix","ThreeSeven","FourFour","FourFive","FourSix","FourSeven","FiveFive","FiveSix","FiveSeven","SixSix","SixSeven","SevenSeven"]},rg={Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"},ag={...rg,AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange10:ml,SlotRange:bl,WinningData10:`[WinningDataEntry; ${ml._enum.length}]`,WinningData:`[WinningDataEntry; ${bl._enum.length}]`,WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData10:"Vec<WinnersDataTuple10>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple10:"(AccountId, ParaId, BalanceOf, SlotRange10)",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"},ig={ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},sg={ServiceQuality:{_enum:["Ordered","Fast"]}},og={DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExecutorParam:{_enum:{Phantom:"Null",MaxMemoryPages:"u32",StackLogicalMax:"u32",StackNativeMax:"u32",PrecheckingMaxMemory:"u64",PvfPrepTimeout:"(PvfPrepTimeoutKind, u64)",PvfExecTimeout:"(PvfExecTimeoutKind, u64)"}},ExecutorParamsHash:"Hash",ExecutorParams:"Vec<ExecutorParam>",ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",PvfExecTimeoutKind:{_enum:["Backing","Approval"]},PvfPrepTimeoutKind:{_enum:["Precheck","Lenient"]},ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}},cg={rpc:{},runtime:ng,types:{...sg,...og,...eg,...ig,...ag,AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},ApprovalVotingParams:{maxApprovalCoalesceCount:"u32"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AsyncBackingParams:{maxCandidateDepth:"u32",allowedAncestryLen:"u32"},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BackingState:{constraints:"Constraints",pendingAvailability:"Vec<CandidatePendingAvailability>"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateEvent:{_enum:{CandidateBacked:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateIncluded:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateTimedOut:"(CandidateReceipt, HeadData, CoreIndex)"}},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},Constraints:{minRelayParentNumber:"BlockNumber",maxPovSize:"u32",maxCodeSize:"u32",umpRemaining:"u32",umpRemainingBytes:"u32",maxUmpNumPerCandidate:"u32",dmpRemainingMessages:"Vec<BlockNumber>",hrmpInbound:"InboundHrmpLimitations",hrmpChannelsOut:"HashMap<ParaId, OutboundHrmpChannelLimitations>",maxHrmpNumPerCandidate:"u32",requiredParent:"HeadData",validationCodeHash:"ValidationCodeHash",upgradeRestriction:"Option<UpgradeRestriction>",futureValidationCode:"Option<(BlockNumber, ValidationCodeHash)>"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},CoreState:{_enum:{Occupied:"OccupiedCore",Scheduled:"ScheduledCore",Free:"Null"}},DisputeProof:{timeSlot:"DisputesTimeSlot",kind:"SlashingOffenceKind",validatorIndex:"ValidatorIndex",validatorId:"ValidatorId"},DisputesTimeSlot:{sessionIndex:"SessionIndex",candidateHash:"CandidateHash"},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GroupRotationInfo:{sessionStartBlock:"BlockNumber",groupRotationFrequency:"BlockNumber",now:"BlockNumber"},GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpLimitations:{validWatermarks:"Vec<BlockNumber>"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",NodeFeatures:"BitVec",OccupiedCore:{nextUpOnAvailable:"Option<ScheduledCore>",occupiedSince:"BlockNumber",timeOutAt:"BlockNumber",nextUpOnTimeOut:"Option<ScheduledCore>",availability:"BitVec",groupResponsible:"GroupIndex",candidateHash:"CandidateHash",candidateDescriptor:"CandidateDescriptor"},OccupiedCoreAssumption:{_enum:["Included,","TimedOut","Free"]},OutboundHrmpChannelLimitations:{bytesRemaining:"u32",messagesRemaining:"u32"},OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},PendingSlashes:{_alias:{slashKeys:"keys"},slashKeys:"BTreeMap<ValidatorIndex, ValidatorId>",kind:"SlashingOffenceKind"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},PvfCheckStatement:{accept:"bool",subject:"ValidationCodeHash",sessionIndex:"SessionIndex",validatorIndex:"ParaValidatorIndex"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},ScheduledCore:{paraId:"ParaId",collator:"Option<CollatorId>"},Scheduling:{_enum:["Always","Dynamic"]},ScrapedOnChainVotes:{session:"SessionIndex",backingValidatorsPerCandidate:"Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>",disputes:"MultiDisputeStatementSet"},SessionInfo:{activeValidatorIndices:"Vec<ParaValidatorIndex>",randomSeed:"[u8; 32]",disputePeriod:"SessionIndex",validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},OldV1SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ParaValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},SlashingOffenceKind:{_enum:["ForInvalid","AgainstValid"]},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"}},dg={rpc:{},types:{Approvals:"[bool; 4]"}},ug={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}};var j;(function(t){t[t.BTreeMap=0]="BTreeMap",t[t.BTreeSet=1]="BTreeSet",t[t.Compact=2]="Compact",t[t.DoNotConstruct=3]="DoNotConstruct",t[t.Enum=4]="Enum",t[t.HashMap=5]="HashMap",t[t.Int=6]="Int",t[t.Linkage=7]="Linkage",t[t.Null=8]="Null",t[t.Option=9]="Option",t[t.Plain=10]="Plain",t[t.Range=11]="Range",t[t.RangeInclusive=12]="RangeInclusive",t[t.Result=13]="Result",t[t.Set=14]="Set",t[t.Si=15]="Si",t[t.Struct=16]="Struct",t[t.Tuple=17]="Tuple",t[t.UInt=18]="UInt",t[t.Vec=19]="Vec",t[t.VecFixed=20]="VecFixed",t[t.WrapperKeepOpaque=21]="WrapperKeepOpaque",t[t.WrapperOpaque=22]="WrapperOpaque"})(j||(j={}));function mp(t){return fe(t.eq)}function bp(t,e){return Array.isArray(e)?t.length===e.length&&st(t.find((n,r)=>mp(n)?!n.eq(e[r]):n!==e[r])):!1}let _s=class extends Array{constructor(e,n){super(n),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),this.registry=e}static get[Symbol.species](){return Array}get encodedLength(){const e=this.length;let n=lt(e).length;for(let r=0;r<e;r++)n+=this[r].encodedLength;return n}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(e){return bp(this,e)}inspect(){return{inner:this.inspectInner(),outer:[lt(this.length)]}}inspectInner(){const e=this.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=this[r].inspect();return n}toArray(){return Array.from(this)}toHex(){return Ke(this.toU8a())}toHuman(e,n){const r=this.length,a=new Array(r);for(let i=0;i<r;i++)a[i]=this[i]&&this[i].toHuman(e,n);return a}toJSON(){const e=this.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=this[r]&&this[r].toJSON();return n}toPrimitive(e){const n=this.length,r=new Array(n);for(let a=0;a<n;a++)r[a]=this[a]&&this[a].toPrimitive(e);return r}toString(){const e=this.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=this[r].toString();return`[${n.join(", ")}]`}toU8a(e){const n=this.toU8aInner();return Gt(e?n:[lt(this.length),...n])}toU8aInner(e){const n=this.length,r=new Array(n);for(let a=0;a<n;a++)r[a]=this[a].toU8a(e);return r}},Qs=class{constructor(e,n,r){S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__raw"),this.initialU8aLength=r,this.__internal__raw=n,this.registry=e}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get inner(){return this.__internal__raw}get isEmpty(){return this.__internal__raw.isEmpty}eq(e){return this.__internal__raw.eq(e)}inspect(){return this.__internal__raw.inspect()}toHex(e){return this.__internal__raw.toHex(e)}toHuman(e,n){return this.__internal__raw.toHuman(e,n)}toJSON(){return this.__internal__raw.toJSON()}toPrimitive(e){return this.__internal__raw.toPrimitive(e)}toString(){return this.__internal__raw.toString()}toU8a(e){return this.__internal__raw.toU8a(e)}unwrap(){return this.__internal__raw}valueOf(){return this.__internal__raw}};const lg=64,yl=52,fg=new le(1e4),hg=[["Perquintill",$b],["Perbill",gs],["Permill",Qb],["Percent",_b]];function pg(t){return fe(t.toBn)}function mg(t,e){return`${(t.mul(fg).div(e).toNumber()/100).toFixed(2)}%`}function yp(t,e){if($e(t)){if(!Number.isInteger(t)||t>Number.MAX_SAFE_INTEGER||t<Number.MIN_SAFE_INTEGER)throw new Error("Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1");return t}else if(nt(t)){if(Qe(t,-1,!0))return md(t,{isLe:!1,isNegative:e}).toString();if(t.includes(".")||t.includes(",")||t.includes("e"))throw new Error("String should not contain decimal points or scientific notation");return t}else{if(xn(t)||sa(t))return t.toString();if(Wt(t)){if(pg(t))return t.toBn().toString();const n=Object.keys(t);if(n.length!==1)throw new Error("Unable to construct number from multi-key object");return yp(t[n[0]],e)}else if(!t)return 0}throw new Error(`Unable to create BN from unknown type ${typeof t}`)}class xp extends le{constructor(e,n=0,r=lg,a=!1){super(Pe(n)?r<=48?qb(n.subarray(0,r/8),{isNegative:a}):qn(n.subarray(0,r/8),{isLe:!0,isNegative:a}).toString():yp(n,a)),S(this,"registry"),S(this,"encodedLength"),S(this,"isUnsigned"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__bitLength"),this.registry=e,this.__internal__bitLength=r,this.encodedLength=this.__internal__bitLength/8,this.initialU8aLength=this.__internal__bitLength/8,this.isUnsigned=!a;const i=this.isNeg(),s=r-(a&&!i?1:0);if(i&&!a)throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);if(super.bitLength()>s)throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${s}`)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}bitLength(){return this.__internal__bitLength}eq(e){return super.eq(Qe(e)?md(e.toString(),{isLe:!1,isNegative:!this.isUnsigned}):xt(e))}inspect(){return{outer:[this.toU8a()]}}isMax(){return this.toU8a().filter(e=>e===255).length===this.__internal__bitLength/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(e=!1){return r2(this,{bitLength:this.bitLength(),isLe:e,isNegative:!this.isUnsigned})}toHuman(e){const n=this.toRawType();if(n==="Balance")return this.isMax()?"everything":ca(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,r]=hg.find(([a])=>a===n)||[];return r?mg(this,r):Pc(this)}toJSON(e=!1){return e||this.__internal__bitLength>128||super.bitLength()>yl?this.toHex():this.toNumber()}toPrimitive(){return super.bitLength()>yl?this.toString():this.toNumber()}toRawType(){return this instanceof this.registry.createClassUnsafe("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(e){return super.toString(e)}toU8a(e){return Xn(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}function bg(t,e){return st(t)||(mp(t)?!t.eq(e):t!==e)}function yg(t){return!Array.isArray(t)||t.length!==2}function Uo(t,e){return t.size===e.length&&!e.some(n=>yg(n)||bg(t.get(n[0]),n[1]))}function Ld(t,e){return Array.isArray(e)?Uo(t,e):e instanceof Map?Uo(t,[...e.entries()]):Wt(e)?Uo(t,Object.entries(e)):!1}function Xo(t,e){return t.size===e.length&&!e.some(n=>!t.has(n))}function xg(t,e){return Array.isArray(e)?Xo(t,e):e instanceof Set?Xo(t,[...e.values()]):Wt(e)?Xo(t,Object.values(e)):!1}function Rd(t,e,n,{message:r},a,i,s,o,d){let f="";try{f=`: ${new o(t).toRawType()}`}catch{}return`${e}: failed at ${Ke(a.subarray(0,16))}…${d?` on ${d}`:""} (index ${i+1}/${s})${f}:: ${r}`}function Bd(t,e,n,[r,a]){const i=e.length;let s=0,o=0;try{for(;o<i;){const d=new r[o](t,n.subarray(s));s+=d.initialU8aLength||d.encodedLength,e[o]=d,o++}}catch(d){throw new Error(Rd(t,"decodeU8a",e,d,n.subarray(s),o,i,r[o],a[o]))}return[e,s]}function gg(t,e,n,[r,a]){const i=e.length;let s=0,o=0;try{for(;o<i;){const d=new r[o](t,n.subarray(s));s+=d.initialU8aLength||d.encodedLength,e[o]=[a[o],d],o++}}catch(d){throw new Error(Rd(t,"decodeU8aStruct",e,d,n.subarray(s),o,i,r[o],a[o]))}return[e,s]}function $s(t,e,n,r,a){const i=e.length;let s=r,o=0;try{for(;o<i;){const d=new a(t,n.subarray(s));s+=d.initialU8aLength||d.encodedLength,e[o]=d,o++}}catch(d){throw new Error(Rd(t,"decodeU8aVec",e,d,n.subarray(s),o,i,a))}return[s,s-r]}const zc=["BTreeMap","BTreeSet","HashMap","Vec"],vg=zc.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Opaque","Option","UInt","WrapperKeepOpaque","WrapperOpaque"]),Ms=["<","(","[",'"',","," "],xl=[wn("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),wn("VecDeque<","Vec<",!1),Pg(),gl("Bounded",!0),gl("Weak",!1),Og(),kg(),Ng("Box<"),Sg(),wn("String","Text"),wn("Vec<u8>","Bytes"),wn("&\\[u8\\]","Bytes"),wn("&'static\\[u8\\]","Bytes"),wn("RawAddress","Address"),wn("Lookup::Source","LookupSource"),wn("Lookup::Target","LookupTarget"),wn("exec::StorageKey","ContractStorageKey"),Mg(),Tg(),wg()];function wg(){return t=>t.trim()}function Ad(t,e){let n=0;for(let r=e,a=t.length;r<a;r++)if(t[r]===">"){if(!n)return r;n--}else t[r]==="<"&&n++;throw new Error(`Unable to find closing matching <> on '${t}' (start ${e})`)}function wn(t,e,n=!0){const r=new RegExp(`(^${t}|${Ms.map(i=>`\\${i}${t}`).join("|")})`,"g"),a=i=>(r.lastIndex=0,n&&Ms.includes(i[0])?`${i[0]}${e}`:e);return i=>i.replace(r,a)}function Pg(){return t=>{if(t.includes(" as HasCompact")){for(let e=0,n=t.length;e<n;e++)if(t[e]==="<"){const r=Ad(t,e+1)-14;t.substring(r,r+14)===" as HasCompact"&&(t=`Compact<${t.substring(e+1,r)}>`)}}return t}}function Mg(){const t=/,\)/g,e=/\(([^,]+)\)/;return n=>(t.lastIndex=0,n.replace(t,")").replace(e,"$1"))}function Cd(t,e,n){let r=-1;for(;;){if(r=t.indexOf(e,r+1),r===-1)return t;const a=r+e.length,i=Ad(t,a);t=`${t.substring(0,r)}${n(t.substring(a,i))}${t.substring(i+1)}`}}function gl(t,e){return n=>{for(let r=0,a=zc.length;r<a;r++){const i=zc[r];n=Cd(n,`${t}${i}<`,s=>{const o=s.split(",").map(d=>d.trim()).filter(d=>d);return e&&o.pop(),`${i}<${o.join(",")}>`})}return n}}function Tg(){return t=>{let e=0;for(;e!==-1;)if(e=t.indexOf("::"),e===0)t=t.substring(2);else if(e!==-1){let n=e;for(;n!==-1&&!Ms.includes(t[n]);)n--;t=`${t.substring(0,n+1)}${t.substring(e+2)}`}return t}}function Sg(){return t=>{for(let e=0,n=t.length;e<n;e++)if(t[e]==="<"&&!vg.find(r=>{const a=e-r.length;return a>=0&&t.substring(a,e)===r&&(a===0||Ms.includes(t[a-1]))})){const r=Ad(t,e+1);t=`${t.substring(0,e)}${t.substring(r+1)}`}return t}}function kg(){const t=e=>`(${e},${e})`;return e=>Cd(e,"PairOf<",t)}function Og(){const t=/\s/g,e=/(T|Self)::/g,n=/<(T|Self)asTrait>::/g,r=/<Tas[a-z]+::Trait>::/g,a=/<LookupasStaticLookup>/g,i=/::Type/g;return s=>(t.lastIndex=0,e.lastIndex=0,n.lastIndex=0,r.lastIndex=0,a.lastIndex=0,i.lastIndex=0,s.replace(t,"").replace(e,"").replace(n,"").replace(r,"").replace(a,"Lookup").replace(i,""))}function Ng(t){const e=n=>n;return n=>Cd(n,t,e)}const vl=new Map;function Ts(t){const e=t.toString(),n=vl.get(e);if(n)return n;let r=e;for(let a=0,i=xl.length;a<i;a++)r=xl[a](r);return vl.set(e,r),r}function wl(t){return t instanceof Uint8Array||Array.isArray(t)}function Pl(t){return on(t)&&$e(t.index)&&on(t.value)}function Ml(t){return on(t)&&fi(t.isSome)&&on(t.value)}function Tl(t){return $e(t)||xn(t)||sa(t)}function Vg(t,e){let n=0;const r=Math.min(t.length,e.length);for(let a=0;a<r;++a)if(n=Bn(t[a],e[a]),n!==0)return n;return t.length-e.length}function gp(t,e,n){if(on(n)){const r=n.toHex();if(e.has(r))throw new Error(`Duplicate value in ${t}: ${Ye(n)}`);e.add(r)}return!0}function Bn(t,e){if(Tl(t)&&Tl(e))return xt(t).cmp(xt(e));if(t instanceof Map&&e instanceof Map)return Bn(Array.from(t.values()),Array.from(e.values()));if(Pl(t)&&Pl(e))return Bn(t.index,e.index)||Bn(t.value,e.value);if(Ml(t)&&Ml(e))return Bn(t.isNone?0:1,e.isNone?0:1)||Bn(t.value,e.value);if(wl(t)&&wl(e))return Vg(t,e);if(on(t)&&on(e))return Bn(t.toU8a(!0),e.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${Ye(t)} (typeof ${typeof t}) <-> ${Ye(e)} (typeof ${typeof e})`)}function Ig(t){const e=new Set;return new Set(Array.from(t).filter(n=>gp("BTreeSet",e,n)).sort(Bn))}function Eg(t){const e=new Set;return new Map(Array.from(t.entries()).filter(([n])=>gp("BTreeMap",e,n)).sort(([n],[r])=>Bn(n,r)))}function yn(t,e){return typeof e=="function"?e:t.createClassUnsafe(e)}function zg(t,e){const n=e.length,r=new Array(n);for(let a=0;a<n;a++)r[a]=yn(t,e[a]);return r}function jd(t,e){const n=Object.entries(e),r=n.length,a=[new Array(r),new Array(r)];for(let i=0;i<r;i++)a[1][i]=n[i][0],a[0][i]=yn(t,n[i][1]);return a}function vp(t,[e,n]){const r={};for(let a=0,i=n.length;a<i;a++)r[n[a]]=t.getClassName(e[a])||new e[a](t).toRawType();return r}function Hg(t,e,n){if(Pe(n)){const[r,a]=(n[0]&3)<3?oa(n):bd(n);return[new e(t,a),r]}else if(n instanceof bi){const r=n.unwrap();return r instanceof e?[r,0]:[new e(t,r),0]}else if(n instanceof e)return[n,0];return[new e(t,n),0]}class bi{constructor(e,n,r=0,{definition:a,setDefinition:i=da}={}){S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__Type"),S(this,"__internal__raw"),this.registry=e,this.__internal__Type=a||i(yn(e,n));const[s,o]=Hg(e,this.__internal__Type,r);this.initialU8aLength=o,this.__internal__raw=s}static with(e){let n;const r=a=>n=a;return class extends bi{constructor(a,i){super(a,e,i,{definition:n,setDefinition:r})}}}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.__internal__raw.isEmpty}bitLength(){return this.__internal__raw.bitLength()}eq(e){return this.__internal__raw.eq(e instanceof bi?e.__internal__raw:e)}inspect(){return{outer:[this.toU8a()]}}toBigInt(){return this.__internal__raw.toBigInt()}toBn(){return this.__internal__raw.toBn()}toHex(e){return this.__internal__raw.toHex(e)}toHuman(e,n){return this.__internal__raw.toHuman(e,n)}toJSON(){return this.__internal__raw.toJSON()}toNumber(){return this.__internal__raw.toNumber()}toPrimitive(e){return this.__internal__raw.toPrimitive(e)}toRawType(){return`Compact<${this.registry.getClassName(this.__internal__Type)||this.__internal__raw.toRawType()}>`}toString(){return this.__internal__raw.toString()}toU8a(e){return lt(this.__internal__raw.toBn())}unwrap(){return this.__internal__raw}}class eo{constructor(e,n="DoNotConstruct"){throw S(this,"registry"),S(this,"createdAtHash"),S(this,"isStorageFallback"),S(this,"__internal__neverError"),this.registry=e,this.__internal__neverError=new Error(`DoNotConstruct: Cannot construct unknown type ${n}`),this.__internal__neverError}static with(e){return class extends eo{constructor(n){super(n,e)}}}get encodedLength(){throw this.__internal__neverError}get hash(){throw this.__internal__neverError}get isEmpty(){throw this.__internal__neverError}eq(){throw this.__internal__neverError}inspect(){throw this.__internal__neverError}toHex(){throw this.__internal__neverError}toHuman(){throw this.__internal__neverError}toJSON(){throw this.__internal__neverError}toPrimitive(){throw this.__internal__neverError}toRawType(){throw this.__internal__neverError}toString(){throw this.__internal__neverError}toU8a(){throw this.__internal__neverError}}let fr=class wp{constructor(e){S(this,"encodedLength",0),S(this,"isEmpty",!0),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength",0),S(this,"isStorageFallback"),this.registry=e}get hash(){throw new Error(".hash is not implemented on Null")}eq(e){return e instanceof wp||Zr(e)}inspect(){return{}}toHex(){return"0x"}toHuman(){return this.toJSON()}toJSON(){return null}toPrimitive(){return null}toRawType(){return"Null"}toString(){return""}toU8a(e){return new Uint8Array}};function Lg(t){const e=Object.values(t);if(e.some(n=>$e(n))){if(!e.every(n=>$e(n)&&n>=0&&n<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function Rg(t,e){const n={};let r,a;if(Array.isArray(e)){for(let i=0,s=e.length;i<s;i++)n[e[i]]={Type:fr,index:i};r=!0,a=!1}else if(Lg(e)){const[i,s]=jd(t,e);for(let o=0,d=s.length;o<d;o++)n[s[o]]={Type:i[o],index:o};r=!Object.values(n).some(({Type:o})=>o!==fr),a=!1}else{const i=Object.entries(e);for(let s=0,o=i.length;s<o;s++){const[d,f]=i[s];n[d]={Type:fr,index:f}}r=!0,a=!0}return{def:n,isBasic:r,isIndexed:a}}function Pp(t,e){const n=Object.values(t);for(let r=0,a=n.length;r<a;r++){const{Type:i,index:s}=n[r];if(s===e)return i}throw new Error(`Unable to create Enum via index ${e}, in ${Object.keys(t).join(", ")}`)}function Mp(t,e,n,r){const a=Pp(e,n);return{index:n,value:new a(t,r)}}function ii(t,e,n=0,r){const a=Pp(e,n);return{index:n,value:r instanceof a?r:new a(t,r)}}function Sl(t,e,n,r){const a=Object.keys(e).map(o=>o.toLowerCase()),i=n.toLowerCase(),s=a.indexOf(i);if(s===-1)throw new Error(`Cannot map Enum JSON, unable to find '${n}' in ${a.join(", ")}`);try{return ii(t,e,Object.values(e)[s].index,r)}catch(o){throw new Error(`Enum(${n}):: ${o.message}`)}}function Bg(t,e,n,r){if($e(r))return ii(t,e,r,n);if(Pe(n)||Qe(n)){const a=me(n);if(a.length)return Mp(t,e,a[0],a.subarray(1))}else{if(n instanceof cn)return ii(t,e,n.index,n.value);if($e(n))return ii(t,e,n);if(nt(n))return Sl(t,e,n.toString());if(Wt(n)){const a=Object.keys(n)[0];return Sl(t,e,a,n[a])}}return ii(t,e,Object.values(e)[0].index)}class cn{constructor(e,n,r,a,{definition:i,setDefinition:s=da}={}){S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__def"),S(this,"__internal__entryIndex"),S(this,"__internal__indexes"),S(this,"__internal__isBasic"),S(this,"__internal__isIndexed"),S(this,"__internal__raw");const{def:o,isBasic:d,isIndexed:f}=i||s(Rg(e,n)),p=Pe(r)&&r.length&&!$e(a)?Mp(e,o,r[0],r.subarray(1)):Bg(e,o,r,a);this.registry=e,this.__internal__def=o,this.__internal__isBasic=d,this.__internal__isIndexed=f,this.__internal__indexes=Object.values(o).map(({index:g})=>g),this.__internal__entryIndex=this.__internal__indexes.indexOf(p.index),this.__internal__raw=p.value,this.__internal__raw.initialU8aLength&&(this.initialU8aLength=1+this.__internal__raw.initialU8aLength)}static with(e){var n;let r;const a=i=>r=i;return n=class extends cn{constructor(i,s,o){super(i,e,s,o,{definition:r,setDefinition:a})}},(()=>{const i=Array.isArray(e)?e:Object.keys(e),s=i.length,o=new Array(s),d=new Array(s);for(let f=0;f<s;f++){const p=gd(i[f]);o[f]=`as${p}`,d[f]=`is${p}`}$r(n.prototype,d,(f,p,g)=>g.type===i[p]),$r(n.prototype,o,(f,p,g)=>{if(g.type!==i[p])throw new Error(`Cannot convert '${g.type}' via ${f}`);return g.value})})(),n}get encodedLength(){return 1+this.__internal__raw.encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return this.__internal__indexes[this.__internal__entryIndex]}get inner(){return this.__internal__raw}get isBasic(){return this.__internal__isBasic}get isEmpty(){return this.__internal__raw.isEmpty}get isNone(){return this.__internal__raw instanceof fr}get defIndexes(){return this.__internal__indexes}get defKeys(){return Object.keys(this.__internal__def)}get type(){return this.defKeys[this.__internal__entryIndex]}get value(){return this.__internal__raw}eq(e){return Pe(e)?!this.toU8a().some((n,r)=>n!==e[r]):$e(e)?this.toNumber()===e:this.__internal__isBasic&&nt(e)?this.type===e:Qe(e)?this.toHex()===e:e instanceof cn?this.index===e.index&&this.value.eq(e.value):Wt(e)?this.value.eq(e[this.type]):this.value.eq(e)}inspect(){if(this.__internal__isBasic)return{outer:[new Uint8Array([this.index])]};const{inner:e,outer:n=[]}=this.__internal__raw.inspect();return{inner:e,outer:[new Uint8Array([this.index]),...n]}}toHex(){return Ke(this.toU8a())}toHuman(e,n){return this.__internal__isBasic||this.isNone?this.type:{[this.type]:this.__internal__raw.toHuman(e,n)}}toJSON(){return this.__internal__isBasic?this.type:{[et(this.type)]:this.__internal__raw.toJSON()}}toNumber(){return this.index}toPrimitive(e){return this.__internal__isBasic?this.type:{[et(this.type)]:this.__internal__raw.toPrimitive(e)}}_toRawStruct(){if(this.__internal__isBasic)return this.__internal__isIndexed?this.defKeys.reduce((n,r,a)=>(n[r]=this.__internal__indexes[a],n),{}):this.defKeys;const e=Object.entries(this.__internal__def);return vp(this.registry,e.reduce((n,[r,{Type:a}],i)=>(n[0][i]=a,n[1][i]=r,n),[new Array(e.length),new Array(e.length)]))}toRawType(){return Ye({_enum:this._toRawStruct()})}toString(){return this.isNone?this.type:Ye(this.toJSON())}toU8a(e){return e?this.__internal__raw.toU8a(e):Gt([new Uint8Array([this.index]),this.__internal__raw.toU8a(e)])}}class Gn extends xp{constructor(e,n=0,r){super(e,n,r,!0)}static with(e,n){return class extends Gn{constructor(r,a){super(r,a,e)}toRawType(){return n||super.toRawType()}}}}class ba extends fr{toRawType(){return"None"}}function Ag(t,e,n){return n instanceof e?n:n instanceof zi?n.value instanceof e?n.value:n.isNone?new ba(t):new e(t,n.value):Zr(n)||st(n)||n==="0x"||n instanceof ba?new ba(t):Pe(n)?!n.length||n[0]===0?new ba(t):new e(t,n.subarray(1)):new e(t,n)}let zi=class Hc{constructor(e,n,r,{definition:a,setDefinition:i=da}={}){S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__Type"),S(this,"__internal__raw");const s=a||i(yn(e,n)),o=Pe(r)&&r.length&&!on(r)?r[0]===0?new ba(e):new s(e,r.subarray(1)):Ag(e,s,r);this.registry=e,this.__internal__Type=s,this.__internal__raw=o,o!=null&&o.initialU8aLength&&(this.initialU8aLength=1+o.initialU8aLength)}static with(e){let n;const r=a=>(n=a,a);return class extends Hc{constructor(a,i){super(a,e,i,{definition:n,setDefinition:r})}}}get encodedLength(){return 1+this.__internal__raw.encodedLength}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return this.__internal__raw instanceof ba}get isSome(){return!this.isNone}get value(){return this.__internal__raw}eq(e){return e instanceof Hc?this.isSome===e.isSome&&this.value.eq(e.value):this.value.eq(e)}inspect(){if(this.isNone)return{outer:[new Uint8Array([0])]};const{inner:e,outer:n=[]}=this.__internal__raw.inspect();return{inner:e,outer:[new Uint8Array([1]),...n]}}toHex(){return this.isNone?"0x":Ke(this.toU8a().subarray(1))}toHuman(e,n){return this.__internal__raw.toHuman(e,n)}toJSON(){return this.isNone?null:this.__internal__raw.toJSON()}toPrimitive(e){return this.isNone?null:this.__internal__raw.toPrimitive(e)}toRawType(e){const n=this.registry.getClassName(this.__internal__Type)||new this.__internal__Type(this.registry).toRawType();return e?n:`Option<${n}>`}toString(){return this.__internal__raw.toString()}toU8a(e){if(e)return this.__internal__raw.toU8a(!0);const n=new Uint8Array(this.encodedLength);return this.isSome&&(n.set([1]),n.set(this.__internal__raw.toU8a(),1)),n}unwrap(){if(this.isNone)throw new Error("Option: unwrapping a None value");return this.__internal__raw}unwrapOr(e){return this.isSome?this.unwrap():e}unwrapOrDefault(){return this.isSome?this.unwrap():new this.__internal__Type(this.registry)}},Cg=class Tp extends cn{constructor(e,n,r,a){super(e,{Ok:n,Err:r},a)}static with(e){return class extends Tp{constructor(n,r){super(n,e.Ok,e.Err,r)}}}get asErr(){if(!this.isErr)throw new Error("Cannot extract Err value from Ok result, check isErr first");return this.value}get asOk(){if(!this.isOk)throw new Error("Cannot extract Ok value from Err result, check isOk first");return this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return!this.isOk}get isOk(){return this.index===0}toRawType(){const e=this._toRawStruct();return`Result<${e.Ok},${e.Err}>`}};function jg(t,e,n,r){if(Array.isArray(n)){const a=r[0];for(let i=0,s=a.length;i<s;i++)try{const o=n==null?void 0:n[i];e[i]=o instanceof a[i]?o:new a[i](t,o)}catch(o){throw new Error(`Tuple: failed on ${i}:: ${o.message}`)}return[e,0]}else{if(Qe(n))return Bd(t,e,me(n),r);if(!n||!e.length){const a=r[0];for(let i=0,s=a.length;i<s;i++)e[i]=new a[i](t);return[e,0]}}throw new Error(`Expected array input to Tuple decoding, found ${typeof n}: ${Ye(n)}`)}let to=class Sp extends _s{constructor(e,n,r,{definition:a,setDefinition:i=da}={}){const s=a||i(Array.isArray(n)?[zg(e,n),[]]:fe(n)||nt(n)?[[yn(e,n)],[]]:jd(e,n));super(e,s[0].length),S(this,"__internal__Types"),this.initialU8aLength=(Pe(r)?Bd(e,this,r,s):jg(e,this,r,s))[1],this.__internal__Types=s}static with(e){let n;const r=a=>n=a;return class extends Sp{constructor(a,i){super(a,e,i,{definition:n,setDefinition:r})}}}get encodedLength(){let e=0;for(let n=0,r=this.length;n<r;n++)e+=this[n].encodedLength;return e}get Types(){return this.__internal__Types[1].length?this.__internal__Types[1]:this.__internal__Types[0].map(e=>new e(this.registry).toRawType())}inspect(){return{inner:this.inspectInner()}}toRawType(){return`(${this.__internal__Types[0].map(e=>this.registry.getClassName(e)||new e(this.registry).toRawType()).join(",")})`}toString(){return Ye(this.toJSON())}toU8a(e){return Gt(this.toU8aInner(e))}};class Kn extends xp{static with(e,n){return class extends Kn{constructor(r,a){super(r,a,e)}toRawType(){return n||super.toRawType()}}}}const kl=64*1024,Ug=Kt("Vec");function Xg(t){if(Array.isArray(t))return[t,t.length,0];if(Pe(t)||Qe(t)){const e=me(t),[n,r]=oa(e);if(r>kl)throw new Error(`Vec length ${r.toString()} exceeds ${kl}`);return[e,r,n]}else if(!t)return[null,0,0];throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof t}: ${Ye(t)}`)}function kp(t,e,n,r,a){if(Array.isArray(n)){const i=e.length;for(let s=0;s<i;s++){const o=n[s];try{e[s]=o instanceof a?o:new a(t,o)}catch(d){throw Ug.error(`Unable to decode on index ${s}`,d.message),d}}return[0,0]}else if(!n)return[0,0];return $s(t,e,me(n),r,a)}let Dg=class Op extends _s{constructor(e,n,r=[],{definition:a,setDefinition:i=da}={}){const[s,o,d]=Xg(r);super(e,o),S(this,"__internal__Type"),this.__internal__Type=a||i(yn(e,n)),this.initialU8aLength=(Pe(s)?$s(e,this,s,d,this.__internal__Type):kp(e,this,s,d,this.__internal__Type))[0]}static with(e){let n;const r=a=>n=a;return class extends Op{constructor(a,i){super(a,e,i,{definition:n,setDefinition:r})}}}get Type(){return this.__internal__Type.name}indexOf(e){const n=e instanceof this.__internal__Type?e:new this.__internal__Type(this.registry,e);for(let r=0,a=this.length;r<a;r++)if(n.eq(this[r]))return r;return-1}toRawType(){return`Vec<${this.registry.getClassName(this.__internal__Type)||new this.__internal__Type(this.registry).toRawType()}>`}},Fg=class Np extends _s{constructor(e,n,r,a=[],{definition:i,setDefinition:s=da}={}){super(e,r),S(this,"__internal__Type"),this.__internal__Type=i||s(yn(e,n)),this.initialU8aLength=(Pe(a)?$s(e,this,a,0,this.__internal__Type):kp(e,this,a,0,this.__internal__Type))[1]}static with(e,n){let r;const a=i=>r=i;return class extends Np{constructor(i,s){super(i,e,n,s,{definition:r,setDefinition:a})}}}get Type(){return new this.__internal__Type(this.registry).toRawType()}get encodedLength(){let e=0;for(let n=0,r=this.length;n<r;n++)e+=this[n].encodedLength;return e}inspect(){return{inner:this.inspectInner()}}toU8a(){const e=this.toU8aInner();return e.length?Gt(e):new Uint8Array([])}toRawType(){return`[${this.Type};${this.length}]`}};class dn extends Uint8Array{constructor(e,n,r){super(me(n)),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),this.registry=e,this.initialU8aLength=r}static get[Symbol.species](){return Uint8Array}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return Ou(this)}get isEmpty(){return!this.length||st(this.find(e=>!!e))}get isUtf8(){return g2(this)}bitLength(){return this.length*8}eq(e){return e instanceof Uint8Array?this.length===e.length&&!this.some((n,r)=>n!==e[r]):this.eq(me(e))}inspect(){return{outer:[this.toU8a()]}}toHex(){return Ke(this)}toHuman(e,n){return this.toPrimitive(n)}toJSON(){return this.toHex()}toPrimitive(e){if(!e&&this.isAscii){const n=this.toUtf8();if(Ou(n))return n}return this.toJSON()}toRawType(){return"Raw"}toString(){return this.toHex()}toU8a(e){return Uint8Array.from(this)}toUtf8(){if(!this.isUtf8)throw new Error("The character sequence is not a valid Utf8 string");return Un(this)}}function qg(t){if(!(t!=null&&t.length))return[0,new Uint8Array];const[e,n]=oa(t),r=e+Math.ceil(n/8);if(r>t.length)throw new Error(`BitVec: required length less than remainder, expected at least ${r}, found ${t.length}`);return[n,t.subarray(e,r)]}function Zg(t){if(Array.isArray(t)||nt(t)){const e=me(t);return[e.length/8,e]}return qg(t)}class Wg extends dn{constructor(e,n,r=!1){const[a,i]=Zg(n);super(e,i),S(this,"__internal__decodedLength"),S(this,"__internal__isMsb"),this.__internal__decodedLength=a,this.__internal__isMsb=r}get encodedLength(){return this.length+lt(this.__internal__decodedLength).length}inspect(){return{outer:[lt(this.__internal__decodedLength),super.toU8a()]}}toBoolArray(){const e=[...this.toU8a(!0)].map(a=>[!!(a&128),!!(a&64),!!(a&32),!!(a&16),!!(a&8),!!(a&4),!!(a&2),!!(a&1)]),n=e.length,r=new Array(8*n);for(let a=0;a<n;a++){const i=a*8,s=e[a];for(let o=0;o<8;o++)r[i+o]=this.__internal__isMsb?s[o]:s[7-o]}return r}toHuman(){return`0b${[...this.toU8a(!0)].map(e=>`00000000${e.toString(2)}`.slice(-8)).map(e=>this.__internal__isMsb?e:e.split("").reverse().join("")).join("_")}`}toRawType(){return"BitVec"}toU8a(e){const n=super.toU8a(e);return e?n:Gt([lt(this.__internal__decodedLength),n])}}function Gg(t){return t}function Kg(t,[e,n],r,a){let i;const s=Array.isArray(r),o=r instanceof Map,d=n.length;if(!s&&!o&&!Wt(r))throw new Error(`Struct: Cannot decode value ${Ye(r)} (typeof ${typeof r}), expected an input object, map or array`);if(s&&r.length!==d)throw new Error(`Struct: Unable to map ${Ye(r)} array to object with known keys ${n.join(", ")}`);const f=new Array(d);for(let p=0;p<d;p++){const g=n[p],P=a.get(g)||g,T=e[p];let k;try{if(s)k=r[p];else if(o)k=P&&r.get(P);else if(k=P&&r[P],st(k)){if(st(i)){const M=Object.entries(r);i={};for(let O=0,V=M.length;O<V;O++)i[et(M[O][0])]=M[O][1]}k=P&&i[P]}f[p]=[g,k instanceof T?k:new T(t,k)]}catch(M){let O=T.name;try{O=new T(t).toRawType()}catch{}throw new Error(`Struct: failed on ${P}: ${O}:: ${M.message}`)}}return[f,0]}class gt extends Map{constructor(e,n,r,a=new Map,{definition:i,setDefinition:s=Gg}={}){const o=i||s(jd(e,n)),[d,f]=Pe(r)||Qe(r)?gg(e,new Array(o[0].length),me(r),o):r instanceof gt?[r,0]:Kg(e,o,r||{},a);super(d),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__jsonMap"),S(this,"__internal__Types"),this.initialU8aLength=f,this.registry=e,this.__internal__jsonMap=a,this.__internal__Types=o}static with(e,n){var r;let a;const i=s=>a=s;return r=class extends gt{constructor(s,o){super(s,e,o,n,{definition:a,setDefinition:i})}},(()=>{const s=Object.keys(e);$r(r.prototype,s,(o,d,f)=>f.get(o))})(),r}get defKeys(){return this.__internal__Types[1]}get isEmpty(){for(const e of this.values())if(!e.isEmpty)return!1;return!0}get encodedLength(){let e=0;for(const n of this.values())e+=n.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get Type(){const e={},[n,r]=this.__internal__Types;for(let a=0,i=r.length;a<i;a++)e[r[a]]=new n[a](this.registry).toRawType();return e}eq(e){return Ld(this,e)}get(e){return super.get(e)}getAtIndex(e){return this.toArray()[e]}getT(e){return super.get(e)}inspect(e){const n=[];for(const[r,a]of this.entries())n.push({...a.inspect(!e||fi(e)?e:e[r]),name:et(r)});return{inner:n}}toArray(){return[...this.values()]}toHex(){return Ke(this.toU8a())}toHuman(e,n){const r={};for(const[a,i]of this.entries())r[a]=i.toHuman(e,n);return r}toJSON(){const e={};for(const[n,r]of this.entries())e[this.__internal__jsonMap.get(n)||n]=r.toJSON();return e}toPrimitive(e){const n={};for(const[r,a]of this.entries())n[r]=a.toPrimitive(e);return n}toRawType(){return Ye(vp(this.registry,this.__internal__Types))}toString(){return Ye(this.toJSON())}toU8a(e){const n=[];for(const[r,a]of this.entries())n.push(a.toU8a(!e||fi(e)?e:e[r]));return Gt(n)}}const Yg=Kt("Map");function Jg(t,e,n,r){const a=new Map,[i,s]=oa(r),o=[];for(let p=0;p<s;p++)o.push(e,n);const[d,f]=Bd(t,new Array(o.length),r.subarray(i),[o,[]]);for(let p=0,g=d.length;p<g;p+=2)a.set(d[p],d[p+1]);return[e,n,a,i+f]}function Ol(t,e,n,r){const a=new Map;for(const[i,s]of r.entries()){const o=e.prototype instanceof _s||e.prototype instanceof gt||e.prototype instanceof cn;try{a.set(i instanceof e?i:new e(t,o&&typeof i=="string"?JSON.parse(i):i),s instanceof n?s:new n(t,s))}catch(d){throw Yg.error("Failed to decode key or value:",d.message),d}}return[e,n,a,0]}function _g(t,e,n,r){const a=yn(t,e),i=yn(t,n);if(r){if(Pe(r)||Qe(r))return Jg(t,a,i,me(r));if(r instanceof Map)return Ol(t,a,i,r);if(Wt(r))return Ol(t,a,i,new Map(Object.entries(r)))}else return[a,i,new Map,0];throw new Error("Map: cannot decode type")}class Vp extends Map{constructor(e,n,r,a,i="HashMap"){const[s,o,d,f]=_g(e,n,r,a);super(i==="BTreeMap"?Eg(d):d),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__KeyClass"),S(this,"__internal__ValClass"),S(this,"__internal__type"),this.registry=e,this.initialU8aLength=f,this.__internal__KeyClass=s,this.__internal__ValClass=o,this.__internal__type=i}get encodedLength(){let e=lt(this.size).length;for(const[n,r]of this.entries())e+=n.encodedLength+r.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}eq(e){return Ld(this,e)}inspect(){const e=[];for(const[n,r]of this.entries())e.push(n.inspect()),e.push(r.inspect());return{inner:e,outer:[lt(this.size)]}}toHex(){return Ke(this.toU8a())}toHuman(e,n){const r={};for(const[a,i]of this.entries())r[a instanceof dn&&!n&&a.isAscii?a.toUtf8():a.toString()]=i.toHuman(e,n);return r}toJSON(){const e={};for(const[n,r]of this.entries())e[n.toString()]=r.toJSON();return e}toPrimitive(e){const n={};for(const[r,a]of this.entries())n[r instanceof dn&&!e&&r.isAscii?r.toUtf8():r.toString()]=a.toPrimitive(e);return n}toRawType(){return`${this.__internal__type}<${this.registry.getClassName(this.__internal__KeyClass)||new this.__internal__KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.__internal__ValClass)||new this.__internal__ValClass(this.registry).toRawType()}>`}toString(){return Ye(this.toJSON())}toU8a(e){const n=[];e||n.push(lt(this.size));for(const[r,a]of this.entries())n.push(r.toU8a(e),a.toU8a(e));return Gt(n)}}let Qg=class Ip extends Vp{static with(e,n){return class extends Ip{constructor(r,a){super(r,e,n,a,"BTreeMap")}}}};const $g=Kt("BTreeSet");function e7(t,e,n){const r=new Set,[a,i]=oa(n),s=new Array(i),[o]=$s(t,s,n,a,e);for(let d=0;d<i;d++)r.add(s[d]);return[e,r,o]}function t7(t,e,n){const r=new Set;return n.forEach(a=>{try{r.add(a instanceof e?a:new e(t,a))}catch(i){throw $g.error("Failed to decode key or value:",i.message),i}}),[e,r,0]}function n7(t,e,n){const r=yn(t,e);if(n){if(Pe(n)||Qe(n))return e7(t,r,me(n));if(Array.isArray(n)||n instanceof Set)return t7(t,r,n)}else return[r,new Set,0];throw new Error("BTreeSet: cannot decode type")}let r7=class Ep extends Set{constructor(e,n,r){const[a,i,s]=n7(e,n,r);super(Ig(i)),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__ValClass"),this.registry=e,this.initialU8aLength=s,this.__internal__ValClass=a}static with(e){return class extends Ep{constructor(n,r){super(n,e,r)}}}get encodedLength(){let e=lt(this.size).length;for(const n of this.values())e+=n.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()].map(e=>e.toString())}eq(e){return xg(this,e)}inspect(){const e=[];for(const n of this.values())e.push(n.inspect());return{inner:e,outer:[lt(this.size)]}}toHex(){return Ke(this.toU8a())}toHuman(e,n){const r=[];for(const a of this.values())r.push(a.toHuman(e,n));return r}toJSON(){const e=[];for(const n of this.values())e.push(n.toJSON());return e}toRawType(){return`BTreeSet<${this.registry.getClassName(this.__internal__ValClass)||new this.__internal__ValClass(this.registry).toRawType()}>`}toPrimitive(e){const n=[];for(const r of this.values())n.push(r.toPrimitive(e));return n}toString(){return Ye(this.toJSON())}toU8a(e){const n=[];e||n.push(lt(this.size));for(const r of this.values())n.push(r.toU8a(e));return Gt(n)}};const Nl=10*1024*1024;function a7(t){if(!t.length)return[new Uint8Array,0];const[e,n]=oa(t),r=e+n;if(n>Nl)throw new Error(`Bytes length ${n.toString()} exceeds ${Nl}`);if(r>t.length)throw new Error(`Bytes: required length less than remainder, expected at least ${r}, found ${t.length}`);return[t.subarray(e,r),r]}let Hi=class extends dn{constructor(e,n){const[r,a]=Pe(n)&&!(n instanceof dn)?a7(n):Array.isArray(n)||nt(n)?[me(n),0]:[n,0];super(e,r,a)}get encodedLength(){return this.length+lt(this.length).length}inspect(e){const n=lt(this.length);return{outer:e?[super.toU8a()]:this.length?[n,super.toU8a()]:[n]}}toRawType(){return"Bytes"}toU8a(e){return e?super.toU8a(e):La(this)}},i7=class zp extends Vp{static with(e,n){return class extends zp{constructor(r,a){super(r,e,n,a)}}}},Ia=class extends Boolean{constructor(e,n=!1){super(Pe(n)?n[0]===1:n instanceof Boolean?n.valueOf():!!n),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength",1),S(this,"isStorageFallback"),this.registry=e}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return!this.isTrue}get isTrue(){return this.valueOf()}eq(e){return this.valueOf()===(e instanceof Boolean?e.valueOf():e)}inspect(){return{outer:[this.toU8a()]}}toHex(){return Ke(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toPrimitive(){return this.toJSON()}toRawType(){return"bool"}toString(){return this.toJSON().toString()}toU8a(e){return new Uint8Array([this.valueOf()?1:0])}};function s7(t,e){return e[0]===0?null:new Ia(t,e[0]===1)}class o7 extends zi{constructor(e,n){super(e,Ia,Pe(n)||Qe(n)?s7(e,me(n)):n),this.initialU8aLength=1}get encodedLength(){return 1}get isFalse(){return this.isSome?!this.value.valueOf():!1}get isTrue(){return this.isSome?this.value.valueOf():!1}inspect(){return{outer:[this.toU8a()]}}toRawType(e){return e?"bool":"Option<bool>"}toU8a(e){return e?super.toU8a(!0):this.isSome?new Uint8Array([this.isTrue?1:2]):new Uint8Array([0])}}let Hp=class Lp extends to{constructor(e,n,r,{rangeName:a="Range"}={}){super(e,[n,n],r),S(this,"__internal__rangeName"),this.__internal__rangeName=a}static with(e){return class extends Lp{constructor(n,r){super(n,e,r)}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return`${this.__internal__rangeName}<${this.start.toRawType()}>`}};class Ud extends Hp{constructor(e,n,r){super(e,n,r,{rangeName:"RangeInclusive"})}static with(e){return class extends Ud{constructor(n,r){super(n,e,r)}}}}const Vl=128*1024;function c7(t){if(Pe(t)){if(!t.length)return["",0];if(t instanceof dn)return[Un(t),0];const[e,n]=oa(t),r=e+n;if(n>Vl)throw new Error(`Text: length ${n.toString()} exceeds ${Vl}`);if(r>t.length)throw new Error(`Text: required length less than remainder, expected at least ${r}, found ${t.length}`);return[Un(t.subarray(e,r)),r]}else if(Qe(t))return[Un(Fn(t)),0];return[t?t.toString():"",0]}class Rp extends String{constructor(e,n){const[r,a]=c7(n);super(r),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__override",null),this.registry=e,this.initialU8aLength=a}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(e){return nt(e)?this.toString()===e.toString():!1}inspect(){const e=bn(super.toString());return{outer:e.length?[lt(e.length),e]:[lt(e.length)]}}setOverride(e){this.__internal__override=e}toHex(){return Ke(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toRawType(){return"Text"}toString(){return this.__internal__override||super.toString()}toU8a(e){const n=bn(super.toString());return e?n:La(n)}}class d7 extends Rp{constructor(e,n=""){super(e,n),this.setOverride(Ts(this.toString()))}toRawType(){return"Type"}}function u7(t,e){const n=me(t),r=e/8;if(!n.length)return[new Uint8Array(r),0];if(Pe(t)?n.length<r:n.length!==r)throw new Error(`Expected input with ${r} bytes (${e} bits), found ${n.length} bytes`);return[n.subarray(0,r),r]}let Ra=class Bp extends dn{constructor(e,n=new Uint8Array,r=256){const[a,i]=u7(n,r);super(e,a,i)}static with(e,n){return class extends Bp{constructor(r,a){super(r,a,e)}toRawType(){return n||super.toRawType()}}}toRawType(){return`[u8;${this.length}]`}};function l7(t,e,n){const r=yn(t,e);if(Pe(n)||Qe(n))try{const[,i]=Qe(n)?[0,me(n)]:n instanceof dn?[0,n.subarray()]:vs(n);return[r,new r(t,i),n]}catch{return[r,null,n]}const a=new r(t,n);return[r,a,La(a.toU8a())]}class no extends Hi{constructor(e,n,r,{opaqueName:a="WrapperKeepOpaque"}={}){const[i,s,o]=l7(e,n,r);super(e,o),S(this,"__internal__Type"),S(this,"__internal__decoded"),S(this,"__internal__opaqueName"),this.__internal__Type=i,this.__internal__decoded=s,this.__internal__opaqueName=a}static with(e){return class extends no{constructor(n,r){super(n,e,r)}}}get isDecoded(){return!!this.__internal__decoded}inspect(){return this.__internal__decoded?{inner:[this.__internal__decoded.inspect()],outer:[lt(this.length)]}:{outer:[lt(this.length),this.toU8a(!0)]}}toHuman(e,n){return this.__internal__decoded?this.__internal__decoded.toHuman(e,n):super.toHuman(e,n)}toPrimitive(e){return this.__internal__decoded?this.__internal__decoded.toPrimitive(e):super.toPrimitive(e)}toRawType(){return`${this.__internal__opaqueName}<${this.registry.getClassName(this.__internal__Type)||(this.__internal__decoded?this.__internal__decoded.toRawType():new this.__internal__Type(this.registry).toRawType())}>`}toString(){return this.__internal__decoded?this.__internal__decoded.toString():super.toString()}unwrap(){if(!this.__internal__decoded)throw new Error(`${this.__internal__opaqueName}: unwrapping an undecodable value`);return this.__internal__decoded}}class Xd extends no{constructor(e,n,r){super(e,n,r,{opaqueName:"WrapperOpaque"})}static with(e){return class extends Xd{constructor(n,r){super(n,e,r)}}}get inner(){return this.unwrap()}}let Ap=class Cp extends Number{constructor(e,n,{bitLength:r=32}={}){super(Pe(n)||Qe(n)?n.length===0?0:Fb(me(n),{bitLength:r}):n||0),S(this,"encodedLength"),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__bitLength"),this.__internal__bitLength=r,this.encodedLength=r/8,this.initialU8aLength=this.encodedLength,this.registry=e}static with(e){return class extends Cp{constructor(n,r){super(n,r,{bitLength:e})}}}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.valueOf()===0}eq(e){return this.valueOf()===Number(e)}inspect(){return{outer:[this.toU8a()]}}toHex(){return Ke(this.toU8a())}toHuman(){return this.toString()}toJSON(){return this.toHex()}toNumber(){return this.valueOf()}toPrimitive(){return this.toNumber()}toRawType(){return`f${this.__internal__bitLength}`}toU8a(e){return d2(this,{bitLength:this.__internal__bitLength})}};function f7(t){return Object.entries(t||{})}class jp extends Map{constructor(e,n){const r=f7(n);super(r),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),this.registry=e,$r(this,r.map(([a])=>a),a=>this.get(a))}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return[...this.keys()].length===0}eq(e){return Ld(this,e)}getT(e){return this.get(e)}inspect(){throw new Error("Unimplemented")}toHex(){throw new Error("Unimplemented")}toHuman(){return[...this.entries()].reduce((e,[n,r])=>(e[n]=fe(r==null?void 0:r.toHuman)?r.toHuman():r,e),{})}toJSON(){return[...this.entries()].reduce((e,[n,r])=>(e[n]=r,e),{})}toPrimitive(e){return[...this.entries()].reduce((n,[r,a])=>(n[r]=fe(a.toPrimitive)?a.toPrimitive(e):a,n),{})}toRawType(){return"Json"}toString(){return Ye(this.toJSON())}toU8a(e){throw new Error("Unimplemented")}}function Up(t,e){const n=new le(0);for(let r=0,a=e.length;r<a;r++)n.ior(xt(t[e[r]]||0));return n}function h7(t,e){const n=e.length,r=new Array(n);for(let a=0;a<n;a++){const i=e[a];if(st(t[i]))throw new Error(`Set: Invalid key '${i}' passed to Set, allowed ${Object.keys(t).join(", ")}`);r[a]=i}return r}function Il(t,e){const n=xt(e),r=Object.keys(t),a=[];for(let s=0,o=r.length;s<o;s++){const d=r[s];n.and(xt(t[d])).eq(xt(t[d]))&&a.push(d)}const i=Up(t,a);if(!n.eq(i))throw new Error(`Set: Mismatch decoding '${n.toString()}', computed as '${i.toString()}' with ${a.join(", ")}`);return a}function Xp(t,e=0,n){if(n%8!==0)throw new Error(`Expected valid bitLength, power of 8, found ${n}`);const r=n/8;if(Pe(e))return e.length===0?[]:Il(t,qn(e.subarray(0,r),{isLe:!0}));if(nt(e))return Xp(t,me(e),r);if(e instanceof Set||Array.isArray(e)){const a=Array.isArray(e)?e:[...e.values()];return h7(t,a)}return Il(t,e)}class Dd extends Set{constructor(e,n,r,a=8){super(Xp(n,r,a)),S(this,"registry"),S(this,"createdAtHash"),S(this,"initialU8aLength"),S(this,"isStorageFallback"),S(this,"__internal__allowed"),S(this,"__internal__byteLength"),S(this,"add",i=>{if(this.__internal__allowed&&st(this.__internal__allowed[i]))throw new Error(`Set: Invalid key '${i}' on add`);return super.add(i),this}),this.registry=e,this.__internal__allowed=n,this.__internal__byteLength=a/8}static with(e,n){var r;return r=class extends Dd{constructor(a,i){super(a,e,i,n)}},(()=>{const a=Object.keys(e),i=a.length,s=new Array(i);for(let o=0;o<i;o++)s[o]=`is${gd(a[o])}`;$r(r.prototype,s,(o,d,f)=>f.strings.includes(a[d]))})(),r}get encodedLength(){return this.__internal__byteLength}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()]}get valueEncoded(){return Up(this.__internal__allowed,this.strings)}eq(e){return Array.isArray(e)?bp(this.strings.sort(),e.sort()):e instanceof Set?this.eq([...e.values()]):$e(e)||xn(e)?this.valueEncoded.eq(xt(e)):!1}inspect(){return{outer:[this.toU8a()]}}toHex(){return Ke(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toPrimitive(){return this.toJSON()}toRawType(){return Ye({_set:this.__internal__allowed})}toString(){return`[${this.strings.join(", ")}]`}toU8a(e){return Xn(this.valueEncoded,{bitLength:this.__internal__byteLength*8,isLe:!0})}}class El extends Ap.with(32){constructor(){super(...arguments),S(this,"__FloatType","f32")}}class zl extends Ap.with(64){constructor(){super(...arguments),S(this,"__FloatType","f64")}}class Hl extends Gn.with(8){constructor(){super(...arguments),S(this,"__IntType","i8")}}class Ll extends Gn.with(16){constructor(){super(...arguments),S(this,"__IntType","i16")}}class Lc extends Gn.with(32){constructor(){super(...arguments),S(this,"__IntType","i32")}}class Rl extends Gn.with(64){constructor(){super(...arguments),S(this,"__IntType","i64")}}class Bl extends Gn.with(128){constructor(){super(...arguments),S(this,"__IntType","i128")}}class Al extends Gn.with(256){constructor(){super(...arguments),S(this,"__IntType","i256")}}class Cl extends Lc{constructor(e,n){throw super(e,n),new Error("The `isize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally i64) and WASM (always i32) code. Use one of the `i32` or `i64` types explicitly.")}}class jl extends Kn.with(8){constructor(){super(...arguments),S(this,"__UIntType","u8")}}class Ul extends Kn.with(16){constructor(){super(...arguments),S(this,"__UIntType","u16")}}class yi extends Kn.with(32){constructor(){super(...arguments),S(this,"__UIntType","u32")}}let sn=class extends Kn.with(64){constructor(){super(...arguments),S(this,"__UIntType","u64")}};class Xl extends Kn.with(128){constructor(){super(...arguments),S(this,"__UIntType","u128")}}class Dl extends Kn.with(256){constructor(){super(...arguments),S(this,"__UIntType","u256")}}class Fl extends yi{constructor(e,n){throw super(e,n),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}function p7(t){const e=[];let n=0,r=0,a=0,i=0,s=0;for(let o=0,d=t.length;o<d;o++)switch(t[o]){case",":{n||r||a||i||(e.push(t.substring(s,o).trim()),s=o+1);break}case"<":n++;break;case">":n--;break;case"[":r++;break;case"]":r--;break;case"{":a++;break;case"}":a--;break;case"(":i++;break;case")":i--;break}if(n||r||a||i)throw new Error(`Invalid definition (missing terminators) found in ${t}`);return e.push(t.substring(s,t.length).trim()),e}const m7=["_alias","_fallback"];function Dp(t){return nt(t)?t.toString():Ye(t)}function b7(t){const e=Object.values(t);if(e.some(n=>$e(n))){if(!e.every(n=>$e(n)&&n>=0&&n<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function y7(t,e,n,r){return t.info=j.Enum,t.fallbackType=r,Array.isArray(e)?t.sub=e.map((a,i)=>({index:i,info:j.Plain,name:a,type:"Null"})):b7(e)?t.sub=Object.entries(e).map(([a,i],s)=>re({},Yn(Dp(i||"Null"),{name:a},n),{index:s})):t.sub=Object.entries(e).map(([a,i])=>({index:i,info:j.Plain,name:a,type:"Null"})),t}function x7(t,e,n){return t.info=j.Set,t.fallbackType=n,t.length=e._bitLength,t.sub=Object.entries(e).filter(([r])=>!r.startsWith("_")).map(([r,a])=>({index:a,info:j.Plain,name:r,type:"Null"})),t}function g7(t,e,n,r){const a=JSON.parse(e),i=Object.keys(a);return a._enum?y7(t,a._enum,r,a._fallback):a._set?x7(t,a._set,a._fallback):(t.alias=a._alias?new Map(Object.entries(a._alias)):void 0,t.fallbackType=a._fallback,t.sub=i.filter(s=>!m7.includes(s)).map(s=>Yn(Dp(a[s]),{name:s},r)),t)}function v7(t,e,n,r){const a=e.length-1;let i=-1,s=0;for(let g=1;g<a&&i===-1;g++)switch(e[g]){case";":{s===0&&(i=g);break}case"[":case"(":case"<":s++;break;case"]":case")":case">":s--;break}if(i===-1)throw new Error(`${e}: Unable to extract location of ';'`);const o=e.substring(1,i),[d,f]=e.substring(i+1,a).split(";"),p=parseInt(d.trim(),10);if(p>2048)throw new Error(`${e}: Only support for [Type; <length>], where length <= 2048`);return t.displayName=f,t.length=p,t.sub=Yn(o,{},r),t}function Gi(t,e,n,r){return t.sub=n.length===0?[]:p7(n).map(a=>Yn(a,{},r)),t}function Fp(t,e,n,r){const[a,i]=e.substring(r.length+1,e.length-1).split(","),s=parseInt(a.trim(),10);if(s>8192||s%8)throw new Error(`${e}: Only support for ${r}<bitLength>, where length <= 8192 and a power of 8, found ${s}`);return t.displayName=i,t.length=s,t}function w7(t,e,n){return Fp(t,e,n,"Int")}function P7(t,e,n){return Fp(t,e,n,"UInt")}function M7(t,e,n){return t.displayName=e.substring(15,e.length-1),t}function ql(t,[e,n]){return t.startsWith(e)&&t.slice(-1*n.length)===n}const T7=[["[","]",j.VecFixed,v7],["{","}",j.Struct,g7],["(",")",j.Tuple,Gi],["BTreeMap<",">",j.BTreeMap,Gi],["HashMap<",">",j.HashMap,Gi],["Int<",">",j.Int,w7],["Result<",">",j.Result,Gi],["UInt<",">",j.UInt,P7],["DoNotConstruct<",">",j.DoNotConstruct,M7]],S7=[["BTreeSet<",">",j.BTreeSet],["Compact<",">",j.Compact],["Linkage<",">",j.Linkage],["Opaque<",">",j.WrapperOpaque],["Option<",">",j.Option],["Range<",">",j.Range],["RangeInclusive<",">",j.RangeInclusive],["Vec<",">",j.Vec],["WrapperKeepOpaque<",">",j.WrapperKeepOpaque],["WrapperOpaque<",">",j.WrapperOpaque]];function Zl(t,[e,n]){return t.substring(e.length,t.length-n.length)}function Yn(t,{displayName:e,name:n}={},r=0){const a=Ts(t),i={displayName:e,info:j.Plain,name:n,type:a};if(++r>64)throw new Error("getTypeDef: Maximum nested limit reached");const s=T7.find(d=>ql(a,d));if(s)return i.info=s[2],s[3](i,a,Zl(a,s),r);const o=S7.find(d=>ql(a,d));return o&&(i.info=o[2],i.sub=Yn(Zl(a,o),{},r)),i}function xi({lookupName:t,type:e}){return t||e}function Ss(t){if(!Array.isArray(t.sub))throw new Error(`Expected subtype as TypeDef[] in ${Ye(t)}`);return t.sub}function k7(t){if(!t.sub||Array.isArray(t.sub))throw new Error(`Expected subtype as TypeDef in ${Ye(t)}`);return t.sub}function qp(t){return xi(k7(t))}function Wl(t){const e=Ss(t),n={};for(let r=0,a=e.length;r<a;r++){const i=e[r];if(!i.name)throw new Error(`No name found in definition ${Ye(i)}`);n[i.name]=xi(i)}return n}function Rc(t){return Ss(t).map(xi)}function Gl(t,{displayName:e,length:n}){if(!$e(n))throw new Error(`Expected bitLength information for ${e||t.constructor.name}<bitLength>`);return t.with(n,e)}function Kl(t,e){const[n,r]=Rc(e);return t.with(n,r)}function Ar(t,e){return t.with(qp(e))}const O7={[j.BTreeMap]:(t,e)=>Kl(Qg,e),[j.BTreeSet]:(t,e)=>Ar(r7,e),[j.Compact]:(t,e)=>Ar(bi,e),[j.DoNotConstruct]:(t,e)=>eo.with(e.displayName||e.type),[j.Enum]:(t,e)=>{const n=Ss(e);return cn.with(n.every(({type:r})=>r==="Null")?n.reduce((r,{index:a,name:i},s)=>{if(!i)throw new Error("No name found in sub definition");return r[i]=a||s,r},{}):Wl(e))},[j.HashMap]:(t,e)=>Kl(i7,e),[j.Int]:(t,e)=>Gl(Gn,e),[j.Linkage]:(t,e)=>{const n=`Option<${qp(e)}>`,r=gt.with({previous:n,next:n});return r.prototype.toRawType=function(){return`Linkage<${this.next.toRawType(!0)}>`},r},[j.Null]:(t,e)=>fr,[j.Option]:(t,e)=>{if(!e.sub||Array.isArray(e.sub))throw new Error("Expected type information for Option");return Ar(zi,e)},[j.Plain]:(t,e)=>t.getOrUnknown(e.type),[j.Range]:(t,e)=>Ar(Hp,e),[j.RangeInclusive]:(t,e)=>Ar(Ud,e),[j.Result]:(t,e)=>{const[n,r]=Rc(e);return Cg.with({Err:r,Ok:n})},[j.Set]:(t,e)=>Dd.with(Ss(e).reduce((n,{index:r,name:a})=>{if(!a||!$e(r))throw new Error("No name found in sub definition");return n[a]=r,n},{}),e.length),[j.Si]:(t,e)=>Zp(t,t.lookup.getTypeDef(e.type)),[j.Struct]:(t,e)=>gt.with(Wl(e),e.alias),[j.Tuple]:(t,e)=>to.with(Rc(e)),[j.UInt]:(t,e)=>Gl(Kn,e),[j.Vec]:(t,{sub:e})=>{if(!e||Array.isArray(e))throw new Error("Expected type information for vector");return e.type==="u8"?Hi:Dg.with(xi(e))},[j.VecFixed]:(t,{displayName:e,length:n,sub:r})=>{if(!$e(n)||!r||Array.isArray(r))throw new Error("Expected length & type information for fixed vector");return r.type==="u8"?Ra.with(n*8,e):Fg.with(xi(r),n)},[j.WrapperKeepOpaque]:(t,e)=>Ar(no,e),[j.WrapperOpaque]:(t,e)=>Ar(Xd,e)};function N7(t,e){try{const n=O7[e.info](t,e);if(!n)throw new Error("No class created");return!n.__fallbackType&&e.fallbackType&&(n.__fallbackType=e.fallbackType),n}catch(n){throw new Error(`Unable to construct class from ${Ye(e)}: ${n.message}`)}}function Zp(t,e){return t.getUnsafe(e.type,!1,e)}function ci(t,e){return t.getUnsafe(e)||Zp(t,t.isLookupType(e)?t.lookup.getTypeDef(e):Yn(e))}function Yl(t,e){const n=t.toU8a(),r=t.toRawType();if(!(si(n,e)||["Bytes","Text","Type"].includes(r)&&e.length===t.length||t.isEmpty&&e.every(a=>!a)))throw new Error(`${r}:: Decoded input doesn't match input, received ${Ke(e,512)} (${e.length} bytes), created ${Ke(n,512)} (${n.length} bytes)`)}function V7(t,[e]){Pe(e)?Yl(t,e):Qe(e)&&Yl(t,me(e))}function Jl(t,e,n=[],{blockHash:r,isFallback:a,isOptional:i,isPedantic:s}={}){const o=new(i?zi.with(e):e)(t,...n);return s&&V7(o,n),r&&(o.createdAtHash=Bc(t,"BlockHash",[r])),a&&(o.isStorageFallback=!0),o}function Bc(t,e,n=[],r={}){let a=null,i=null;try{return a=ci(t,e),Jl(t,a,n,r)}catch(s){i=new Error(`createType(${e}):: ${s.message}`)}if(a!=null&&a.__fallbackType)try{return a=ci(t,a.__fallbackType),Jl(t,a,n,r)}catch{}throw i}const I7=t=>t.toString(),E7=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function z7(t,e,n=I7){return`${t}${e?`<${(Array.isArray(e)?e:[e]).map(n).join(", ")}>`:""}`}function en(t,e,n){const{info:r,sub:a}=e;switch(r){case j.BTreeMap:case j.BTreeSet:case j.Compact:case j.HashMap:case j.Linkage:case j.Option:case j.Range:case j.RangeInclusive:case j.Result:case j.Vec:case j.WrapperKeepOpaque:case j.WrapperOpaque:return z7(n,a,i=>Fd(t,i))}throw new Error(`Unable to encode ${Ye(e)} with params`)}function _l(t,e,n,r){const a=e.map(({name:s})=>s);if(!a.every(s=>!!s))throw new Error(`Subtypes does not have consistent names, ${a.join(", ")}`);const i=re({},r);for(let s=0,o=e.length;s<o;s++){const d=e[s];if(!d.name)throw new Error(`No name found in ${Ye(d)}`);i[d.name]=Fd(t,d)}return Ye(n?{_enum:i}:i)}const H7={[j.BTreeMap]:(t,e)=>en(t,e,"BTreeMap"),[j.BTreeSet]:(t,e)=>en(t,e,"BTreeSet"),[j.Compact]:(t,e)=>en(t,e,"Compact"),[j.DoNotConstruct]:(t,{displayName:e,lookupIndex:n,lookupName:r})=>`DoNotConstruct<${r||e||(st(n)?"Unknown":t.createLookupType(n))}>`,[j.Enum]:(t,{sub:e})=>{if(!Array.isArray(e))throw new Error("Unable to encode Enum type");return e.every(({type:n})=>n==="Null")?Ye({_enum:e.map(({name:n},r)=>`${n||`Empty${r}`}`)}):_l(t,e,!0)},[j.HashMap]:(t,e)=>en(t,e,"HashMap"),[j.Int]:(t,{length:e=32})=>`Int<${e}>`,[j.Linkage]:(t,e)=>en(t,e,"Linkage"),[j.Null]:(t,e)=>"Null",[j.Option]:(t,e)=>en(t,e,"Option"),[j.Plain]:(t,{displayName:e,type:n})=>e||n,[j.Range]:(t,e)=>en(t,e,"Range"),[j.RangeInclusive]:(t,e)=>en(t,e,"RangeInclusive"),[j.Result]:(t,e)=>en(t,e,"Result"),[j.Set]:(t,{length:e=8,sub:n})=>{if(!Array.isArray(n))throw new Error("Unable to encode Set type");return Ye({_set:n.reduce((r,{index:a,name:i},s)=>re(r,{[`${i||`Unknown${a||s}`}`]:a||s}),{_bitLength:e||8})})},[j.Si]:(t,{lookupName:e,type:n})=>e||n,[j.Struct]:(t,{alias:e,sub:n})=>{if(!Array.isArray(n))throw new Error("Unable to encode Struct type");return _l(t,n,!1,e?{_alias:[...e.entries()].reduce((r,[a,i])=>re(r,{[a]:i}),{})}:{})},[j.Tuple]:(t,{sub:e})=>{if(!Array.isArray(e))throw new Error("Unable to encode Tuple type");return`(${e.map(n=>Fd(t,n)).join(",")})`},[j.UInt]:(t,{length:e=32})=>`UInt<${e}>`,[j.Vec]:(t,e)=>en(t,e,"Vec"),[j.VecFixed]:(t,{length:e,sub:n})=>{if(!$e(e)||!n||Array.isArray(n))throw new Error("Unable to encode VecFixed type");return`[${n.type};${e}]`},[j.WrapperKeepOpaque]:(t,e)=>en(t,e,"WrapperKeepOpaque"),[j.WrapperOpaque]:(t,e)=>en(t,e,"WrapperOpaque")};function Wp(t,e,n=!0){return n&&e.lookupName?e.lookupName:H7[e.info](t,e)}function Fd(t,e){return e.displayName&&!E7.some(n=>e.displayName===n)?e.displayName:Wp(t,e)}function Xt(t,e){return re({},e,{type:Wp(t,e,!1)})}const L7=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError","XcmOrder"];function Zt(t){return L7.reduce((e,n)=>re(e,{[n]:`${n}${t}`}),{})}const R7={FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAssetV0",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},B7={AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},A7={AssetInstanceV2:"AssetInstanceV1",FungibilityV2:"FungibilityV1",JunctionV2:"JunctionV1",JunctionsV2:"JunctionsV1",MultiAssetsV2:"MultiAssetsV1",MultiAssetV2:"MultiAssetV1",MultiAssetFilterV2:"MultiAssetFilterV1",MultiLocationV2:"MultiLocationV1",OriginKindV2:"OriginKindV1",WildFungibilityV2:"WildFungibilityV1",ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"ResponseV2Result"}},ResponseV2Error:"(u32, XcmErrorV2)",ResponseV2Result:"Result<Null, ResponseV2Error>",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"OriginKindV2",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocation",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{query_id:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponse_Weight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2",SetAppendix:"XcmV2",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"u64"}},WildMultiAssetV2:"WildMultiAssetV1",XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null",Transport:"Null",Unroutable:"Null",UnknownWeightRequired:"Null",Trap:"u64",UnknownClaim:"Null",InvalidLocation:"Null"}},XcmOrderV2:"XcmOrderV1"},C7="V2",j7={XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},U7={BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}},X7={rpc:{},types:{...U7,...j7,...R7,...B7,...A7,...Zt(C7),DoubleEncodedCall:{encoded:"Vec<u8>"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2"}},XcmVersion:"u32"}},D7={ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},F7={ContractConstructorSpecV0:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV1:{name:"Vec<Text>",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV2:{label:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV3:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV4:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>",default:"bool",returnType:"Option<ContractTypeSpec>"},ContractContractSpecV0:{constructors:"Vec<ContractConstructorSpecV0>",messages:"Vec<ContractMessageSpecV0>",events:"Vec<ContractEventSpecV0>",docs:"Vec<Text>"},ContractContractSpecV1:{constructors:"Vec<ContractConstructorSpecV1>",messages:"Vec<ContractMessageSpecV1>",events:"Vec<ContractEventSpecV1>",docs:"Vec<Text>"},ContractContractSpecV2:{constructors:"Vec<ContractConstructorSpecV2>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV3:{constructors:"Vec<ContractConstructorSpecV3>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV4:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractContractSpecV5:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV3>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractDisplayName:"SiPath",ContractEventParamSpecV0:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventParamSpecV2:{label:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpecV0:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV1:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV2:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>"},ContractEventSpecV3:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>",module_path:"Text",signature_topic:"Option<[u8; 32]>"},ContractMessageParamSpecV0:{name:"Text",type:"ContractTypeSpec"},ContractMessageParamSpecV2:{label:"Text",type:"ContractTypeSpec"},ContractMessageSpecV0:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV1:{name:"Vec<Text>",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV2:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV3:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>",default:"bool"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},q7={ContractConstructorSpecLatest:"ContractConstructorSpecV4",ContractEventSpecLatest:"ContractEventSpecV3",ContractEventParamSpecLatest:"ContractEventParamSpecV2",ContractMessageParamSpecLatest:"ContractMessageParamSpecV2",ContractMessageSpecLatest:"ContractMessageSpecV3",ContractMetadataLatest:"ContractMetadataV5"},Z7={rpc:{},types:{...D7,...F7,...q7,ContractProjectInfo:{source:"ContractProjectSource",contract:"ContractProjectContract"},ContractMetadataV0:{metadataVersion:"Text",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractMetadataV1:{types:"Vec<PortableType>",spec:"ContractContractSpecV1"},ContractMetadataV2:{types:"Vec<PortableType>",spec:"ContractContractSpecV2"},ContractMetadataV3:{types:"Vec<PortableType>",spec:"ContractContractSpecV3"},ContractMetadataV4:{types:"Vec<PortableType>",spec:"ContractContractSpecV4",version:"Text"},ContractMetadataV5:{types:"Vec<PortableType>",spec:"ContractContractSpecV5",version:"u64"},ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1",V2:"ContractMetadataV2",V3:"ContractMetadataV3",V4:"ContractMetadataV4",V5:"ContractMetadataV5"}},ContractProjectV0:{metadataVersion:"Text",source:"ContractProjectSource",contract:"ContractProjectContract",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"},ContractEnvironmentV4:{_alias:{hashType:"hash"},accountId:"Option<ContractTypeSpec>",balance:"Option<ContractTypeSpec>",blockNumber:"Option<ContractTypeSpec>",hashType:"Option<ContractTypeSpec>",timestamp:"Option<ContractTypeSpec>",maxEventTopics:"Option<u32>"}}},W7={listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"Text"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"Text"}},G7={clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"Text"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},K7={...W7,...G7,accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},feeHistory:{description:"Returns fee history for given block count & reward percentiles",params:[{name:"blockCount",type:"U256"},{name:"newestBlock",type:"BlockNumber"},{name:"rewardPercentiles",type:"Option<Vec<f64>>"}],type:"EthFeeHistory"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},maxPriorityFeePerGas:{description:"Returns max priority fee per gas",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}},Ql={account_basic:{description:"Returns pallet_evm::Accounts by address.",params:[{name:"address",type:"H160"}],type:"EvmAccount"},account_code_at:{description:"For a given account address, returns pallet_evm::AccountCodes.",params:[{name:"address",type:"H160"}],type:"Bytes"},author:{description:"Returns the converted FindAuthor::find_author authority id.",params:[],type:"H160"},call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfo, DispatchError>"},chain_id:{description:"Returns runtime defined pallet_evm::ChainId.",params:[],type:"u64"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfo, DispatchError>"},current_all:{description:"Return all the current data for a block in a single runtime call.",params:[],type:"(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)"},current_block:{description:"Return the current block.",params:[],type:"BlockV2"},current_receipts:{description:"Return the current receipt.",params:[],type:"Option<Vec<EthReceiptV3>>"},current_transaction_statuses:{description:"Return the current transaction status.",params:[],type:"Option<Vec<EthTransactionStatus>>"},elasticity:{description:"Return the elasticity multiplier.",params:[],type:"Option<Permill>"},extrinsic_filter:{description:"Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.",params:[{name:"xts",type:"Vec<Extrinsic>"}],type:"Vec<TransactionV2>"},gas_price:{description:"Returns FixedGasPrice::min_gas_price",params:[],type:"u256"},storage_at:{description:"For a given account address and index, returns pallet_evm::AccountStorages.",params:[{name:"address",type:"H160"},{name:"index",type:"u256"}],type:"H256"}},Y7={call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfoV2, DispatchError>"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfoV2, DispatchError>"}},J7={ConvertTransactionRuntimeApi:[{methods:{convert_transaction:{description:"Converts an Ethereum-style transaction to Extrinsic",params:[{name:"transaction",type:"TransactionV2"}],type:"Extrinsic"}},version:2}],DebugRuntimeApi:[{methods:{trace_block:{description:"Trace all block extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"knownTransactions",type:"Vec<H256>"}],type:"Result<(), DispatchError>"},trace_transaction:{description:"Trace transaction extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"transaction",type:"EthTransaction"}],type:"Result<(), DispatchError>"}},version:4}],EthereumRuntimeRPCApi:[{methods:{...Ql},version:4},{methods:{...Ql,...Y7},version:5}]},_7={BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},Q7={BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},$7={BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},e4={..._7,...Q7,...$7,EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFeeHistory:{oldestBlock:"U256",baseFeePerGas:"Vec<U256>",gasUsedRatio:"Vec<f64>",reward:"Option<Vec<Vec<U256>>>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthReceiptV0:"EthReceipt",EthReceiptV3:"EthReceipt",EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:{hash:"H256",nonce:"U256",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionIndex:"Option<U256>",from:"H160",to:"Option<H160>",value:"U256",gasPrice:"Option<U256>",maxFeePerGas:"Option<U256>",maxPriorityFeePerGas:"Option<U256>",gas:"U256",input:"Bytes",creates:"Option<H160>",raw:"Bytes",publicKey:"Option<H512>",chainId:"Option<U64>",standardV:"U256",v:"U256",r:"U256",s:"U256",accessList:"Option<Vec<EthAccessListItem>>",transactionType:"Option<U256>"},EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}},t4={rpc:K7,runtime:J7,types:e4},n4={AuthorFilterAPI:[{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:2},{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"}],type:"bool"}},version:1}],NimbusApi:[{methods:{can_author:{description:"The runtime api used to predict whether a Nimbus author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:1}]},r4={rpc:{},runtime:n4,types:{}},a4={OracleApi:[{methods:{get_all_values:{description:"Retrieves all values",params:[{name:"providerId",type:"Raw"}],type:"Raw"},get_value:{description:"Retrieves a single value",params:[{name:"providerId",type:"Raw"},{name:"key",type:"Raw"}],type:"Option<Raw>"}},version:1}]},i4={rpc:{},runtime:a4,types:{}},s4={TokensApi:[{methods:{query_existential_deposit:{description:"Query the existential amount for a specific currency",params:[{name:"currencyId",type:"Raw"}],type:"u128"}},version:1}]},o4={rpc:{},runtime:s4,types:{}},c4={methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}},d4={rpc:c4,types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}},u4={hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",isUnsafe:!0,params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",isUnsafe:!0,params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},insertKey:{description:"Insert a key into the keystore.",isUnsafe:!0,params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",isUnsafe:!0,params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",isUnsafe:!0,params:[],type:"Bytes"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"},submitExtrinsic:{description:"Submit a fully formatted extrinsic for block inclusion",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"}},l4={rpc:u4,types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}},f4={getBlock:{description:"Get header and body of a relay chain block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{isOptional:!0,name:"blockNumber",type:"BlockNumber"}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"}},h4={rpc:f4,types:{BlockHash:"Hash"}},p4={getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<u64>"}},m4={rpc:p4,types:{PrefixedStorageKey:"StorageKey"}},b4={localStorageGet:{description:"Get offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},localStorageSet:{description:"Set offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"}},y4={OffchainWorkerApi:[{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"header",type:"Header"}],type:"Null"}},version:2},{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"number",type:"BlockNumber"}],type:"Null"}},version:1}]},x4={rpc:b4,runtime:y4,types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}},g4={queryFeeDetails:{deprecated:"Use `api.call.transactionPaymentApi.queryFeeDetails` instead",description:"Query the detailed fee of a given encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"FeeDetails"},queryInfo:{deprecated:"Use `api.call.transactionPaymentApi.queryInfo` instead",description:"Retrieves the fee information for an encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeDispatchInfoV1"}},Ki={query_fee_details:{description:"The transaction fee details",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"FeeDetails"}},Do={query_call_fee_details:{description:"The call fee details",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"FeeDetails"}},Fo={query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},$l={query_call_info:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},qo={query_length_to_fee:{description:"Query the output of the current LengthToFee given some input",params:[{name:"length",type:"u32"}],type:"Balance"},query_weight_to_fee:{description:"Query the output of the current WeightToFee given some input",params:[{name:"weight",type:"Weight"}],type:"Balance"}},v4={TransactionPaymentApi:[{methods:{...qo,...Fo,...Ki},version:4},{methods:{...qo,...Fo,...Ki},version:3},{methods:{...Fo,...Ki},version:2},{methods:{query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...Ki},version:1}],TransactionPaymentCallApi:[{methods:{...qo,...$l,...Do},version:3},{methods:{...$l,...Do},version:2},{methods:{CALL:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...Do},version:1}]},w4={rpc:g4,runtime:v4,types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV1:{weight:"WeightV1",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV2:{weight:"WeightV2",class:"DispatchClass",partialFee:"Balance"}}},P4={call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Bytes"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},getKeys:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getMetadata:{description:"Returns the runtime metadata",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Metadata"},getPairs:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",isUnsafe:!0,params:[{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<KeyValue>"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeVersion"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",isUnsafe:!0,params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{isOptional:!0,name:"toBlock",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{isOptional:!0,name:"keys",type:"Vec<StorageKey>"}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",isUnsafe:!0,params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"},{name:"methods",type:"Option<Text>"}],type:"TraceBlockResponse"},trieMigrationStatus:{description:"Check current migration state",isUnsafe:!0,params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MigrationStatusResult"}},M4={rpc:P4,types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",MigrationStatusResult:{topRemainingToMigrate:"u64",childRemainingToMigrate:"u64"},ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32",stateVersion:"u8"},RuntimeVersionPre4:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPre3:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32",apis:"Vec<RuntimeVersionApi>"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}},ks=Object.freeze(Object.defineProperty({__proto__:null,assetConversion:h5,assets:m5,attestations:Zx,aura:y5,author:l4,authorship:x5,babe:w5,balances:P5,beefy:k5,benchmark:N5,blockbuilder:I5,bridges:Wx,chain:h4,childstate:m4,claims:Gx,collective:E5,consensus:z5,contracts:R5,contractsAbi:Z7,crowdloan:Kx,cumulus:_x,democracy:A5,dev:j5,discovery:X5,elections:D5,engine:q5,eth:t4,evm:Z5,extrinsics:W5,finality:$x,fungibles:K5,genericAsset:Y5,genesisBuilder:_5,gilt:Q5,grandpa:tx,identity:nx,imOnline:rx,lottery:ax,metadata:a5,mixnet:sx,mmr:lx,nfts:hx,nimbus:r4,nompools:mx,offchain:x4,offences:bx,ormlOracle:i4,ormlTokens:o4,parachains:cg,payment:w4,poll:dg,pow:xx,proxy:gx,purchase:ug,recovery:vx,rpc:d4,runtime:d5,scaleInfo:l5,scheduler:wx,session:Tx,society:Sx,staking:Vx,state:M4,statement:Ex,support:zx,syncstate:Lx,system:Ax,treasury:Cx,txpayment:jx,txqueue:Xx,uniques:Dx,utility:Fx,vesting:qx,xcm:X7},Symbol.toStringTag,{value:"Module"})),di={};Object.keys(ks).forEach(t=>Object.entries(ks[t].rpc||{}).forEach(([e,n])=>{const r=n.aliasSection||t;di[r]||(di[r]={}),di[r][e]=re({},n,{isSubscription:!!n.pubsub,jsonrpc:`${r}_${e}`,method:e,section:r})}));const ef=Kt("PortableRegistry"),tf={toNumber:()=>-1},T4={Char:"u32",Str:"Text"},S4=Kp(["sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","fp_account::AccountId20","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight","*_democracy::vote::Vote","*_conviction_voting::vote::Vote","*_identity::types::Data","sp_core::OpaqueMetadata","sp_core::OpaquePeerId","sp_core::offchain::OpaqueMultiaddr","primitive_types::*","sp_arithmetic::per_things::*","*_runtime::RuntimeCall","*_runtime::RuntimeEvent","ink::env::types::*","ink::primitives::types::*","ink_env::types::*","ink_primitives::types::*","np_runtime::accountname::AccountName","np_runtime::universaladdress::UniversalAddress"]),k4=Kp(["pallet_identity::types::BitFlags"]),Gp=["bitvec::order::Lsb0","BitOrderLsb0"],O4=["bitvec::order::Msb0","BitOrderMsb0"],nf=[...Gp,...O4],N4=["BoundedBTreeMap","BoundedBTreeSet","BoundedVec","Box","BTreeMap","BTreeSet","Cow","Option","Range","RangeInclusive","Result","WeakBoundedVec","WrapperKeepOpaque","WrapperOpaque"],V4=["entries","keys","new","size","hash","registry"],I4=["generic","misc","pallet","traits","types"];function rf(t){const e=t.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=t[r].toString();return n}function Kp(t){const e=t.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=t[r].split("::");return n}function qd(t,e){return t.length===e.length&&t.every((n,r)=>{const a=e[r].toString();if(n==="*"||n===a)return!0;if(n.includes("*")&&n.includes("_")&&a.includes("_")){let i=n.split("_"),s=a.split("_");if(i[0]==="*"){const o=s.indexOf(i[1]);o!==-1&&(i=i.slice(1),s=s.slice(o))}return i.length===2&&i[1]==="*"&&i[0]===s[0]?!0:qd(i,s)}return!1})}function E4({def:t,path:e}){return["frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight"].includes(e.join("::"))?!t.isComposite||t.asComposite.fields.length===1?"WeightV1":null:e.length&&S4.some(n=>qd(n,e))?e[e.length-1].toString():null}function Yp(t,e,n,r,a=!1){const i=r.length;if(i===0||N4.includes(r[i-1].toString()))return null;const s=new Array(i),o=new Array(i);for(let f=0;f<i;f++){const p=gd(a?r[f].replace("pallet_",""):r[f]),g=p.toLowerCase();s[f]=p,o[f]=g}let d="";for(let f=0;f<i;f++){const p=o[f];(f!==1||!I4.includes(p))&&p!==o[f+1]&&(d+=s[f])}if(s[1]==="RawOrigin"&&i===2&&n.length===2&&n[1].type.isSome){const f=t[n[1].type.unwrap().toNumber()];f.type.path.length===2&&(d=`${d}${f.type.path[1].toString()}`)}return{lookupIndex:e,name:d,params:n}}function z4(t,e,{type:{params:n,path:r}}){return Yp(t,e,n,r)}function H4(t,e,n){const r=[n[e]];for(let a=e+1,i=n.length;a<i;a++){const s=n[a];s.name===t&&r.push(s)}return r}function af(t,e){const n=t.length;for(let r=0;r<n;r++){const a=t[r];for(let i=r+1;i<n;i++){const s=t[i];if(a.lookupIndex!==s.lookupIndex&&a.name===s.name)return!1}}for(let r=0;r<n;r++){const a=t[r];e[a.lookupIndex]=a.name}return!0}function L4(t,e,n){const r={};return n.map((a,i)=>{const{lookupIndex:s,name:o,params:d}=a;if(o){if(r[s])return a}else return null;const f=H4(o,i,n);if(f.length===1||!f.some(T=>d.length!==T.params.length||d.some((k,M)=>!k.name.eq(T.params[M].name)||k.type.unwrapOr(tf).toNumber()!==T.params[M].type.unwrapOr(tf).toNumber())))return a;const p=d.findIndex(({type:T},k)=>f.every(({params:M},O)=>M[k].type.isSome&&(O===0||!M[k].type.eq(T))));if(p===-1)return a;const g=f.length,P=new Array(g);for(let T=0;T<g;T++){const{lookupIndex:k,name:M,params:O}=f[T],{def:V,path:N}=t.getSiType(O[p].type.unwrap());if(!V.isPrimitive&&!N.length)return null;P[T]={lookupIndex:k,name:V.isPrimitive?`${M}${V.asPrimitive.toString()}`:`${M}${N[N.length-1].toString()}`}}if(af(P,r))return a;for(let T=0;T<g;T++){const{lookupIndex:k,name:M,params:O}=f[T],{def:V,path:N}=t.getSiType(O[p].type.unwrap()),E=Yp(e,k,O,N,!0);if(V.isPrimitive||!E)return null;P[T]={lookupIndex:k,name:`${M}${E.name}`}}return af(P,r)?a:null}).filter(a=>!!a).map(({lookupIndex:a,name:i,params:s})=>({lookupIndex:a,name:r[a]||i,params:s}))}function R4(t,e,n,r){if(t.registry.register(e),r.SpRuntimeUncheckedExtrinsic){const[a,,i]=r.SpRuntimeUncheckedExtrinsic,s=t.getSiType(a.type.unwrap()),o=t.getSiType(i.type.unwrap()).path.join("::");let d=s.path.join("::");const f=d==="sp_runtime::multiaddress::MultiAddress";if(f){const[p]=s.params;d=t.getSiType(p.type.unwrap()).path.join("::")}t.registry.register({AccountId:d.endsWith("::AccountId20")||d.endsWith("::H160")?"AccountId20":"AccountId32",Address:f?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(o)?"MultiSignature":n[i.type.unwrap().toNumber()]||"MultiSignature"})}}function B4(t,e){const n=Object.keys(t).some(a=>!a.startsWith("Pallet")),r={};if(t.SpRuntimeUncheckedExtrinsic){const[,{type:a}]=t.SpRuntimeUncheckedExtrinsic;r[a.unwrap().toNumber()]="Call"}else n&&!e&&ef.warn("Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic");if(t.FrameSystemEventRecord){const[{type:a}]=t.FrameSystemEventRecord;r[a.unwrap().toNumber()]="Event"}else n&&!e&&ef.warn("Unable to determine runtime Event type, cannot inspect frame_system::EventRecord");return r}function A4(t,e){const n=[],r={};for(let d=0,f=e.length;d<f;d++){const p=e[d],g=p.id.toNumber(),P=z4(e,g,e[d]);P&&n.push(P),r[g]=p}const a={},i={},s={},o=L4(t,e,n);for(let d=0,f=o.length;d<f;d++){const{lookupIndex:p,name:g,params:P}=o[d];i[p]=g,a[g]=t.registry.createLookupType(p),s[g]=P}return{lookups:a,names:i,params:s,types:r}}class C4 extends gt{constructor(e,n,r){super(e,{types:"Vec<PortableType>"},n),S(this,"__internal__alias"),S(this,"__internal__lookups"),S(this,"__internal__names"),S(this,"__internal__params"),S(this,"__internal__typeDefs",{}),S(this,"__internal__types");const{lookups:a,names:i,params:s,types:o}=A4(this,this.types);this.__internal__alias=B4(s,r),this.__internal__lookups=a,this.__internal__names=i,this.__internal__params=s,this.__internal__types=o}get names(){return Object.values(this.__internal__names).sort()}get paramTypes(){return this.__internal__params}get types(){return this.getT("types")}register(){R4(this,this.__internal__lookups,this.__internal__names,this.__internal__params)}getName(e){return this.__internal__names[this.__internal__getLookupId(e)]}getSiType(e){const n=(this.__internal__types||this.types)[this.__internal__getLookupId(e)];if(!n)throw new Error(`PortableRegistry: Unable to find type with lookupId ${e.toString()}`);return n.type}getTypeDef(e){const n=this.__internal__getLookupId(e);if(!this.__internal__typeDefs[n]){const r=this.__internal__names[n],a={info:j.DoNotConstruct,lookupIndex:n,lookupName:r,type:this.registry.createLookupType(n)};r&&(this.__internal__typeDefs[n]=a);const i=this.__internal__extract(this.getSiType(e),n);r||(this.__internal__typeDefs[n]=a),Object.keys(i).forEach(s=>{(s!=="lookupName"||i[s])&&(this.__internal__typeDefs[n][s]=i[s])}),i.info===j.Plain&&(this.__internal__typeDefs[n].lookupNameRoot=this.__internal__typeDefs[n].lookupName,delete this.__internal__typeDefs[n].lookupName)}return this.__internal__typeDefs[n]}sanitizeField(e){let n=null,r=null;return e.isSome&&(n=et(e.unwrap()),n.includes("#")?(r=n,n=r.replace(/#/g,"_")):V4.includes(n)&&(r=n,n=`${n}_`)),[n,r]}__internal__createSiDef(e){const n=this.getTypeDef(e),r=e.toNumber();return[j.DoNotConstruct,j.Enum,j.Struct].includes(n.info)&&n.lookupName?{docs:n.docs,info:j.Si,lookupIndex:r,lookupName:this.__internal__names[r],type:this.registry.createLookupType(e)}:n}__internal__getLookupId(e){if(nt(e)){if(!this.registry.isLookupType(e))throw new Error(`PortableRegistry: Expected a lookup string type, found ${e}`);return parseInt(e.replace("Lookup",""),10)}else if($e(e))return e;return e.toNumber()}__internal__extract(e,n){const r=e.path.join("::");let a;const i=this.__internal__alias[n]||E4(e);try{if(i)a=this.__internal__extractAliasPath(n,i);else switch(e.def.type){case"Array":a=this.__internal__extractArray(n,e.def.asArray);break;case"BitSequence":a=this.__internal__extractBitSequence(n,e.def.asBitSequence);break;case"Compact":a=this.__internal__extractCompact(n,e.def.asCompact);break;case"Composite":a=this.__internal__extractComposite(n,e,e.def.asComposite);break;case"HistoricMetaCompat":a=this.__internal__extractHistoric(n,e.def.asHistoricMetaCompat);break;case"Primitive":a=this.__internal__extractPrimitive(n,e);break;case"Sequence":a=this.__internal__extractSequence(n,e.def.asSequence);break;case"Tuple":a=this.__internal__extractTuple(n,e.def.asTuple);break;case"Variant":a=this.__internal__extractVariant(n,e,e.def.asVariant);break;default:zb(e.def.type)}}catch(s){throw new Error(`PortableRegistry: ${n}${r?` (${r})`:""}: Error extracting ${Ye(e)}: ${s.message}`)}return re({docs:rf(e.docs),namespace:r},a)}__internal__extractArray(e,{len:n,type:r}){const a=n.toNumber();if(a>2048)throw new Error("Only support for [Type; <length>], where length <= 2048");return Xt(this.registry,{info:j.VecFixed,length:a,sub:this.__internal__createSiDef(r)})}__internal__extractBitSequence(e,{bitOrderType:n,bitStoreType:r}){const a=this.__internal__createSiDef(n),i=this.__internal__createSiDef(r),[s,o]=nf.includes(a.namespace||"")?[a,i]:[i,a];if(!s.namespace||!nf.includes(s.namespace))throw new Error(`Unexpected bitOrder found as ${s.namespace||"<unknown>"}`);if(o.info!==j.Plain||o.type!=="u8")throw new Error(`Only u8 bitStore is currently supported, found ${o.type}`);return Gp.includes(s.namespace),{info:j.Plain,type:"BitVec"}}__internal__extractCompact(e,{type:n}){return Xt(this.registry,{info:j.Compact,sub:this.__internal__createSiDef(n)})}__internal__extractComposite(e,{params:n,path:r},{fields:a}){if(r.length){const i=r[0].toString(),s=r[r.length-1].toString();if(r.length===1&&i==="BTreeMap"){if(n.length!==2)throw new Error(`BTreeMap requires 2 parameters, found ${n.length}`);return Xt(this.registry,{info:j.BTreeMap,sub:n.map(({type:o})=>this.__internal__createSiDef(o.unwrap()))})}else if(r.length===1&&i==="BTreeSet"){if(n.length!==1)throw new Error(`BTreeSet requires 1 parameter, found ${n.length}`);return Xt(this.registry,{info:j.BTreeSet,sub:this.__internal__createSiDef(n[0].type.unwrap())})}else if(["Range","RangeInclusive"].includes(i)){if(n.length!==1)throw new Error(`Range requires 1 parameter, found ${n.length}`);return Xt(this.registry,{info:i==="Range"?j.Range:j.RangeInclusive,sub:this.__internal__createSiDef(n[0].type.unwrap()),type:i})}else if(["WrapperKeepOpaque","WrapperOpaque"].includes(s)){if(n.length!==1)throw new Error(`WrapperOpaque requires 1 parameter, found ${n.length}`);return Xt(this.registry,{info:s==="WrapperKeepOpaque"?j.WrapperKeepOpaque:j.WrapperOpaque,sub:this.__internal__createSiDef(n[0].type.unwrap()),type:s})}}return k4.some(i=>qd(i,r))?this.__internal__extractCompositeSet(e,n,a):this.__internal__extractFields(e,a)}__internal__extractCompositeSet(e,n,r){if(n.length!==1||r.length!==1)throw new Error("Set handling expects param/field as single entries");return Xt(this.registry,{info:j.Set,length:this.registry.createTypeUnsafe(this.registry.createLookupType(r[0].type),[]).bitLength(),sub:this.getSiType(n[0].type.unwrap()).def.asVariant.variants.map(({index:a,name:i})=>({index:a.toNumber(),info:j.Plain,name:i.toString(),type:"Null"}))})}__internal__extractFields(e,n){let r=!0,a=!0;const i=n.length;for(let d=0;d<i;d++){const{name:f}=n[d];r=r&&f.isSome,a=a&&f.isNone}if(!a&&!r)throw new Error("Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)");if(i===0)return{info:j.Null,type:"Null"};if(a&&i===1){const d=this.__internal__createSiDef(n[0].type);return re({},d,e===-1?null:{lookupIndex:e,lookupName:this.__internal__names[e],lookupNameRoot:d.lookupName},n[0].typeName.isSome?{typeName:Ts(n[0].typeName.unwrap())}:null)}const[s,o]=this.__internal__extractFieldsAlias(n);return Xt(this.registry,re({info:a?j.Tuple:j.Struct,sub:s},o.size?{alias:o}:null,e===-1?null:{lookupIndex:e,lookupName:this.__internal__names[e]}))}__internal__extractFieldsAlias(e){const n=new Map,r=e.length,a=new Array(r);for(let i=0;i<r;i++){const{docs:s,name:o,type:d,typeName:f}=e[i],p=this.__internal__createSiDef(d);if(o.isNone)a[i]=p;else{const[g,P]=this.sanitizeField(o);g&&P&&n.set(g,P),a[i]=re({docs:rf(s),name:g},p,f.isSome?{typeName:Ts(f.unwrap())}:null)}}return[a,n]}__internal__extractHistoric(e,n){return re({displayName:n.toString(),isFromSi:!0},Yn(n))}__internal__extractPrimitive(e,n){const r=n.def.asPrimitive.type.toString();return{info:j.Plain,type:T4[r]||r.toLowerCase()}}__internal__extractAliasPath(e,n){return{info:j.Plain,type:n}}__internal__extractSequence(e,{type:n}){const r=this.__internal__createSiDef(n);return r.type==="u8"?{info:j.Plain,type:"Bytes"}:Xt(this.registry,{info:j.Vec,lookupIndex:e,lookupName:this.__internal__names[e],sub:r})}__internal__extractTuple(e,n){if(n.length===0)return{info:j.Null,type:"Null"};if(n.length===1)return this.getTypeDef(n[0]);const r=n.map(a=>this.__internal__createSiDef(a));return Xt(this.registry,{info:j.Tuple,lookupIndex:e,lookupName:this.__internal__names[e],sub:r})}__internal__extractVariant(e,{params:n,path:r},{variants:a}){if(r.length){const i=r[0].toString();if(i==="Option"){if(n.length!==1)throw new Error(`Option requires 1 parameter, found ${n.length}`);return Xt(this.registry,{info:j.Option,sub:this.__internal__createSiDef(n[0].type.unwrap())})}else if(i==="Result"){if(n.length!==2)throw new Error(`Result requires 2 parameters, found ${n.length}`);return Xt(this.registry,{info:j.Result,sub:n.map(({type:s},o)=>re({name:["Ok","Error"][o]},this.__internal__createSiDef(s.unwrap())))})}}return a.length===0?{info:j.Null,type:"Null"}:this.__internal__extractVariantEnum(e,a)}__internal__extractVariantEnum(e,n){const r=[];return n.slice().sort((a,i)=>a.index.cmp(i.index)).forEach(({fields:a,index:i,name:s})=>{const o=i.toNumber();for(;r.length!==o;)r.push({index:r.length,info:j.Null,name:`__Unused${r.length}`,type:"Null"});r.push(re(this.__internal__extractFields(-1,a),{index:o,name:s.toString()}))}),Xt(this.registry,{info:j.Enum,lookupIndex:e,lookupName:this.__internal__names[e],sub:r})}}function Zd(t,e=[]){for(let n=0,r=t.length;n<r;n++){const a=t[n];Array.isArray(a)?Zd(a,e):e.push(a)}return[...new Set(e)]}function gi(t,e){const n=t.getTypeDef(e);return n.lookupName||n.type}function Pn(t,{sub:e}){const{lookupName:n,type:r}=e;return Wd([n||r])}function Cr(t,{sub:e}){return Wd(e.map(({lookupName:n,type:r})=>n||r))}function _a(t,{info:e}){throw new Error(`Unhandled: Unable to create and validate type from ${t} (info=${j[e]})`)}const j4={[j.BTreeMap]:Cr,[j.BTreeSet]:Pn,[j.Compact]:Pn,[j.DoNotConstruct]:_a,[j.Enum]:Cr,[j.HashMap]:Cr,[j.Int]:_a,[j.Linkage]:Pn,[j.Null]:_a,[j.Option]:Pn,[j.Plain]:(t,e)=>e.lookupName||e.type,[j.Range]:Pn,[j.RangeInclusive]:Pn,[j.Result]:Cr,[j.Set]:Cr,[j.Si]:_a,[j.Struct]:Cr,[j.Tuple]:Cr,[j.UInt]:_a,[j.Vec]:Pn,[j.VecFixed]:Pn,[j.WrapperKeepOpaque]:Pn,[j.WrapperOpaque]:Pn};function Wd(t){const e=t.length,n=new Array(e);for(let r=0;r<e;r++){const a=t[r],i=Yn(a);n[r]=j4[i.info](a,i)}return n}const U4=Kt("metadata");function X4(t,e,n){const r=Zd(Wd(n)).filter(a=>!t.hasType(a)&&!t.isLookupType(a)).sort();if(r.length!==0){const a=`Unknown types found, no types for ${r.join(", ")}`;if(e)throw new Error(a);U4.warn(a)}return n}function Jp(t,e){return e.map(({type:n})=>t.getTypeDef(n).type)}function sf(t,e){return t.getSiType(e).def.asVariant.variants.map(({fields:n})=>Jp(t,n))}function D4({lookup:t,pallets:e}){return e.reduce((n,{calls:r,constants:a,events:i,storage:s})=>(n.push([Jp(t,a)]),r.isSome&&n.push(sf(t,r.unwrap().type)),i.isSome&&n.push(sf(t,i.unwrap().type)),s.isSome&&n.push(s.unwrap().items.map(({type:o})=>{if(o.isPlain)return[t.getTypeDef(o.asPlain).type];const{hashers:d,key:f,value:p}=o.asMap;return d.length===1?[t.getTypeDef(p).type,t.getTypeDef(f).type]:[t.getTypeDef(p).type,...t.getSiType(f).def.asTuple.map(g=>t.getTypeDef(g).type)]})),n),[])}function F4(t,e,n){return X4(t,n,Zd(D4(e)))}function q4(t){const e=t.map(r=>r.toString().trim()),n=e.findIndex(r=>!r.length);return n===-1?e:e.slice(0,n)}function Z4(t,{extrinsic:e,lookup:n,pallets:r}){return t.createTypeUnsafe("MetadataLatest",[{extrinsic:e,lookup:{types:n.types.map(({id:a,type:i})=>t.createTypeUnsafe("PortableType",[{id:a,type:re({},i,{docs:q4(i.docs)})}]))},pallets:r.map(({calls:a,index:i,name:s})=>({calls:t.createTypeUnsafe("Option<PalletCallMetadataLatest>",[a.unwrapOr(null)]),index:i,name:s}))}]).toJSON()}function W4(t){return t.isPlain?t.asPlain:t.asMap.value}function Ac(t,e,n){const r=gi(t.lookup,W4(e));return n?`Option<${r}>`:r}function Ba(t,{type:e},n,r){const a={},i=t.getSiType(e).def.asVariant.variants;for(let s=0,o=i.length;s<o;s++)wt(a,i[s],r,n,s);return a}const an={extrinsic:{},payload:{}},G4={LimitParathreadCommits:an,OnlyStakingAndClaims:an,PrevalidateAttests:an,RestrictFunctionality:an,TransactionCallFilter:an,ValidateDoubleVoteReports:an},K4={DisallowSigned:an},Y4={ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"TAssetConversion"},payload:{}}},of={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}},cf={extrinsic:{tip:"Compact<Balance>"},payload:{}},J4={ChargeTransactionPayment:cf,CheckBlockGasLimit:an,CheckEra:of,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMortality:of,CheckNonZeroSender:an,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:an,LockStakingStatus:an,SkipCheckIfFeeless:cf,ValidateEquivocationReport:an},_p=re({},J4,G4,K4,Y4),Zo=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function _4(t,e={}){const n=[...Object.keys(_p),...Object.keys(e)];return t.filter(r=>!n.includes(r))}function df(t,e,n={}){return t.map(r=>n[r]||_p[r]).filter(r=>!!r).reduce((r,a)=>re(r,a[e]),{})}function Q4(t,e){if(!(e!=null&&e.length))return{DataType:fr};const n=e.subarray(0,2);return{DataType:t.findMetaEvent(n),value:{data:e.subarray(2),index:n}}}class Qp extends to{constructor(e,n,r,a="<unknown>",i="<unknown>"){const s=(r==null?void 0:r.fields)||[];super(e,s.map(({type:d})=>e.createLookupType(d)),n),S(this,"__internal__meta"),S(this,"__internal__method"),S(this,"__internal__names",null),S(this,"__internal__section"),S(this,"__internal__typeDef"),this.__internal__meta=r,this.__internal__method=i,this.__internal__section=a,this.__internal__typeDef=s.map(({type:d})=>e.lookup.getTypeDef(d));const o=s.map(({name:d})=>e.lookup.sanitizeField(d)[0]).filter(d=>!!d);o.length===s.length&&(this.__internal__names=o,$r(this,o,(d,f)=>this[f]))}get meta(){return this.__internal__meta}get method(){return this.__internal__method}get names(){return this.__internal__names}get section(){return this.__internal__section}get typeDef(){return this.__internal__typeDef}toHuman(e,n){if(this.__internal__names!==null){const r={};for(let a=0,i=this.__internal__names.length;a<i;a++)r[this.__internal__names[a]]=this[a].toHuman(e,n);return r}return super.toHuman(e)}}class $4 extends gt{constructor(e,n){const{DataType:r,value:a}=Q4(e,n);super(e,{index:"EventId",data:r},a)}get data(){return this.getT("data")}get index(){return this.getT("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(e,n){return re({method:this.method,section:this.section},e?{docs:this.meta.docs.map(r=>r.toString())}:null,super.toHuman(e,n))}}const $p=4;let ev=class Cc extends gt{constructor(e,n,{isSigned:r}={}){super(e,{signature:"ExtrinsicSignatureV4",method:"Call"},Cc.decodeExtrinsic(e,n,r))}static decodeExtrinsic(e,n,r=!1){if(n instanceof Cc)return n;if(n instanceof e.createClassUnsafe("Call"))return{method:n};if(Pe(n)){const a=e.createTypeUnsafe("ExtrinsicSignatureV4",[n,{isSigned:r}]);return{method:e.createTypeUnsafe("Call",[n.subarray(a.encodedLength)]),signature:a}}return n||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get signature(){return this.getT("signature")}get version(){return $p}addSignature(e,n,r){return this.signature.addSignature(e,n,r),this}sign(e,n){return this.signature.sign(this.method,e,n),this}signFake(e,n){return this.signature.signFake(this.method,e,n),this}};const jc=128,tv=0,Wo=new Uint8Array,e1=4,t1=new Uint8Array([0]),n1=127,uf=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4"];function Os(t,e,n){if(e instanceof ro)return e.unwrap();const r=(n&jc)===jc,a=uf[n&n1]||uf[0];return t.createTypeUnsafe(a,[e,{isSigned:r,version:n}])}function nv(t,e,n=e1){return Pe(e)||Array.isArray(e)||Qe(e)?rv(t,me(e),n):e instanceof t.createClassUnsafe("Call")?Os(t,{method:e},n):Os(t,e,n)}function rv(t,e,n){if(!e.length)return Os(t,new Uint8Array,n);const[r,a]=bd(e),i=r+a.toNumber();if(i>e.length)throw new Error(`Extrinsic: length less than remainder, expected at least ${i}, found ${e.length}`);const s=e.subarray(r,i);return Os(t,s.subarray(1),s[0])}class av extends Qs{constructor(e,n,r){super(e,n,r);const a=Object.keys(e.getSignedExtensionTypes()),i=s=>this.inner.signature[s];for(let s=0,o=a.length;s<o;s++)xd(this,a[s],i)}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this.inner.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this.inner.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this.inner.method}get nonce(){return this.inner.signature.nonce}get signature(){return this.inner.signature.signature}get signer(){return this.inner.signature.signer}get tip(){return this.inner.signature.tip}get assetId(){return this.inner.signature.assetId}get type(){return this.inner.version}get inner(){return this.unwrap()}get version(){return this.type|(this.isSigned?jc:tv)}is(e){return this.method.is(e)}unwrap(){return super.unwrap()}}class ro extends av{constructor(e,n,{version:r}={}){super(e,nv(e,n,r)),S(this,"__internal__hashCache")}get hash(){return this.__internal__hashCache||(this.__internal__hashCache=super.hash),this.__internal__hashCache}addSignature(e,n,r){return this.inner.addSignature(e,n,r),this.__internal__hashCache=void 0,this}inspect(){const e=Ct(...this.toU8aInner());return{inner:this.isSigned?this.inner.inspect().inner:this.inner.method.inspect().inner,outer:[lt(e.length),new Uint8Array([this.version])]}}sign(e,n){return this.inner.sign(e,n),this.__internal__hashCache=void 0,this}signFake(e,n){return this.inner.signFake(e,n),this.__internal__hashCache=void 0,this}toHex(e){return Ke(this.toU8a(e))}toHuman(e,n){return re({},{isSigned:this.isSigned,method:this.method.toHuman(e,n)},this.isSigned?{assetId:this.assetId.toHuman(e,n),era:this.era.toHuman(e,n),nonce:this.nonce.toHuman(e,n),signature:this.signature.toHex(),signer:this.signer.toHuman(e,n),tip:this.tip.toHuman(e,n)}:null)}toJSON(){return this.toHex()}toRawType(){return"Extrinsic"}toU8a(e){const n=Ct(...this.toU8aInner());return e?n:La(n)}toU8aInner(){return[new Uint8Array([this.version]),this.inner.toU8a()]}}S(ro,"LATEST_EXTRINSIC_VERSION",$p);function iv(t){const e=t.toString(2);let n=0;for(;e[e.length-1-n]==="0";)n++;return n}function sv(t,e){if(Pe(e)||Qe(e)||Array.isArray(e))return cv(t,me(e));if(e){if(Wt(e))return ov(t,e)}else return[new sn(t),new sn(t)];throw new Error("Invalid data passed to Mortal era")}function ov(t,e){const{current:n,period:r}=e;let a=Math.pow(2,Math.ceil(Math.log2(r)));a=Math.min(Math.max(a,4),65536);const i=n%a,s=Math.max(a>>12,1),o=i/s*s;return[new sn(t,a),new sn(t,o)]}function cv(t,e){if(e.length===0)return[new sn(t),new sn(t)];const n=qn(e.subarray(0,1)).toNumber(),r=qn(e.subarray(1,2)).toNumber(),a=n+(r<<8),i=2<<a%16,s=Math.max(i>>12,1),o=(a>>4)*s;if(i<4||o>=i)throw new Error("Invalid data passed to Mortal era");return[new sn(t,i),new sn(t,o)]}function Uc(t=new Uint8Array){if(Pe(t))return!t.length||t[0]===0?new Uint8Array([0]):new Uint8Array([1,t[0],t[1]]);if(t){if(t instanceof i1)return Uc(t.toU8a());if(Qe(t))return Uc(Fn(t));if(Wt(t)){const e=Object.entries(t).map(([a,i])=>[a.toLowerCase(),i]),n=e.find(([a])=>a.toLowerCase()==="mortalera"),r=e.find(([a])=>a.toLowerCase()==="immortalera");return n?{MortalEra:n[1]}:r?{ImmortalEra:r[1]}:{MortalEra:t}}}else return new Uint8Array([0]);throw new Error("Invalid data passed to Era")}class r1 extends dn{constructor(e,n){super(e,t1)}}class a1 extends to{constructor(e,n){super(e,{period:sn,phase:sn},sv(e,n))}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return{period:Pc(this.period),phase:Pc(this.phase)}}toJSON(){return this.toHex()}toU8a(e){const n=this.period.toNumber(),r=Math.min(15,Math.max(1,iv(n)-1))+(this.phase.toNumber()/Math.max(n>>12,1)<<4);return new Uint8Array([r&255,r>>8])}birth(e){const n=this.phase.toNumber(),r=this.period.toNumber();return~~((Math.max(xt(e).toNumber(),n)-n)/r)*r+n}death(e){return this.birth(e)+this.period.toNumber()}}class i1 extends cn{constructor(e,n){super(e,{ImmortalEra:r1,MortalEra:a1},Uc(n))}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){if(!this.isImmortalEra)throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);return this.inner}get asMortalEra(){if(!this.isMortalEra)throw new Error(`Cannot convert '${this.type}' via asMortalEra`);return this.inner}get isImmortalEra(){return this.index===0}get isMortalEra(){return this.index>0}toU8a(e){return this.isMortalEra?this.asMortalEra.toU8a(e):this.asImmortalEra.toU8a(e)}}const lf=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4"];function dv(t,e,n=e1){return e instanceof s1?e.unwrap():t.createTypeUnsafe(lf[n]||lf[0],[e,{version:n}])}class s1 extends Qs{constructor(e,n,{version:r}={}){super(e,dv(e,n,r))}get blockHash(){return this.inner.blockHash}get era(){return this.inner.era}get genesisHash(){return this.inner.genesisHash||this.registry.createTypeUnsafe("Hash",[])}get method(){return this.inner.method}get nonce(){return this.inner.nonce}get specVersion(){return this.inner.specVersion||this.registry.createTypeUnsafe("u32",[])}get tip(){return this.inner.tip||this.registry.createTypeUnsafe("Compact<Balance>",[])}get transactionVersion(){return this.inner.transactionVersion||this.registry.createTypeUnsafe("u32",[])}get assetId(){return this.inner.assetId}eq(e){return this.inner.eq(e)}sign(e){const n=this.inner.sign(e);return{signature:Ke(n)}}toHuman(e,n){return this.inner.toHuman(e,n)}toJSON(){return this.toHex()}toRawType(){return"ExtrinsicPayload"}toString(){return this.toHex()}toU8a(e){return super.toU8a(e?{method:!0}:!1)}}class uv extends gt{constructor(e,n,{version:r=0}={}){throw super(e,{}),new Error(`Unsupported extrinsic payload version ${r}`)}}class lv extends gt{constructor(e,n,{isSigned:r=!1,version:a=0}={}){throw super(e,{}),new Error(`Unsupported ${r?"":"un"}signed extrinsic version ${a&n1}`)}}const ff={address:"Address",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",method:"Call",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};class fv extends gt{constructor(e,n){const r=re({},e.getSignedExtensionTypes(),e.getSignedExtensionExtra());super(e,re({},r,ff),n),S(this,"__internal__extraTypes"),this.__internal__extraTypes={};const a=i=>this.get(i);for(const[i,s]of Object.entries(r))ff[i]||(this.__internal__extraTypes[i]=s),xd(this,i,a)}get address(){return this.getT("address")}get blockHash(){return this.getT("blockHash")}get blockNumber(){return this.getT("blockNumber")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get runtimeVersion(){return this.getT("runtimeVersion")}get signedExtensions(){return this.getT("signedExtensions")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get version(){return this.getT("version")}toPayload(){const e={},n=Object.keys(this.__internal__extraTypes);for(let r=0,a=n.length;r<a;r++){const i=n[r],s=this.getT(i);(!(s instanceof zi)||s.isSome)&&(e[i]=s.toJSON())}return re(e,{address:this.address.toString(),blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),method:this.method.toHex(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map(r=>r.toString()),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber()})}toRaw(){const e=this.toPayload(),n=Ke(this.registry.createTypeUnsafe("ExtrinsicPayload",[e,{version:e.version}]).toU8a({method:!0}));return{address:e.address,data:n,type:"payload"}}}function hv(t,e,n,r){const a=n.length>256?t.hash(n):n;return e.sign(a,r)}class Xc extends gt{constructor(e,n){super(e,re({method:"Bytes"},e.getSignedExtensionTypes(),e.getSignedExtensionExtra()),n),S(this,"__internal__signOptions"),this.__internal__signOptions={withType:e.createTypeUnsafe("ExtrinsicSignature",[])instanceof cn}}inspect(){return super.inspect({method:!0})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}sign(e){return hv(this.registry,e,this.toU8a({method:!0}),this.__internal__signOptions)}}const pv=new Uint8Array(256).fill(1);function Go(t,e){return t.createTypeUnsafe("Address",[Pe(e)?Ke(e):e])}let mv=class Dc extends gt{constructor(e,n,{isSigned:r}={}){const a=e.getSignedExtensionTypes();super(e,re({signer:"Address",signature:"ExtrinsicSignature"},a),Dc.decodeExtrinsicSignature(n,r)),S(this,"__internal__signKeys"),this.__internal__signKeys=Object.keys(a),$r(this,this.__internal__signKeys,i=>this.get(i))}static decodeExtrinsicSignature(e,n=!1){if(e){if(e instanceof Dc)return e}else return Wo;return n?e:Wo}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}_injectSignature(e,n,r){for(let a=0,i=this.__internal__signKeys.length;a<i;a++){const s=this.__internal__signKeys[a],o=r.get(s);st(o)||this.set(s,o)}return this.set("signer",e),this.set("signature",n),this}addSignature(e,n,r){return this._injectSignature(Go(this.registry,e),this.registry.createTypeUnsafe("ExtrinsicSignature",[n]),new Xc(this.registry,r))}createPayload(e,n){const{era:r,runtimeVersion:{specVersion:a,transactionVersion:i}}=n;return new Xc(this.registry,re({},n,{era:r||t1,method:e.toHex(),specVersion:a,transactionVersion:i}))}sign(e,n,r){if(!(n!=null&&n.addressRaw))throw new Error(`Expected a valid keypair for signing, found ${Ye(n)}`);const a=this.createPayload(e,r);return this._injectSignature(Go(this.registry,n.addressRaw),this.registry.createTypeUnsafe("ExtrinsicSignature",[a.sign(n)]),a)}signFake(e,n,r){if(!n)throw new Error(`Expected a valid address for signing, found ${Ye(n)}`);const a=this.createPayload(e,r);return this._injectSignature(Go(this.registry,n),this.registry.createTypeUnsafe("ExtrinsicSignature",[pv]),a)}toU8a(e){return this.isSigned?super.toU8a(e):Wo}};function hf(t){if(Pe(t)||Array.isArray(t))return me(t);if(t){if(Qe(t))return Fn(t);if(nt(t))return mr(t.toString())}else return new Uint8Array;throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof t}`)}class o1 extends Ra{constructor(e,n=264,r){const a=hf(r);if(a.length*8<n&&a.some(i=>i))throw new Error(`Invalid AccountId provided, expected ${n>>3} bytes, found ${a.length}`);super(e,a,n)}eq(e){return super.eq(hf(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return Eh(this,this.registry.chainSS58)}toRawType(){return"AccountId"}}let Ns=class extends o1{constructor(e,n){super(e,256,n)}};class bv extends o1{constructor(e,n){super(e,264,n)}}const yv=239,pf=252,mf=253,bf=254,xv=new le(yv),gv=new le(1).shln(16),vv=new le(1).shln(32);function c1(t){return t instanceof vt?t.toBn():xn(t)||$e(t)||Qe(t)||Pe(t)||sa(t)?t:c1(mr(t))}let vt=class d1 extends yi{constructor(e,n=new le(0)){super(e,c1(n))}static calcLength(e){const n=xt(e);return n.lte(xv)?1:n.lt(gv)?2:n.lt(vv)?4:8}static readLength(e){const n=e[0];return n===pf?[1,2]:n===mf?[1,4]:n===bf?[1,8]:[0,1]}static writeLength(e){switch(e.length){case 2:return new Uint8Array([pf]);case 4:return new Uint8Array([mf]);case 8:return new Uint8Array([bf]);default:return new Uint8Array([])}}eq(e){return xn(e)||$e(e)?super.eq(e):super.eq(this.registry.createTypeUnsafe("AccountIndex",[e]))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){const e=d1.calcLength(this);return Eh(this.toU8a().subarray(0,e),this.registry.chainSS58)}toRawType(){return"AccountIndex"}};class wv extends gt{constructor(e,n){super(e,{header:"Header",extrinsics:"Vec<Extrinsic>"},n)}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.getT("extrinsics")}get hash(){return this.header.hash}get header(){return this.getT("header")}}function Gd(t,e){return e.fields.reduce((n,{name:r,type:a},i)=>(n[r.unwrapOr(`param${i}`).toString()]=t.createLookupType(a),n),{})}function Pv(t,e,n){const{args:r,callIndex:a}=e,i=a instanceof u1?a.toU8a():a,s=n||t.findMetaCall(i).meta;return{args:r,argsDef:Gd(t,s),callIndex:a,meta:s}}function Mv(t,e,n){const r=t.firstCallIndex.slice();r.set(e.subarray(0,2),0);const a=n||t.findMetaCall(r).meta;return{args:e.subarray(2),argsDef:Gd(t,a),callIndex:r,meta:a}}function Tv(t,e=new Uint8Array,n){if(Pe(e)||Qe(e))return Mv(t,me(e),n);if(Wt(e)&&e.callIndex&&e.args)return Pv(t,e,n);throw new Error(`Call: Cannot decode value '${e}' of type ${typeof e}`)}class u1 extends Ra{constructor(e,n){super(e,n,16)}toPrimitive(){return this.toHex()}}class Sv extends gt{constructor(e,n,r){var a=(...s)=>(super(...s),S(this,"_meta"),this);const i=Tv(e,n,r);try{a(e,{callIndex:u1,args:gt.with(i.argsDef)},i)}catch(s){let o="unknown.unknown";try{const d=e.findMetaCall(i.callIndex);o=`${d.section}.${d.method}`}catch{}throw new Error(`Call: failed decoding ${o}:: ${s.message}`)}this._meta=i.meta}get args(){return[...this.getT("args").values()]}get argsDef(){return Gd(this.registry,this.meta)}get argsEntries(){return[...this.getT("args").entries()]}get callIndex(){return this.getT("callIndex").toU8a()}get data(){return this.getT("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get section(){return this.registry.findMetaCall(this.callIndex).section}is(e){return e.callIndex[0]===this.callIndex[0]&&e.callIndex[1]===this.callIndex[1]}toHuman(e,n){let r;try{r=this.registry.findMetaCall(this.callIndex)}catch{}return re({args:this.argsEntries.reduce((a,[i,s])=>re(a,{[i]:s.toHuman(e,n)}),{}),method:r==null?void 0:r.method,section:r==null?void 0:r.section},e&&r?{docs:r.meta.docs.map(a=>a.toString())}:null)}toRawType(){return"Call"}}function Yi(t,e,n,r=!0){return n&&fe(n.unwrapOrDefault)?n:t.createTypeUnsafe(e,[r?Zr(n)||st(n)?null:Array.isArray(n)?n:[n]:n])}function kv(t,e,n){return e==="ss58Format"?Yi(t,"Option<u32>",n,!1):e==="tokenDecimals"?Yi(t,"Option<Vec<u32>>",n):e==="tokenSymbol"?Yi(t,"Option<Vec<Text>>",n):e==="isEthereum"?Yi(t,"Bool",n,!1):n}function Ov(t,e){return(e&&fe(e.entries)?[...e.entries()]:Object.entries(e||{})).reduce((n,[r,a])=>(n[r]=kv(t,r,a),n),{isEthereum:t.createTypeUnsafe("Bool",[]),ss58Format:t.createTypeUnsafe("Option<u32>",[]),tokenDecimals:t.createTypeUnsafe("Option<Vec<u32>>",[]),tokenSymbol:t.createTypeUnsafe("Option<Vec<Text>>",[])})}class Nv extends jp{constructor(e,n){super(e,Ov(e,n))}get isEthereum(){return this.getT("isEthereum")}get ss58Format(){return this.getT("ss58Format")}get tokenDecimals(){return this.getT("tokenDecimals")}get tokenSymbol(){return this.getT("tokenSymbol")}}const Vv=bn("aura"),Iv=bn("BABE"),Ev=bn("FRNK"),zv=bn("pow_"),Hv=bn("nmbs");function Lv(t,e,n){return n[t.createTypeUnsafe("RawAuraPreDigest",[e.toU8a(!0)]).slotNumber.mod(new le(n.length)).toNumber()]}function Rv(t,e,n){const r=t.createTypeUnsafe("RawBabePreDigestCompat",[e.toU8a(!0)]);return n[r.value.toNumber()]}function Bv(t,e){return t.createTypeUnsafe("AccountId",[e])}class Av extends Ra{constructor(e,n){super(e,$e(n)?Xn(n,{isLe:!1}):n,32)}get isAura(){return this.eq(Vv)}get isBabe(){return this.eq(Iv)}get isGrandpa(){return this.eq(Ev)}get isPow(){return this.eq(zv)}get isNimbus(){return this.eq(Hv)}extractAuthor(e,n){if(n!=null&&n.length){if(this.isAura)return Lv(this.registry,e,n);if(this.isBabe)return Rv(this.registry,e,n)}if(this.isPow||this.isNimbus)return Bv(this.registry,e)}toHuman(){return this.toString()}toRawType(){return"ConsensusEngineId"}toString(){return this.isAscii?Un(this):Ke(this)}}const yf=new Uint8Array([255]);function Cv(t,e){const n=mr(e);return n.length===32?t.createTypeUnsafe("AccountId",[n]):t.createTypeUnsafe("AccountIndex",[qn(n)])}function jv(t,e){if(e.length===32)return t.createTypeUnsafe("AccountId",[e]);if(e[0]===255)return t.createTypeUnsafe("AccountId",[e.subarray(1)]);const[n,r]=vt.readLength(e);return t.createTypeUnsafe("AccountIndex",[qn(e.subarray(n,n+r))])}function Uv(t,e){return e instanceof l1?e.inner:e instanceof Ns||e instanceof vt?e:xn(e)||$e(e)||sa(e)?t.createTypeUnsafe("AccountIndex",[e]):Array.isArray(e)||Qe(e)||Pe(e)?jv(t,me(e)):Cv(t,e)}class l1 extends Qs{constructor(e,n=new Uint8Array){super(e,Uv(e,n))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof vt?vt.calcLength(this.inner):this.inner.encodedLength}inspect(){const e=this.inner.toU8a().subarray(0,this._rawLength);return{outer:[new Uint8Array(this.inner instanceof vt?vt.writeLength(e):yf),e]}}toHex(){return Ke(this.toU8a())}toRawType(){return"Address"}toU8a(e){const n=this.inner.toU8a().subarray(0,this._rawLength);return e?n:Ct(this.inner instanceof vt?vt.writeLength(n):yf,n)}}function xf(t,e){return[0,32].includes(e.length)?{Id:e}:e.length===20?{Address20:e}:e.length<=8?{Index:t.createTypeUnsafe("AccountIndex",[e]).toNumber()}:e}function Xv(t,e){return e instanceof Ns?{Id:e}:Pe(e)?xf(t,e):e instanceof Fc?e:e instanceof vt||xn(e)||$e(e)?{Index:$e(e)?e:e.toNumber()}:nt(e)?xf(t,mr(e.toString())):e}class Fc extends cn{constructor(e,n){super(e,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},Xv(e,n))}inspect(){const{inner:e,outer:n=[]}=this.inner.inspect();return{inner:e,outer:[new Uint8Array([this.index]),...n]}}toString(){return this.value.toString()}}const Vs=128,Kd=0,Dv=127,f1=0;function gf(t){return t?new Uint8Array([Vs|f1]):new Uint8Array([Kd])}function Fv(t){return t.length?t.subarray(0,1):new Uint8Array([Kd])}function qv(t,e){return new Uint8Array([(new Ia(t,e.aye).isTrue?Vs:Kd)|t.createTypeUnsafe("Conviction",[e.conviction||f1]).index])}function Zv(t,e){return Pe(e)?Fv(e):st(e)||e instanceof Boolean||fi(e)?gf(new Ia(t,e).isTrue):$e(e)?gf(e<0):qv(t,e)}class Wv extends Ra{constructor(e,n){const r=Zv(e,n);super(e,r,8),S(this,"__internal__aye"),S(this,"__internal__conviction"),this.__internal__aye=(r[0]&Vs)===Vs,this.__internal__conviction=this.registry.createTypeUnsafe("Conviction",[r[0]&Dv])}get conviction(){return this.__internal__conviction}get isAye(){return this.__internal__aye}get isNay(){return!this.isAye}toHuman(e){return{conviction:this.conviction.toHuman(e),vote:this.isAye?"Aye":"Nay"}}toPrimitive(){return{aye:this.isAye,conviction:this.conviction.toPrimitive()}}toRawType(){return"Vote"}}function vf(t){return Pe(t)||Array.isArray(t)?me(t):Qe(t)||c3(t.toString())?Fn(t.toString()):nt(t)?me(t):t}class h1 extends Ra{constructor(e,n=new Uint8Array){super(e,vf(n),160)}eq(e){return!!e&&super.eq(vf(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return i3(this)}toRawType(){return"AccountId"}}const Gv=new Uint8Array([255]);function Kv(t,e){const n=mr(e);return n.length===20?t.createTypeUnsafe("EthereumAccountId",[n]):t.createTypeUnsafe("AccountIndex",[qn(n)])}function Yv(t,e){if(e.length===20)return t.createTypeUnsafe("EthereumAccountId",[e]);if(e[0]===255)return t.createTypeUnsafe("EthereumAccountId",[e.subarray(1)]);const[n,r]=vt.readLength(e);return t.createTypeUnsafe("AccountIndex",[qn(e.subarray(n,n+r))])}function Jv(t,e){return e instanceof p1?e.inner:e instanceof h1||e instanceof vt?e:Pe(e)||Array.isArray(e)||Qe(e)?Yv(t,me(e)):xn(e)||$e(e)||sa(e)?t.createTypeUnsafe("AccountIndex",[e]):Kv(t,e)}class p1 extends Qs{constructor(e,n=new Uint8Array){super(e,Jv(e,n))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof vt?vt.calcLength(this.inner):this.inner.encodedLength}toHex(){return Ke(this.toU8a())}toRawType(){return"Address"}toU8a(e){const n=this.inner.toU8a().subarray(0,this._rawLength);return e?n:Ct(this.inner instanceof vt?vt.writeLength(n):Gv,n)}}function _v(t,e){const n=e[0];if(n){if(n>=1&&n<=33){const r=n-1,a=e.subarray(1,r+1);return[t.createTypeUnsafe("Raw",[a]),1]}else if(n>=34&&n<=37)return[e.subarray(1,33),n-32]}else return[void 0,void 0];throw new Error(`Unable to decode Data, invalid indicator byte ${n}`)}function Qv(t,e){return Pe(e)||nt(e)?_v(t,me(e)):e?[e,void 0]:[void 0,void 0]}class $v extends cn{constructor(e,n){if(super(e,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...Qv(e,n)),this.isRaw&&this.asRaw.length>32)throw new Error("Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return this.index===2}get isKeccak256(){return this.index===4}get isNone(){return this.index===0}get isRaw(){return this.index===1}get isSha256(){return this.index===3}get isShaThree256(){return this.index===5}get encodedLength(){return this.toU8a().length}toU8a(){if(this.index===0)return new Uint8Array(1);if(this.index===1){const n=this.value.toU8a(!0),r=Math.min(n.length,32),a=new Uint8Array(r+1);return a.set([r+1],0),a.set(n.subarray(0,r),1),a}const e=new Uint8Array(33);return e.set([this.index+32],0),e.set(this.value.toU8a(),1),e}}const e6={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function t6(t){if(Pe(t)||!t||nt(t))return{key:t};if(t instanceof ao)return{key:t,method:t.method,section:t.section};if(fe(t))return{key:t(),method:t.method,section:t.section};if(Array.isArray(t)){const[e,n=[]]=t;if(!fe(e))throw new Error("Expected function input for key construction");if(e.meta&&e.meta.type.isMap){const r=e.meta.type.asMap;if(!Array.isArray(n)||n.length!==r.hashers.length)throw new Error(`Expected an array of ${r.hashers.length} values as params to a Map query`)}return{key:e(...n),method:e.method,section:e.section}}throw new Error(`Unable to convert input ${t} to StorageKey`)}function n6(t,e,n){let r=32;const a=n.length,i=new Array(a);for(let s=0;s<a;s++){const[o,d]=n[s],[f,p]=e6[o.type],g=p?t.createTypeUnsafe(gi(t.lookup,d),[e.subarray(r+f)]):t.createTypeUnsafe("Raw",[e.subarray(r,r+f)]);r+=f+(p?g.encodedLength:0),i[s]=g}return i}function r6(t,e,n){if(!n||!n.type.isMap)return[];const{hashers:r,key:a}=n.type.asMap,i=r.length===1?[a]:t.lookup.getSiType(a).def.asTuple;return n6(t,e,r.map((s,o)=>[s,i[o]]))}function a6(t){if(t instanceof ao||fe(t))return t.meta;if(Array.isArray(t)){const[e]=t;return e.meta}}function i6(t,e){if(e instanceof ao)return e.outputType;if(fe(e))return Ac(t,e.meta.type);if(Array.isArray(e)){const[n]=e;if(n.meta)return Ac(t,n.meta.type)}return"Raw"}let ao=class extends Hi{constructor(e,n,r={}){const{key:a,method:i,section:s}=t6(n);super(e,a),S(this,"__internal__args"),S(this,"__internal__meta"),S(this,"__internal__outputType"),S(this,"__internal__method"),S(this,"__internal__section"),this.__internal__outputType=i6(e,n),this.setMeta(a6(n),r.section||s,r.method||i)}get args(){return this.__internal__args}get meta(){return this.__internal__meta}get method(){return this.__internal__method}get outputType(){return this.__internal__outputType}get section(){return this.__internal__section}is(e){return e.section===this.section&&e.method===this.method}setMeta(e,n,r){this.__internal__meta=e,this.__internal__method=r||this.__internal__method,this.__internal__section=n||this.__internal__section,e&&(this.__internal__outputType=Ac(this.registry,e.type));try{this.__internal__args=r6(this.registry,this.toU8a(!0),e)}catch{}return this}toHuman(e,n){return this.__internal__args.length?this.__internal__args.map(r=>r.toHuman(void 0,n)):super.toHuman(void 0,n)}toRawType(){return"StorageKey"}};const s6=Object.freeze(Object.defineProperty({__proto__:null,BitVec:Wg,Bool:Ia,Bytes:Hi,Data:$v,F32:El,F64:zl,GenericAccountId:Ns,GenericAccountId32:Ns,GenericAccountId33:bv,GenericAccountIndex:vt,GenericAddress:Fc,GenericBlock:wv,GenericCall:Sv,GenericChainProperties:Nv,GenericConsensusEngineId:Av,GenericEthereumAccountId:h1,GenericEthereumLookupSource:p1,GenericEvent:$4,GenericEventData:Qp,GenericExtrinsic:ro,GenericExtrinsicEra:i1,GenericExtrinsicPayload:s1,GenericExtrinsicPayloadUnknown:uv,GenericExtrinsicPayloadV4:Xc,GenericExtrinsicSignatureV4:mv,GenericExtrinsicUnknown:lv,GenericExtrinsicV4:ev,GenericImmortalEra:r1,GenericLookupSource:l1,GenericMortalEra:a1,GenericMultiAddress:Fc,GenericSignerPayload:fv,GenericVote:Wv,I128:Bl,I16:Ll,I256:Al,I32:Lc,I64:Rl,I8:Hl,ISize:Cl,Null:fr,OptionBool:o7,StorageKey:ao,Text:Rp,Type:d7,U128:Xl,U16:Ul,U256:Dl,U32:yi,U64:sn,U8:jl,USize:Fl,bool:Ia,f32:El,f64:zl,i128:Bl,i16:Ll,i256:Al,i32:Lc,i64:Rl,i8:Hl,isize:Cl,u128:Xl,u16:Ul,u256:Dl,u32:yi,u64:sn,u8:jl,usize:Fl},Symbol.toStringTag,{value:"Module"}));function m1(t){return({name:e})=>t(e)}const Yd=m1(et),b1=m1(t=>t.toString());function o6(t,e){return t.callIndex[0]===e[0]&&t.callIndex[1]===e[1]}function c6(t,e,n,r){const a=r.fields,i=et(r.name),s=(...o)=>{if(a.length!==o.length)throw new Error(`Extrinsic ${e}.${i} expects ${a.length} arguments, got ${o.length}.`);return t.createTypeUnsafe("Call",[{args:o,callIndex:n},r])};return s.is=o=>o6(o,n),s.callIndex=n,s.meta=r,s.method=i,s.section=e,s.toJSON=()=>r.toJSON(),s}function y1({calls:t}){return t.isSome}function x1(t,e,n,r,a){const{fields:i,index:s}=n,o=i.length,d=new Array(o);for(let f=0;f<o;f++){const{name:p,type:g,typeName:P}=i[f];d[f]=re({name:et(p.unwrapOr(`param${f}`)),type:gi(e,g)},P.isSome?{typeName:P.unwrap()}:null)}return c6(t,r,new Uint8Array([a,s.toNumber()]),t.createTypeUnsafe("FunctionMetadataLatest",[re({args:d},n)]))}function d6(t,{lookup:e,pallets:n},r){const a={},i=n.filter(y1);for(let s=0,o=i.length;s<o;s++){const{calls:d,index:f,name:p}=i[s],g=et(p),P=r>=12?f.toNumber():s;wt(a,g,()=>Ba(e,d.unwrap(),Yd,T=>x1(t,e,T,g,P)))}return a}function Ko(t,e){return e.toNumber()>=2?t.createTypeUnsafe("StorageHasherV10",[e.toNumber()+1]):t.createTypeUnsafe("StorageHasherV10",[e])}function u6(t,e){return e.isMap?[re({},e.asMap,{hasher:Ko(t,e.asMap.hasher)}),1]:e.isDoubleMap?[re({},e.asDoubleMap,{hasher:Ko(t,e.asDoubleMap.hasher),key2Hasher:Ko(t,e.asDoubleMap.key2Hasher)}),2]:[e.asPlain,0]}function l6(t,e){const n=e.storage.unwrapOr(null);return t.createTypeUnsafe("ModuleMetadataV10",[re({},e,{storage:n?re({},n,{items:n.items.map(r=>re({},r,{type:t.createTypeUnsafe("StorageEntryTypeV10",u6(t,r.type))}))}):null})])}function f6(t,{modules:e}){return t.createTypeUnsafe("MetadataV10",[{modules:e.map(n=>l6(t,n))}])}function h6(t,{modules:e}){return t.createTypeUnsafe("MetadataV11",[{extrinsic:{signedExtensions:[],version:0},modules:e}])}function p6(t,{extrinsic:e,modules:n}){return t.createTypeUnsafe("MetadataV12",[{extrinsic:e,modules:n.map(r=>t.createTypeUnsafe("ModuleMetadataV12",[re({},r,{index:255})]))}])}function m6(t,e){return t.createTypeUnsafe("MetadataV13",[e])}const b6={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}};function y6({knownTypes:t},e){var n;return{...b6[e]??{},...((n=t.typesAlias)==null?void 0:n[e])??{}}}const x6=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function jn(t,e){const n=e.toString(),r=t.findIndex(({def:a})=>a.HistoricMetaCompat===n);return r!==-1?r:t.push({def:{HistoricMetaCompat:n}})-1}function g6(t,...e){for(let n=0,r=e.length;n<r;n++)jn(t,e[n])}function v6(t,e){return t.push({def:{Tuple:e}})-1}function Jd(t,e,n,r){return n.push({def:{Variant:{variants:r}},path:[`pallet_${t.toString()}`,"pallet",e]})-1}function w6(t,e,n){t.register({OriginCaller:{_enum:e.map((r,a)=>[r.name.toString(),n>=12?r.index.toNumber():a]).sort((r,a)=>r[1]-a[1]).reduce((r,[a,i])=>{for(let s=Object.keys(r).length;s<i;s++)r[`Empty${s}`]="Null";return r[a]=c5[a]||"Null",r},{})}})}function Li(t,e){e.forEach(n=>{const r=Object.keys(t).find(a=>n.eq(a));if(r)n.setOverride(t[r]);else{const a=n.toString(),i=Object.entries(t).reduce((s,[o,d])=>x6.reduce((f,[p,g])=>f.replace(`${p}${o}${g}`,`${p}${d}${g}`),s),a);a!==i&&n.setOverride(i)}})}function P6(t,e,n,r,a){const i=r.map(({args:s,docs:o,name:d},f)=>(Li(a,s.map(({type:p})=>p)),e.createTypeUnsafe("SiVariant",[{docs:o,fields:s.map(({name:p,type:g})=>e.createTypeUnsafe("SiField",[{name:p,type:jn(t,g)}])),index:f,name:d}])));return e.createTypeUnsafe("PalletCallMetadataV14",[{type:Jd(n,"Call",t,i)}])}function M6(t,e,n,r){return n.map(({docs:a,name:i,type:s,value:o})=>(Li(r,[s]),e.createTypeUnsafe("PalletConstantMetadataV14",[{docs:a,name:i,type:jn(t,s),value:o}])))}function T6(t,e,n,r,a){const i=r.map(({docs:s,name:o},d)=>e.createTypeUnsafe("SiVariant",[{docs:s,fields:[],index:d,name:o}]));return e.createTypeUnsafe("PalletErrorMetadataV14",[{type:Jd(n,"Error",t,i)}])}function S6(t,e,n,r,a){const i=r.map(({args:s,docs:o,name:d},f)=>(Li(a,s),e.createTypeUnsafe("SiVariant",[{docs:o,fields:s.map(p=>e.createTypeUnsafe("SiField",[{type:jn(t,p)}])),index:f,name:d}])));return e.createTypeUnsafe("PalletEventMetadataV14",[{type:Jd(n,"Event",t,i)}])}function Yo(t,e,n,{hashers:r,isLinked:a,isOptional:i,keys:s,value:o}){return Li(n,[o,...Array.isArray(s)?s:[s]]),e.createTypeUnsafe("StorageEntryTypeV14",[{Map:{hashers:r,key:r.length===1?jn(t,s[0]):v6(t,s.map(d=>jn(t,d))),value:a?jn(t,`(${i?`Option<${o.toString()}>`:o.toString()}, Linkage<${s[0].toString()}>)`):jn(t,o)}}])}function k6(t,e,{items:n,prefix:r},a){return e.createTypeUnsafe("PalletStorageMetadataV14",[{items:n.map(({docs:i,fallback:s,modifier:o,name:d,type:f})=>{let p;if(f.isPlain){const g=f.asPlain;Li(a,[g]),p=e.createTypeUnsafe("StorageEntryTypeV14",[{Plain:jn(t,g)}])}else if(f.isMap){const g=f.asMap;p=Yo(t,e,a,{hashers:[g.hasher],isLinked:g.linked.isTrue,isOptional:o.isOptional,keys:[g.key],value:g.value})}else if(f.isDoubleMap){const g=f.asDoubleMap;p=Yo(t,e,a,{hashers:[g.hasher,g.key2Hasher],isLinked:!1,isOptional:o.isOptional,keys:[g.key1,g.key2],value:g.value})}else{const g=f.asNMap;p=Yo(t,e,a,{hashers:g.hashers,isLinked:!1,isOptional:o.isOptional,keys:g.keyVec,value:g.value})}return e.createTypeUnsafe("StorageEntryMetadataV14",[{docs:i,fallback:s,modifier:o,name:d,type:p}])}),prefix:r}])}function O6(t,{signedExtensions:e,version:n}){return t.createTypeUnsafe("ExtrinsicMetadataV14",[{signedExtensions:e.map(r=>({identifier:r,type:0})),type:0,version:n}])}function N6(t,e,n,{calls:r,constants:a,errors:i,events:s,storage:o}){const d=y6(e,et(n.name));return e.createTypeUnsafe("PalletMetadataV14",[{calls:r&&P6(t,e,n.name,r,d),constants:M6(t,e,a,d),errors:i&&T6(t,e,n.name,i),events:s&&S6(t,e,n.name,s,d),index:n.index,name:n.name,storage:o&&k6(t,e,o,d)}])}function V6(t,e,n){const r=[];g6(r,"Null","u8","u16","u32","u64"),w6(t,e.modules,n);const a=O6(t,e.extrinsic),i=e.modules.map(s=>N6(r,t,s,{calls:s.calls.unwrapOr(null),constants:s.constants,errors:s.errors.length?s.errors:null,events:s.events.unwrapOr(null),storage:s.storage.unwrapOr(null)}));return t.createTypeUnsafe("MetadataV14",[{extrinsic:a,lookup:{types:r.map((s,o)=>t.createTypeUnsafe("PortableType",[{id:o,type:s}]))},pallets:i}])}function I6(t,e,n){var r;const a=e.lookup.paramTypes.SpRuntimeUncheckedExtrinsic;return t.createTypeUnsafe("MetadataV15",[re({},e,{extrinsic:t.createTypeUnsafe("ExtrinsicMetadataV15",[re({},e.extrinsic,{addressType:a==null?void 0:a[0].type.unwrapOr(0),callType:a==null?void 0:a[1].type.unwrapOr(0),extraType:a==null?void 0:a[3].type.unwrapOr(0),signatureType:a==null?void 0:a[2].type.unwrapOr(0)})]),outerEnums:t.createTypeUnsafe("OuterEnums15",[{callType:a==null?void 0:a[1].type.unwrapOr(0),eventType:(r=e.lookup.paramTypes.FrameSystemEventRecord)==null?void 0:r[0].type.unwrapOr(0)}])})])}function E6(t,e,n){return e}const wf=1635018093;class z6 extends yi{constructor(e,n){if(super(e,n),!this.isEmpty&&!this.eq(wf))throw new Error(`MagicNumber mismatch: expected ${e.createTypeUnsafe("u32",[wf]).toHex()}, found ${this.toHex()}`)}}const H6=[15,14,13,12,11,10,9],L6=H6[0],R6=14;let g1=class v1 extends gt{constructor(e,n){super(e,{magicNumber:z6,metadata:"MetadataAll"},n),S(this,"__internal__converted",new Map),S(this,"__internal__assertVersion",r=>{if(this.version>r)throw new Error(`Cannot convert metadata from version ${this.version} to ${r}`);return this.version===r}),S(this,"__internal__getVersion",(r,a)=>{if(r!=="latest"&&this.__internal__assertVersion(r)){const i=`asV${r}`;return this.__internal__metadata()[i]}if(!this.__internal__converted.has(r)){const i=r==="latest"?`asV${L6}`:`asV${r-1}`;this.__internal__converted.set(r,a(this.registry,this[i],this.version))}return this.__internal__converted.get(r)}),S(this,"__internal__metadata",()=>this.getT("metadata"))}get asCallsOnly(){return new v1(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createTypeUnsafe("MetadataAll",[Z4(this.registry,this.asLatest),R6])})}get asV9(){return this.__internal__assertVersion(9),this.__internal__metadata().asV9}get asV10(){return this.__internal__getVersion(10,f6)}get asV11(){return this.__internal__getVersion(11,h6)}get asV12(){return this.__internal__getVersion(12,p6)}get asV13(){return this.__internal__getVersion(13,m6)}get asV14(){return this.__internal__getVersion(14,V6)}get asV15(){return this.__internal__getVersion(15,I6)}get asLatest(){return this.__internal__getVersion("latest",E6)}get magicNumber(){return this.getT("magicNumber")}get version(){return this.__internal__metadata().index}getUniqTypes(e){return F4(this.registry,this.asLatest,e)}toJSON(){return this.asLatest,super.toJSON()}};const w1=new Uint8Array([109,101,116,97,9]),Pf=w1.length-1;function B6(t,e){if(e.length===0)return w1;if(e[Pf]===9)try{return new g1(t,e)}catch{e[Pf]=10}return e}let Is=class extends g1{constructor(e,n){super(e,Pe(n)||nt(n)?B6(e,me(n)):n)}};function P1(t,{pallets:e},n){const r={};for(let a=0,i=e.length;a<i;a++){const{constants:s,name:o}=e[a];s.isEmpty||wt(r,et(o),()=>Wr({},s,d=>{const f=t.createTypeUnsafe(t.createLookupType(d.type),[Fn(d.value.toHex())]);return f.meta=d,f},Yd))}return r}function M1(t,e){return re({args:e.fields.map(({type:n})=>t.getTypeDef(n).type)},e)}function A6(t,{lookup:e,pallets:n},r){const a={};for(let i=0,s=n.length;i<s;i++){const{errors:o,index:d,name:f}=n[i];if(o.isSome){const p=r>=12?d.toNumber():i;wt(a,et(f),()=>Ba(e,o.unwrap(),b1,g=>({is:P=>on(P)&&on(P.index)&&P.index.eq(p)&&(Pe(P.error)?P.error[0]===g.index.toNumber():on(P.error)&&P.error.eq(g.index)),meta:t.createTypeUnsafe("ErrorMetadataLatest",[M1(e,g)])})))}}return a}function T1({events:t}){return t.isSome}function C6(t,{lookup:e,pallets:n},r){const a={},i=n.filter(T1);for(let s=0,o=i.length;s<o;s++){const{events:d,index:f,name:p}=i[s],g=r>=12?f.toNumber():s;wt(a,et(p),()=>Ba(e,d.unwrap(),b1,P=>({is:T=>on(T)&&Pe(T.index)&&g===T.index[0]&&P.index.eq(T.index[1]),meta:t.createTypeUnsafe("EventMetadataLatest",[M1(e,P)])})))}return a}const j6=t=>xa(t,128),U6={Blake2_128:t=>ur(t,128),Blake2_128Concat:t=>Ct(ur(t,128),me(t)),Blake2_256:t=>ur(t,256),Identity:t=>me(t),Twox128:t=>xa(t,128),Twox256:t=>xa(t,256),Twox64Concat:t=>Ct(xa(t,64),me(t))};function X6(t){return U6[t.type]||j6}const io={args:[],hashers:[],keys:[]};function D6(t){return!st(t)}function S1({method:t,section:e},{args:n,keys:r}){if(Array.isArray(n)){if(n.filter(D6).length!==r.length)throw new Error(`Call to ${et(e||"unknown")}.${et(t||"unknown")} needs ${r.length} arguments, found [${n.join(", ")}]`)}else throw new Error(`Call to ${et(e||"unknown")}.${et(t||"unknown")} needs ${r.length} arguments`)}function k1(t,e,{args:n,hashers:r,keys:a}){const i=a.length,s=new Array(i);for(let o=0;o<i;o++)s[o]=X6(r[o])(t.createTypeUnsafe(t.createLookupType(a[o]),[n[o]]).toU8a());return[[xa(e.prefix,128),xa(e.method,128)],s]}function Jo(t,e,n){S1(e,n);const{meta:r}=e,[a,i]=k1(t,e,n);let s=[];if(r.type.isMap){const{hashers:d,key:f}=r.type.asMap;s=d.length===1?[`${d[0].type}(${gi(t.lookup,f)})`]:t.lookup.getSiType(f).def.asTuple.map((p,g)=>`${d[g].type}(${gi(t.lookup,p)})`)}const o=["module","method"].concat(...n.args.map((d,f)=>s[f]));return{inner:a.concat(...i).map((d,f)=>({name:o[f],outer:[d]}))}}function Es(t,e,n){const[r,a]=k1(t,e,n);return Ct(...r,...a)}function _o(t,e,n){return S1(e,n),La(Es(t,e,n))}function F6(t,e,n){const{meta:{type:r}}=e;return(...a)=>{if(r.isPlain)return n.skipHashing?{inner:[],name:"wellKnown",outer:[me(n.key)]}:Jo(t,e,io);const{hashers:i,key:s}=r.asMap;return i.length===1?Jo(t,e,{args:a,hashers:i,keys:[s]}):Jo(t,e,{args:a,hashers:i,keys:t.lookup.getSiType(s).def.asTuple})}}function q6(t,e,n){const{meta:{type:r}}=e;let a=null;return(...i)=>{if(r.isPlain)return a||(a=n.skipHashing?La(me(n.key)):_o(t,e,io)),a;const{hashers:s,key:o}=r.asMap;return s.length===1?_o(t,e,{args:i,hashers:s,keys:[o]}):_o(t,e,{args:i,hashers:s,keys:t.lookup.getSiType(o).def.asTuple})}}function Z6(t,e,n){const{meta:r,method:a,prefix:i,section:s}=e,o=q6(t,e,n);return o.inspect=F6(t,e,n),o.meta=r,o.method=et(a),o.prefix=i,o.section=s,o.toJSON=()=>re({storage:{method:a,prefix:i,section:s}},r.toJSON()),o}function W6(t,{meta:{docs:e,name:n,type:r},section:a},{method:i},s){const o=t.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:e,fallback:t.createTypeUnsafe("Bytes",[]),modifier:t.createTypeUnsafe("StorageEntryModifierLatest",[1]),name:n,type:t.createTypeUnsafe("StorageEntryTypeLatest",[r.asMap.key,0])}]);s.meta=o;const d=(...f)=>t.createTypeUnsafe("StorageKey",[s(...f),{method:i,section:a}]);return d.meta=o,d}function G6(t,e,n){const{meta:{type:r},method:a,section:i}=e;return n.iterKey=W6(t,e,n,(...s)=>{if(s.length&&(r.isPlain||s.length>=r.asMap.hashers.length))throw new Error(`Iteration of ${et(i||"unknown")}.${et(a||"unknown")} needs arguments to be at least one less than the full arguments, found [${s.join(", ")}]`);if(s.length&&r.isMap){const{hashers:o,key:d}=r.asMap,f=o.length===1?[d]:t.lookup.getSiType(d).def.asTuple;return new dn(t,Es(t,e,{args:s,hashers:o.slice(0,s.length),keys:f.slice(0,s.length)}))}return new dn(t,Es(t,e,io))}),n}function O1(t,e,n){const{meta:{type:r}}=e,a=Z6(t,e,n);return r.isMap&&G6(t,e,a),a.keyPrefix=(...i)=>a.iterKey&&a.iterKey(...i)||vs(a())[1],a}function Mf(t,e){const n=e.toLowerCase();return t.lookup.types.find(r=>r.type.def.isPrimitive&&r.type.def.asPrimitive.toString().toLowerCase()===n||r.type.def.isHistoricMetaCompat&&r.type.def.asHistoricMetaCompat.toString().toLowerCase()===n)}function K6(t,e){let n=Mf(t,e);if(!n&&(e==="Bytes"||e.startsWith("[u8;"))){const r=Mf(t,"u8");if(r)if(e==="Bytes")n=t.lookup.types.find(a=>a.type.def.isSequence&&a.type.def.asSequence.type.eq(r.id)||a.type.def.isHistoricMetaCompat&&a.type.def.asHistoricMetaCompat.eq(e));else{const a=Yn(e);n=t.lookup.types.find(i=>i.type.def.isArray&&i.type.def.asArray.eq({len:a.length,type:r.id})||i.type.def.isHistoricMetaCompat&&i.type.def.asHistoricMetaCompat.eq(e))}}return n||console.warn(`Unable to map ${e} to a lookup index`),n}function N1({method:t,prefix:e,section:n},r,{docs:a,type:i}){return s=>{var o;return O1(s,{meta:s.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:s.createTypeUnsafe("Vec<Text>",[[a]]),modifier:s.createTypeUnsafe("StorageEntryModifierLatest",["Required"]),name:s.createTypeUnsafe("Text",[t]),toJSON:()=>r,type:s.createTypeUnsafe("StorageEntryTypeLatest",[{Plain:((o=K6(s,i))==null?void 0:o.id)||0}])}]),method:t,prefix:e,section:n},{key:r,skipHashing:!0})}}const Y6="Substrate",J6="substrate";function ha(t,e,n){return N1({method:t,prefix:Y6,section:J6},e,n)}const _6={changesTrieConfig:ha("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:ha("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:ha("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),extrinsicIndex:ha("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:ha("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"}),intrablockEntropy:ha("intrablockEntropy",":intrablock_entropy",{docs:"Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.",type:"[u8; 32]"})};function Q6(t){const e={},n=Object.entries(_6);for(let r=0,a=n.length;r<a;r++)e[n[r][0]]=n[r][1](t);return{substrate:e}}const $6="palletVersion",ew=":__STORAGE_VERSION__:",tw={docs:"Returns the current pallet version from storage",type:"u16"};function nw(t,{pallets:e},n){const r=Q6(t);for(let a=0,i=e.length;a<i;a++){const{name:s,storage:o}=e[a];if(o.isSome){const d=et(s),{items:f,prefix:p}=o.unwrap(),g=p.toString();wt(r,d,()=>Wr({palletVersion:N1({method:$6,prefix:g,section:d},Es(t,{method:ew,prefix:s.toString()},io),tw)(t)},f,P=>O1(t,{meta:P,method:P.name.toString(),prefix:g,section:d},{}),Yd))}}return r}function rw(t,e){if(!(e instanceof Is))throw new Error("You need to pass a valid Metadata instance to Decorated");const n=e.asLatest,r=e.version;return{consts:P1(t,n),errors:A6(t,n,r),events:C6(t,n,r),query:nw(t,n),registry:t,tx:d6(t,n,r)}}const aw=new Uint8Array(2),Tf=Kt("registry");function Sf(t,e){return parseInt(t,10)-parseInt(e,10)}function V1(t){return t.toString()}function I1(t,e){const n=e.length,r=new Array(n);for(let a=0;a<n;a++)r[a]=t.getTypeDef(e[a].type).type;return r}function zs(t){const e=Object.keys(t);for(let n=0,r=e.length;n<r;n++)delete t[e[n]]}function _d({index:t}){return t.toString()}function iw(t,{lookup:e,pallets:n},r,a){zs(a);for(let i=0,s=n.length;i<s;i++){const{errors:o,index:d,name:f}=n[i];if(o.isSome){const p=et(f);wt(a,r>=12?d.toNumber():i,()=>Ba(e,o.unwrap(),_d,({docs:g,fields:P,index:T,name:k})=>({args:I1(e,P),docs:g.map(V1),fields:P,index:T.toNumber(),method:k.toString(),name:k.toString(),section:p})))}}}function sw(t,{lookup:e,pallets:n},r,a){const i=n.filter(T1);zs(a);for(let s=0,o=i.length;s<o;s++){const{events:d,index:f,name:p}=i[s];wt(a,r>=12?f.toNumber():s,()=>Ba(e,d.unwrap(),_d,g=>{const P=t.createType("EventMetadataLatest",re({},g,{args:I1(e,g.fields)}));return class extends Qp{constructor(T,k){super(T,k,P,et(p),g.name.toString())}}}))}}function ow(t,{lookup:e,pallets:n},r,a,i){const s=n.filter(y1);zs(a),zs(i);for(let o=0,d=s.length;o<d;o++){const{calls:f,index:p,name:g}=s[o],P=r>=12?p.toNumber():o,T=et(g),k=f.unwrap();wt(a,P,()=>Ba(e,k,_d,V=>x1(t,e,V,T,P)));const{path:M}=t.lookup.getSiType(k.type),O=M.findIndex(V=>V.eq("pallet"));if(O!==-1){const V=et(M.slice(0,O).map((N,E)=>E===0?N.replace(/^(frame|pallet)_/,""):N).join(" "));i[V]?i[V].push(T):i[V]=[T]}}}function cw(t,e){const n=t.getChainProperties(),r=P1(t,e.asLatest,e.version),a=r.system&&(r.system.sS58Prefix||r.system.ss58Prefix);if(!a)return n;const{isEthereum:i,tokenDecimals:s,tokenSymbol:o}=n||{};return t.createTypeUnsafe("ChainProperties",[{isEthereum:i,ss58Format:a,tokenDecimals:s,tokenSymbol:o}])}class E1{constructor(e){S(this,"__internal__chainProperties"),S(this,"__internal__classes",new Map),S(this,"__internal__definitions",new Map),S(this,"__internal__firstCallIndex",null),S(this,"__internal__hasher",ur),S(this,"__internal__knownTypes",{}),S(this,"__internal__lookup"),S(this,"__internal__metadata"),S(this,"__internal__metadataVersion",0),S(this,"__internal__signedExtensions",Zo),S(this,"__internal__unknownTypes",new Map),S(this,"__internal__userExtensions"),S(this,"__internal__knownDefaults"),S(this,"__internal__knownDefaultsEntries"),S(this,"__internal__knownDefinitions"),S(this,"__internal__metadataCalls",{}),S(this,"__internal__metadataErrors",{}),S(this,"__internal__metadataEvents",{}),S(this,"__internal__moduleMap",{}),S(this,"createdAtHash"),S(this,"__internal__registerObject",r=>{const a=Object.entries(r);for(let i=0,s=a.length;i<s;i++){const[o,d]=a[i];if(fe(d))this.__internal__classes.set(o,d);else{const f=nt(d)?d:Ye(d);if(o===f)throw new Error(`Unable to register circular ${o} === ${f}`);this.__internal__classes.has(o)&&this.__internal__classes.delete(o),this.__internal__definitions.set(o,f)}}}),S(this,"__internal__registerLookup",r=>{this.setLookup(r);let a=null;if(this.hasType("SpWeightsWeightV2Weight")){const i=this.createType("SpWeightsWeightV2Weight");a=i.refTime&&i.proofSize?"SpWeightsWeightV2Weight":"WeightV1"}else xn(this.createType("Weight"))||(a="WeightV1");a&&this.register({Weight:a})}),this.__internal__knownDefaults=re({Json:jp,Metadata:Is,PortableRegistry:C4,Raw:dn},s6),this.__internal__knownDefaultsEntries=Object.entries(this.__internal__knownDefaults),this.__internal__knownDefinitions=ks;const n=Object.values(this.__internal__knownDefinitions);for(let r=0,a=n.length;r<a;r++)this.register(n[r].types);e&&(this.createdAtHash=this.createType("BlockHash",e))}get chainDecimals(){var e;if((e=this.__internal__chainProperties)!=null&&e.tokenDecimals.isSome){const n=this.__internal__chainProperties.tokenDecimals.unwrap();if(n.length)return n.map(r=>r.toNumber())}return[12]}get chainIsEthereum(){var e;return((e=this.__internal__chainProperties)==null?void 0:e.isEthereum.isTrue)||!1}get chainSS58(){var e;return(e=this.__internal__chainProperties)!=null&&e.ss58Format.isSome?this.__internal__chainProperties.ss58Format.unwrap().toNumber():void 0}get chainTokens(){var e;if((e=this.__internal__chainProperties)!=null&&e.tokenSymbol.isSome){const n=this.__internal__chainProperties.tokenSymbol.unwrap();if(n.length)return n.map(V1)}return[ca.getDefaults().unit]}get firstCallIndex(){return this.__internal__firstCallIndex||aw}isLookupType(e){return/Lookup\d+$/.test(e)}createLookupType(e){return`Lookup${typeof e=="number"?e:e.toNumber()}`}get knownTypes(){return this.__internal__knownTypes}get lookup(){return dr(this.__internal__lookup,"PortableRegistry has not been set on this registry")}get metadata(){return dr(this.__internal__metadata,"Metadata has not been set on this registry")}get unknownTypes(){return[...this.__internal__unknownTypes.keys()]}get signedExtensions(){return this.__internal__signedExtensions}clearCache(){this.__internal__classes=new Map}createClass(e){return ci(this,e)}createClassUnsafe(e){return ci(this,e)}createType(e,...n){return Bc(this,e,n)}createTypeUnsafe(e,n,r){return Bc(this,e,n,r)}findMetaCall(e){const[n,r]=[e[0],e[1]];return dr(this.__internal__metadataCalls[`${n}`]&&this.__internal__metadataCalls[`${n}`][`${r}`],()=>`findMetaCall: Unable to find Call with index [${n}, ${r}]/[${e.toString()}]`)}findMetaError(e){const[n,r]=Pe(e)?[e[0],e[1]]:[e.index.toNumber(),Pe(e.error)?e.error[0]:e.error.toNumber()];return dr(this.__internal__metadataErrors[`${n}`]&&this.__internal__metadataErrors[`${n}`][`${r}`],()=>`findMetaError: Unable to find Error with index [${n}, ${r}]/[${e.toString()}]`)}findMetaEvent(e){const[n,r]=[e[0],e[1]];return dr(this.__internal__metadataEvents[`${n}`]&&this.__internal__metadataEvents[`${n}`][`${r}`],()=>`findMetaEvent: Unable to find Event with index [${n}, ${r}]/[${e.toString()}]`)}get(e,n,r){return this.getUnsafe(e,n,r)}getUnsafe(e,n,r){let a=this.__internal__classes.get(e)||this.__internal__knownDefaults[e];if(!a){const i=this.__internal__definitions.get(e);let s;i?s=ci(this,i):r?s=N7(this,r):n&&(Tf.warn(`Unable to resolve type ${e}, it will fail on construction`),this.__internal__unknownTypes.set(e,!0),s=eo.with(e)),s&&(a=class extends s{},this.__internal__classes.set(e,a),r&&$e(r.lookupIndex)&&this.__internal__classes.set(this.createLookupType(r.lookupIndex),a))}return a}getChainProperties(){return this.__internal__chainProperties}getClassName(e){const n=[];for(const[r,a]of this.__internal__knownDefaultsEntries)e===a&&n.push(r);for(const[r,a]of this.__internal__classes.entries())e===a&&n.push(r);return n.length?n.sort().reverse()[0]:void 0}getDefinition(e){return this.__internal__definitions.get(e)}getModuleInstances(e,n){var r,a,i,s,o;return((o=(s=(i=(a=(r=this.__internal__knownTypes)==null?void 0:r.typesBundle)==null?void 0:a.spec)==null?void 0:i[e.toString()])==null?void 0:s.instances)==null?void 0:o[n])||this.__internal__moduleMap[n]}getOrThrow(e){const n=this.get(e);if(!n)throw new Error(`type ${e} not found`);return n}getOrUnknown(e){return this.get(e,!0)}getSignedExtensionExtra(){return df(this.__internal__signedExtensions,"payload",this.__internal__userExtensions)}getSignedExtensionTypes(){return df(this.__internal__signedExtensions,"extrinsic",this.__internal__userExtensions)}hasClass(e){return this.__internal__classes.has(e)||!!this.__internal__knownDefaults[e]}hasDef(e){return this.__internal__definitions.has(e)}hasType(e){return!this.__internal__unknownTypes.get(e)&&(this.hasClass(e)||this.hasDef(e))}hash(e){return this.createType("CodecHash",this.__internal__hasher(e))}register(e,n){if(fe(e))this.__internal__classes.set(e.name,e);else if(nt(e)){if(fe(n)){if(e===n.toString())throw new Error(`Unable to register circular ${e} === ${e}`)}else throw new Error(`Expected class definition passed to '${e}' registration`);this.__internal__classes.set(e,n)}else this.__internal__registerObject(e)}setChainProperties(e){e&&(this.__internal__chainProperties=e)}setHasher(e){this.__internal__hasher=e||ur}setKnownTypes(e){this.__internal__knownTypes=e}setLookup(e){this.__internal__lookup=e,e.register()}setMetadata(e,n,r,a){this.__internal__metadata=e.asLatest,this.__internal__metadataVersion=e.version,this.__internal__firstCallIndex=null,this.__internal__registerLookup(this.__internal__metadata.lookup),ow(this,this.__internal__metadata,this.__internal__metadataVersion,this.__internal__metadataCalls,this.__internal__moduleMap),iw(this,this.__internal__metadata,this.__internal__metadataVersion,this.__internal__metadataErrors),sw(this,this.__internal__metadata,this.__internal__metadataVersion,this.__internal__metadataEvents);const[i]=Object.keys(this.__internal__metadataCalls).sort(Sf);if(i){const[s]=Object.keys(this.__internal__metadataCalls[i]).sort(Sf);s&&(this.__internal__firstCallIndex=new Uint8Array([parseInt(i,10),parseInt(s,10)]))}this.setSignedExtensions(n||(this.__internal__metadata.extrinsic.version.gt(dt)?this.__internal__metadata.extrinsic.signedExtensions.map(({identifier:s})=>s.toString()):Zo),r,a),this.setChainProperties(cw(this,e))}setSignedExtensions(e=Zo,n,r){if(this.__internal__signedExtensions=e,this.__internal__userExtensions=n,!r){const a=_4(this.__internal__signedExtensions,this.__internal__userExtensions);a.length&&Tf.warn(`Unknown signed extensions ${a.join(", ")} found, treating them as no-effect`)}}}function z1(t=1750){return e=>{let[n,r,a,i]=[0,0,Zn.EMPTY,Zn.EMPTY];return new mt(s=>(e.subscribe(s),r++===0&&(n===1?i.unsubscribe():a=e.connect(),n=3),()=>{--r===0&&(n===2?(n=0,i.unsubscribe()):(n=1,i=r8.schedule(()=>{n=0,a.unsubscribe()},t)))}))}}function dw(t,e){return Ye({t})===Ye({t:e})}function uw(t){throw t}function lw(){}function Qd({delay:t,skipChange:e=!1,skipTimeout:n=!1}={}){return r=>r.pipe(Wn(uw),e?pr(lw):X8(dw),pp(1),n?Ed():z1(t))}function q(t,e){const n=ri((...r)=>new mt(a=>{const i=e(...r).subscribe(a);return()=>{n.unmemoize(...r),i.unsubscribe()}}).pipe(Qd()),{getInstanceId:()=>t});return n}const fw=Kt("rpc-core"),hw={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}};function Ji(t,{noErrorLog:e,params:n,type:r},a){e||fw.error(`${t}(${n.map(({isOptional:i,name:s,type:o})=>`${s}${i?"?":""}: ${o}`).join(", ")}): ${r}:: ${a.message}`)}function kf(t){return["0x3a636f6465"].includes(t.toHex())}class pw{constructor(e,n,{isPedantic:r=!0,provider:a,userRpc:i={}}){if(S(this,"__internal__instanceId"),S(this,"__internal__isPedantic"),S(this,"__internal__registryDefault"),S(this,"__internal__storageCache",new Map),S(this,"__internal__storageCacheHits",0),S(this,"__internal__storageCacheSize",0),S(this,"__internal__getBlockRegistry"),S(this,"__internal__getBlockHash"),S(this,"mapping",new Map),S(this,"provider"),S(this,"sections",[]),!a||!fe(a.send))throw new Error("Expected Provider to API create");this.__internal__instanceId=e,this.__internal__isPedantic=r,this.__internal__registryDefault=n,this.provider=a;const s=Object.keys(di);this.sections.push(...s),this.addUserInterfaces(i)}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}disconnect(){return this.provider.disconnect()}get stats(){const e=this.provider.stats;return e?{...e,core:{cacheHits:this.__internal__storageCacheHits,cacheSize:this.__internal__storageCacheSize}}:void 0}setRegistrySwap(e){this.__internal__getBlockRegistry=ri(e,{getInstanceId:()=>this.__internal__instanceId})}setResolveBlockHash(e){this.__internal__getBlockHash=ri(e,{getInstanceId:()=>this.__internal__instanceId})}addUserInterfaces(e){this.sections.push(...Object.keys(e).filter(n=>!this.sections.includes(n)));for(let n=0,r=this.sections.length;n<r;n++){const a=this.sections[n],i=re({},di[a],e[a]),s=Object.keys(i);for(let o=0,d=s.length;o<d;o++){const f=s[o],p=i[f],g=p.endpoint||`${a}_${f}`;if(!this.mapping.has(g)){const P=!!p.pubsub;this[a]||(this[a]={}),this.mapping.set(g,re({},p,{isSubscription:P,jsonrpc:g,method:f,section:a})),wt(this[a],f,()=>P?this._createMethodSubscribe(a,f,p):this._createMethodSend(a,f,p))}}}}_memomize(e,n){const r={getInstanceId:()=>this.__internal__instanceId},a=ri(e(!0),r);return a.raw=ri(e(!1),r),a.meta=n,a}_formatResult(e,n,r,a,i,s,o){return e?this._formatOutput(n,r,a,i,s,o):o}_createMethodSend(e,n,r){const a=r.endpoint||`${e}_${n}`,i=r.params.findIndex(({isHistoric:f})=>f);let s=null;const o=async(f,p)=>{var g;const P=i===-1?null:p[i],T=P&&r.params[i].type==="BlockNumber"?await((g=this.__internal__getBlockHash)==null?void 0:g.call(this,P)):P,{registry:k}=f&&T&&this.__internal__getBlockRegistry?await this.__internal__getBlockRegistry(me(T)):{registry:this.__internal__registryDefault},M=this._formatParams(k,null,r,p),O=await this.provider.send(a,M.map(V=>V.toJSON()),!!T);return this._formatResult(f,k,T,n,r,M,O)},d=f=>(...p)=>{const g=f&&i!==-1&&!!p[i];return new mt(P=>(o(f,p).then(T=>{P.next(T),P.complete()}).catch(T=>{Ji(n,r,T),P.error(T),P.complete()}),()=>{f?s==null||s.unmemoize(...p):s==null||s.raw.unmemoize(...p)})).pipe(pp(1),g?z1():Ed())};return s=this._memomize(d,r),s}_createSubscriber({paramsJson:e,subName:n,subType:r,update:a},i){return new Promise((s,o)=>{this.provider.subscribe(r,n,e,a).then(s).catch(d=>{i(d),o(d)})})}_createMethodSubscribe(e,n,r){const[a,i,s]=r.pubsub,o=`${e}_${i}`,d=`${e}_${s}`,f=`${e}_${a}`;let p=null;const g=P=>(...T)=>new mt(k=>{let M=Promise.resolve(null);const O=this.__internal__registryDefault,V=N=>{Ji(n,r,N),k.error(N)};try{const N=this._formatParams(O,null,r,T),E=(A,H)=>{if(A){Ji(n,r,A);return}try{k.next(this._formatResult(P,O,null,n,r,N,H))}catch(z){k.error(z)}};M=this._createSubscriber({paramsJson:N.map(A=>A.toJSON()),subName:o,subType:f,update:E},V)}catch(N){V(N)}return()=>{P?p==null||p.unmemoize(...T):p==null||p.raw.unmemoize(...T),M.then(N=>Zr(N)?Promise.resolve(!1):this.provider.unsubscribe(f,d,N)).catch(N=>Ji(n,r,N))}}).pipe(Qd());return p=this._memomize(g,r),p}_formatParams(e,n,r,a){const i=a.length,s=r.params.filter(({isOptional:d})=>!d).length;if(i<s||i>r.params.length)throw new Error(`Expected ${r.params.length} parameters${s===r.params.length?"":` (${r.params.length-s} optional)`}, ${i} found instead`);const o=new Array(i);for(let d=0;d<i;d++)o[d]=e.createTypeUnsafe(r.params[d].type,[a[d]],{blockHash:n});return o}_formatOutput(e,n,r,a,i,s){if(a.type==="StorageData"){const o=i[0];return this._formatStorageData(e,n,o,s)}else if(a.type==="StorageChangeSet"){const o=i[0];return o?this._formatStorageSet(e,s.block,o,s.changes):e.createType("StorageChangeSet",s)}else if(a.type==="Vec<StorageChangeSet>"){const o=s,d=o.length,f=new Array(d);for(let p=0;p<d;p++){const{block:g,changes:P}=o[p];f[p]=[e.createType("BlockHash",g),this._formatStorageSet(e,g,i[0],P)]}return r==="queryStorageAt"?f[0][1]:f}return e.createTypeUnsafe(a.type,[s],{blockHash:n})}_formatStorageData(e,n,r,a){const i=Zr(a),s=i?null:kf(r)?a:me(a);return this._newType(e,n,r,s,i)}_formatStorageSet(e,n,r,a){const i=r.length,s=i!==1,o=new Array(i);for(let d=0;d<i;d++)o[d]=this._formatStorageSetEntry(e,n,r[d],a,s,d);return o}_formatStorageSetEntry(e,n,r,a,i,s){const o=r.toHex(),d=a.find(([k])=>k===o),f=st(d);if(f&&i){const k=this.__internal__storageCache.get(o);if(k)return this.__internal__storageCacheHits++,k}const p=f?null:d[1],g=Zr(p),P=g||kf(r)?p:me(p),T=this._newType(e,n,r,P,g,s);return this.__internal__storageCache.set(o,T),this.__internal__storageCacheSize++,T}_newType(e,n,r,a,i,s=-1){const o=r.outputType||"Raw",d=r.meta||hw,f=s===-1?"":` entry ${s}:`;try{return e.createTypeUnsafe(o,[i?d.fallback?o.includes("Linkage<")?Ct(Fn(d.fallback.toHex()),new Uint8Array(2)):Fn(d.fallback.toHex()):void 0:d.modifier.isOptional?e.createTypeUnsafe(o,[a],{blockHash:n,isPedantic:this.__internal__isPedantic}):a],{blockHash:n,isFallback:i&&!!d.fallback,isOptional:d.modifier.isOptional,isPedantic:this.__internal__isPedantic&&!d.modifier.isOptional})}catch(p){throw new Error(`Unable to decode storage ${r.section||"unknown"}.${r.method||"unknown"}:${f}: ${p.message}`)}}}function qc(t){return $0(t.number)?t.number.unwrap():t.number}const mw={del:()=>{},forEach:()=>{},get:()=>{},set:(t,e)=>e};let Ri;function bw(t="",e){Ri=mw}bw();function H1(t){return t.pipe(U(([e])=>e))}function Jn(t){return(e,n)=>q(e,(...r)=>H1(t(n,...r)))}function L1(t,e,n,r){wt(t,e,()=>Wr({},n(e),a=>r(e,a)))}function yw(t,e){return q(t,n=>{const r=Pe(n)?n:mr((n||"").toString());if(r.length>8)return D(e.registry.createType("AccountId",r));const a=e.registry.createType("AccountIndex",r);return e.derive.accounts.indexToId(a.toString()).pipe(U(i=>dr(i,"Unable to retrieve accountId")))})}function xw(t,[e,n,r,a,i]){const s=t==null?void 0:t.toString(),o=d=>d.toString()===s;return{isCouncil:((e==null?void 0:e.map(d=>Array.isArray(d)?d[0]:d.who))||n||[]).some(o),isSociety:(a||[]).some(o),isSudo:(i==null?void 0:i.toString())===s,isTechCommittee:(r||[]).some(o)}}function gw(t,e){return q(t,()=>{var n,r,a,i,s;const o=[void 0,[],[],[],void 0],d=[(n=e.query.elections||e.query.phragmenElection||e.query.electionsPhragmen)==null?void 0:n.members,(r=e.query.council)==null?void 0:r.members,(a=e.query.technicalCommittee)==null?void 0:a.members,(i=e.query.society)==null?void 0:i.members,(s=e.query.sudo)==null?void 0:s.key],f=d.filter(p=>p);return f.length?e.queryMulti(f).pipe(U(p=>{let g=-1;for(let P=0,T=d.length;P<T;P++)fe(d[P])&&(o[P]=p[++g]);return o})):D(o)})}function vw(t,e){return q(t,n=>e.derive.accounts._flags().pipe(U(r=>xw(n,r))))}function ww(t,e){return q(t,n=>{try{const r=Pe(n)?n:mr((n||"").toString());if(r.length>8){const i=e.registry.createType("AccountId",r);return e.derive.accounts.idToIndex(i).pipe(U(s=>[i,s]))}const a=e.registry.createType("AccountIndex",r);return e.derive.accounts.indexToId(a.toString()).pipe(U(i=>[i,a]))}catch{return D([void 0,void 0])}})}const Pw={toHex:()=>{}};function pn(t){return t.isRaw?Un(t.asRaw.toU8a(!0)):t.isNone?void 0:t.toHex()}function Mw(t){return t.reduce((e,[n,r])=>{const a=pn(n),i=pn(r);return a&&i&&(e[a]=i),e},{})}function R1(t){const e=t.unwrap();return Array.isArray(e)?e[0]:e}function Tw(t,e){if(!(t!=null&&t.isSome))return{judgements:[]};const{info:n,judgements:r}=R1(t),a=pn(n.display);return{display:e&&pn(e[1])||a,displayParent:e&&a,email:pn(n.email),image:pn(n.image),judgements:r,legal:pn(n.legal),other:Mw(n.additional),parent:e==null?void 0:e[0],pgp:n.pgpFingerprint.unwrapOr(Pw).toHex(),riot:pn(n.riot),twitter:pn(n.twitter),web:pn(n.web)}}function Sw(t,e,n){if(e!=null&&e.isSome)return D([e,void 0]);if(n!=null&&n.isSome){const r=n.unwrap();return ne([t.derive.accounts._identity(r[0]).pipe(U(([a])=>a)),D(r)])}return D([void 0,void 0])}function kw(t,e){return q(t,n=>{var r;return n&&(r=e.query.identity)!=null&&r.identityOf?ne([e.query.identity.identityOf(n),e.query.identity.superOf(n)]):D([void 0,void 0])})}function Ow(t,e){return q(t,n=>e.derive.accounts._identity(n).pipe($(([r,a])=>Sw(e,r,a)),U(([r,a])=>Tw(r,a))))}const Nw=Jn((t,e)=>t.derive.accounts.hasIdentityMulti([e]));function Vw(t,e){return q(t,n=>{var r;return(r=e.query.identity)!=null&&r.identityOf?ne([e.query.identity.identityOf.multi(n),e.query.identity.superOf.multi(n)]).pipe(U(([a,i])=>a.map((s,o)=>{const d=i[o],f=d&&d.isSome?d.unwrap()[0].toString():void 0;let p;if(s&&s.isSome){const g=pn(R1(s).info.display);g&&!Qe(g)&&(p=g)}return{display:p,hasIdentity:!!(p||f),parentId:f}}))):D(n.map(()=>({hasIdentity:!1})))})}function Iw(t,e){return q(t,n=>e.derive.accounts.indexes().pipe(U(r=>r[n.toString()])))}let Qo=null;function Ew(t){return t.query.indices.accounts.entries().pipe(U(e=>e.reduce((n,[r,a])=>(a.isSome&&(n[a.unwrap()[0].toString()]=t.registry.createType("AccountIndex",r.args[0])),n),{})))}function zw(t,e){return q(t,()=>Qo?D(Qo):(e.query.indices?Ew(e).pipe(Ei({})):D({})).pipe(U(n=>(Qo=n,n))))}function Hw(t,e){return q(t,n=>e.query.indices?e.query.indices.accounts(n).pipe(U(r=>r.unwrapOr([])[0])):D(void 0))}function Lw(t,e){var n;return(e&&(n=t.query.nicks)!=null&&n.nameOf?t.query.nicks.nameOf(e):D(void 0)).pipe(U(r=>r!=null&&r.isSome?Un(r.unwrap()[0]).substring(0,t.consts.nicks.maxLength.toNumber()):void 0))}function Rw(t,e){return q(t,n=>e.derive.accounts.idAndIndex(n).pipe($(([r,a])=>ne([D({accountId:r,accountIndex:a}),e.derive.accounts.identity(r),Lw(e,r)])),U(([{accountId:r,accountIndex:a},i,s])=>({accountId:r,accountIndex:a,identity:i,nickname:s}))))}const Bw=Object.freeze(Object.defineProperty({__proto__:null,_flags:gw,_identity:kw,accountId:yw,flags:vw,hasIdentity:Nw,hasIdentityMulti:Vw,idAndIndex:ww,idToIndex:Iw,identity:Ow,indexToId:Hw,indexes:zw,info:Rw},Symbol.toStringTag,{value:"Module"}));function Aw(t,e){const n=t.registry.getModuleInstances(t.runtimeVersion.specName,e),r=n!=null&&n.length?n[0]:e;return t.query[r]}function Bi(t,e){return(n,r)=>q(n,e(Aw(r,t),r,n))}function $d(t,e){return n=>Bi(n,r=>()=>fe(r==null?void 0:r[t])?r[t]():D(e))}const so=$d("members",[]);function oo(t){return Bi(t,e=>()=>fe(e==null?void 0:e.prime)?e.prime().pipe(U(n=>n.unwrapOr(null))):D(null))}function Cw(t,[e,n,r]){return n.map((a,i)=>({hash:t.registry.createType("Hash",e[i]),proposal:a&&a.isSome?a.unwrap():null,votes:r[i].unwrapOr(null)}))}function B1(t,e,n){return(fe(e==null?void 0:e.proposals)&&n.length?ne([D(n),e.proposalOf.multi(n).pipe(Wn(()=>D(n.map(()=>null)))),e.voting.multi(n)]):D([[],[],[]])).pipe(U(r=>Cw(t,r)))}function co(t){return Bi(t,e=>()=>D(fe(e==null?void 0:e.proposals)))}function uo(t){return Bi(t,(e,n)=>()=>n.derive[t].proposalHashes().pipe($(r=>B1(n,e,r))))}function lo(t){return Bi(t,(e,n)=>r=>fe(e==null?void 0:e.proposals)?H1(B1(n,e,[r])):D(null))}const fo=$d("proposalCount",null),ho=$d("proposals",[]),jw=so("allianceMotion"),Uw=co("allianceMotion"),Xw=lo("allianceMotion"),Dw=fo("allianceMotion"),Fw=ho("allianceMotion"),qw=uo("allianceMotion"),Zw=oo("allianceMotion"),Ww=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:Uw,members:jw,prime:Zw,proposal:Xw,proposalCount:Dw,proposalHashes:Fw,proposals:qw},Symbol.toStringTag,{value:"Module"}));function eu(t){return t.query.voterList||t.query.voterBagsList||t.query.bagsList}function Gw(t,e){const n=t.map((a,i)=>({bag:e[i].unwrapOr(null),id:a,key:a.toString()})).sort((a,i)=>i.id.cmp(a.id)),r=n.length-1;return n.map((a,i)=>re(a,{bagLower:i===r?dt:n[i+1].id,bagUpper:a.id,index:i}))}function Kw(t,e){const n=eu(e);return q(t,r=>{const a=r.map(i=>xt(i));return a.length?n.listBags.multi(a).pipe(U(i=>Gw(a,i))):D([])})}function Yw(t,e){const n=eu(e);return q(t,()=>n.listBags.keys().pipe($(r=>e.derive.bagsList._getIds(r.map(({args:[a]})=>a))),U(r=>r.filter(({bag:a})=>a))))}function Jw(t,e){return q(t,n=>e.derive.bagsList._getIds([xt(n)]).pipe(U(r=>r[0])))}function _w(t,e){return q(t,n=>e.derive.bagsList.listNodes(n.bag).pipe(U(r=>re({nodes:r},n))))}function Qw(t,e){return q(t,n=>e.derive.bagsList.get(n).pipe($(r=>e.derive.bagsList.expand(r))))}function $w(t,e){const n=new mi(e),r=eu(t);return n.pipe($(a=>r.listNodes(a)),pr(a=>{Qr(()=>{a.isSome&&a.value.next.isSome?n.next(a.unwrap().next.unwrap()):n.complete()})}),Js(),U(a=>a.map(i=>i.unwrap())))}function eP(t,e){return q(t,n=>n&&n.head.isSome?$w(e,n.head.unwrap()):D([]))}const tP=Object.freeze(Object.defineProperty({__proto__:null,_getIds:Kw,all:Yw,expand:_w,get:Jw,getExpanded:Qw,listNodes:eP},Symbol.toStringTag,{value:"Module"})),nP="0x76657374696e6720";function rP(t,e,n){let r=t.registry.createType("Balance"),a=[],i=t.registry.createType("Balance"),s=!1;if(Array.isArray(n)){a=n.filter(({until:d})=>!d||e&&d.gt(e)),s=a.some(({amount:d})=>d&&d.isMax()),i=t.registry.createType("Balance",a.filter(({id:d})=>d.eq(nP)).reduce((d,{amount:f})=>d.iadd(f),new le(0)));const o=a.filter(({amount:d})=>d&&!d.isMax());o.length&&(r=t.registry.createType("Balance",G0(...o.map(({amount:d})=>d))))}return{allLocked:s,lockedBalance:r,lockedBreakdown:a,vestingLocked:i}}function Of(t,e,n,r){const{allLocked:a,lockedBalance:i,lockedBreakdown:s,vestingLocked:o}=rP(t,e,r);return re({},n,{availableBalance:t.registry.createType("Balance",a?0:G0(new le(0),n!=null&&n.freeBalance?n.freeBalance.sub(i):new le(0))),lockedBalance:i,lockedBreakdown:s,vestingLocked:o})}function aP(t,e,n){const r=n||[],a=!e.vestingLocked.isZero(),i=r.map(({locked:d,perBlock:f,startingBlock:p})=>t.gt(p)?Jb(d,f.mul(t.sub(p))):dt),s=i.reduce((d,f)=>d.iadd(f),new le(0)),o=r.reduce((d,{locked:f})=>d.iadd(f),new le(0));return{isVesting:a,vestedBalance:s,vestedClaimable:a?e.vestingLocked.sub(o.sub(s)):dt,vesting:r.map(({locked:d,perBlock:f,startingBlock:p},g)=>({endBlock:d.div(f).iadd(p),locked:d,perBlock:f,startingBlock:p,vested:i[g]})).filter(({locked:d})=>!d.isZero()),vestingTotal:o}}function iP(t,e){const[n,[r,a,i],s]=e,o=Of(t,s,n,a[0]);return re(o,aP(s,o,r),{accountId:n.accountId,accountNonce:n.accountNonce,additional:a.slice(1).map((d,f)=>Of(t,s,n.additional[f],d)),namedReserves:i})}function sP(t,e){return ne([t.query.balances.locks(e),t.query.balances.vesting(e)]).pipe(U(([n,r])=>{let a=null;if(r.isSome){const{offset:i,perBlock:s,startingBlock:o}=r.unwrap();a=t.registry.createType("VestingInfo",{locked:i,perBlock:s,startingBlock:o})}return[a?[a]:null,[n],[]]}))}const oP=t=>!!t;function Nf(t){return[t.map(e=>!e),t.filter(oP)]}function cP(t,e,n=["balances"]){var r;const[a,i]=Nf(n.map(d=>{var f,p;return((f=t.derive[d])==null?void 0:f.customLocks)||((p=t.query[d])==null?void 0:p.locks)})),[s,o]=Nf(n.map(d=>{var f;return(f=t.query[d])==null?void 0:f.reserves}));return ne([(r=t.query.vesting)!=null&&r.vesting?t.query.vesting.vesting(e):D(t.registry.createType("Option<VestingInfo>")),i.length?ne(i.map(d=>d(e))):D([]),o.length?ne(o.map(d=>d(e))):D([])]).pipe(U(([d,f,p])=>{let g=-1,P=-1;const T=d.unwrapOr(null);return[T?Array.isArray(T)?T:[T]:null,a.map(k=>k?t.registry.createType("Vec<BalanceLock>"):f[++g]),s.map(k=>k?t.registry.createType("Vec<PalletBalancesReserveData>"):p[++P])]}))}function A1(t,e){const n=e.registry.getModuleInstances(e.runtimeVersion.specName,"balances");return q(t,r=>{var a,i;return ne([e.derive.balances.account(r),fe((a=e.query.system)==null?void 0:a.account)||fe((i=e.query.balances)==null?void 0:i.account)?cP(e,r,n):sP(e,r)]).pipe($(([s,o])=>ne([D(s),D(o),e.derive.chain.bestNumber()])),U(s=>iP(e,s)))})}function At(t){return t.registry.createType("Balance")}function Vf(t,[e,n,r,a]){const i=t.registry.createType("Balance",e.toBn());return{freeBalance:e,frozenFee:r,frozenMisc:a,reservedBalance:n,votingBalance:i}}function dP(t,[e,[n,[r,...a]]]){return re({accountId:e,accountNonce:n,additional:a.map(i=>Vf(t,i))},Vf(t,r))}function uP(t,e){return ne([t.query.balances.freeBalance(e),t.query.balances.reservedBalance(e),t.query.system.accountNonce(e)]).pipe(U(([n,r,a])=>[a,[[n,r,At(t),At(t)]]]))}function C1(t,e){const n=r=>[r,[[At(t),At(t),At(t),At(t)]]];return fe(t.query.system.account)?t.query.system.account(e).pipe(U(({nonce:r})=>n(r))):fe(t.query.system.accountNonce)?t.query.system.accountNonce(e).pipe(U(r=>n(r))):D(n(t.registry.createType("Index")))}function If(t,e,n=["balances"]){const r=n.map(i=>{var s,o;return((s=t.derive[i])==null?void 0:s.customAccount)||((o=t.query[i])==null?void 0:o.account)}).filter(i=>fe(i)),a=(i,s)=>[i,s.map(({feeFrozen:o,free:d,miscFrozen:f,reserved:p})=>[d,p,o,f])];return r.length?fe(t.query.system.account)?ne([t.query.system.account(e),...r.map(i=>i(e))]).pipe(U(([{nonce:i},...s])=>a(i,s))):ne([t.query.system.accountNonce(e),...r.map(i=>i(e))]).pipe(U(([i,...s])=>a(i,s))):C1(t,e)}function lP(t,e){return t.query.system.account(e).pipe(U(n=>{const r=n.nonce?n.data:n[1],a=n.nonce||n[0];if(!r||r.isEmpty)return[a,[[At(t),At(t),At(t),At(t)]]];const{feeFrozen:i,free:s,miscFrozen:o,reserved:d}=r;return[a,[[s,d,i,o]]]}))}function fP(t,e){const n=e.registry.getModuleInstances(e.runtimeVersion.specName,"balances"),r=n&&n[0]!=="balances";return q(t,a=>e.derive.accounts.accountId(a).pipe($(i=>{var s,o,d;return i?ne([D(i),r?If(e,i,n):fe((s=e.query.system)==null?void 0:s.account)?lP(e,i):fe((o=e.query.balances)==null?void 0:o.account)?If(e,i):fe((d=e.query.balances)==null?void 0:d.freeBalance)?uP(e,i):C1(e,i)]):D([e.registry.createType("AccountId"),[e.registry.createType("Index"),[[At(e),At(e),At(e),At(e)]]]])}),U(i=>dP(e,i))))}function hP(t,e){return q(t,n=>n!=null&&n.length?ne(n.map(r=>e.derive.balances.account(r))):D([]))}const pP=A1,mP=Object.freeze(Object.defineProperty({__proto__:null,account:fP,all:A1,votingBalance:pP,votingBalances:hP},Symbol.toStringTag,{value:"Module"}));function bP(t,e){const n=t.tx.bounties?t.tx.bounties:t.tx.treasury,r=[n.approveBounty,n.closeBounty,n.proposeCurator,n.unassignCurator];return e.filter(a=>r.find(i=>a.proposal&&i.is(a.proposal)))}function Ef([t,e,n,r]){const a=[];return t.forEach((i,s)=>{i.isSome&&a.push({bounty:i.unwrap(),description:e[s].unwrapOrDefault().toUtf8(),index:n[s],proposals:r.filter(o=>o.proposal&&n[s].eq(o.proposal.args[0]))})}),a}function yP(t,e){const n=e.query.bounties||e.query.treasury;return q(t,()=>n.bounties?ne([n.bountyCount(),e.query.council?e.query.council.proposalCount():D(0)]).pipe($(()=>ne([n.bounties.keys(),e.derive.council?e.derive.council.proposals():D([])])),$(([r,a])=>{const i=r.map(({args:[s]})=>s);return ne([n.bounties.multi(i),n.bountyDescriptions.multi(i),D(i),D(bP(e,a))])}),U(Ef)):D(Ef([[],[],[],[]])))}const xP=Object.freeze(Object.defineProperty({__proto__:null,bounties:yP},Symbol.toStringTag,{value:"Module"}));function j1(t){return(e,n)=>q(e,()=>t(n).pipe(U(qc)))}function gP(t,e){var n,r,a,i;const s=(n=e.session)!=null&&n.validators?e.session.validators():D(null),{logs:[o]}=t.digest,d=o&&(o.isConsensus&&o.asConsensus[0].isNimbus&&o.asConsensus[1]||o.isPreRuntime&&o.asPreRuntime[0].isNimbus&&o.asPreRuntime[1]);if(d){if((r=e.authorMapping)!=null&&r.mappingWithDeposit)return ne([D(t),s,e.authorMapping.mappingWithDeposit(d).pipe(U(f=>f.unwrapOr({account:null}).account))]);if((a=e.parachainStaking)!=null&&a.selectedCandidates&&(i=e.session)!=null&&i.nextKeys){const f=d.toHex();return ne([D(t),s,e.parachainStaking.selectedCandidates().pipe(Ys(p=>ne([D(p),e.session.nextKeys.multi(p).pipe(U(g=>g.findIndex(P=>P.unwrapOrDefault().nimbus.toHex()===f)))])),U(([p,g])=>g===-1?null:p[g]))])}}return ne([D(t),s,D(null)])}function tu(t,e,n){return t.queryAt(e.parentHash.isEmpty?n||e.hash:e.parentHash).pipe($(r=>gP(e,r)))}const vP=j1(t=>t.rpc.chain.subscribeNewHeads()),wP=j1(t=>t.rpc.chain.subscribeFinalizedHeads());function PP(t,e){return q(t,()=>ne([e.derive.chain.bestNumber(),e.derive.chain.bestNumberFinalized()]).pipe(U(([n,r])=>e.registry.createType("BlockNumber",n.sub(r)))))}function U1(t,e){const[n]=t.logs.filter(s=>s.isConsensus),[r]=t.logs.filter(s=>s.isPreRuntime),[a]=t.logs.filter(s=>s.isSeal);let i;try{if(r){const[s,o]=r.asPreRuntime;i=s.extractAuthor(o,e)}if(!i&&n){const[s,o]=n.asConsensus;i=s.extractAuthor(o,e)}if(!i&&a){const[s,o]=a.asSeal;i=s.extractAuthor(o,e)}}catch{}return i}function X1(t,e,n,r){const a=t.createClass("Header");class i extends a{constructor(o,d,f,p){super(o,d),S(this,"__internal__author"),this.__internal__author=p||U1(this.digest,f||[]),this.createdAtHash=d==null?void 0:d.createdAtHash}get author(){return this.__internal__author}}return new i(t,e,n,r)}function MP(t,e){return t.map((n,r)=>{let a,i;const s=e.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eq(r)).map(({event:o})=>(o.section==="system"&&(o.method==="ExtrinsicSuccess"?i=o.data[0]:o.method==="ExtrinsicFailed"&&(a=o.data[0],i=o.data[1])),o));return{dispatchError:a,dispatchInfo:i,events:s,extrinsic:n}})}function TP(t,e,n,r,a){const i=t.createClass("SignedBlock");class s extends i{constructor(d,f,p,g,P){super(d,f),S(this,"__internal__author"),S(this,"__internal__events"),S(this,"__internal__extrinsics"),this.__internal__author=P||U1(this.block.header.digest,g||[]),this.__internal__events=p||[],this.__internal__extrinsics=MP(this.block.extrinsics,this.__internal__events),this.createdAtHash=f==null?void 0:f.createdAtHash}get author(){return this.__internal__author}get events(){return this.__internal__events}get extrinsics(){return this.__internal__extrinsics}}return new s(t,e,n,r,a)}function SP(t,e){return q(t,n=>ne([e.rpc.chain.getBlock(n),e.queryAt(n)]).pipe($(([r,a])=>ne([D(r),a.system.events(),tu(e,r.block.header,n)])),U(([r,a,[,i,s]])=>TP(a.registry,r,a,i,s))))}function kP(t,e){return q(t,n=>e.rpc.chain.getBlockHash(n).pipe($(r=>e.derive.chain.getBlock(r))))}function OP(t,e){return q(t,n=>e.rpc.chain.getHeader(n).pipe($(r=>tu(e,r,n)),U(([r,a,i])=>X1((a||r).registry,r,a,i))))}function NP(t,e){return q(t,()=>e.derive.chain.subscribeFinalizedHeads().pipe($(n=>e.derive.chain.getBlock(n.createdAtHash||n.hash))))}function VP(t,e){return q(t,(n,r,a=[])=>e.rpc.chain.getHeader(n).pipe($(i=>i.parentHash.eq(r)?D([i,...a]):e.derive.chain._getHeaderRange(i.parentHash,r,[i,...a]))))}function IP(t,e){return q(t,()=>{let n=null;return e.rpc.chain.subscribeFinalizedHeads().pipe($(r=>{const a=n,i=r.parentHash;return n=r.createdAtHash=r.hash,a===null||i.eq(a)?D(r):e.derive.chain._getHeaderRange(i,a,[r]).pipe($(s=>kn(s)))}))})}function EP(t,e){return q(t,()=>e.derive.chain.subscribeNewHeads().pipe($(n=>e.derive.chain.getBlock(n.createdAtHash||n.hash))))}function zP(t,e){return q(t,()=>e.rpc.chain.subscribeNewHeads().pipe($(n=>tu(e,n)),U(([n,r,a])=>(n.createdAtHash=n.hash,X1(n.registry,n,r,a)))))}const HP=Object.freeze(Object.defineProperty({__proto__:null,_getHeaderRange:VP,bestNumber:vP,bestNumberFinalized:wP,bestNumberLag:PP,getBlock:SP,getBlockByNumber:kP,getHeader:OP,subscribeFinalizedBlocks:NP,subscribeFinalizedHeads:IP,subscribeNewBlocks:EP,subscribeNewHeads:zP},Symbol.toStringTag,{value:"Module"}));function LP(t){return D([t.consts.contracts.callBaseFee||t.registry.createType("Balance"),t.consts.contracts.contractFee||t.registry.createType("Balance"),t.consts.contracts.creationFee||t.registry.createType("Balance"),t.consts.contracts.transactionBaseFee||t.registry.createType("Balance"),t.consts.contracts.transactionByteFee||t.registry.createType("Balance"),t.consts.contracts.transferFee||t.registry.createType("Balance"),t.consts.contracts.rentByteFee||t.registry.createType("Balance"),t.consts.contracts.rentDepositOffset||t.registry.createType("Balance"),t.consts.contracts.surchargeReward||t.registry.createType("Balance"),t.consts.contracts.tombstoneDeposit||t.registry.createType("Balance")])}function RP(t,e){return q(t,()=>LP(e).pipe(U(([n,r,a,i,s,o,d,f,p,g])=>({callBaseFee:n,contractFee:r,creationFee:a,rentByteFee:d,rentDepositOffset:f,surchargeReward:p,tombstoneDeposit:g,transactionBaseFee:i,transactionByteFee:s,transferFee:o}))))}const BP=Object.freeze(Object.defineProperty({__proto__:null,fees:RP},Symbol.toStringTag,{value:"Module"}));function AP(t){return!Array.isArray(t)}function CP(t){return t.stakeOf.entries().pipe(U(e=>e.map(([{args:[n]},r])=>[n,r])))}function jP(t){return t.votesOf.entries().pipe(U(e=>e.map(([{args:[n]},r])=>[n,r])))}function UP(t,e){return ne([CP(e),jP(e)]).pipe(U(([n,r])=>{const a=[];return r.forEach(([i,s])=>{a.push([i,{stake:t.registry.createType("Balance"),votes:s}])}),n.forEach(([i,s])=>{const o=a.find(([d])=>d.eq(i));o?o[1].stake=s:a.push([i,{stake:s,votes:[]}])}),a}))}function XP(t){return t.voting.entries().pipe(U(e=>e.map(([{args:[n]},r])=>[n,AP(r)?{stake:r.stake,votes:r.votes}:{stake:r[0],votes:r[1]}])))}function DP(t,e){const n=e.query.elections||e.query.phragmenElection||e.query.electionsPhragmen;return q(t,()=>n?n.stakeOf?UP(e,n):XP(n):D([]))}function FP(t,e){return q(t,n=>e.derive.council.votes().pipe(U(r=>(r.find(([a])=>a.eq(n))||[null,{stake:e.registry.createType("Balance"),votes:[]}])[1])))}const qP=so("council"),ZP=co("council"),WP=lo("council"),GP=fo("council"),KP=ho("council"),YP=uo("council"),JP=oo("council"),_P=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:ZP,members:qP,prime:JP,proposal:WP,proposalCount:GP,proposalHashes:KP,proposals:YP,votes:DP,votesOf:FP},Symbol.toStringTag,{value:"Module"}));function QP(t){return Ke(Ct(":child_storage:default:",ur(Ct("crowdloan",(t.fundIndex||t.trieIndex).toU8a()))))}function $P(t,e){return q(t,n=>e.query.crowdloan.funds(n).pipe(U(r=>r.isSome?QP(r.unwrap()):null)))}function D1(t,e){var n;const r=[],a=[];return e.filter(({event:{data:[,i],method:s,section:o}})=>o==="crowdloan"&&["Contributed","Withdrew"].includes(s)&&i.eq(t)).reduce((i,{event:{data:[s],method:o}})=>(o==="Contributed"?i.added.push(s.toHex()):i.removed.push(s.toHex()),i),{added:r,blockHash:((n=e.createdAtHash)==null?void 0:n.toHex())||"-",removed:a})}const $o=1e3;function eM(t,e){let n=[],r=[];return t.query.system.events().pipe($(a=>{var i;const s=D1(e,a);return s.added.length||s.removed.length?(n=n.concat(...s.added),r=r.concat(...s.removed),D({added:n,addedDelta:s.added,blockHash:((i=a.createdAtHash)==null?void 0:i.toHex())||"-",removed:r,removedDelta:s.removed})):Ii}),Ei({added:n,addedDelta:[],blockHash:"-",removed:r,removedDelta:[]}))}function tM(t,e){return t.query.system.events().pipe($(n=>{var r;return n.filter(({event:{data:[a],method:i,section:s}})=>s==="crowdloan"&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(i)&&a.eq(e)).length?D(((r=n.createdAtHash)==null?void 0:r.toHex())||"-"):Ii}),Ei("-"))}function nM(t,e){const n=new mi(void 0);return n.pipe($(r=>t.rpc.childstate.getKeysPaged(e,"0x",$o,r)),pr(r=>{Qr(()=>{r.length===$o?n.next(r[$o-1].toHex()):n.complete()})}),Js(),U(r=>ya(r)))}function rM(t,e,n){return tM(t,e).pipe($(()=>fe(t.rpc.childstate.getKeysPaged)?nM(t,n):t.rpc.childstate.getKeys(n,"0x")),U(r=>r.map(a=>a.toHex())))}function aM(t,e,n){return ne([rM(t,e,n),eM(t,e)]).pipe(U(([r,{added:a,blockHash:i,removed:s}])=>{const o={};return r.forEach(d=>{o[d]=!0}),a.forEach(d=>{o[d]=!0}),s.forEach(d=>{delete o[d]}),{blockHash:i,contributorsHex:Object.keys(o)}}))}function iM(t,e){return q(t,n=>e.derive.crowdloan.childKey(n).pipe($(r=>r?aM(e,n,r):D({blockHash:"-",contributorsHex:[]}))))}function F1(t,e,n){return ne(n.map(r=>t.rpc.childstate.getStorage(e,r))).pipe(U(r=>r.map(a=>t.registry.createType("Option<StorageData>",a)).map(a=>a.isSome?t.registry.createType("Balance",a.unwrap()):t.registry.createType("Balance")).reduce((a,i,s)=>re(a,{[n[s]]:i}),{})))}function sM(t,e,n,r){return t.query.system.events().pipe($(a=>{const i=D1(e,a),s=r.filter(o=>i.added.includes(o)||i.removed.includes(o));return s.length?F1(t,n,s):Ii}),Ei({}))}function oM(t,e,n,r){return ne([F1(t,n,r),sM(t,e,n,r)]).pipe(U(([a,i])=>re({},a,i)))}function cM(t,e){return q(t,(n,r)=>e.derive.crowdloan.childKey(n).pipe($(a=>a&&r.length?oM(e,n,a,r):D({}))))}const dM=Object.freeze(Object.defineProperty({__proto__:null,childKey:$P,contributions:iM,ownContributions:cM},Symbol.toStringTag,{value:"Module"}));function uM(t){return!!t.proposalHash}function lM(t){return!!t.tally}function zf(t,e,n,r){for(;;){const a=t.div(e),i=n.div(r);if(a.lt(i))return!0;if(i.lt(a))return!1;const s=t.mod(e),o=n.mod(r);if(o.isZero())return!1;if(s.isZero())return!0;t=r,n=e,e=o,r=s}}function fM(t,e,{votedAye:n,votedNay:r,votedTotal:a}){const i=K0(a);return i.isZero()?!1:t.isSuperMajorityApprove?zf(r,i,n,e):zf(r,e,n,i)}function hM(t,e,n){return t.isSimpleMajority?n.votedAye.gt(n.votedNay):fM(t,e,n)}function pM(t){return t.reduce((e,n)=>{const{balance:r,vote:a}=n,i=a.conviction.index===0,s=r.muln(i?1:a.conviction.index).divn(i?10:1);return a.isAye?(e.allAye.push(n),e.voteCountAye++,e.votedAye.iadd(s)):(e.allNay.push(n),e.voteCountNay++,e.votedNay.iadd(s)),e.voteCount++,e.votedTotal.iadd(s),e},{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new le(0),votedNay:new le(0),votedTotal:new le(0)})}function mM(t,e){const n=[],r=[];return e.forEach(a=>{a.vote.isAye?n.push(a):r.push(a)}),{allAye:n,allNay:r,voteCount:n.length+r.length,voteCountAye:n.length,voteCountNay:r.length,votedAye:t.ayes,votedNay:t.nays,votedTotal:t.turnout}}function bM(t,e,n){const r=lM(e.status)?mM(e.status.tally,n):pM(n);return re({},r,{isPassing:hM(e.status.threshold,t,r),votes:n})}function yM(t){if(t.isNone)return null;const e=t.unwrap();return uM(e)?e:e.isOngoing?e.asOngoing:null}function la(t){return t.isLegacy?t.asLegacy.hash_.toHex():t.isLookup?t.asLookup.hash_.toHex():t.isInline?t.asInline.hash.toHex():nt(t)?Qe(t)?t:nh(t):Pe(t)?Ke(t):t.toHex()}function xM(t){return la(t.proposal||t.proposalHash)}const gM=nh("democrac");function vM(t){return t instanceof cn}function wM(t){return t.isInline||t.isLegacy||t.isLookup}function PM(t){return t.query.democracy.dispatchQueue().pipe($(e=>ne([D(e),t.derive.democracy.preimages(e.map(([,n])=>n))])),U(([e,n])=>e.map(([r,a,i],s)=>({at:r,image:n[s],imageHash:la(a),index:i}))))}function MM(t){return t.derive.democracy.referendumsFinished().pipe($(()=>t.query.scheduler.agenda.keys()),$(e=>{const n=e.map(({args:[r]})=>r);return n.length?ne([D(n),t.query.scheduler.agenda.multi(n).pipe(Wn(()=>D(n.map(()=>[]))))]):D([[],[]])}))}function TM(t){return MM(t).pipe($(([e,n])=>{const r=[];return e.forEach((a,i)=>{(n[i]||[]).filter(s=>s.isSome).forEach(s=>{const o=s.unwrap();if(o.maybeId.isSome){const d=o.maybeId.unwrap().toHex();if(d.startsWith(gM)){const f=vM(o.call)?wM(o.call)?la(o.call):o.call.isHash?o.call.asHash.toHex():o.call.asValue.args[0].toHex():o.call.args[0].toHex();r.push({at:a,imageHash:f,index:t.registry.createType("(u64, ReferendumIndex)",d)[1]})}}})}),ne([D(r),r.length?t.derive.democracy.preimages(r.map(({imageHash:a})=>a)):D([])])}),U(([e,n])=>e.map((r,a)=>re({image:n[a]},r))))}function SM(t,e){return q(t,()=>{var n;return fe((n=e.query.scheduler)==null?void 0:n.agenda)?TM(e):e.query.democracy.dispatchQueue?PM(e):D([])})}const q1=[0,1,2,4,8,16,32];function kM(t,e,{approved:n,end:r}){return[r,n.isTrue&&e.isAye||n.isFalse&&e.isNay?r.add((t.consts.democracy.voteLockingPeriod||t.consts.democracy.enactmentPeriod).muln(q1[e.conviction.index])):dt]}function OM(t,[e,n],r){const{balance:a,vote:i}=n.asStandard,[s,o]=r.isFinished?kM(t,i,r.asFinished):[dt,dt];return{balance:a,isDelegated:!1,isFinished:r.isFinished,referendumEnd:s,referendumId:e,unlockAt:o,vote:i}}function NM(t,{balance:e,conviction:n,target:r}){return t.derive.democracy.locks(r).pipe(U(a=>a.map(({isFinished:i,referendumEnd:s,referendumId:o,unlockAt:d,vote:f})=>({balance:e,isDelegated:!0,isFinished:i,referendumEnd:s,referendumId:o,unlockAt:d.isZero()?d:s.add((t.consts.democracy.voteLockingPeriod||t.consts.democracy.enactmentPeriod).muln(q1[n.index])),vote:t.registry.createType("Vote",{aye:f.isAye,conviction:n})}))))}function VM(t,{votes:e}){return e.length?t.query.democracy.referendumInfoOf.multi(e.map(([n])=>n)).pipe(U(n=>e.map((r,a)=>[r,n[a].unwrapOr(null)]).filter(r=>!!r[1]&&st(r[1].end)&&r[0][1].isStandard).map(([r,a])=>OM(t,r,a)))):D([])}function IM(t,e){return q(t,n=>e.query.democracy.votingOf?e.query.democracy.votingOf(n).pipe($(r=>r.isDirect?VM(e,r.asDirect):r.isDelegating?NM(e,r.asDelegating):D([]))):D([]))}function EM(t,e){if(e.isNone)return D(null);const[n,r]=e.unwrap();return t.derive.democracy.preimage(n).pipe(U(a=>({image:a,imageHash:la(n),threshold:r})))}function zM(t,e){return q(t,()=>{var n;return(n=e.query.democracy)!=null&&n.nextExternal?e.query.democracy.nextExternal().pipe($(r=>EM(e,r))):D(null)})}function HM(t){return t.ticket||t.deposit}function LM(t){return(t.maybeTicket||t.deposit).unwrapOrDefault()}function RM(t,e){return!!e&&!t.query.democracy.dispatchQueue}function Hf(t,[e,n,r,a]){let i;try{i=t.registry.createType("Call",e.toU8a(!0))}catch(s){console.error(s)}return{at:a,balance:r,proposal:i,proposer:n}}function BM(t,e){if(!e.isNone){if(RM(t,e)){const n=e.unwrap();if(n.isMissing)return;const{data:r,deposit:a,provider:i,since:s}=n.asAvailable;return Hf(t,[r,i,a,s])}return Hf(t,e.unwrap())}}function AM(t,[e,n,r]){if(!n)return;const[a,i]=n.isUnrequested?HM(n.asUnrequested):LM(n.asRequested);let s;if(r)try{s=t.registry.createType("Call",r.toU8a(!0))}catch(o){console.error(o)}return{at:dt,balance:i,proposal:s,proposalHash:e,proposer:a}}function CM(t,e){const n=e.map(r=>la(r));return t.query.democracy.preimages.multi(n).pipe(U(r=>r.map(a=>BM(t,a))))}function jM(t,e){const n=e.map(a=>la(a)),r=t.registry.lookup.getTypeDef(t.query.preimage.preimageFor.creator.meta.type.asMap.key).type;return t.query.preimage.statusFor.multi(n).pipe($(a=>{const i=a.map(o=>o.unwrapOr(null)),s=i.map((o,d)=>o?r==="H256"?n[d]:o.isRequested?[n[d],o.asRequested.len.unwrapOr(0)]:[n[d],o.asUnrequested.len]:null).filter(o=>!!o);return t.query.preimage.preimageFor.multi(s).pipe(U(o=>{let d=-1;return i.map((f,p)=>f?[n[p],f,o[++d].unwrapOr(null)]:[n[p],null,null]).map(f=>AM(t,f))}))}))}function UM(t,e){return q(t,n=>n.length?fe(e.query.democracy.preimages)?CM(e,n):fe(e.query.preimage.preimageFor)?jM(e,n):D([]):D([]))}const XM=Jn((t,e)=>t.derive.democracy.preimages([e]));function DM(t){return fe(t[1].mul)}function FM([t,e,n]){return t.filter(([,,r],a)=>{var i;return!!((i=n[a])!=null&&i.isSome)&&!r.isEmpty}).map(([r,a,i],s)=>{const o=n[s].unwrap();return re({image:e[s],imageHash:la(a),index:r,proposer:i},DM(o)?{balance:o[1],seconds:o[0]}:{balance:o[0],seconds:o[1]})})}function qM(t,e){return q(t,()=>{var n;return fe((n=e.query.democracy)==null?void 0:n.publicProps)?e.query.democracy.publicProps().pipe($(r=>r.length?ne([D(r),e.derive.democracy.preimages(r.map(([,a])=>a)),e.query.democracy.depositOf.multi(r.map(([a])=>a))]):D([[],[],[]])),U(FM)):D([])})}function ZM(t,e){return q(t,()=>{var n;return(n=e.query.democracy)!=null&&n.lowestUnbaked?e.queryMulti([e.query.democracy.lowestUnbaked,e.query.democracy.referendumCount]).pipe(U(([r,a])=>a.gt(r)?[...Array(a.sub(r).toNumber())].map((i,s)=>r.addn(s)):[])):D([])})}function WM(t,e){return q(t,()=>e.derive.democracy.referendumsActive().pipe($(n=>n.length?ne([D(n),e.derive.democracy._referendumsVotes(n)]):D([[],[]])),U(([n,r])=>n.map((a,i)=>re({},a,r[i])))))}function GM(t,e){return q(t,()=>e.derive.democracy.referendumIds().pipe($(n=>n.length?e.derive.democracy.referendumsInfo(n):D([]))))}function KM(t,e){return q(t,()=>e.derive.democracy.referendumIds().pipe($(n=>e.query.democracy.referendumInfoOf.multi(n)),U(n=>n.map(r=>r.unwrapOr(null)).filter(r=>!!r&&r.isFinished).map(r=>r.asFinished))))}function YM(t,e){return t.query.democracy.votersFor(e).pipe($(n=>ne([D(n),n.length?t.query.democracy.voteOf.multi(n.map(r=>[e,r])):D([]),t.derive.balances.votingBalances(n)])),U(([n,r,a])=>n.map((i,s)=>({accountId:i,balance:a[s].votingBalance||t.registry.createType("Balance"),isDelegating:!1,vote:r[s]||t.registry.createType("Vote")}))))}function JM(t,e){return t.filter(([,n])=>n.isDirect).map(([n,r])=>[n,r.asDirect.votes.filter(([a])=>a.eq(e))]).filter(([,n])=>!!n.length).reduce((n,[r,a])=>a.reduce((i,[,s])=>(s.isStandard&&i.push(re({accountId:r,isDelegating:!1},s.asStandard)),i),n),[])}function _M(t,e){return t.query.democracy.votingOf.entries().pipe(U(n=>{const r=n.map(([{args:[s]},o])=>[s,o]),a=JM(r,e),i=r.filter(([,s])=>s.isDelegating).map(([s,o])=>[s,o.asDelegating]);return i.forEach(([s,{balance:o,conviction:d,target:f}])=>{const p=i.find(([P])=>P.eq(f)),g=a.find(({accountId:P})=>P.eq(p?p[0]:f));g&&a.push({accountId:s,balance:o,isDelegating:!0,vote:t.registry.createType("Vote",{aye:g.vote.isAye,conviction:d})})}),a}))}function QM(t,e){return q(t,n=>ne([e.derive.democracy.sqrtElectorate(),fe(e.query.democracy.votingOf)?_M(e,n.index):YM(e,n.index)]).pipe(U(([r,a])=>bM(r,n,a))))}function $M(t,e){return q(t,n=>n.length?ne(n.map(r=>e.derive.democracy._referendumVotes(r))):D([]))}function eT(t,e){return q(t,(n,r)=>{const a=yM(r);return a?e.derive.democracy.preimage(a.proposal||a.proposalHash).pipe(U(i=>({image:i,imageHash:xM(a),index:e.registry.createType("ReferendumIndex",n),status:a}))):D(null)})}function tT(t,e){return q(t,n=>n.length?e.query.democracy.referendumInfoOf.multi(n).pipe($(r=>ne(n.map((a,i)=>e.derive.democracy._referendumInfo(a,r[i])))),U(r=>r.filter(a=>!!a))):D([]))}function nT(t,e){return q(t,()=>e.query.balances.totalIssuance().pipe(U(K0)))}const rT=Object.freeze(Object.defineProperty({__proto__:null,_referendumInfo:eT,_referendumVotes:QM,_referendumsVotes:$M,dispatchQueue:SM,locks:IM,nextExternal:zM,preimage:XM,preimages:UM,proposals:qM,referendumIds:ZM,referendums:WM,referendumsActive:GM,referendumsFinished:KM,referendumsInfo:tT,sqrtElectorate:nT},Symbol.toStringTag,{value:"Module"}));function aT(t){return!Array.isArray(t)}function iT(t){return Array.isArray(t)}function Lf(t){return aT(t)?[t.who,t.stake]:t}function sT(t){return iT(t)?t[0]:t}function Rf([,t],[,e]){return e.cmp(t)}function oT(t,e){return e?{candidacyBond:t.consts[e].candidacyBond,desiredRunnersUp:t.consts[e].desiredRunnersUp,desiredSeats:t.consts[e].desiredMembers,termDuration:t.consts[e].termDuration,votingBond:t.consts[e].votingBond,votingBondBase:t.consts[e].votingBondBase,votingBondFactor:t.consts[e].votingBondFactor}:{}}function cT(t){const[e]=t.registry.getModuleInstances(t.runtimeVersion.specName,"council")||["council"],n=t.query.phragmenElection?"phragmenElection":t.query.electionsPhragmen?"electionsPhragmen":t.query.elections?"elections":null;return[t.query[e]?e:"council",n]}function dT(t,e,n){return t.queryMulti([t.query[e].members,t.query[n].candidates,t.query[n].members,t.query[n].runnersUp])}function uT(t,e){return ne([t.query[e].members(),D([]),D([]),D([])])}function lT(t,e){return q(t,()=>{const[n,r]=cT(e);return(r?dT(e,n,r):uT(e,n)).pipe(U(([a,i,s,o])=>re({},oT(e,r),{candidateCount:e.registry.createType("u32",i.length),candidates:i.map(sT),members:s.length?s.map(Lf).sort(Rf):a.map(d=>[d,e.registry.createType("Balance")]),runnersUp:o.map(Lf).sort(Rf)})))})}const fT=Object.freeze(Object.defineProperty({__proto__:null,info:lT},Symbol.toStringTag,{value:"Module"}));function hT([t,e,n,r]){return e.forEach((a,i)=>{const s=a.toString(),o=r[i],d=!n[i].isEmpty,f=t[s];(!f||f.hasMessage!==d||!f.blockCount.eq(o))&&(t[s]={blockCount:o,hasMessage:d,isOnline:d||o.gt(dt)})}),t}function pT(t,e){return q(t,()=>{var n;return(n=e.query.imOnline)!=null&&n.receivedHeartbeats?e.derive.staking.overview().pipe($(({currentIndex:r,validators:a})=>ne([D({}),D(a),e.query.imOnline.receivedHeartbeats.multi(a.map((i,s)=>[r,s])),e.query.imOnline.authoredBlocks.multi(a.map(i=>[r,i]))])),U(hT)):D({})})}const mT=Object.freeze(Object.defineProperty({__proto__:null,receivedHeartbeats:pT},Symbol.toStringTag,{value:"Module"})),bT=so("membership"),yT=co("membership"),xT=lo("membership"),gT=fo("membership"),vT=ho("membership"),wT=uo("membership"),PT=oo("membership"),MT=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:yT,members:bT,prime:PT,proposal:xT,proposalCount:gT,proposalHashes:vT,proposals:wT},Symbol.toStringTag,{value:"Module"}));function Z1(t,e){return t.isSome?t.unwrap().some(n=>n.eq(e)):!1}function TT(t,e){const n=e.find(([r])=>r===t);if(n&&n[1].isSome){const[r,a]=n[1].unwrap();return re({collatorId:r},a.isWithRetries?{isRetriable:!0,retries:a.asWithRetries.toNumber()}:{isRetriable:!1,retries:0})}return null}function Bf(t,e){return e.map(n=>{const r=n.find(([a])=>a===t);return r?r[1]:null})}function ST(t,[e,n,r,a,i,s,o,d]){return i.isNone?null:{active:TT(t,e),didUpdate:Z1(a,t),heads:o,id:t,info:re({id:t},i.unwrap()),pendingSwapId:s.unwrapOr(null),relayDispatchQueue:d,retryCollators:Bf(t,n),selectedCollators:Bf(t,r)}}function kT(t,e){return q(t,n=>e.query.registrar&&e.query.parachains?e.queryMulti([e.query.registrar.active,e.query.registrar.retryQueue,e.query.registrar.selectedThreads,e.query.parachains.didUpdate,[e.query.registrar.paras,n],[e.query.registrar.pendingSwap,n],[e.query.parachains.heads,n],[e.query.parachains.relayDispatchQueue,n]]).pipe(U(r=>ST(e.registry.createType("ParaId",n),r))):D(null))}function OT([t,e,n,r,a]){return t.map((i,s)=>({didUpdate:Z1(e,i),id:i,info:re({id:i},r[s].unwrapOr(null)),pendingSwapId:a[s].unwrapOr(null),relayDispatchQueueSize:n[s][0].toNumber()}))}function NT(t,e){return q(t,()=>{var n;return(n=e.query.registrar)!=null&&n.parachains&&e.query.parachains?e.query.registrar.parachains().pipe($(r=>ne([D(r),e.query.parachains.didUpdate(),e.query.parachains.relayDispatchQueueSize.multi(r),e.query.registrar.paras.multi(r),e.query.registrar.pendingSwap.multi(r)])),U(OT)):D([])})}const VT=Object.freeze(Object.defineProperty({__proto__:null,info:kT,overview:NT},Symbol.toStringTag,{value:"Module"}));function nu([t,e,n,r,a]){return{activeEra:e,activeEraStart:n,currentEra:r,currentIndex:t,validatorCount:a}}function IT(t){return t.queryMulti([t.query.session.currentIndex,t.query.staking.activeEra,t.query.staking.currentEra,t.query.staking.validatorCount]).pipe(U(([e,n,r,a])=>{const{index:i,start:s}=n.unwrapOrDefault();return nu([e,i,s,r.unwrapOrDefault(),a])}))}function ET(t){return t.query.session.currentIndex().pipe(U(e=>nu([e,t.registry.createType("EraIndex"),t.registry.createType("Option<Moment>"),t.registry.createType("EraIndex"),t.registry.createType("u32")])))}function zT(t){return D(nu([t.registry.createType("SessionIndex",1),t.registry.createType("EraIndex"),t.registry.createType("Option<Moment>"),t.registry.createType("EraIndex"),t.registry.createType("u32")]))}function HT(t,e){return q(t,()=>e.query.session?e.query.staking?IT(e):ET(e):zT(e))}function LT(t,e){return q(t,()=>e.derive.session.indexes().pipe(U(n=>{var r,a,i,s;const o=((a=(r=e.consts)==null?void 0:r.babe)==null?void 0:a.epochDuration)||e.registry.createType("u64",1),d=((s=(i=e.consts)==null?void 0:i.staking)==null?void 0:s.sessionsPerEra)||e.registry.createType("SessionIndex",1);return re({eraLength:e.registry.createType("BlockNumber",d.mul(o)),isEpoch:!!e.query.babe,sessionLength:o,sessionsPerEra:d},n)})))}function ru(t){return(e,n)=>q(e,()=>n.derive.session.progress().pipe(U(r=>r[t])))}function RT(t,e,[n,r,a,i]){const s=r.mul(e.sessionLength).iadd(a),o=n.sub(s),d=e.currentIndex.sub(i).imul(e.sessionLength).iadd(o);return re({eraProgress:t.registry.createType("BlockNumber",d),sessionProgress:t.registry.createType("BlockNumber",o)},e)}function BT(t){return t.derive.session.info().pipe(U(e=>re({eraProgress:t.registry.createType("BlockNumber"),sessionProgress:t.registry.createType("BlockNumber")},e)))}function AT(t){return t.derive.session.info().pipe($(e=>{var n;return ne([D(e),(n=t.query.staking)!=null&&n.erasStartSessionIndex?t.queryMulti([t.query.babe.currentSlot,t.query.babe.epochIndex,t.query.babe.genesisSlot,[t.query.staking.erasStartSessionIndex,e.activeEra]]):t.queryMulti([t.query.babe.currentSlot,t.query.babe.epochIndex,t.query.babe.genesisSlot])])}),U(([e,[n,r,a,i]])=>[e,[n,r,a,i&&i.isSome?i.unwrap():t.registry.createType("SessionIndex",1)]]))}function CT(t,e){return q(t,()=>e.query.babe?AT(e).pipe(U(([n,r])=>RT(e,n,r))):BT(e))}const jT=ru("eraLength"),UT=ru("eraProgress"),XT=ru("sessionProgress"),DT=Object.freeze(Object.defineProperty({__proto__:null,eraLength:jT,eraProgress:UT,indexes:HT,info:LT,progress:CT,sessionProgress:XT},Symbol.toStringTag,{value:"Module"}));function FT(t){return t.query.society.candidates().pipe($(e=>ne([D(e),t.query.society.suspendedCandidates.multi(e.map(({who:n})=>n))])),U(([e,n])=>e.map(({kind:r,value:a,who:i},s)=>({accountId:i,isSuspended:n[s].isSome,kind:r,value:a}))))}function qT(t){return t.query.society.candidates.entries().pipe(U(e=>e.filter(([,n])=>n.isSome).map(([{args:[n]},r])=>[n,r.unwrap()]).map(([n,{bid:r,kind:a}])=>({accountId:n,isSuspended:!1,kind:a,value:r}))))}function ZT(t,e){return q(t,()=>e.query.society.suspendedCandidates&&e.query.society.candidates.creator.meta.type.isPlain?FT(e):qT(e))}function WT(t,e){return q(t,()=>ne([e.query.society.bids(),e.query.society.defender?e.query.society.defender():D(void 0),e.query.society.founder(),e.query.society.head(),e.query.society.maxMembers?e.query.society.maxMembers():D(void 0),e.query.society.pot()]).pipe(U(([n,r,a,i,s,o])=>({bids:n,defender:r==null?void 0:r.unwrapOr(void 0),founder:a.unwrapOr(void 0),hasDefender:(r==null?void 0:r.isSome)&&i.isSome&&!i.eq(r)||!1,head:i.unwrapOr(void 0),maxMembers:s,pot:o}))))}function GT(t,e){return q(t,n=>e.derive.society._members([n]).pipe(U(([r])=>r)))}function KT(t,e){return ne([D(e),t.query.society.payouts.multi(e),t.query.society.strikes.multi(e),t.query.society.defenderVotes.multi(e),t.query.society.suspendedMembers.multi(e),t.query.society.vouching.multi(e)]).pipe(U(([n,r,a,i,s,o])=>n.map((d,f)=>({accountId:d,isDefenderVoter:i[f].isSome,isSuspended:s[f].isTrue,payouts:r[f],strikes:a[f],vote:i[f].unwrapOr(void 0),vouching:o[f].unwrapOr(void 0)}))))}function YT(t,e){return ne([D(e),t.query.society.members.multi(e),t.query.society.payouts.multi(e),t.query.society.challengeRoundCount().pipe($(n=>t.query.society.defenderVotes.multi(e.map(r=>[n,r])))),t.query.society.suspendedMembers.multi(e)]).pipe(U(([n,r,a,i,s])=>n.map((o,d)=>r[d].isSome?{accountId:o,isDefenderVoter:i[d].isSome,isSuspended:s[d].isSome,member:r[d].unwrap(),payouts:a[d].payouts}:null).filter(o=>!!o).map(({accountId:o,isDefenderVoter:d,isSuspended:f,member:p,payouts:g})=>({accountId:o,isDefenderVoter:d,isSuspended:f,payouts:g,strikes:p.strikes,vouching:p.vouching.unwrapOr(void 0)}))))}function JT(t,e){return q(t,n=>e.query.society.members.creator.meta.type.isMap?YT(e,n):KT(e,n))}function _T(t,e){return q(t,()=>e.query.society.members.creator.meta.type.isMap?e.query.society.members.keys().pipe($(n=>e.derive.society._members(n.map(({args:[r]})=>r)))):e.query.society.members().pipe($(n=>e.derive.society._members(n))))}const QT=Object.freeze(Object.defineProperty({__proto__:null,_members:JT,candidates:ZT,info:WT,member:GT,members:_T},Symbol.toStringTag,{value:"Module"})),$T={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function eS(t){return t.reduce((e,{era:n,value:r})=>{const a=n.toString();return e[a]=(e[a]||dt).add(r.unwrap()),e},{})}function tS(t,e,n){const r=Object.entries(eS(((e==null?void 0:e.unlocking)||[]).filter(({era:a})=>a.unwrap().gt(n.activeEra)))).map(([a,i])=>({remainingEras:new le(a).isub(n.activeEra),value:t.registry.createType("Balance",i)}));return r.length?r:void 0}function nS(t,e,n){return t.registry.createType("Balance",((e==null?void 0:e.unlocking)||[]).reduce((r,{era:a,value:i})=>a.unwrap().gt(n.currentEra)?r:r.iadd(i.unwrap()),new le(0)))}function rS(t,e,n,r){return re({},n,r,{redeemable:nS(t,r.stakingLedger,e),unlocking:tS(t,r.stakingLedger,e)})}function aS(t,e){return q(t,(n,r=$T)=>e.derive.session.info().pipe($(a=>ne([e.derive.staking.keysMulti(n),e.derive.staking.queryMulti(n,r)]).pipe(U(([i,s])=>s.map((o,d)=>rS(e,a,i[d],o)))))))}const iS=Jn((t,e,n)=>t.derive.staking.accounts([e],n));function sS(t,e){return q(t,()=>e.derive.session.indexes().pipe($(({activeEra:n})=>e.query.staking.erasRewardPoints(n))))}const oS={withController:!0,withExposure:!0,withPrefs:!0};function cS(t,e){return ya([t,e.filter(n=>!t.find(r=>r.eq(n)))])}function dS(t,e){return q(t,(n=oS)=>e.derive.staking.validators().pipe($(({nextElected:r,validators:a})=>e.derive.staking.queryMulti(cS(r,a),n).pipe(U(i=>({info:i,nextElected:r,validators:a}))))))}function au(t,e,n){const r=`${t}-${e.toString()}`;return[r,n?void 0:Ri.get(r)]}function W1(t,e,n){return n?[]:e.map(r=>Ri.get(`${t}-${r.toString()}`)).filter(r=>!!r)}function Hs(t,e,n){return!e&&Ri.set(t,n),n}function G1(t,e,n){return!e&&n.forEach(r=>Ri.set(`${t}-${r.era.toString()}`,r)),n}function K1(t,e,n){return t.map(r=>e.find(({era:a})=>r.eq(a))||n.find(({era:a})=>r.eq(a))).filter(r=>!!r)}const uS=14;function lS(t,e){const n=wc(t,uS);let r=0;const a=new mi(n[r]);return a.pipe($(e),pr(()=>{Qr(()=>{r++,r===n.length?a.complete():a.next(n[r])})}),Js(),U(ya))}function Y1(t,e){return t.filter(n=>!e.some(({era:r})=>n.eq(r)))}function Ai(t){return(e,n)=>q(e,(r=!1)=>n.derive.staking.erasHistoric(r).pipe($(a=>n.derive.staking[t](a,r))))}function Ci(t){return(e,n)=>q(e,(r,a=!1)=>n.derive.staking.erasHistoric(a).pipe($(i=>n.derive.staking[t](r,i,a))))}function iu(t){return(e,n)=>q(e,r=>n.derive.staking[t](r,!0))}function su(t){return(e,n)=>q(e,(r,a)=>r.length?lS(r,i=>ne(i.map(s=>n.derive.staking[t](s,a)))):D([]))}const fS="eraExposure";function hS(t,e){const n={},r={};return e.forEach(([a,i])=>{const s=a.args[1].toString();r[s]=i,i.others.forEach(({who:o},d)=>{const f=o.toString();n[f]=n[f]||[],n[f].push({validatorId:s,validatorIndex:d})})}),{era:t,nominators:n,validators:r}}function pS(t,e){const n={},r={};return e.forEach(([a,i])=>{if(i.isSome){const s=a.args[1].toString(),o=i.unwrap();r[s]=o,o.others.forEach(({who:d},f)=>{const p=d.toString();n[p]=n[p]||[],n[p].push({validatorId:s,validatorIndex:f})})}}),{era:t,nominators:n,validators:r}}function mS(t,e){return q(t,(n,r=!1)=>{const[a,i]=au(fS,n,r);return i?D(i):e.query.staking.erasStakersPaged?e.query.staking.erasStakersPaged.entries(n).pipe(U(s=>Hs(a,r,pS(n,s)))):e.query.staking.erasStakersClipped.entries(n).pipe(U(s=>Hs(a,r,hS(n,s))))})}const bS=iu("_eraExposure"),yS=su("_eraExposure"),xS=Ai("_erasExposure");function gS(t,e){return q(t,n=>ne([e.query.staking.activeEra(),e.consts.staking.historyDepth?D(e.consts.staking.historyDepth):e.query.staking.historyDepth()]).pipe(U(([r,a])=>{const i=[],s=a.toNumber(),o=r.unwrapOrDefault().index;let d=o;for(;d.gte(dt)&&i.length<s;)(d!==o||n===!0)&&i.push(e.registry.createType("EraIndex",d)),d=d.sub(Ha);return i.reverse()})))}const Af="eraPoints";function vS({individual:t}){return[...t.entries()].filter(([,e])=>e.gt(dt)).reduce((e,[n,r])=>(e[n.toString()]=r,e),{})}function wS(t,e){return t.map((n,r)=>({era:n,eraPoints:e[r].total,validators:vS(e[r])}))}function PS(t,e){return q(t,(n,r)=>{if(!n.length)return D([]);const a=W1(Af,n,r),i=Y1(n,a);return i.length?e.query.staking.erasRewardPoints.multi(i).pipe(U(s=>K1(n,a,G1(Af,r,wS(i,s))))):D(a)})}const MS=Ai("_erasPoints"),TS="eraPrefs";function SS(t,e){const n={};return e.forEach(([r,a])=>{n[r.args[1].toString()]=a}),{era:t,validators:n}}function kS(t,e){return q(t,(n,r)=>{const[a,i]=au(TS,n,r);return i?D(i):e.query.staking.erasValidatorPrefs.entries(n).pipe(U(s=>Hs(a,r,SS(n,s))))})}const OS=iu("_eraPrefs"),NS=su("_eraPrefs"),VS=Ai("_erasPrefs"),Cf="eraRewards";function IS(t,e){return t.map((n,r)=>({era:n,eraReward:e[r].unwrapOrDefault()}))}function ES(t,e){return q(t,(n,r)=>{if(!n.length)return D([]);const a=W1(Cf,n,r),i=Y1(n,a);return i.length?e.query.staking.erasValidatorReward.multi(i).pipe(U(s=>K1(n,a,G1(Cf,r,IS(i,s))))):D(a)})}const zS=Ai("_erasRewards"),HS="eraSlashes";function LS(t,e,n){const r={},a={};return e.forEach(([i,s])=>{r[i.args[1].toString()]=s.unwrap()}),n.forEach(([i,s])=>{a[i.args[1].toString()]=s.unwrapOrDefault()[1]}),{era:t,nominators:r,validators:a}}function RS(t,e){return q(t,(n,r)=>{const[a,i]=au(HS,n,r);return i?D(i):ne([e.query.staking.nominatorSlashInEra.entries(n),e.query.staking.validatorSlashInEra.entries(n)]).pipe(U(([s,o])=>Hs(a,r,LS(n,s,o))))})}const BS=iu("_eraSlashes"),AS=su("_eraSlashes"),CS=Ai("_erasSlashes");function jS(t,e,n){const r=(e.find(([i])=>i.eq(t))||[void 0,[]])[1],a=n.unwrapOr([]);return{nextSessionIds:Array.isArray(a)?a:[...a.values()],sessionIds:Array.isArray(r)?r:[...r.values()]}}const US=Jn((t,e)=>t.derive.staking.keysMulti([e]));function XS(t,e){return q(t,n=>n.length?e.query.session.queuedKeys().pipe($(r=>{var a;return ne([D(r),(a=e.consts.session)!=null&&a.dedupKeyPrefix?e.query.session.nextKeys.multi(n.map(i=>[e.consts.session.dedupKeyPrefix,i])):ne(n.map(i=>e.query.session.nextKeys(i)))])}),U(([r,a])=>n.map((i,s)=>jS(i,r,a[s])))):D([]))}function DS(t,e){return q(t,()=>ne([e.derive.session.indexes(),e.derive.staking.validators()]).pipe(U(([n,{nextElected:r,validators:a}])=>re({},n,{nextElected:r,validators:a}))))}function FS(t,e){return q(t,(n,r,a)=>r.length?ne([ne(r.map(i=>e.query.staking.erasStakersClipped(i,n))),ne(r.map(i=>e.query.staking.erasStakers(i,n)))]).pipe(U(([i,s])=>r.map((o,d)=>({clipped:i[d],era:o,exposure:s[d]})))):D([]))}const qS=Jn((t,e,n)=>t.derive.staking._ownExposures(e,[n],!0)),ZS=Ci("_ownExposures");function WS(t,e){return q(t,(n,r,a)=>r.length?ne([ne(r.map(i=>e.query.staking.validatorSlashInEra(i,n))),ne(r.map(i=>e.query.staking.nominatorSlashInEra(i,n)))]).pipe(U(([i,s])=>r.map((o,d)=>({era:o,total:i[d].isSome?i[d].unwrap()[1]:s[d].unwrapOrDefault()})))):D([]))}const GS=Jn((t,e,n)=>t.derive.staking._ownSlashes(e,[n],!0)),KS=Ci("_ownSlashes");function YS(t){return typeof t.isSome=="boolean"?t.unwrapOr(null):t}function JS(t,e,n,r,a,i,s){return{accountId:t,controllerId:(e==null?void 0:e.unwrapOr(null))||null,exposure:i,nominators:n.isSome?n.unwrap().targets:[],rewardDestination:YS(r),stakingLedger:s.unwrapOrDefault(),stashId:t,validatorPrefs:a}}function _S(t,e,{withLedger:n=!1}){const r=e.filter(i=>n&&!!i&&i.isSome).map(i=>i.unwrap()),a=t.registry.createType("Option<StakingLedger>");return(r.length?ne(r.map(i=>t.query.staking.ledger(i))):D([])).pipe(U(i=>{let s=-1;return e.map(o=>o&&o.isSome&&i[++s]||a)}))}function QS(t,e,n,{withController:r,withDestination:a,withExposure:i,withLedger:s,withNominations:o,withPrefs:d}){const f=t.registry.createType("Option<Nominations>"),p=t.registry.createType("RewardDestination"),g=t.registry.createType("Exposure"),P=t.registry.createType("ValidatorPrefs");return ne([r||s?ne(e.map(T=>t.query.staking.bonded(T))):D(e.map(()=>null)),o?ne(e.map(T=>t.query.staking.nominators(T))):D(e.map(()=>f)),a?ne(e.map(T=>t.query.staking.payee(T))):D(e.map(()=>p)),d?ne(e.map(T=>t.query.staking.validators(T))):D(e.map(()=>P)),i?ne(e.map(T=>t.query.staking.erasStakers(n,T))):D(e.map(()=>g))])}function $S(t,e,n,r){return QS(t,n,e,r).pipe($(([a,i,s,o,d])=>_S(t,a,r).pipe(U(f=>n.map((p,g)=>JS(p,a[g],i[g],s[g],o[g],d[g],f[g]))))))}const ek=Jn((t,e,n)=>t.derive.staking.queryMulti([e],n));function tk(t,e){return q(t,(n,r)=>e.derive.session.indexes().pipe($(({activeEra:a})=>{const i=n.map(s=>e.registry.createType("AccountId",s));return i.length?$S(e,a,i,r):D([])})))}function nk(t,e){return q(t,(n,r,a=!1)=>{const i=n.map(s=>e.registry.createType("AccountId",s).toString());return e.derive.staking._erasExposure(r,a).pipe(U(s=>i.map(o=>s.map(({era:d,nominators:f,validators:p})=>{const g=!!p[o],P={},T=f[o]||[];return g?P[o]=p[o]:T&&T.forEach(({validatorId:k})=>{P[k]=p[k]}),{era:d,isEmpty:!Object.keys(P).length,isValidator:g,nominating:T,validators:P}}))))})}function rk(t,e){return q(t,(n,r=!1)=>e.derive.staking.erasHistoric(r).pipe($(a=>e.derive.staking._stakerExposures(n,a,r))))}const ak=Jn((t,e,n)=>t.derive.staking.stakerExposures([e],n));function ik(t,e){return q(t,(n,r,a)=>{const i=e.registry.createType("AccountId",n).toString();return e.derive.staking._erasPoints(r,a).pipe(U(s=>s.map(({era:o,eraPoints:d,validators:f})=>({era:o,eraPoints:d,points:f[i]||e.registry.createType("RewardPoint")}))))})}const sk=Ci("_stakerPoints");function ok(t,e){return q(t,(n,r,a)=>e.query.staking.erasValidatorPrefs.multi(r.map(i=>[i,n])).pipe(U(i=>i.map((s,o)=>({era:r[o],validatorPrefs:s})))))}const ck=Ci("_stakerPrefs");function J1(t){return t?t.legacyClaimedRewards||t.claimedRewards:[]}function dk(t,e,[n,r,a],i){return i.map(({era:s,isEmpty:o,isValidator:d,nominating:f,validators:p})=>{const{eraPoints:g,validators:P}=n.find(V=>V.era.eq(s))||{eraPoints:dt,validators:{}},{eraReward:T}=a.find(V=>V.era.eq(s))||{eraReward:t.registry.createType("Balance")},{validators:k}=r.find(V=>V.era.eq(s))||{validators:{}},M={},O=e.toString();return Object.entries(p).forEach(([V,N])=>{var E,A,H;const z=P[V]||dt,B=((E=k[V])==null?void 0:E.commission.unwrap())||dt,F=N.total?(A=N.total)==null?void 0:A.unwrap():N.pageTotal?(H=N.pageTotal)==null?void 0:H.unwrap():dt;let ee=dt,W;if(!(F.isZero()||z.isZero()||g.isZero())){ee=T.mul(z).div(g);const C=B.mul(ee).div(gs);let oe;if(V===O)if(N.own)oe=N.own.unwrap();else{const c=N.others.find(({who:l})=>l.eq(V));oe=c?c.value.unwrap():dt}else{const c=N.others.find(({who:l})=>l.eq(O));oe=c?c.value.unwrap():dt}W=ee.sub(C).imul(oe).div(F).iadd(V===O?C:dt)}M[V]={total:t.registry.createType("Balance",ee),value:t.registry.createType("Balance",W)}}),{era:s,eraReward:T,isEmpty:o,isValidator:d,nominating:f,validators:M}})}function uk(t){return t.reduce(([e,n],r)=>{const a=[];return n.push(a),r.forEach(({validators:i})=>Object.keys(i).forEach(s=>{a.includes(s)||(a.push(s),e.includes(s)||e.push(s))})),[e,n]},[[],[]])}function lk(t,e,n){const r=[];Object.keys(n.validators).forEach(a=>{const i=t.indexOf(a);if(i!==-1){const s=e[i].stakingLedger;J1(s).some(o=>n.era.eq(o))&&r.push(a)}}),r.forEach(a=>{delete n.validators[a]})}function fk(t,e,{rewards:n,stakingLedger:r}){const a=t.filter(o=>!J1(r).some(d=>d.eq(o))),i=e.map(([o])=>o),s=e.map(([,o])=>o);return n.filter(({isEmpty:o})=>!o).filter(o=>a.some(d=>o.era.eq(d))?(lk(i,s,o),!0):!1).filter(({validators:o})=>Object.keys(o).length!==0).map(o=>re({},o,{nominators:o.nominating.filter(d=>o.validators[d.validatorId])}))}function hk(t,e){return q(t,(n,r=!1)=>ne([e.derive.staking._erasPoints(n,r),e.derive.staking._erasPrefs(n,r),e.derive.staking._erasRewards(n,r)]))}function pk(t,e){return q(t,(n,r,a=!1)=>ne([e.derive.staking.queryMulti(n,{withLedger:!0}),e.derive.staking._stakerExposures(n,r,a),e.derive.staking._stakerRewardsEras(r,a)]).pipe($(([i,s,o])=>{const d=i.map(({stakingLedger:g,stashId:P},T)=>!P||!g?[]:dk(e,P,o,s[T]));if(a)return D(d);const[f,p]=uk(d);return e.derive.staking.queryMulti(f,{withLedger:!0}).pipe(U(g=>i.map(({stakingLedger:P},T)=>fk(r,p[T].map(k=>[k,g.find(M=>M.accountId.eq(k))]).filter(k=>!!k[1]),{rewards:d[T],stakingLedger:P}))))})))}const mk=Jn((t,e,n)=>t.derive.staking.erasHistoric(n).pipe($(r=>t.derive.staking._stakerRewards([e],r,n))));function bk(t,e){return q(t,(n,r)=>n.length&&r.length?e.derive.staking._stakerRewards(n,r,!1):D([]))}function yk(t,e){return q(t,(n,r=!1)=>e.derive.staking.erasHistoric(r).pipe($(a=>e.derive.staking.stakerRewardsMultiEras(n,a))))}function xk(t,e){return q(t,(n,r,a)=>{const i=e.registry.createType("AccountId",n).toString();return e.derive.staking._erasSlashes(r,a).pipe(U(s=>s.map(({era:o,nominators:d,validators:f})=>({era:o,total:d[i]||f[i]||e.registry.createType("Balance")}))))})}const gk=Ci("_stakerSlashes");function vk(t){let e=Date.now();return t.query.system.events().pipe(U(n=>(e=n.filter(({event:r,phase:a})=>{try{return a.isApplyExtrinsic&&r.section==="staking"&&r.method==="Bonded"}catch{return!1}})?Date.now():e,e)),Ei(e),Qd({skipTimeout:!0}))}function wk(t,e){return q(t,()=>vk(e).pipe($(()=>e.query.staking.validators.keys()),U(n=>n.map(({args:[r]})=>r).filter(r=>r))))}function Pk(t,e){return q(t,()=>e.query.staking.erasStakers?e.derive.session.indexes().pipe($(({currentEra:n})=>e.query.staking.erasStakers.keys(n)),U(n=>n.map(({args:[,r]})=>r))):e.query.staking.currentElected())}function Mk(t,e){return q(t,()=>ne([e.query.session?e.query.session.validators():D([]),e.query.staking?e.derive.staking.nextElected():D([])]).pipe(U(([n,r])=>({nextElected:r.length?r:n,validators:n}))))}const Tk={withController:!0,withPrefs:!0};function Sk(t,e){return q(t,(n=Tk)=>ne([e.derive.staking.validators(),e.derive.staking.stashes()]).pipe($(([{nextElected:r},a])=>{const i=r.map(o=>o.toString()),s=a.filter(o=>!i.includes(o.toString()));return e.derive.staking.queryMulti(s,n).pipe(U(o=>({info:o,waiting:s})))})))}const kk=Object.freeze(Object.defineProperty({__proto__:null,_eraExposure:mS,_eraPrefs:kS,_eraSlashes:RS,_erasExposure:yS,_erasPoints:PS,_erasPrefs:NS,_erasRewards:ES,_erasSlashes:AS,_ownExposures:FS,_ownSlashes:WS,_stakerExposures:nk,_stakerPoints:ik,_stakerPrefs:ok,_stakerRewards:pk,_stakerRewardsEras:hk,_stakerSlashes:xk,account:iS,accounts:aS,currentPoints:sS,electedInfo:dS,eraExposure:bS,eraPrefs:OS,eraSlashes:BS,erasExposure:xS,erasHistoric:gS,erasPoints:MS,erasPrefs:VS,erasRewards:zS,erasSlashes:CS,keys:US,keysMulti:XS,nextElected:Pk,overview:DS,ownExposure:qS,ownExposures:ZS,ownSlash:GS,ownSlashes:KS,query:ek,queryMulti:tk,stakerExposure:ak,stakerExposures:rk,stakerPoints:sk,stakerPrefs:ck,stakerRewards:mk,stakerRewardsMulti:yk,stakerRewardsMultiEras:bk,stakerSlashes:gk,stashes:wk,validators:Mk,waitingInfo:Sk},Symbol.toStringTag,{value:"Module"})),Ok=so("technicalCommittee"),Nk=co("technicalCommittee"),Vk=lo("technicalCommittee"),Ik=fo("technicalCommittee"),Ek=ho("technicalCommittee"),zk=uo("technicalCommittee"),Hk=oo("technicalCommittee"),Lk=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:Nk,members:Ok,prime:Hk,proposal:Vk,proposalCount:Ik,proposalHashes:Ek,proposals:zk},Symbol.toStringTag,{value:"Module"}));function Rk(t,{allIds:e,allProposals:n,approvalIds:r,councilProposals:a,proposalCount:i}){const s=[],o=[],d=a.filter(({proposal:f})=>f&&(t.tx.treasury.approveProposal.is(f)||t.tx.treasury.rejectProposal.is(f)));return e.forEach((f,p)=>{if(n[p].isSome){const g=d.filter(({proposal:k})=>k&&f.eq(k.args[0])).sort((k,M)=>k.proposal&&M.proposal?k.proposal.method.localeCompare(M.proposal.method):k.proposal?-1:1),P=r.some(k=>k.eq(f)),T={council:g,id:f,proposal:n[p].unwrap()};P?s.push(T):o.push(T)}}),{approvals:s,proposalCount:i,proposals:o}}function Bk(t,e,n){const r=[],a=e.toNumber();for(let s=0;s<a;s++)n.some(o=>o.eqn(s))||r.push(t.registry.createType("ProposalIndex",s));const i=[...r,...n];return ne([t.query.treasury.proposals.multi(i),t.derive.council?t.derive.council.proposals():D([])]).pipe(U(([s,o])=>Rk(t,{allIds:i,allProposals:s,approvalIds:n,councilProposals:o,proposalCount:e})))}function Ak(t,e){return q(t,()=>e.query.treasury?ne([e.query.treasury.proposalCount(),e.query.treasury.approvals()]).pipe($(([n,r])=>Bk(e,n,r))):D({approvals:[],proposalCount:e.registry.createType("ProposalIndex"),proposals:[]}))}const Ck=Object.freeze(Object.defineProperty({__proto__:null,proposals:Ak},Symbol.toStringTag,{value:"Module"}));function jk(t,e){return q(t,n=>ne([e.rpc.chain.getBlock(n),e.queryAt(n).pipe($(r=>r.system.events()))]).pipe(U(([r,a])=>({block:r,events:a}))))}const Uk=250,Xk=new le(6*1e3),_1=new le(5),Dk=new le(5*60*1e3);function Q1(t,e){return t.derive.balances.account(e).pipe(U(({accountNonce:n})=>n))}function Fk(t,e){var n;return(n=t.rpc.system)!=null&&n.accountNextIndex?t.rpc.system.accountNextIndex(e):Q1(t,e)}function qk(t){return ne([t.rpc.chain.getHeader().pipe($(e=>e.parentHash.isEmpty?D(e):t.rpc.chain.getHeader(e.parentHash).pipe(Wn(()=>D(e))))),t.rpc.chain.getFinalizedHead().pipe($(e=>t.rpc.chain.getHeader(e).pipe(Wn(()=>D(null)))))]).pipe(U(([e,n])=>!n||qc(e).sub(qc(n)).gt(_1)?e:n))}function Zk(t){var e,n,r;const a=((e=t.consts.babe)==null?void 0:e.expectedBlockTime)||((n=t.consts.aura)==null?void 0:n.slotDuration)||((r=t.consts.timestamp)==null?void 0:r.minimumPeriod.muln(2));return a.isZero()?void 0:a}function Wk(t,e){return(n,r,a)=>ne([st(r)?Q1(e,n):r===-1?Fk(e,n):D(e.registry.createType("Index",r)),st(a)||$e(a)&&a>0?qk(e):D(null)]).pipe(U(([i,s])=>{var o,d;return{header:s,mortalLength:Math.min(((d=(o=e.consts.system)==null?void 0:o.blockHashCount)==null?void 0:d.toNumber())||Uk,Dk.div(Zk(e)||Xk).iadd(_1).toNumber()),nonce:i}}))}const Gk=Object.freeze(Object.defineProperty({__proto__:null,events:jk,signingInfo:Wk},Symbol.toStringTag,{value:"Module"})),Kk={accounts:Bw,alliance:Ww,bagsList:tP,balances:mP,bounties:xP,chain:HP,contracts:BP,council:_P,crowdloan:dM,democracy:rT,elections:fT,imOnline:mT,membership:MT,parachains:VT,session:DT,society:QT,staking:kk,technicalCommittee:Lk,treasury:Ck,tx:Gk},jr={allianceMotion:{instances:["allianceMotion"],methods:[]},bagsList:{instances:["voterBagsList","voterList","bagsList"],methods:[],withDetect:!0},contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function Yk(t,e,n){return t.registry.getModuleInstances(e,n)||[]}function jf(t,e,n){const r={},a=Object.keys(n),i=Object.keys(e.query),s=e.runtimeVersion.specName,o=T=>i.includes(T),d=T=>Yk(e,s,T).some(o),f=T=>k=>T.some(M=>i.includes(M)&&e.query[M][k]),p=T=>Object.keys(n[T]),g=(T,k)=>n[T][k](t,e),P=T=>!jr[T]||jr[T].instances.some(o)&&(!jr[T].methods.length||jr[T].methods.every(f(jr[T].instances)))||jr[T].withDetect&&jr[T].instances.some(d);for(let T=0,k=a.length;T<k;T++){const M=a[T];P(M)&&L1(r,M,p,g)}return r}function Jk(t,e,n={}){return{...jf(t,e,Kk),...jf(t,e,n)}}function Uf(t,e){const n=s=>Object.keys(e[s]),r=(s,o)=>t(e[s][o]),a={},i=Object.keys(e);for(let s=0,o=i.length;s<o;s++)L1(a,i[s],n,r);return a}const _k=t=>t;function ou(t,e,n,r){return t.filter(({event:a})=>e===a.section&&n.includes(a.method)).map(a=>r(a))}function Qk({event:{data:[t]}}){return t}function $k({event:{data:t,method:e}}){return e==="ExtrinsicSuccess"?t[0]:t[1]}function eO(t=[]){return ou(t,"system",["ExtrinsicFailed"],Qk)[0]}function tO(t=[]){return ou(t,"system",["ExtrinsicFailed","ExtrinsicSuccess"],$k)[0]}let ec=class{constructor({blockNumber:e,dispatchError:n,dispatchInfo:r,events:a,internalError:i,status:s,txHash:o,txIndex:d}){S(this,"dispatchError"),S(this,"dispatchInfo"),S(this,"internalError"),S(this,"events"),S(this,"status"),S(this,"txHash"),S(this,"txIndex"),S(this,"blockNumber"),this.dispatchError=n||eO(a),this.dispatchInfo=r||tO(a),this.events=a||[],this.internalError=i,this.status=s,this.txHash=o,this.txIndex=d,this.blockNumber=e}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(e,n){return ou(this.events,e,Array.isArray(n)?n:[n],_k)}findRecord(e,n){return this.filterRecords(e,n)[0]}toHuman(e){var n,r,a;return{dispatchError:(n=this.dispatchError)==null?void 0:n.toHuman(),dispatchInfo:(r=this.dispatchInfo)==null?void 0:r.toHuman(),events:this.events.map(i=>i.toHuman(e)),internalError:(a=this.internalError)==null?void 0:a.message.toString(),status:this.status.toHuman(e)}}};function Xf(t,e,n,{header:r,mortalLength:a,nonce:i}){if(!r){if(n.era&&!n.blockHash)throw new Error("Expected blockHash to be passed alongside non-immortal era options");return $e(n.era)&&(delete n.era,delete n.blockHash),Zc(t,n,{nonce:i})}return Zc(t,n,{blockHash:r.hash,era:e.createTypeUnsafe("ExtrinsicEra",[{current:r.number,period:n.era||a}]),nonce:i})}function Df(t,e){let n={};return fe(t)?e=t:n=re({},t),[n,e]}function Zc(t,e,n){return re({blockHash:t.genesisHash,genesisHash:t.genesisHash},e,n,{runtimeVersion:t.runtimeVersion,signedExtensions:t.registry.signedExtensions,version:t.extrinsicType})}function nO(t={}){return xn(t)||$e(t)?{nonce:t}:t}function rO({api:t,apiType:e,blockHash:n,decorateMethod:r}){const a=t.registry.createClass("Extrinsic");class i extends a{constructor(o,d){super(o,d,{version:t.extrinsicType}),S(this,"__internal__ignoreStatusCb"),S(this,"__internal__transformResult",da),S(this,"__internal__observeSign",(f,p)=>{const g=Ro(f)?f.address:f.toString(),P=nO(p);return t.derive.tx.signingInfo(g,P.nonce,P.era).pipe(sl(),Ys(async T=>{const k=Xf(t,this.registry,P,T);let M=-1;return Ro(f)?this.sign(f,k):M=await this.__internal__signViaSigner(g,k,T.header),{options:k,updateId:M}}))}),S(this,"__internal__observeStatus",(f,p)=>{if(!p.isFinalized&&!p.isInBlock)return D(this.__internal__transformResult(new ec({status:p,txHash:f})));const g=p.isInBlock?p.asInBlock:p.asFinalized;return t.derive.tx.events(g).pipe(U(({block:P,events:T})=>this.__internal__transformResult(new ec({...G8(f,P,T,p),status:p,txHash:f}))),Wn(P=>D(this.__internal__transformResult(new ec({internalError:P,status:p,txHash:f})))))}),S(this,"__internal__observeSend",f=>t.rpc.author.submitExtrinsic(this).pipe(pr(p=>{this.__internal__updateSigner(p,f)}))),S(this,"__internal__observeSubscribe",f=>{const p=this.hash;return t.rpc.author.submitAndWatchExtrinsic(this).pipe($(g=>this.__internal__observeStatus(p,g)),pr(g=>{this.__internal__updateSigner(g,f)}))}),S(this,"__internal__signViaSigner",async(f,p,g)=>{const P=p.signer||t.signer;if(!P)throw new Error("No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const T=this.registry.createTypeUnsafe("SignerPayload",[re({},p,{address:f,blockNumber:g?g.number:0,method:this.method})]);let k;if(fe(P.signPayload))k=await P.signPayload(T.toPayload());else if(fe(P.signRaw))k=await P.signRaw(T.toRaw());else throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");return super.addSignature(f,k.signature,T.toPayload()),k.id}),S(this,"__internal__updateSigner",(f,p)=>{if(p&&p.updateId!==-1){const{options:g,updateId:P}=p,T=g.signer||t.signer;T&&fe(T.update)&&T.update(P,f)}}),this.__internal__ignoreStatusCb=e==="rxjs"}get hasDryRun(){var o;return fe((o=t.rpc.system)==null?void 0:o.dryRun)}get hasPaymentInfo(){var o;return fe((o=t.call.transactionPaymentApi)==null?void 0:o.queryInfo)}dryRun(o,d){if(!this.hasDryRun)throw new Error("The system.dryRun RPC call is not available in your environment");return n||nt(d)||Pe(d)?r(()=>t.rpc.system.dryRun(this.toHex(),n||d)):r(()=>this.__internal__observeSign(o,d).pipe($(()=>t.rpc.system.dryRun(this.toHex()))))()}paymentInfo(o,d){if(!this.hasPaymentInfo)throw new Error("The transactionPaymentApi.queryInfo runtime call is not available in your environment");if(n||nt(d)||Pe(d))return r(()=>t.callAt(n||d).pipe($(g=>{const P=this.toU8a();return g.transactionPaymentApi.queryInfo(P,P.length)})));const[f]=Df(d),p=Ro(o)?o.address:o.toString();return r(()=>t.derive.tx.signingInfo(p,f.nonce,f.era).pipe(sl(),$(g=>{const P=Xf(t,this.registry,f,g),T=Zc(t,P,{}),k=t.tx(this.toU8a()).signFake(p,T).toU8a();return t.call.transactionPaymentApi.queryInfo(k,k.length)})))()}send(o){const d=t.hasSubscriptions&&(this.__internal__ignoreStatusCb||!!o);return r(d?this.__internal__observeSubscribe:this.__internal__observeSend)(o)}signAsync(o,d){return r(()=>this.__internal__observeSign(o,d).pipe(U(()=>this)))()}signAndSend(o,d,f){const[p,g]=Df(d,f),P=t.hasSubscriptions&&(this.__internal__ignoreStatusCb||!!g);return r(()=>this.__internal__observeSign(o,p).pipe($(T=>P?this.__internal__observeSubscribe(T):this.__internal__observeSend(T))))(g)}withResultTransform(o){return this.__internal__transformResult=o,this}}return i}function Ff(t,e,n,r,a){const i=rO({api:e,apiType:t,blockHash:a,decorateMethod:n});return s=>new i(r||e.registry,s)}function $1(t,e){return t.findMetaCall(me(e))}function em(t,e){return t.findMetaError(me(e))}const aO={},tm={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},DispatchErrorModule:"DispatchErrorModuleU8",PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},qf={...tm,AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"},iO=[{minmax:[240,243],types:{...qf,ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}}},{minmax:[244,999],types:{...qf}},{minmax:[1e3,void 0],types:{...tm}}],tn={CompactAssignments:"CompactAssignmentsWith24",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]},Weight:"WeightV1"},tc={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},nr={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},sO=[{minmax:[1019,1031],types:{...tc,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1032,1042],types:{...tc,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1043,1045],types:{...tc,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1046,1049],types:{...tn,...nr,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo223",Weight:"u32"}},{minmax:[1050,1054],types:{...tn,...nr,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo240",Weight:"u32"}},{minmax:[1055,1056],types:{...tn,...nr,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo240",Weight:"u32"}},{minmax:[1057,1061],types:{...tn,...nr,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Scheduled:"ScheduledTo254"}},{minmax:[1062,2012],types:{...tn,...nr,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[2013,2022],types:{...tn,...nr,CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"}},{minmax:[2023,2024],types:{...tn,...nr,RefCount:"RefCountTo259"}},{minmax:[2025,2027],types:{...tn,...nr}},{minmax:[2028,2029],types:{...tn,AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"}},{minmax:[2030,9e3],types:{...tn,CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"}},{minmax:[9010,9099],types:{...tn,...Zt("V0")}},{minmax:[9100,9105],types:{...tn,...Zt("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],oO=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}],cO=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}],pa={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}},Weight:"WeightV1"},_i={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",DispatchErrorModule:"DispatchErrorModuleU8",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},dO=[{minmax:[0,12],types:{...pa,..._i,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[13,22],types:{...pa,..._i,CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"}},{minmax:[23,24],types:{...pa,..._i,RefCount:"RefCountTo259"}},{minmax:[25,27],types:{...pa,..._i}},{minmax:[28,29],types:{...pa,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[30,9109],types:{...pa}},{minmax:[9110,void 0],types:{Weight:"WeightV1"}}],Qa={DispatchErrorModule:"DispatchErrorModuleU8",FullIdentification:"()",Keys:"SessionKeys7B",Weight:"WeightV1"},uO=[{minmax:[0,200],types:{...Qa,AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"}},{minmax:[201,214],types:{...Qa,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[215,228],types:{...Qa,Keys:"SessionKeys6"}},{minmax:[229,9099],types:{...Qa,...Zt("V0")}},{minmax:[9100,9105],types:{...Qa,...Zt("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],lO=[{minmax:[0,void 0],types:{}}],Zf={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},fO=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...Zf,...Zt("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...Zf,...Zt("V1")}},{minmax:[500,9999],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[1e4,void 0],types:{Weight:"WeightV1"}}],Wf={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},hO=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...Wf,...Zt("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...Wf,...Zt("V1")}},{minmax:[500,void 0],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}}],rr={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]},Weight:"WeightV1"},$a={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"},pO=[{minmax:[1,2],types:{...rr,...$a,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"}},{minmax:[3,22],types:{...rr,...$a,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[23,42],types:{...rr,...$a,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"}},{minmax:[43,44],types:{...rr,...$a,DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"}},{minmax:[45,47],types:{...rr,...$a}},{minmax:[48,49],types:{...rr,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[50,9099],types:{...rr,...Zt("V0")}},{minmax:[9100,9105],types:{...rr,...Zt("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],Gf={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},mO=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...Gf,...Zt("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...Gf,...Zt("V1")}},{minmax:[500,9434],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[9435,void 0],types:{Weight:"WeightV1"}}],bO={"centrifuge-chain":iO,kusama:sO,node:oO,"node-template":cO,polkadot:dO,rococo:uO,shell:lO,statemine:fO,statemint:hO,westend:pO,westmint:mO},yO=[[0,1020,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[26669,1021,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[38245,1022,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[54248,1023,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[59659,1024,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[67651,1025,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[82191,1027,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[83238,1028,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[101503,1029,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[203466,1030,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[295787,1031,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[461692,1032,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[504329,1033,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[569327,1038,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[587687,1039,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[653183,1040,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[693488,1042,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[901442,1045,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1375086,1050,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1445458,1051,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1472960,1052,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1475648,1053,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1491596,1054,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1574408,1055,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2064961,1058,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2201991,1062,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2671528,2005,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2704202,2007,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2728002,2008,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2832534,2011,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2962294,2012,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[324e4,2013,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3274408,2015,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3323565,2019,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3534175,2022,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3860281,2023,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4143129,2024,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4401242,2025,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4841367,2026,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5961600,2027,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6137912,2028,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6561855,2029,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7100891,2030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7468792,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7668600,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7812476,9040,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8010981,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8073833,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8555825,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8945245,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9611377,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9625129,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9866422,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10403784,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10960765,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11006614,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11404482,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11601803,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12008022,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12405451,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12665416,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12909508,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13109752,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13555777,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13727747,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[14248044,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[14433840,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[14645900,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15048375,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15426015,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15680713,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15756296,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15912007,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[16356547,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[17335450,9381,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1]]],[18062739,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[18625e3,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[20465806,1e6,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[2157e4,1001e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21786291,1001002,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[22515962,1001003,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]]],xO=[[0,0,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[29231,1,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[188836,5,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[199405,6,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[214264,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[244358,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[303079,9,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[314201,10,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[342400,11,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[443963,12,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[528470,13,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[687751,14,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[746085,15,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[787923,16,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[799302,17,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1205128,18,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1603423,23,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1733218,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2005673,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2436698,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3613564,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3899547,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4345767,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4876134,30,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5661442,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6321619,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6713249,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7217907,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7229126,9110,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7560558,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8115869,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8638103,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9280179,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9738717,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10156856,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10458576,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10655116,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10879371,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11328884,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11532856,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11933818,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12217535,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12245277,9281,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12532644,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12876189,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[13800015,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[14188833,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[14543918,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[15978362,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[1645e4,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[1784e4,9431,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[18407475,1000001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[19551e3,1001002,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]]],gO=[[214356,4,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[392764,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[409740,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[809976,20,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[877581,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[879238,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[889472,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[902937,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[932751,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[991142,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1030162,31,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1119657,32,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1199282,33,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1342534,34,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1392263,35,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1431703,36,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1433369,37,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1490972,41,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2087397,43,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2316688,44,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2549864,45,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925782,46,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925843,47,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4207800,48,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4627944,49,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5124076,50,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5478664,900,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5482450,9e3,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5584305,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5784566,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5879822,9031,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5896856,9032,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5897316,9033,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6117927,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6210274,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6379314,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6979141,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7568453,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7766394,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7911691,9120,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7968866,9121,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7982889,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8514322,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091726,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091774,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9406726,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9921066,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10007115,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10480973,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10578091,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10678509,9210,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10811001,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11096116,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11409279,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11584820,9251,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11716837,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11876919,9261,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11987927,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12077324,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12301871,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12604343,9290,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12841034,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13128237,9310,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13272363,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13483497,9330,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13649433,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13761100,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13847400,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[14249200,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[14576855,9380,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1]]],[14849830,9390,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15146832,9400,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15332317,9401,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15661793,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[16165469,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[18293984,102e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18293991,103e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",8],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18451783,104e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",9],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18679741,1005e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",9],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19166695,1006e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19234157,1006001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19542944,1007e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19621258,1007001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19761406,1008e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20056997,1009e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20368318,101e4,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]]],vO=Object.freeze(Object.defineProperty({__proto__:null,kusama:yO,polkadot:xO,westend:gO},Symbol.toStringTag,{value:"Module"})),wO={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function PO([t,e]){const n=o9.find(r=>r.network===t)||wO[t];if(!n)throw new Error(`Unable to find info for chain ${t}`);return{genesisHash:Fn(n.genesisHash[0]),network:t,versions:e.map(([r,a,i])=>({apis:i,blockNumber:new le(r),specVersion:new le(a)}))}}const MO=Object.entries(vO).map(PO);function Aa(t,e,n){return n(t.toString(),e.toString())}function Qi(t=[],e){return t.filter(({minmax:[n,r]})=>(n==null||e>=n)&&(r==null||e<=r)).reduce((n,{types:r})=>({...n,...r}),{})}function TO({knownTypes:t},e,n){return Aa(e,n,(r,a)=>{var i,s,o,d,f,p;return{...((o=(s=(i=t.typesBundle)==null?void 0:i.spec)==null?void 0:s[a])==null?void 0:o.signedExtensions)??{},...((p=(f=(d=t.typesBundle)==null?void 0:d.chain)==null?void 0:f[r])==null?void 0:p.signedExtensions)??{}}})}function SO({knownTypes:t},e,n,r){const a=xt(r).toNumber();return Aa(e,n,(i,s)=>{var o,d,f,p,g,P,T,k;return{...Qi(bO[s],a),...Qi(aO[i],a),...Qi((f=(d=(o=t.typesBundle)==null?void 0:o.spec)==null?void 0:d[s])==null?void 0:f.types,a),...Qi((P=(g=(p=t.typesBundle)==null?void 0:p.chain)==null?void 0:g[i])==null?void 0:P.types,a),...((T=t.typesSpec)==null?void 0:T[s])??{},...((k=t.typesChain)==null?void 0:k[i])??{},...t.types??{}}})}function kO({knownTypes:t},e,n){return Aa(e,n,(r,a)=>{var i,s,o,d,f,p;return t.hasher||((o=(s=(i=t.typesBundle)==null?void 0:i.chain)==null?void 0:s[r])==null?void 0:o.hasher)||((p=(f=(d=t.typesBundle)==null?void 0:d.spec)==null?void 0:f[a])==null?void 0:p.hasher)||null})}function Kf({knownTypes:t},e,n){return Aa(e,n,(r,a)=>{var i,s,o,d,f,p;return{...((o=(s=(i=t.typesBundle)==null?void 0:i.spec)==null?void 0:s[a])==null?void 0:o.rpc)??{},...((p=(f=(d=t.typesBundle)==null?void 0:d.chain)==null?void 0:f[r])==null?void 0:p.rpc)??{}}})}function OO({knownTypes:t},e,n){return Aa(e,n,(r,a)=>{var i,s,o,d,f,p;return{...((o=(s=(i=t.typesBundle)==null?void 0:i.spec)==null?void 0:s[a])==null?void 0:o.runtime)??{},...((p=(f=(d=t.typesBundle)==null?void 0:d.chain)==null?void 0:f[r])==null?void 0:p.runtime)??{}}})}function NO({knownTypes:t},e,n){return Aa(e,n,(r,a)=>{var i,s,o,d,f,p;return{...((o=(s=(i=t.typesBundle)==null?void 0:i.spec)==null?void 0:s[a])==null?void 0:o.alias)??{},...((p=(f=(d=t.typesBundle)==null?void 0:d.chain)==null?void 0:f[r])==null?void 0:p.alias)??{},...t.typesAlias??{}}})}function VO(t,e){const n=MO.find(r=>t.eq(r.genesisHash));return n?[n.versions.reduce((r,a)=>e.gt(a.blockNumber)?a:r,void 0),n.versions.find(r=>e.lte(r.blockNumber))]:[void 0,void 0]}const IO=Kt("api/augment");function Yf(t,e,n=[]){return e.length?` ${e.length} ${t}${n.length?" and":""}`:""}function Jf(t,e){return e.length?`
	${t.padStart(7)}: ${e.sort().join(", ")}`:""}function _f(t,e,[n,r]){(n.length||r.length)&&IO.warn(`api.${t}: Found${Yf("added",n,r)}${Yf("removed",r)} ${e}:${Jf("added",n)}${Jf("removed",r)}`)}function Qf(t,e){return t.filter(n=>!e.includes(n))}function EO(t,e){return t.filter(n=>e.includes(n))}function zO(t,e){const n=Object.keys(t),r=Object.keys(e);return[Qf(n,r),Qf(r,n)]}function $f(t,e){const n=Object.keys(t),r=EO(Object.keys(e),n),a=[];for(let i=0,s=r.length;i<s;i++){const o=r[i],d=Object.keys(t[o]),f=Object.keys(e[o]);for(let p=0,g=f.length;p<g;p++){const P=f[p];d.includes(P)||a.push(`${o}.${P}`)}}return a}function HO(t,e){return[$f(e,t),$f(t,e)]}function Mn(t,e,n,r=!1){r&&N2(n),t&&Object.keys(n).length&&(_f(t,"modules",zO(e,n)),_f(t,"calls",HO(e,n)));const a=Object.keys(e);for(let i=0,s=a.length;i<s;i++){const o=a[i],d=e[o];n[o]||(n[o]={}),Wr(n[o],Object.keys(d),f=>d[f])}return n}function e0({lookup:t},{method:e,section:n},r){return`${n}.${e}(${r.map(a=>t.getTypeDef(a).type).join(", ")})`}function $i(t,e,n){const r=n.filter(a=>!st(a));if(e.meta.type.isPlain){if(r.length!==0)throw new Error(`${e0(t,e,[])} does not take any arguments, ${r.length} found`)}else{const{hashers:a,key:i}=e.meta.type.asMap,s=a.length===1?[i]:t.lookup.getSiType(i).def.asTuple.map(o=>o);if(r.length!==s.length)throw new Error(`${e0(t,e,s)} is a map, requiring ${s.length} arguments, ${r.length} found`)}return[e,r]}class LO{constructor(){S(this,"__internal__eventemitter",new qh)}emit(e,...n){return this.__internal__eventemitter.emit(e,...n)}on(e,n){return this.__internal__eventemitter.on(e,n),this}off(e,n){return this.__internal__eventemitter.removeListener(e,n),this}once(e,n){return this.__internal__eventemitter.once(e,n),this}}const es=1e3,nc=250,RO=50,rc=Kt("api/init");let BO=0;function ac(t,{method:e,section:n}){return dr(t.rx.query[n]&&t.rx.query[n][e],()=>`query.${n}.${e} is not available in this version of the metadata`)}class AO extends LO{constructor(e,n,r){var a;super(),S(this,"__internal__instanceId"),S(this,"__internal__runtimeLog",{}),S(this,"__internal__registry"),S(this,"__internal__storageGetQ",[]),S(this,"__internal__storageSubQ",[]),S(this,"__phantom",new le(0)),S(this,"_type"),S(this,"_call",{}),S(this,"_consts",{}),S(this,"_derive"),S(this,"_errors",{}),S(this,"_events",{}),S(this,"_extrinsics"),S(this,"_extrinsicType",ro.LATEST_EXTRINSIC_VERSION),S(this,"_genesisHash"),S(this,"_isConnected"),S(this,"_isReady",!1),S(this,"_query",{}),S(this,"_queryMulti"),S(this,"_rpc"),S(this,"_rpcCore"),S(this,"_runtimeMap",{}),S(this,"_runtimeChain"),S(this,"_runtimeMetadata"),S(this,"_runtimeVersion"),S(this,"_rx",{call:{},consts:{},query:{},tx:{}}),S(this,"_options"),S(this,"_decorateMethod"),S(this,"_rxDecorateMethod",s=>s),this.__internal__instanceId=`${++BO}`,this.__internal__registry=((a=e.source)==null?void 0:a.registry)||e.registry||new E1,this._rx.callAt=(s,o)=>kn(this.at(s,o)).pipe(U(d=>d.rx.call)),this._rx.queryAt=(s,o)=>kn(this.at(s,o)).pipe(U(d=>d.rx.query)),this._rx.registry=this.__internal__registry,this._decorateMethod=r,this._options=e,this._type=n;const i=e.source?e.source._rpcCore.provider.isClonable?e.source._rpcCore.provider.clone():e.source._rpcCore.provider:e.provider||new Zh;this._rpcCore=new pw(this.__internal__instanceId,this.__internal__registry,{isPedantic:this._options.isPedantic,provider:i,userRpc:this._options.rpc}),this._isConnected=new mi(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions}get registry(){return this.__internal__registry}createType(e,...n){return this.__internal__registry.createType(e,...n)}registerTypes(e){e&&this.__internal__registry.register(e)}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_emptyDecorated(e,n){return{call:{},consts:{},errors:{},events:{},query:{},registry:e,rx:{call:{},query:{}},tx:Ff(this._type,this._rx,this._decorateMethod,e,n)}}_createDecorated(e,n,r,a){r||(r=this._emptyDecorated(e.registry,a)),(n||!e.decoratedMeta)&&(e.decoratedMeta=rw(e.registry,e.metadata));const i=this._decorateCalls(e,this._decorateMethod,a),s=this._decorateCalls(e,this._rxDecorateMethod,a),o=this._decorateStorage(e.decoratedMeta,this._decorateMethod,a),d=this._decorateStorage(e.decoratedMeta,this._rxDecorateMethod,a);return Mn("consts",e.decoratedMeta.consts,r.consts,n),Mn("errors",e.decoratedMeta.errors,r.errors,n),Mn("events",e.decoratedMeta.events,r.events,n),Mn("query",o,r.query,n),Mn("query",d,r.rx.query,n),Mn("call",i,r.call,n),Mn("call",s,r.rx.call,n),r.findCall=f=>$1(e.registry,f),r.findError=f=>em(e.registry,f),r.queryMulti=a?this._decorateMultiAt(r,this._decorateMethod,a):this._decorateMulti(this._decorateMethod),r.runtimeVersion=e.runtimeVersion,{createdAt:a,decoratedApi:r,decoratedMeta:e.decoratedMeta}}_injectMetadata(e,n=!1){(n||!e.decoratedApi)&&(e.decoratedApi=this._emptyDecorated(e.registry));const{decoratedApi:r,decoratedMeta:a}=this._createDecorated(e,n,e.decoratedApi);this._call=r.call,this._consts=r.consts,this._errors=r.errors,this._events=r.events,this._query=r.query,this._rx.call=r.rx.call,this._rx.query=r.rx.query;const i=this._decorateExtrinsics(a,this._decorateMethod),s=this._decorateExtrinsics(a,this._rxDecorateMethod);n||!this._extrinsics?(this._extrinsics=i,this._rx.tx=s):(Mn("tx",i,this._extrinsics,!1),Mn(null,s,this._rx.tx,!1)),Mn(null,a.consts,this._rx.consts,n),this.emit("decorated")}injectMetadata(e,n,r){this._injectMetadata({counter:0,metadata:e,registry:r||this.__internal__registry,runtimeVersion:this.__internal__registry.createType("RuntimeVersionPartial")},n)}_decorateFunctionMeta(e,n){return n.meta=e.meta,n.method=e.method,n.section=e.section,n.toJSON=e.toJSON,e.callIndex&&(n.callIndex=e.callIndex),n}_filterRpc(e,n){Object.keys(n).length!==0&&(this._rpcCore.addUserInterfaces(n),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc));const r={};for(let i=0,s=e.length;i<s;i++){const[o]=e[i].split("_");r[o]=!0}const a=Object.keys(r);for(let i=0,s=a.length;i<s;i++){const o=E2(a[i]),d=`${o}Api`;this._runtimeMap[ko(o,64)]=o,this._runtimeMap[ko(d,64)]=d}this._filterRpcMethods(e)}_filterRpcMethods(e){const n=e.length!==0,r=[...this._rpcCore.mapping.entries()],a=[],i=r.length;for(let o=0;o<i;o++){const[,{alias:d,endpoint:f,method:p,pubsub:g,section:P}]=r[o];a.push(`${P}_${p}`),g&&(a.push(`${P}_${g[1]}`),a.push(`${P}_${g[2]}`)),d&&a.push(...d),f&&a.push(f)}const s=e.filter(o=>!a.includes(o)&&!o.includes("_unstable_"));s.length&&!this._options.noInitWarn&&rc.warn(`RPC methods not decorated: ${s.join(", ")}`);for(let o=0;o<i;o++){const[d,{method:f,section:p}]=r[o];n&&!e.includes(d)&&d!=="rpc_methods"&&this._rpc[p]&&(delete this._rpc[p][f],delete this._rx.rpc[p][f])}}_rpcSubmitter(e){return e((n,...r)=>kn(this._rpcCore.provider.send(n,r)))}_decorateRpc(e,n,r=this._rpcSubmitter(n)){const a=r,i=(s,o)=>{const d=e[s][o],f=n(d,{methodName:o});return f.meta=d.meta,f.raw=n(d.raw,{methodName:o}),f};for(let s=0,o=e.sections.length;s<o;s++){const d=e.sections[s];if(!Object.prototype.hasOwnProperty.call(a,d)){const f=Object.keys(e[d]),p=g=>i(d,g);for(let g=0,P=f.length;g<P;g++){const T=f[g];(this.hasSubscriptions||!(T.startsWith("subscribe")||T.startsWith("unsubscribe")))&&(Object.prototype.hasOwnProperty.call(a,d)||(a[d]={}),wt(a[d],T,p))}}}return a}_addRuntimeDef(e,n){if(!n)return;const r=Object.entries(n);for(let a=0,i=r.length;a<i;a++){const[s,o]=r[a];if(e[s])for(let d=0,f=o.length;d<f;d++){const p=o[d],g=e[s].find(({version:P})=>p.version===P);g?re(g.methods,p.methods):e[s].push(p)}else e[s]=o}}_getRuntimeDefs(e,n,r=""){const a={},i=Object.values(ks);for(let s=0,o=i.length;s<o;s++)this._addRuntimeDef(a,i[s].runtime);return this._addRuntimeDef(a,OO(e,r,n)),this._addRuntimeDef(a,this._options.runtime),Object.entries(a)}_decorateCalls({registry:e,runtimeVersion:{apis:n,specName:r,specVersion:a}},i,s){const o={},d={},f={},p=this._getRuntimeDefs(e,r,this._runtimeChain),g=[],P=`${r.toString()}/${a.toString()}`,T=this.__internal__runtimeLog[P]||!1;this.__internal__runtimeLog[P]=!0;for(let N=0,E=p.length;N<E;N++){const[A,H]=p[N],z=ko(A,64),B=n.find(([F])=>F.eq(z));if(f[z]=!0,B){const F=H.map(({version:W})=>W).sort(),ee=H.find(({version:W})=>B[1].eq(W));if(ee){const W=et(A),C=Object.entries(ee.methods);if(C.length){d[W]||(d[W]={});for(let oe=0,c=C.length;oe<c;oe++){const[l,h]=C[oe],m=et(l);d[W][m]=re({method:m,name:`${A}_${l}`,section:W,sectionHash:z},h)}}}else g.push(`${A}/${B[1].toString()} (${F.join("/")} known)`)}}const k=n.map(([N,E])=>[N.toHex(),E.toString()]).filter(([N])=>!f[N]).map(([N,E])=>`${this._runtimeMap[N]||N}/${E}`);!this._options.noInitWarn&&!T&&(g.length&&rc.warn(`${P}: Not decorating runtime apis without matching versions: ${g.join(", ")}`),k.length&&rc.warn(`${P}: Not decorating unknown runtime apis: ${k.join(", ")}`));const M=s?(N,E)=>this._rpcCore.state.call(N,E,s):(N,E)=>this._rpcCore.state.call(N,E),O=N=>Wr({},Object.keys(d[N]),E=>this._decorateCall(e,d[N][E],M,i)),V=Object.keys(d);for(let N=0,E=V.length;N<E;N++)wt(o,V[N],O);return o}_decorateCall(e,n,r,a){const i=a((...s)=>{if(s.length!==n.params.length)throw new Error(`${n.name}:: Expected ${n.params.length} arguments, found ${s.length}`);const o=e.createType("Raw",Gt(s.map((d,f)=>e.createTypeUnsafe(n.params[f].type,[d]).toU8a())));return r(n.name,o).pipe(U(d=>e.createTypeUnsafe(n.type,[d])))});return i.meta=n,i}_decorateMulti(e){return e(n=>n.length?(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(n.map(r=>Array.isArray(r)?r[0].creator.meta.type.isPlain?[r[0].creator]:r[0].creator.meta.type.asMap.hashers.length===1?[r[0].creator,r.slice(1)]:[r[0].creator,...r.slice(1)]:[r.creator])):D([]))}_decorateMultiAt(e,n,r){return n(a=>a.length?this._rpcCore.state.queryStorageAt(a.map(i=>{if(Array.isArray(i)){const{creator:s}=ac(e,i[0].creator);return s.meta.type.isPlain?[s]:s.meta.type.asMap.hashers.length===1?[s,i.slice(1)]:[s,...i.slice(1)]}return[ac(e,i.creator).creator]}),r):D([]))}_decorateExtrinsics({tx:e},n){const r=Ff(this._type,this._rx,n),a=s=>Wr({},Object.keys(e[s]),o=>o.startsWith("$")?e[s][o]:this._decorateExtrinsicEntry(e[s][o],r)),i=Object.keys(e);for(let s=0,o=i.length;s<o;s++)wt(r,i[s],a);return r}_decorateExtrinsicEntry(e,n){const r=(...a)=>n(e(...a));return r.is=a=>e.is(a),this._decorateFunctionMeta(e,r)}_decorateStorage({query:e,registry:n},r,a){const i={},s=d=>Wr({},Object.keys(e[d]),f=>a?this._decorateStorageEntryAt(n,e[d][f],r,a):this._decorateStorageEntry(e[d][f],r)),o=Object.keys(e);for(let d=0,f=o.length;d<f;d++)wt(i,o[d],s);return i}_decorateStorageEntry(e,n){const r=(s,o)=>$i(o||this.__internal__registry,e,s),a=s=>kn(this.at(s)).pipe(U(o=>ac(o,e))),i=this._decorateStorageCall(e,n);return i.creator=e,i.at=n((s,...o)=>a(s).pipe($(d=>d(...o)))),i.hash=n((...s)=>this._rpcCore.state.getStorageHash(r(s))),i.is=s=>s.section===e.section&&s.method===e.method,i.key=(...s)=>Ke(vs(e(...s))[1]),i.keyPrefix=(...s)=>Ke(e.keyPrefix(...s)),i.size=n((...s)=>this._rpcCore.state.getStorageSize(r(s))),i.sizeAt=n((s,...o)=>a(s).pipe($(d=>this._rpcCore.state.getStorageSize(r(o,d.creator.meta.registry),s)))),e.iterKey&&e.meta.type.isMap&&(i.entries=n(q(this.__internal__instanceId,(...s)=>this._retrieveMapEntries(e,null,s))),i.entriesAt=n(q(this.__internal__instanceId,(s,...o)=>a(s).pipe($(d=>this._retrieveMapEntries(d.creator,s,o))))),i.entriesPaged=n(q(this.__internal__instanceId,s=>this._retrieveMapEntriesPaged(e,void 0,s))),i.keys=n(q(this.__internal__instanceId,(...s)=>this._retrieveMapKeys(e,null,s))),i.keysAt=n(q(this.__internal__instanceId,(s,...o)=>a(s).pipe($(d=>this._retrieveMapKeys(d.creator,s,o))))),i.keysPaged=n(q(this.__internal__instanceId,s=>this._retrieveMapKeysPaged(e,void 0,s)))),this.supportMulti&&e.meta.type.isMap&&(i.multi=n(s=>e.meta.type.asMap.hashers.length===1?this._retrieveMulti(s.map(o=>[e,[o]])):this._retrieveMulti(s.map(o=>[e,o])))),this._decorateFunctionMeta(e,i)}_decorateStorageEntryAt(e,n,r,a){const i=o=>$i(e,n,o),s=r((...o)=>this._rpcCore.state.getStorage(i(o),a));return s.creator=n,s.hash=r((...o)=>this._rpcCore.state.getStorageHash(i(o),a)),s.is=o=>o.section===n.section&&o.method===n.method,s.key=(...o)=>Ke(vs(n(...o))[1]),s.keyPrefix=(...o)=>Ke(n.keyPrefix(...o)),s.size=r((...o)=>this._rpcCore.state.getStorageSize(i(o),a)),n.iterKey&&n.meta.type.isMap&&(s.entries=r(q(this.__internal__instanceId,(...o)=>this._retrieveMapEntries(n,a,o))),s.entriesPaged=r(q(this.__internal__instanceId,o=>this._retrieveMapEntriesPaged(n,a,o))),s.keys=r(q(this.__internal__instanceId,(...o)=>this._retrieveMapKeys(n,a,o))),s.keysPaged=r(q(this.__internal__instanceId,o=>this._retrieveMapKeysPaged(n,a,o)))),this.supportMulti&&n.meta.type.isMap&&(s.multi=r(o=>n.meta.type.asMap.hashers.length===1?this._retrieveMulti(o.map(d=>[n,[d]]),a):this._retrieveMulti(o.map(d=>[n,d]),a))),this._decorateFunctionMeta(n,s)}_queueStorage(e,n){const r=n===this.__internal__storageSubQ?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;let a=n.length-1,i=0,s;return a===-1||!n[a]||n[a][1].length===RO?(a++,s=kn(new Promise(o=>{Qr(()=>{const d=n[a][1];delete n[a],o(d)})})).pipe($(o=>r(o))),n.push([s,[e]])):(s=n[a][0],i=n[a][1].length,n[a][1].push(e)),s.pipe(U(o=>o[i]))}_decorateStorageCall(e,n){const r=q(this.__internal__instanceId,(...a)=>{const i=$i(this.__internal__registry,e,a);return this.hasSubscriptions?this._queueStorage(i,this.__internal__storageSubQ):this._rpcCore.state.getStorage(i)});return n(r,{methodName:e.method,overrideNoSub:(...a)=>this._queueStorage($i(this.__internal__registry,e,a),this.__internal__storageGetQ)})}_retrieveMulti(e,n){if(!e.length)return D([]);const r=this.hasSubscriptions&&!n?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return e.length<=nc?n?r(e,n):r(e):ne(wc(e,nc).map(a=>n?r(a,n):r(a))).pipe(U(ya))}_retrieveMapKeys({iterKey:e,meta:n,method:r,section:a},i,s){if(!e||!n.type.isMap)throw new Error("keys can only be retrieved on maps");const o=e(...s).toHex(),d=new mi(o),f=i?g=>this._rpcCore.state.getKeysPaged(o,es,g,i):g=>this._rpcCore.state.getKeysPaged(o,es,g),p=g=>g.setMeta(n,a,r);return d.pipe($(f),U(g=>g.map(p)),pr(g=>Qr(()=>{g.length===es?d.next(g[es-1].toHex()):d.complete()})),Js(),U(ya))}_retrieveMapKeysPaged({iterKey:e,meta:n,method:r,section:a},i,s){if(!e||!n.type.isMap)throw new Error("keys can only be retrieved on maps");const o=d=>d.setMeta(n,a,r);return(i?d=>this._rpcCore.state.getKeysPaged(d,s.pageSize,s.startKey||d,i):d=>this._rpcCore.state.getKeysPaged(d,s.pageSize,s.startKey||d))(e(...s.args).toHex()).pipe(U(d=>d.map(o)))}_retrieveMapEntries(e,n,r){const a=n?i=>this._rpcCore.state.queryStorageAt(i,n):i=>this._rpcCore.state.queryStorageAt(i);return this._retrieveMapKeys(e,n,r).pipe($(i=>i.length?ne(wc(i,nc).map(a)).pipe(U(s=>ya(s).map((o,d)=>[i[d],o]))):D([])))}_retrieveMapEntriesPaged(e,n,r){const a=n?i=>this._rpcCore.state.queryStorageAt(i,n):i=>this._rpcCore.state.queryStorageAt(i);return this._retrieveMapKeysPaged(e,n,r).pipe($(i=>i.length?a(i).pipe(U(s=>s.map((o,d)=>[i[d],o]))):D([])))}_decorateDeriveRx(e){var n,r,a,i;const s=(n=this._runtimeVersion)==null?void 0:n.specName.toString(),o=Jk(this.__internal__instanceId,this._rx,re({},this._options.derives,(i=(a=(r=this._options.typesBundle)==null?void 0:r.spec)==null?void 0:a[s||""])==null?void 0:i.derives));return Uf(e,o)}_decorateDerive(e){return Uf(e,this._rx.derive)}}const CO=1e4,ic=Kt("api/init");function jO(t){return t.toString()}class UO extends AO{constructor(e,n,r){super(e,n,r),S(this,"__internal__atLast",null),S(this,"__internal__healthTimer",null),S(this,"__internal__registries",[]),S(this,"__internal__updateSub",null),S(this,"__internal__waitingRegistries",{}),this.registry.setKnownTypes(e),e.source?this.__internal__registries=e.source.__internal__registries:this.registerTypes(e.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=e.signer,this._rpcCore.setRegistrySwap(a=>this.getBlockRegistry(a)),this._rpcCore.setResolveBlockHash(a=>$t(this._rpcCore.chain.getBlockHash(a))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",()=>this.__internal__onProviderDisconnect()),this._rpcCore.provider.on("error",a=>this.__internal__onProviderError(a)),this._rpcCore.provider.on("connected",()=>this.__internal__onProviderConnect())):this._options.noInitWarn||ic.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&this.__internal__onProviderConnect().catch(Vn)}_initRegistry(e,n,r,a,i){e.clearCache(),e.setChainProperties(i||this.registry.getChainProperties()),e.setKnownTypes(this._options),e.register(SO(e,n,r.specName,r.specVersion)),e.setHasher(kO(e,n,r.specName)),e.knownTypes.typesBundle&&(e.knownTypes.typesAlias=NO(e,n,r.specName)),e.setMetadata(a,void 0,re({},TO(e,n,r.specName),this._options.signedExtensions),this._options.noInitWarn)}_getDefaultRegistry(){return dr(this.__internal__registries.find(({isDefault:e})=>e),"Initialization error, cannot find the default registry")}async at(e,n){const r=me(e),a=Ke(r),i=await this.getBlockRegistry(r,n);return(!this.__internal__atLast||this.__internal__atLast[0]!==a)&&(this.__internal__atLast=[a,this._createDecorated(i,!0,null,r).decoratedApi]),this.__internal__atLast[1]}async _createBlockRegistry(e,n,r){const a=new E1(e),i=new Is(a,await $t(this._rpcCore.state.getMetadata.raw(n.parentHash))),s=this._runtimeChain;if(!s)throw new Error("Invalid initializion order, runtimeChain is not available");this._initRegistry(a,s,r,i);const o={counter:0,lastBlockHash:e,metadata:i,registry:a,runtimeVersion:r};return this.__internal__registries.push(o),o}_cacheBlockRegistryProgress(e,n){let r=this.__internal__waitingRegistries[e];return st(r)&&(r=this.__internal__waitingRegistries[e]=new Promise((a,i)=>{n().then(s=>{delete this.__internal__waitingRegistries[e],a(s)}).catch(s=>{delete this.__internal__waitingRegistries[e],i(s)})})),r}_getBlockRegistryViaVersion(e,n){if(n){const r=this.__internal__registries.find(({runtimeVersion:{specName:a,specVersion:i}})=>a.eq(n.specName)&&i.eq(n.specVersion));if(r)return r.counter++,r.lastBlockHash=e,r}return null}async _getBlockRegistryViaHash(e){if(!this._genesisHash||!this._runtimeVersion)throw new Error("Cannot retrieve data on an uninitialized chain");const n=this.registry.createType("HeaderPartial",this._genesisHash.eq(e)?{number:dt,parentHash:this._genesisHash}:await $t(this._rpcCore.chain.getHeader.raw(e)));if(n.parentHash.isEmpty)throw new Error("Unable to retrieve header and parent from supplied hash");VO(this._genesisHash,n.number);const r=this.registry.createType("RuntimeVersionPartial",await $t(this._rpcCore.state.getRuntimeVersion.raw(n.parentHash)));return this._getBlockRegistryViaVersion(e,r)||await this._cacheBlockRegistryProgress(r.toHex(),()=>this._createBlockRegistry(e,n,r))}async getBlockRegistry(e,n){return this.__internal__registries.find(({lastBlockHash:r})=>r&&si(r,e))||this._getBlockRegistryViaVersion(e,n)||await this._cacheBlockRegistryProgress(Ke(e),()=>this._getBlockRegistryViaHash(e))}async _loadMeta(){var e;return this._isReady?!0:(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=(e=this._options.source)!=null&&e._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(e){this._extrinsicType=e.extrinsicVersion,this._runtimeChain=e.runtimeChain,this._runtimeVersion=e.runtimeVersion;const n=Object.keys(e.rpc),r=[];for(let a=0,i=n.length;a<i;a++){const s=n[a],o=Object.keys(e.rpc[s]);for(let d=0,f=o.length;d<f;d++)r.push(`${s}_${o[d]}`)}return this._filterRpc(r,Kf(this.registry,e.runtimeChain,e.runtimeVersion.specName)),[e.genesisHash,e.runtimeMetadata]}_subscribeUpdates(){this.__internal__updateSub||!this.hasSubscriptions||(this.__internal__updateSub=this._rpcCore.state.subscribeRuntimeVersion().pipe($(e=>{var n;return(n=this._runtimeVersion)!=null&&n.specVersion.eq(e.specVersion)?D(!1):this._rpcCore.state.getMetadata().pipe(U(r=>{ic.log(`Runtime version updated to spec=${e.specVersion.toString()}, tx=${e.transactionVersion.toString()}`),this._runtimeMetadata=r,this._runtimeVersion=e,this._rx.runtimeVersion=e;const a=this._getDefaultRegistry(),i=this._runtimeChain;if(!i)throw new Error("Invalid initializion order, runtimeChain is not available");return a.metadata=r,a.runtimeVersion=e,this._initRegistry(this.registry,i,e,r),this._injectMetadata(a,!0),!0}))})).subscribe())}async _metaFromChain(e){const[n,r,a,i,s,o]=await Promise.all([$t(this._rpcCore.chain.getBlockHash(0)),$t(this._rpcCore.state.getRuntimeVersion()),$t(this._rpcCore.system.chain()),$t(this._rpcCore.system.properties()),$t(this._rpcCore.rpc.methods()),e?Promise.resolve(null):$t(this._rpcCore.state.getMetadata())]);this._runtimeChain=a,this._runtimeVersion=r,this._rx.runtimeVersion=r;const d=`${n.toHex()||"0x"}-${r.specVersion.toString()}`,f=o||(e!=null&&e[d]?new Is(this.registry,e[d]):await $t(this._rpcCore.state.getMetadata()));return this._initRegistry(this.registry,a,r,f,i),this._filterRpc(s.methods.map(jO),Kf(this.registry,a,r.specName)),this._subscribeUpdates(),this.__internal__registries.length||this.__internal__registries.push({counter:0,isDefault:!0,metadata:f,registry:this.registry,runtimeVersion:r}),f.getUniqTypes(this._options.throwOnUnknown||!1),[n,f]}_initFromMeta(e){const n=this._runtimeVersion;if(!n)throw new Error("Invalid initializion order, runtimeVersion is not available");return this._extrinsicType=e.asLatest.extrinsic.version.toNumber(),this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=n,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),!0}_subscribeHealth(){this._unsubscribeHealth(),this.__internal__healthTimer=this.hasSubscriptions?setInterval(()=>{$t(this._rpcCore.system.health.raw()).catch(Vn)},CO):null}_unsubscribeHealth(){this.__internal__healthTimer&&(clearInterval(this.__internal__healthTimer),this.__internal__healthTimer=null)}_unsubscribeUpdates(){this.__internal__updateSub&&(this.__internal__updateSub.unsubscribe(),this.__internal__updateSub=null)}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates()}async __internal__onProviderConnect(){this._isConnected.next(!0),this.emit("connected");try{const e=this._options.initWasm===!1?!0:await oy(),n=await this._loadMeta();this._subscribeHealth(),n&&!this._isReady&&e&&(this._isReady=!0,this.emit("ready",this))}catch(e){const n=new Error(`FATAL: Unable to initialize the API: ${e.message}`);ic.error(n),this.emit("error",n)}}__internal__onProviderDisconnect(){this._isConnected.next(!1),this._unsubscribe(),this.emit("disconnected")}__internal__onProviderError(e){this.emit("error",e)}}function Rt(t){if(t===void 0)throw new Error("Api interfaces needs to be initialized before using, wait for 'isReady'");return t}class XO extends UO{get call(){return Rt(this._call)}get consts(){return Rt(this._consts)}get derive(){return Rt(this._derive)}get errors(){return Rt(this._errors)}get events(){return Rt(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return Rt(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return`${Vu.name} v${Vu.version}`}get query(){return Rt(this._query)}get queryMulti(){return Rt(this._queryMulti)}get rpc(){return Rt(this._rpc)}get runtimeChain(){return Rt(this._runtimeChain)}get runtimeMetadata(){return Rt(this._runtimeMetadata)}get runtimeVersion(){return Rt(this._runtimeVersion)}get rx(){return Rt(this._rx)}get stats(){return this._rpcCore.stats}get type(){return this._type}get tx(){return Rt(this._extrinsics)}findCall(e){return $1(this.registry,e)}findError(e){return em(this.registry,e)}}class DO extends XO{constructor(e={},n,r){super(e,n,r)}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(e){this._rx.signer=e}async sign(e,n,{signer:r}={}){if(nt(e)){const a=r||this._rx.signer;if(!(a!=null&&a.signRaw))throw new Error("No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");return(await a.signRaw(re({type:"bytes"},n,{address:e}))).signature}return Ke(e.sign(me(n.data)))}}class FO{constructor(e,n){S(this,"__internal__allHasFired",!1),S(this,"__internal__callback"),S(this,"__internal__fired",[]),S(this,"__internal__fns",[]),S(this,"__internal__isActive",!0),S(this,"__internal__results",[]),S(this,"__internal__subscriptions",[]),this.__internal__callback=n,this.__internal__subscriptions=e.map(async(r,a)=>{const[i,...s]=Array.isArray(r)?r:[r];return this.__internal__fired.push(!1),this.__internal__fns.push(i),i(...s,this._createCallback(a))})}_allHasFired(){return this.__internal__allHasFired||(this.__internal__allHasFired=this.__internal__fired.filter(e=>!e).length===0),this.__internal__allHasFired}_createCallback(e){return n=>{this.__internal__fired[e]=!0,this.__internal__results[e]=n,this._triggerUpdate()}}_triggerUpdate(){if(!(!this.__internal__isActive||!fe(this.__internal__callback)||!this._allHasFired()))try{Promise.resolve(this.__internal__callback(this.__internal__results)).catch(Vn)}catch{}}unsubscribe(){this.__internal__isActive&&(this.__internal__isActive=!1,Promise.all(this.__internal__subscriptions.map(async e=>{try{const n=await e;fe(n)&&n()}catch{}})).catch(()=>{}))}}function cu(t,e){let n=!1;return{reject:r=>(n||(n=!0,e(r)),Ii),resolve:r=>{n||(n=!0,t(r))}}}function qO(t,e){const n=t.slice(),r=t.length&&fe(t[t.length-1])?n.pop():void 0;if(e&&!fe(r))throw new Error("Expected a callback to be passed with subscriptions");return[n,r]}function ZO(t,e){return new Promise((n,r)=>{const a=cu(n,r),i=t(...e).pipe(Wn(s=>a.reject(s))).subscribe(s=>{a.resolve(s),Qr(()=>i.unsubscribe())})})}function WO(t,e,n){return new Promise((r,a)=>{const i=cu(r,a),s=t(...e).pipe(Wn(o=>i.reject(o)),pr(()=>i.resolve(()=>s.unsubscribe()))).subscribe(o=>{Qr(()=>n(o))})})}function GO(t,e){const n=!!(e!=null&&e.methodName&&e.methodName.includes("subscribe"));return function(...r){const[a,i]=qO(r,n);return i?WO(t,a,i):ZO((e==null?void 0:e.overrideNoSub)||t,a)}}let KO=class Wc extends DO{constructor(e){super(e,"promise",GO),S(this,"__internal__isReadyPromise"),S(this,"__internal__isReadyOrErrorPromise"),this.__internal__isReadyPromise=new Promise(n=>{super.once("ready",()=>n(this))}),this.__internal__isReadyOrErrorPromise=new Promise((n,r)=>{const a=cu(n,r);super.once("ready",()=>a.resolve(this)),super.once("error",i=>a.reject(i))})}static create(e){const n=new Wc(e);return e&&e.throwOnConnect?n.isReadyOrError:(n.isReadyOrError.catch(Vn),n.isReady)}get isReady(){return this.__internal__isReadyPromise}get isReadyOrError(){return this.__internal__isReadyOrErrorPromise}clone(){return new Wc(re({},this._options,{source:this}))}async combineLatest(e,n){const r=new FO(e,n);return()=>{r.unsubscribe()}}};const YO={rpc:{checkDelegations:{description:"Test a list of MSAs to see if they have delegated to the provider MSA",params:[{name:"delegator_msa_ids",type:"Vec<DelegatorId>"},{name:"provider_msa_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"Vec<(DelegatorId, bool)>"},grantedSchemaIdsByMsaId:{description:"Fetch the list of schema ids that a delegator has granted to provider",params:[{name:"delegator_msa_id",type:"DelegatorId"},{name:"provider_msa_id",type:"ProviderId"}],type:"Option<Vec<SchemaGrantResponse>>"},getKeysByMsaId:{description:"Fetch Keys for an MSA Id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<KeyInfoResponse>"}},types:{MessageSourceId:"u64",DelegatorId:"MessageSourceId",ProviderId:"MessageSourceId",KeyInfoResponse:{msa_keys:"Vec<AccountId>",msa_id:"MessageSourceId"},SchemaGrantResponse:{schema_id:"SchemaId",revoked_at:"BlockNumber"}},runtime:{MsaRuntimeApi:[{methods:{has_delegation:{description:"Check to see if a delegation existed between the given delegator and provider at a given block",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"bool"},get_granted_schemas_by_msa_id:{description:"Get the list of schema ids (if any) that exist in any delegation between the delegator and provider",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"}],type:"Option<Vec<SchemaId>>"}},version:1},{methods:{has_delegation:{description:"Check to see if a delegation existed between the given delegator and provider at a given block",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"bool"},get_granted_schemas_by_msa_id:{description:"Get the list of schema ids (if any) that exist in any delegation between the delegator and provider",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"}],type:"Option<Vec<SchemaGrantResponse>>"}},version:2}]}},JO={rpc:{getBySchemaId:{description:"Get messages by schemaId paginated",params:[{name:"schema_id",type:"SchemaId"},{name:"pagination",type:"BlockPaginationRequest"}],type:"BlockPaginationResponseMessage"}},types:{BlockPaginationRequest:{from_block:"BlockNumber",from_index:"u32",to_block:"BlockNumber",page_size:"u32"},MessageResponse:{payload:"Option<Vec<u8>>",cid:"Option<Vec<u8>>",provider_msa_id:"MessageSourceId",msa_id:"Option<MessageSourceId>",index:"u16",block_number:"BlockNumber",payload_length:"Option<u32>"},BlockPaginationResponseMessage:{content:"Vec<MessageResponse>",has_next:"bool",next_block:"Option<BlockNumber>",next_index:"Option<u32>"}},runtime:{MessagesRuntimeApi:[{methods:{get_messages_by_schema_and_block:{description:"Retrieve the messages for a particular schema and block number",params:[{name:"schema_id",type:"SchemaId"},{name:"schema_payload_location",type:"PayloadLocation"},{name:"block_number",type:"BlockNumber"}],type:"Vec<MessageResponse>"},get_schema_by_id:{description:"Retrieve a schema by id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"}},version:1}]}},_O={rpc:{getBySchemaId:{description:"Get a Schema by Id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"},checkSchemaValidity:{description:"",params:[{name:"model",type:"SchemaModel"},{name:"at",type:"BlockHash",isOptional:!0}],type:"bool"},getVersions:{description:"Get different versions and schema ids for a complete schema name or only a namespace",params:[{name:"schema_name",type:"String"}],type:"Option<Vec<SchemaVersionResponse>>"}},types:{SchemaId:"u16",SchemaModel:"Vec<u8>",SchemaVersion:"u8",SchemaResponse:{schema_id:"SchemaId",model:"SchemaModel",model_type:"ModelType",payload_location:"PayloadLocation",settings:"Vec<SchemaSetting>"},ModelType:{_enum:["AvroBinary","Parquet"]},PayloadLocation:{_enum:["OnChain","IPFS","Itemized","Paginated"]},SchemaSetting:{_enum:["AppendOnly","SignatureRequired"]},SchemaVersionResponse:{schema_name:"String",schema_version:"SchemaVersion",schema_id:"SchemaId"}},runtime:{SchemasRuntimeApi:[{methods:{get_schema_by_id:{description:"Fetch the schema by id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"},get_schema_versions_by_name:{description:"Fetch the schema versions by name",params:[{name:"schema_name",type:"Vec<u8>"}],type:"Option<Vec<SchemaVersionResponse>>"}},version:2}]}},QO={rpc:{getPaginatedStorage:{description:"Gets pages of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Vec<PaginatedStorageResponse>"},getItemizedStorage:{description:"Gets itemized of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"ItemizedStoragePageResponse"}},types:{PageId:"u16",PageHash:"u32",PageNonce:"u16",ItemizedStorageResponse:{index:"u16",payload:"Vec<u8>"},PaginatedStorageResponse:{page_id:"PageId",msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",payload:"Vec<u8>"},ItemizedStoragePageResponse:{msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",items:"Vec<ItemizedStorageResponse>"}},runtime:{StatefulStorageRuntimeApi:[{methods:{get_paginated_storage:{description:"Fetch the stateful paginated storage by msa_id and schema_id",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Result<Vec<PaginatedStorageResponse>, SpRuntimeDispatchError>"},get_itemized_storage:{description:"Fetch the stateful itemized storage by msa_id and schema_id",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Result<ItemizedStoragePageResponse, SpRuntimeDispatchError>"}},version:1}]}},$O={rpc:{getHandleForMsa:{description:"Get handle for a given msa_id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<HandleResponse>"},getMsaForHandle:{description:"Get msa_id for a given handle",params:[{name:"display_handle",type:"String"}],type:"Option<MessageSourceId>"},getNextSuffixes:{description:"Get next suffixes for a given handle and count",params:[{name:"base_handle",type:"String"},{name:"count",type:"u16"}],type:"PresumptiveSuffixesResponse"},validateHandle:{description:"Check whether the supplied handle passes all the checks performed by claim_handle call.",params:[{name:"base_handle",type:"String"}],type:"bool"}},types:{HandleSuffix:"u16",HandleResponse:{base_handle:"String",canonical_base:"String",suffix:"u16"},PresumptiveSuffixesResponse:{suffixes:"Vec<HandleSuffix>",base_handle:"String"}},runtime:{HandlesRuntimeApi:[{methods:{get_handle_for_msa:{description:"Get handle for a given msa_id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<HandleResponse>"},get_msa_for_handle:{description:"Get msa_id for a given handle",params:[{name:"display_handle",type:"Vec<u8>"}],type:"Option<MessageSourceId>"},get_next_suffixes:{description:"Get next suffixes for a given handle and count",params:[{name:"base_handle",type:"Vec<u8>"},{name:"count",type:"u16"}],type:"PresumptiveSuffixesResponse"},validate_handle:{description:"Check whether the supplied handle passes all the checks performed by claim_handle call.",params:[{name:"base_handle",type:"String"}],type:"bool"}},version:2}]}},eN={rpc:{getEvents:{description:"Get block Events",params:[{name:"at",type:"H256"}],type:"Vec<RpcEvent>"}},types:{RpcEvent:{phase:"Option<u32>",pallet:"u8",event:"u8",data:"Vec<u8>"}},runtime:{AdditionalRuntimeApi:[{methods:{get_events:{description:"Get the events with simple SCALE decoding",params:[],type:"Vec<RpcEvent>"}},version:1}]}},tN={rpc:{computeCapacityFeeDetails:{description:"Compute the capacity fee details for a given transaction",params:[{name:"encoded_xt",type:"Vec<u8>"},{name:"at",type:"Option<BlockHash>"}],type:"FeeDetails"}},types:{},runtime:{CapacityTransactionPaymentRuntimeApi:[{methods:{compute_capacity_fee:{description:"Compute the capacity fee for a given transaction",params:[{name:"encoded_xt",type:"Vec<u8>"},{name:"at",type:"Option<BlockHash>"}],type:"FeeDetails"}}}]}},du=Object.freeze(Object.defineProperty({__proto__:null,frequency:eN,frequencyTxPayment:tN,handles:$O,messages:JO,msa:YO,schemas:_O,statefulStorage:QO},Symbol.toStringTag,{value:"Module"})),nN=Object.entries(du).reduce((t,[e,n])=>({...t,...n.types}),{}),rN=Object.entries(du).reduce((t,[e,n])=>({...t,[e]:n.rpc}),{}),aN={CheckFreeExtrinsicUse:{extrinsic:{},payload:{}},HandlesSignedExtension:{extrinsic:{},payload:{}}},iN=Object.entries(du).reduce((t,[e,n])=>({...t,...n.runtime}),{}),sN={rpc:rN,types:nN,signedExtensions:aN,runtime:iN};let sc,ds;const nm=new Promise(t=>{ds=t});function Bz(t){console.log("Setting chain URL to ",t),ds&&(ds(t),ds=void 0)}function Az(){return nm}async function Et(){if(!sc){const t=await nm;sc=new Promise((e,n)=>{console.log("Connecting to ",t);const r=t.startsWith("http")?new k3(t):new Zh(t);KO.create({provider:r,throwOnConnect:!0,throwOnUnknown:!0,...sN}).then(a=>a.isReadyOrError).then(a=>{e(a)}).catch(a=>{console.error(a),n(a)})})}return sc}async function Cz(t,e){const n=await Et(),r=new Hi(n.registry,e);return n.registry.createType("CommonPrimitivesHandlesClaimHandlePayload",{baseHandle:r,expiration:t}).toU8a()}async function jz(t,e,n){const r=await Et();return n.sort(),r.registry.createType("PalletMsaAddProvider",{authorizedMsaId:e,expiration:t,schemaIds:n}).toU8a()}async function Uz(t){return(await(await Et()).rpc.chain.getBlock()).block.header.number.toNumber()}async function Xz(t,e){const n=await Et(),r=await oN(t,n),a=await cN(r,n);return r.map((i,s)=>({msaId:i.toString(),handle:a[s]||""}))}async function oN(t,e){return(await(e||await Et()).query.msa.publicKeyToMsaId.multi(t)).map(n=>n.unwrapOrDefault().toString())}async function cN(t,e){return(await(e||await Et()).query.handles.msaIdToDisplayName.multi(t)).map(n=>n.unwrapOrDefault()[0].toUtf8())}async function Dz(t){return(await(await Et()).rpc.handles.validateHandle(t)).toHuman()}async function Fz(t,e){return await(await Et()).rpc.handles.getNextSuffixes(t,e)}async function qz(t,e,n){return(await Et()).tx.handles.claimHandle(t,e,n)}async function Zz(t,e,n){return(await Et()).tx.msa.createSponsoredAccountWithDelegation(t,e,n)}async function Wz(t,e,n){return(await Et()).tx.msa.grantDelegation(t,e,n)}async function Gz(t){return(await(await Et()).query.msa.providerToRegistryEntry(t)).unwrapOrDefault().providerName.toUtf8()}async function Kz(t){const e=await Et();if(!e.query.schemas.schemaNameToIds){const r=["tombstone","broadcast","reply","reaction","profile","update","public-key-key-agreement","public-follows","private-follows","private-connections"];t.forEach(a=>{a.id=(r.findIndex(i=>i===a.name)||-1)+1});return}const n=await e.query.schemas.schemaNameToIds.multi(t.map(r=>["dsnp",r.name]));t.forEach((r,a)=>{const i=n[a].ids.toArray().map(s=>s.toNumber()).sort();if(r!=null&&r.version&&r.version>0){if(r.version>i.length)throw new Error(`Unable to find version ${r.version} of schema ${r.name}`);r.id=i[r.version-1]}else i.reverse(),r.id=i[0]})}async function Yz(t,e,n){const r=await Et(),a={hasDelegation:!1,missingSchemaPermissions:n,expectedSchemaPermissions:[]},i=await r.query.msa.delegatorAndProviderToDelegation(t,e);if(i.isSome){const s=i.unwrap();s.revokedAt.toNumber()===0&&(a.hasDelegation=!0,a.missingSchemaPermissions=[],s.schemaPermissions.forEach((o,d)=>{o.toNumber()===0&&a.expectedSchemaPermissions.push(d.toNumber())}),n.forEach(o=>{a.expectedSchemaPermissions.some(d=>d===o)||(a.missingSchemaPermissions.push(o),a.expectedSchemaPermissions.push(o))}))}return a}async function Jz(){return(await(await Et()).rpc.system.chain()).toString()}function _z(t){return`${t.slice(0,4)}...${t.slice(-4)}`}function rm(t){const e=/^(.*)\.(\d*)$/.exec(t),n=(e==null?void 0:e[1])??"",r=Number((e==null?void 0:e[2])??0);return{base:n,suffix:r}}function Qz(t){const{base:e}=rm(t);return e}function $z(t){const{suffix:e}=rm(t);return e}function eH(t){return"injectedWeb3"in window&&typeof window.injectedWeb3=="object"&&window.injectedWeb3!==null&&t in window.injectedWeb3}const tH="siwf-ui";function dN(t,e){const n=Zm(e),{subscribe:r,set:a,update:i}=n,s=window.localStorage;if(s){const o=s.getItem(t);if(o&&o!=="undefined"){const d=o?JSON.parse(o):e;a(d)}}return{subscribe:r,set:o=>{s&&s.setItem(t,JSON.stringify(o)),a(o)},update:o=>{i(f=>{const p=o(f);return s&&s.setItem(t,JSON.stringify(p)),p})}}}function uN(t){let e,n,r,a,i,s,o,d,f,p,g;return{c(){e=Y("svg"),n=Y("path"),r=Y("path"),a=Y("g"),i=Y("path"),s=Y("path"),o=Y("path"),d=Y("path"),f=Y("path"),p=Y("ellipse"),g=Y("path"),this.h()},l(P){e=J(P,"svg",{fill:!0,height:!0,viewBox:!0,width:!0,xmlns:!0});var T=_(e);n=J(T,"path",{"clip-rule":!0,d:!0,fill:!0,"fill-rule":!0}),_(n).forEach(G),r=J(T,"path",{d:!0,fill:!0}),_(r).forEach(G),a=J(T,"g",{stroke:!0});var k=_(a);i=J(k,"path",{d:!0,"stroke-width":!0}),_(i).forEach(G),s=J(k,"path",{d:!0,"stroke-width":!0}),_(s).forEach(G),o=J(k,"path",{d:!0,"stroke-width":!0}),_(o).forEach(G),d=J(k,"path",{d:!0,"stroke-width":!0}),_(d).forEach(G),f=J(k,"path",{d:!0,fill:!0,"stroke-width":!0}),_(f).forEach(G),k.forEach(G),p=J(T,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),_(p).forEach(G),g=J(T,"path",{d:!0,stroke:!0,"stroke-width":!0}),_(g).forEach(G),T.forEach(G),this.h()},h(){I(n,"clip-rule","evenodd"),I(n,"d","m50.1161 35.6631c.6081 1.3243 2.3987 1.792 3.4291.7616l1.8897-1.8897c1.9526-1.9526 5.1184-1.9526 7.0711 0 1.9526 1.9526 1.9526 5.1185 0 7.0711l-15.2721 15.272c-3.6687 4.355-9.1626 7.1219-15.3027 7.1219-6.4029 0-12.1031-3.0089-15.7637-7.6899l-14.7031-14.7031c-1.952627-1.9526-1.952627-5.1184 0-7.071 1.95262-1.9526 5.11844-1.9526 7.07106 0l1.86104 1.861c1.0079 1.0079 2.7576.5545 3.353-.7406.1176-.2559.1815-.5305.1815-.8121v-22.8444c0-2.76139 2.2386-4.99996 5-4.99996s5 2.23857 5 4.99996v11.5565c0 .9944 1.0187 1.6694 1.9668 1.3697.6001-.1896 1.0337-.736 1.0337-1.3653v-18.56079c0-2.76142 2.2385-4.99998943 5-4.99999015 2.7614-.00000073 5 2.23857015 5 4.99999015v18.56119c0 .6292.4334 1.1754 1.0333 1.365.9479.2996 1.9663-.3752 1.9663-1.3693v-11.557c0-2.76139 2.2385-4.99996 5-4.99996 2.7614 0 4.9999 2.23857 4.9999 4.99996l.0001 22.8351c0 .2872.0652.5671.185.8281z"),I(n,"fill","#fd4848"),I(n,"fill-rule","evenodd"),I(r,"d","m47.9319 45.9999s-7.1635 10-16 10c-8.8366 0-16-10-16-10s7.1634-10 16-10c8.8365 0 16 10 16 10z"),I(r,"fill","#d5ff5c"),I(i,"d","m39.4315 46.0001c0 4.1419-3.3577 7.4996-7.4996 7.4996s-7.4996-3.3577-7.4996-7.4996 3.3577-7.4996 7.4996-7.4996 7.4996 3.3577 7.4996 7.4996z"),I(i,"stroke-width","1.00078"),I(s,"d","m36.4312 46.0004c0 2.485-2.0145 4.4996-4.4996 4.4996-2.485 0-4.4996-2.0146-4.4996-4.4996 0-2.4851 2.0146-4.4997 4.4996-4.4997 2.4851 0 4.4996 2.0146 4.4996 4.4997z"),I(s,"stroke-width","1.00078"),I(o,"d","m42.4312 46.0001c0 5.7987-4.7008 10.4996-10.4996 10.4996-5.7987 0-10.4996-4.7008-10.4996-10.4996s4.7009-10.4996 10.4996-10.4996c5.7988 0 10.4996 4.7008 10.4996 10.4996z"),I(o,"stroke-width","1.00078"),I(d,"d","m45.4312 46c0 7.4557-6.0439 13.4996-13.4996 13.4996-7.4556 0-13.4996-6.0439-13.4996-13.4996 0-7.4556 6.044-13.4996 13.4996-13.4996 7.4557 0 13.4996 6.044 13.4996 13.4996z"),I(d,"stroke-width","1.00078"),I(f,"d","m33.4315 45.9999c0 .8282-.6714 1.4996-1.4996 1.4996s-1.4996-.6714-1.4996-1.4996.6714-1.4996 1.4996-1.4996 1.4996.6714 1.4996 1.4996z"),I(f,"fill","#162beb"),I(f,"stroke-width","1.00078"),I(a,"stroke","#fd4848"),I(p,"cx","31.9319"),I(p,"cy","45.9999"),I(p,"fill","#fd4848"),I(p,"rx","2"),I(p,"ry","2"),I(g,"d","m16.6516 46.122c-.0342-.0439-.0657-.0846-.0944-.1221.0287-.0374.0602-.0781.0944-.122.2086-.2676.5176-.6517.9164-1.1134.798-.9241 1.9524-2.1556 3.3772-3.3858 2.8651-2.4738 6.7496-4.8784 10.9867-4.8784 4.237 0 8.1216 2.4046 10.9867 4.8784 1.4247 1.2302 2.5791 2.4617 3.3772 3.3858.3987.4617.7078.8458.9163 1.1134.0343.0438.0658.0846.0945.122-.0287.0375-.0602.0782-.0945.1221-.2085.2676-.5176.6517-.9163 1.1134-.7981.9241-1.9525 2.1556-3.3772 3.3858-2.8651 2.4738-6.7497 4.8783-10.9867 4.8783-4.2371 0-8.1216-2.4045-10.9867-4.8783-1.4248-1.2302-2.5792-2.4617-3.3772-3.3858-.3988-.4617-.7078-.8458-.9164-1.1134z"),I(g,"stroke","#d5ff5c"),I(g,"stroke-width","1.00078"),I(e,"fill","none"),I(e,"height",t[0]),I(e,"viewBox","0 0 64 64"),I(e,"width",t[0]),I(e,"xmlns","http://www.w3.org/2000/svg")},m(P,T){fd(P,e,T),Q(e,n),Q(e,r),Q(e,a),Q(a,i),Q(a,s),Q(a,o),Q(a,d),Q(a,f),Q(e,p),Q(e,g)},p(P,[T]){T&1&&I(e,"height",P[0]),T&1&&I(e,"width",P[0])},i:wa,o:wa,d(P){P&&G(e)}}}function lN(t,e,n){let{size:r="5em"}=e;return t.$$set=a=>{"size"in a&&n(0,r=a.size)},[r]}class fN extends dd{constructor(e){super(),ud(this,e,lN,uN,ld,{size:0})}}function hN(t){let e,n,r,a,i;return{c(){e=Y("svg"),n=Y("g"),r=Y("circle"),a=Y("g"),i=Y("path"),this.h()},l(s){e=J(s,"svg",{xmlns:!0,"xmlns:xlink":!0,version:!0,id:!0,x:!0,y:!0,height:!0,viewBox:!0,style:!0,"xml:space":!0});var o=_(e);n=J(o,"g",{});var d=_(n);r=J(d,"circle",{class:!0,cx:!0,cy:!0,r:!0}),_(r).forEach(G),a=J(d,"g",{});var f=_(a);i=J(f,"path",{class:!0,d:!0}),_(i).forEach(G),f.forEach(G),d.forEach(G),o.forEach(G),this.h()},h(){I(r,"class","bg0 svelte-d4rp4m"),I(r,"cx","85"),I(r,"cy","85"),I(r,"r","70"),I(i,"class","st0 svelte-d4rp4m"),I(i,"d","M85,34.7c-20.8,0-37.8,16.9-37.8,37.8c0,4.2,0.7,8.3,2,12.3c0.9,2.7,3.9,4.2,6.7,3.3c2.7-0.9,4.2-3.9,3.3-6.7 c-1.1-3.1-1.6-6.4-1.5-9.7C58.1,57.6,69.5,46,83.6,45.3c15.7-0.8,28.7,11.7,28.7,27.2c0,14.5-11.4,26.4-25.7,27.2 c0,0-5.3,0.3-7.9,0.7c-1.3,0.2-2.3,0.4-3,0.5c-0.3,0.1-0.6-0.2-0.5-0.5l0.9-4.4L81,73.4c0.6-2.8-1.2-5.6-4-6.2 c-2.8-0.6-5.6,1.2-6.2,4c0,0-11.8,55-11.9,55.6c-0.6,2.8,1.2,5.6,4,6.2c2.8,0.6,5.6-1.2,6.2-4c0.1-0.6,1.7-7.9,1.7-7.9 c1.2-5.6,5.8-9.7,11.2-10.4c1.2-0.2,5.9-0.5,5.9-0.5c19.5-1.5,34.9-17.8,34.9-37.7C122.8,51.6,105.8,34.7,85,34.7z M87.7,121.7 c-3.4-0.7-6.8,1.4-7.5,4.9c-0.7,3.4,1.4,6.8,4.9,7.5c3.4,0.7,6.8-1.4,7.5-4.9C93.3,125.7,91.2,122.4,87.7,121.7z"),I(e,"xmlns","http://www.w3.org/2000/svg"),I(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),I(e,"version","1.1"),I(e,"id","Layer_1"),I(e,"x","0px"),I(e,"y","0px"),I(e,"height",t[0]),I(e,"viewBox","15 15 140 140"),bc(e,"enable-background","new 0 0 170 170"),bc(e,"zoom","1"),I(e,"xml:space","preserve")},m(s,o){fd(s,e,o),Q(e,n),Q(n,r),Q(n,a),Q(a,i)},p(s,[o]){o&1&&I(e,"height",s[0])},i:wa,o:wa,d(s){s&&G(e)}}}function pN(t,e,n){let{size:r="5em"}=e;return t.$$set=a=>{"size"in a&&n(0,r=a.size)},[r]}class mN extends dd{constructor(e){super(),ud(this,e,pN,hN,ld,{size:0})}}function bN(t){let e,n,r,a,i,s,o,d,f,p,g,P,T,k,M,O,V,N,E,A,H,z,B,F,ee,W,C,oe,c,l,h,m,y,v,w,b,u,x,R,L,X,te,Z,K,_e,ae,de,Re,ue,se,ft,he,Me,zt,Te,ce,Ht,ye,be,Tt,xe,ge,St,ve,Se,Lt,ke,Oe,Jt,He;return{c(){e=Y("svg"),n=Y("mask"),r=Y("rect"),a=Y("g"),i=Y("path"),s=Y("path"),o=Y("path"),d=Y("path"),f=Y("path"),p=Y("path"),g=Y("path"),P=Y("path"),T=Y("defs"),k=Y("linearGradient"),M=Y("stop"),O=Y("stop"),V=Y("stop"),N=Y("stop"),E=Y("stop"),A=Y("linearGradient"),H=Y("stop"),z=Y("stop"),B=Y("stop"),F=Y("stop"),ee=Y("stop"),W=Y("stop"),C=Y("linearGradient"),oe=Y("stop"),c=Y("stop"),l=Y("stop"),h=Y("stop"),m=Y("stop"),y=Y("stop"),v=Y("linearGradient"),w=Y("stop"),b=Y("stop"),u=Y("stop"),x=Y("linearGradient"),R=Y("stop"),L=Y("stop"),X=Y("stop"),te=Y("stop"),Z=Y("stop"),K=Y("linearGradient"),_e=Y("stop"),ae=Y("stop"),de=Y("stop"),Re=Y("stop"),ue=Y("stop"),se=Y("linearGradient"),ft=Y("stop"),he=Y("stop"),Me=Y("stop"),zt=Y("stop"),Te=Y("stop"),ce=Y("linearGradient"),Ht=Y("stop"),ye=Y("stop"),be=Y("stop"),Tt=Y("stop"),xe=Y("stop"),ge=Y("stop"),St=Y("stop"),ve=Y("stop"),Se=Y("stop"),Lt=Y("stop"),ke=Y("stop"),Oe=Y("stop"),Jt=Y("stop"),He=Y("stop"),this.h()},l(Ne){e=J(Ne,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var kt=_(e);n=J(kt,"mask",{id:!0,style:!0,maskUnits:!0,x:!0,y:!0,width:!0,height:!0});var Be=_(n);r=J(Be,"rect",{width:!0,height:!0,fill:!0}),_(r).forEach(G),Be.forEach(G),a=J(kt,"g",{mask:!0});var we=_(a);i=J(we,"path",{d:!0,fill:!0}),_(i).forEach(G),s=J(we,"path",{d:!0,fill:!0}),_(s).forEach(G),o=J(we,"path",{d:!0,fill:!0}),_(o).forEach(G),d=J(we,"path",{d:!0,fill:!0}),_(d).forEach(G),f=J(we,"path",{d:!0,fill:!0}),_(f).forEach(G),p=J(we,"path",{d:!0,fill:!0}),_(p).forEach(G),g=J(we,"path",{d:!0,fill:!0}),_(g).forEach(G),P=J(we,"path",{d:!0,fill:!0}),_(P).forEach(G),we.forEach(G),T=J(kt,"defs",{});var Ot=_(T);k=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var Ie=_(k);M=J(Ie,"stop",{"stop-color":!0}),_(M).forEach(G),O=J(Ie,"stop",{offset:!0,"stop-color":!0}),_(O).forEach(G),V=J(Ie,"stop",{offset:!0,"stop-color":!0}),_(V).forEach(G),N=J(Ie,"stop",{offset:!0,"stop-color":!0}),_(N).forEach(G),E=J(Ie,"stop",{offset:!0,"stop-color":!0}),_(E).forEach(G),Ie.forEach(G),A=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var Ve=_(A);H=J(Ve,"stop",{"stop-color":!0}),_(H).forEach(G),z=J(Ve,"stop",{offset:!0,"stop-color":!0}),_(z).forEach(G),B=J(Ve,"stop",{offset:!0,"stop-color":!0}),_(B).forEach(G),F=J(Ve,"stop",{offset:!0,"stop-color":!0}),_(F).forEach(G),ee=J(Ve,"stop",{offset:!0,"stop-color":!0}),_(ee).forEach(G),W=J(Ve,"stop",{offset:!0}),_(W).forEach(G),Ve.forEach(G),C=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var jt=_(C);oe=J(jt,"stop",{"stop-color":!0}),_(oe).forEach(G),c=J(jt,"stop",{offset:!0,"stop-color":!0}),_(c).forEach(G),l=J(jt,"stop",{offset:!0,"stop-color":!0}),_(l).forEach(G),h=J(jt,"stop",{offset:!0,"stop-color":!0}),_(h).forEach(G),m=J(jt,"stop",{offset:!0,"stop-color":!0}),_(m).forEach(G),y=J(jt,"stop",{offset:!0}),_(y).forEach(G),jt.forEach(G),v=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var Le=_(v);w=J(Le,"stop",{offset:!0,"stop-color":!0}),_(w).forEach(G),b=J(Le,"stop",{offset:!0,"stop-color":!0}),_(b).forEach(G),u=J(Le,"stop",{offset:!0}),_(u).forEach(G),Le.forEach(G),x=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var Ee=_(x);R=J(Ee,"stop",{"stop-color":!0}),_(R).forEach(G),L=J(Ee,"stop",{offset:!0,"stop-color":!0}),_(L).forEach(G),X=J(Ee,"stop",{offset:!0,"stop-color":!0}),_(X).forEach(G),te=J(Ee,"stop",{offset:!0,"stop-color":!0}),_(te).forEach(G),Z=J(Ee,"stop",{offset:!0,"stop-color":!0}),_(Z).forEach(G),Ee.forEach(G),K=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var _t=_(K);_e=J(_t,"stop",{"stop-color":!0}),_(_e).forEach(G),ae=J(_t,"stop",{offset:!0,"stop-color":!0}),_(ae).forEach(G),de=J(_t,"stop",{offset:!0,"stop-color":!0}),_(de).forEach(G),Re=J(_t,"stop",{offset:!0,"stop-color":!0}),_(Re).forEach(G),ue=J(_t,"stop",{offset:!0,"stop-color":!0}),_(ue).forEach(G),_t.forEach(G),se=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var ze=_(se);ft=J(ze,"stop",{"stop-color":!0}),_(ft).forEach(G),he=J(ze,"stop",{offset:!0,"stop-color":!0}),_(he).forEach(G),Me=J(ze,"stop",{offset:!0,"stop-color":!0}),_(Me).forEach(G),zt=J(ze,"stop",{offset:!0,"stop-color":!0}),_(zt).forEach(G),Te=J(ze,"stop",{offset:!0,"stop-color":!0}),_(Te).forEach(G),ze.forEach(G),ce=J(Ot,"linearGradient",{id:!0,x1:!0,y1:!0,x2:!0,y2:!0,gradientUnits:!0});var pe=_(ce);Ht=J(pe,"stop",{"stop-color":!0}),_(Ht).forEach(G),ye=J(pe,"stop",{offset:!0,"stop-color":!0}),_(ye).forEach(G),be=J(pe,"stop",{offset:!0,"stop-color":!0}),_(be).forEach(G),Tt=J(pe,"stop",{offset:!0,"stop-color":!0}),_(Tt).forEach(G),xe=J(pe,"stop",{offset:!0,"stop-color":!0}),_(xe).forEach(G),ge=J(pe,"stop",{offset:!0,"stop-color":!0}),_(ge).forEach(G),St=J(pe,"stop",{offset:!0,"stop-color":!0}),_(St).forEach(G),ve=J(pe,"stop",{offset:!0,"stop-color":!0}),_(ve).forEach(G),Se=J(pe,"stop",{offset:!0,"stop-color":!0}),_(Se).forEach(G),Lt=J(pe,"stop",{offset:!0,"stop-color":!0}),_(Lt).forEach(G),ke=J(pe,"stop",{offset:!0,"stop-color":!0}),_(ke).forEach(G),Oe=J(pe,"stop",{offset:!0,"stop-color":!0}),_(Oe).forEach(G),Jt=J(pe,"stop",{offset:!0,"stop-color":!0}),_(Jt).forEach(G),He=J(pe,"stop",{offset:!0}),_(He).forEach(G),pe.forEach(G),Ot.forEach(G),kt.forEach(G),this.h()},h(){I(r,"width","134"),I(r,"height","134"),I(r,"fill","#C4C4C4"),I(n,"id","mask0_699_5101"),bc(n,"mask-type","alpha"),I(n,"maskUnits","userSpaceOnUse"),I(n,"x","0"),I(n,"y","0"),I(n,"width","134"),I(n,"height","134"),I(i,"d","M87.9615 64.3201L87.9456 47.7455L27.1191 16.2236V64.3041L66.0589 85.106L80.2884 78.8367L37.4403 56.1046L37.4722 37.887L87.9615 64.3201Z"),I(i,"fill","url(#paint0_linear_699_5101)"),I(s,"d","M50.7607 44.8421V50.5052L37.3926 56.2321L37.4883 37.6636L50.7607 44.8421Z"),I(s,"fill","url(#paint1_linear_699_5101)"),I(o,"d","M50.8095 91.822L80.2895 78.8368L37.4414 56.2163L50.6819 50.5054L105.765 79.2835L50.9212 103.212L50.8095 91.822Z"),I(o,"fill","url(#paint2_linear_699_5101)"),I(d,"d","M37.4886 87.9773L50.6493 82.2982L50.9365 103.196L105.765 79.2832V97.118L37.377 127.077L37.4886 87.9773Z"),I(d,"fill","url(#paint3_linear_699_5101)"),I(f,"d","M27.1191 82.5857L37.4403 87.9776L37.3765 127.013L27.1191 121.86V82.5857Z"),I(f,"fill","url(#paint4_linear_699_5101)"),I(p,"d","M40.1522 76.7791L50.6489 82.2986L37.4403 87.9776L27.1191 82.5857L40.1522 76.7791Z"),I(p,"fill","url(#paint5_linear_699_5101)"),I(g,"d","M105.765 56.5993L105.702 39.9131L87.9785 47.7457V64.3362L105.765 56.5993Z"),I(g,"fill","url(#paint6_linear_699_5101)"),I(P,"d","M27.1191 16.2237L45.0337 7.97632L105.732 39.8811L87.9775 47.7456L27.1191 16.2237Z"),I(P,"fill","url(#paint7_linear_699_5101)"),I(a,"mask","url(#mask0_699_5101)"),I(M,"stop-color","#FFD4B2"),I(O,"offset","0.36"),I(O,"stop-color","#9ACEB7"),I(V,"offset","0.67"),I(V,"stop-color","#47C8BB"),I(N,"offset","0.89"),I(N,"stop-color","#14C5BE"),I(E,"offset","1"),I(E,"stop-color","#00C4BF"),I(k,"id","paint0_linear_699_5101"),I(k,"x1","11.9006"),I(k,"y1","50.6648"),I(k,"x2","119.372"),I(k,"y2","50.6648"),I(k,"gradientUnits","userSpaceOnUse"),I(H,"stop-color","#00FECF"),I(z,"offset","0.08"),I(z,"stop-color","#00E5D0"),I(B,"offset","0.24"),I(B,"stop-color","#00A5D1"),I(F,"offset","0.48"),I(F,"stop-color","#0040D4"),I(ee,"offset","0.54"),I(ee,"stop-color","#0025D5"),I(W,"offset","1"),I(A,"id","paint1_linear_699_5101"),I(A,"x1","44.0766"),I(A,"y1","62.8524"),I(A,"x2","44.0766"),I(A,"y2","21.2167"),I(A,"gradientUnits","userSpaceOnUse"),I(oe,"stop-color","#FDEC9F"),I(c,"offset","0.08"),I(c,"stop-color","#E4D8A4"),I(l,"offset","0.24"),I(l,"stop-color","#A4A6B2"),I(h,"offset","0.47"),I(h,"stop-color","#3F57C8"),I(m,"offset","0.61"),I(m,"stop-color","#0025D5"),I(y,"offset","1"),I(C,"id","paint2_linear_699_5101"),I(C,"x1","37.4414"),I(C,"y1","76.8587"),I(C,"x2","146.891"),I(C,"y2","76.8587"),I(C,"gradientUnits","userSpaceOnUse"),I(w,"offset","0.05"),I(w,"stop-color","#62A5FF"),I(b,"offset","0.45"),I(b,"stop-color","#1032D1"),I(u,"offset","1"),I(v,"id","paint3_linear_699_5101"),I(v,"x1","15.0596"),I(v,"y1","103.18"),I(v,"x2","155.01"),I(v,"y2","103.18"),I(v,"gradientUnits","userSpaceOnUse"),I(R,"stop-color","#FFD4B2"),I(L,"offset","0.36"),I(L,"stop-color","#9ACEB7"),I(X,"offset","0.67"),I(X,"stop-color","#47C8BB"),I(te,"offset","0.89"),I(te,"stop-color","#14C5BE"),I(Z,"offset","1"),I(Z,"stop-color","#00C4BF"),I(x,"id","paint4_linear_699_5101"),I(x,"x1","628.741"),I(x,"y1","3244.93"),I(x,"x2","797.782"),I(x,"y2","3247.12"),I(x,"gradientUnits","userSpaceOnUse"),I(_e,"stop-color","#00FECF"),I(ae,"offset","0.08"),I(ae,"stop-color","#00E5D0"),I(de,"offset","0.25"),I(de,"stop-color","#00A5D1"),I(Re,"offset","0.49"),I(Re,"stop-color","#0040D4"),I(ue,"offset","0.56"),I(ue,"stop-color","#0025D5"),I(K,"id","paint5_linear_699_5101"),I(K,"x1","24.5987"),I(K,"y1","82.3783"),I(K,"x2","72.5834"),I(K,"y2","82.3783"),I(K,"gradientUnits","userSpaceOnUse"),I(ft,"stop-color","#00FECF"),I(he,"offset","0.05"),I(he,"stop-color","#00E5D0"),I(Me,"offset","0.15"),I(Me,"stop-color","#00A5D1"),I(zt,"offset","0.29"),I(zt,"stop-color","#0040D4"),I(Te,"offset","0.33"),I(Te,"stop-color","#0025D5"),I(se,"id","paint6_linear_699_5101"),I(se,"x1","70.9573"),I(se,"y1","52.5952"),I(se,"x2","189.069"),I(se,"y2","50.4576"),I(se,"gradientUnits","userSpaceOnUse"),I(Ht,"stop-color","#FFD4AF"),I(ye,"offset","0.1"),I(ye,"stop-color","#E6D5BA"),I(be,"offset","0.31"),I(be,"stop-color","#A7D6D5"),I(Tt,"offset","0.61"),I(Tt,"stop-color","#43D9FF"),I(xe,"offset","0.63"),I(xe,"stop-color","#37B1D0"),I(ge,"offset","0.65"),I(ge,"stop-color","#2B8CA5"),I(St,"offset","0.67"),I(St,"stop-color","#216B7D"),I(ve,"offset","0.7"),I(ve,"stop-color","#184E5B"),I(Se,"offset","0.72"),I(Se,"stop-color","#10353F"),I(Lt,"offset","0.75"),I(Lt,"stop-color","#0A2228"),I(ke,"offset","0.78"),I(ke,"stop-color","#061316"),I(Oe,"offset","0.82"),I(Oe,"stop-color","#020809"),I(Jt,"offset","0.88"),I(Jt,"stop-color","#010202"),I(He,"offset","1"),I(ce,"id","paint7_linear_699_5101"),I(ce,"x1","27.1191"),I(ce,"y1","27.8689"),I(ce,"x2","173.642"),I(ce,"y2","27.8689"),I(ce,"gradientUnits","userSpaceOnUse"),I(e,"width",t[0]),I(e,"height",t[0]),I(e,"viewBox","0 0 134 134"),I(e,"fill","none"),I(e,"xmlns","http://www.w3.org/2000/svg")},m(Ne,kt){fd(Ne,e,kt),Q(e,n),Q(n,r),Q(e,a),Q(a,i),Q(a,s),Q(a,o),Q(a,d),Q(a,f),Q(a,p),Q(a,g),Q(a,P),Q(e,T),Q(T,k),Q(k,M),Q(k,O),Q(k,V),Q(k,N),Q(k,E),Q(T,A),Q(A,H),Q(A,z),Q(A,B),Q(A,F),Q(A,ee),Q(A,W),Q(T,C),Q(C,oe),Q(C,c),Q(C,l),Q(C,h),Q(C,m),Q(C,y),Q(T,v),Q(v,w),Q(v,b),Q(v,u),Q(T,x),Q(x,R),Q(x,L),Q(x,X),Q(x,te),Q(x,Z),Q(T,K),Q(K,_e),Q(K,ae),Q(K,de),Q(K,Re),Q(K,ue),Q(T,se),Q(se,ft),Q(se,he),Q(se,Me),Q(se,zt),Q(se,Te),Q(T,ce),Q(ce,Ht),Q(ce,ye),Q(ce,be),Q(ce,Tt),Q(ce,xe),Q(ce,ge),Q(ce,St),Q(ce,ve),Q(ce,Se),Q(ce,Lt),Q(ce,ke),Q(ce,Oe),Q(ce,Jt),Q(ce,He)},p(Ne,[kt]){kt&1&&I(e,"width",Ne[0]),kt&1&&I(e,"height",Ne[0])},i:wa,o:wa,d(Ne){Ne&&G(e)}}}function yN(t,e,n){let{size:r="5em"}=e;return t.$$set=a=>{"size"in a&&n(0,r=a.size)},[r]}class xN extends dd{constructor(e){super(),ud(this,e,yN,bN,ld,{size:0})}}const gN={"polkadot-js":{displayName:"Polkadot",injectedName:"polkadot-js",downloadUrl:{browser:new URL("https://polkadot.js.org/extension/")},logo:{component:mN,size:"5em"}},talisman:{displayName:"Talisman",injectedName:"talisman",downloadUrl:{browser:new URL("https://www.talisman.xyz/download")},logo:{component:fN,size:"5em"}},"subwallet-js":{displayName:"SubWallet",injectedName:"subwallet-js",downloadUrl:{browser:new URL("https://www.subwallet.app/download.html"),app:{apple:"https:/apple.com/us/app/subwallet-polkadot-wallet/id1633050285",android:"https://play.google.com/store/details?id=app.subwallet.mobile"}},logo:{component:xN,size:"5em"}}},ui=/^[a-z0-9]+(-[a-z0-9]+)*$/,po=(t,e,n,r="")=>{const a=t.split(":");if(t.slice(0,1)==="@"){if(a.length<2||a.length>3)return null;r=a.shift().slice(1)}if(a.length>3||!a.length)return null;if(a.length>1){const o=a.pop(),d=a.pop(),f={provider:a.length>0?a[0]:r,prefix:d,name:o};return e&&!us(f)?null:f}const i=a[0],s=i.split("-");if(s.length>1){const o={provider:r,prefix:s.shift(),name:s.join("-")};return e&&!us(o)?null:o}if(n&&r===""){const o={provider:r,prefix:"",name:i};return e&&!us(o,n)?null:o}return null},us=(t,e)=>t?!!((t.provider===""||t.provider.match(ui))&&(e&&t.prefix===""||t.prefix.match(ui))&&t.name.match(ui)):!1,am=Object.freeze({left:0,top:0,width:16,height:16}),Ls=Object.freeze({rotate:0,vFlip:!1,hFlip:!1}),mo=Object.freeze({...am,...Ls}),Gc=Object.freeze({...mo,body:"",hidden:!1});function vN(t,e){const n={};!t.hFlip!=!e.hFlip&&(n.hFlip=!0),!t.vFlip!=!e.vFlip&&(n.vFlip=!0);const r=((t.rotate||0)+(e.rotate||0))%4;return r&&(n.rotate=r),n}function t0(t,e){const n=vN(t,e);for(const r in Gc)r in Ls?r in t&&!(r in n)&&(n[r]=Ls[r]):r in e?n[r]=e[r]:r in t&&(n[r]=t[r]);return n}function wN(t,e){const n=t.icons,r=t.aliases||Object.create(null),a=Object.create(null);function i(s){if(n[s])return a[s]=[];if(!(s in a)){a[s]=null;const o=r[s]&&r[s].parent,d=o&&i(o);d&&(a[s]=[o].concat(d))}return a[s]}return Object.keys(n).concat(Object.keys(r)).forEach(i),a}function PN(t,e,n){const r=t.icons,a=t.aliases||Object.create(null);let i={};function s(o){i=t0(r[o]||a[o],i)}return s(e),n.forEach(s),t0(t,i)}function im(t,e){const n=[];if(typeof t!="object"||typeof t.icons!="object")return n;t.not_found instanceof Array&&t.not_found.forEach(a=>{e(a,null),n.push(a)});const r=wN(t);for(const a in r){const i=r[a];i&&(e(a,PN(t,a,i)),n.push(a))}return n}const MN={provider:"",aliases:{},not_found:{},...am};function oc(t,e){for(const n in e)if(n in t&&typeof t[n]!=typeof e[n])return!1;return!0}function sm(t){if(typeof t!="object"||t===null)return null;const e=t;if(typeof e.prefix!="string"||!t.icons||typeof t.icons!="object"||!oc(t,MN))return null;const n=e.icons;for(const a in n){const i=n[a];if(!a.match(ui)||typeof i.body!="string"||!oc(i,Gc))return null}const r=e.aliases||Object.create(null);for(const a in r){const i=r[a],s=i.parent;if(!a.match(ui)||typeof s!="string"||!n[s]&&!r[s]||!oc(i,Gc))return null}return e}const n0=Object.create(null);function TN(t,e){return{provider:t,prefix:e,icons:Object.create(null),missing:new Set}}function ta(t,e){const n=n0[t]||(n0[t]=Object.create(null));return n[e]||(n[e]=TN(t,e))}function uu(t,e){return sm(e)?im(e,(n,r)=>{r?t.icons[n]=r:t.missing.add(n)}):[]}function SN(t,e,n){try{if(typeof n.body=="string")return t.icons[e]={...n},!0}catch{}return!1}let vi=!1;function om(t){return typeof t=="boolean"&&(vi=t),vi}function kN(t){const e=typeof t=="string"?po(t,!0,vi):t;if(e){const n=ta(e.provider,e.prefix),r=e.name;return n.icons[r]||(n.missing.has(r)?null:void 0)}}function ON(t,e){const n=po(t,!0,vi);if(!n)return!1;const r=ta(n.provider,n.prefix);return SN(r,n.name,e)}function NN(t,e){if(typeof t!="object")return!1;if(typeof e!="string"&&(e=t.provider||""),vi&&!e&&!t.prefix){let a=!1;return sm(t)&&(t.prefix="",im(t,(i,s)=>{s&&ON(i,s)&&(a=!0)})),a}const n=t.prefix;if(!us({provider:e,prefix:n,name:"a"}))return!1;const r=ta(e,n);return!!uu(r,t)}const cm=Object.freeze({width:null,height:null}),dm=Object.freeze({...cm,...Ls}),VN=/(-?[0-9.]*[0-9]+[0-9.]*)/g,IN=/^-?[0-9.]*[0-9]+[0-9.]*$/g;function r0(t,e,n){if(e===1)return t;if(n=n||100,typeof t=="number")return Math.ceil(t*e*n)/n;if(typeof t!="string")return t;const r=t.split(VN);if(r===null||!r.length)return t;const a=[];let i=r.shift(),s=IN.test(i);for(;;){if(s){const o=parseFloat(i);isNaN(o)?a.push(i):a.push(Math.ceil(o*e*n)/n)}else a.push(i);if(i=r.shift(),i===void 0)return a.join("");s=!s}}function EN(t,e="defs"){let n="";const r=t.indexOf("<"+e);for(;r>=0;){const a=t.indexOf(">",r),i=t.indexOf("</"+e);if(a===-1||i===-1)break;const s=t.indexOf(">",i);if(s===-1)break;n+=t.slice(a+1,i).trim(),t=t.slice(0,r).trim()+t.slice(s+1)}return{defs:n,content:t}}function zN(t,e){return t?"<defs>"+t+"</defs>"+e:e}function HN(t,e,n){const r=EN(t);return zN(r.defs,e+r.content+n)}const LN=t=>t==="unset"||t==="undefined"||t==="none";function RN(t,e){const n={...mo,...t},r={...dm,...e},a={left:n.left,top:n.top,width:n.width,height:n.height};let i=n.body;[n,r].forEach(M=>{const O=[],V=M.hFlip,N=M.vFlip;let E=M.rotate;V?N?E+=2:(O.push("translate("+(a.width+a.left).toString()+" "+(0-a.top).toString()+")"),O.push("scale(-1 1)"),a.top=a.left=0):N&&(O.push("translate("+(0-a.left).toString()+" "+(a.height+a.top).toString()+")"),O.push("scale(1 -1)"),a.top=a.left=0);let A;switch(E<0&&(E-=Math.floor(E/4)*4),E=E%4,E){case 1:A=a.height/2+a.top,O.unshift("rotate(90 "+A.toString()+" "+A.toString()+")");break;case 2:O.unshift("rotate(180 "+(a.width/2+a.left).toString()+" "+(a.height/2+a.top).toString()+")");break;case 3:A=a.width/2+a.left,O.unshift("rotate(-90 "+A.toString()+" "+A.toString()+")");break}E%2===1&&(a.left!==a.top&&(A=a.left,a.left=a.top,a.top=A),a.width!==a.height&&(A=a.width,a.width=a.height,a.height=A)),O.length&&(i=HN(i,'<g transform="'+O.join(" ")+'">',"</g>"))});const s=r.width,o=r.height,d=a.width,f=a.height;let p,g;s===null?(g=o===null?"1em":o==="auto"?f:o,p=r0(g,d/f)):(p=s==="auto"?d:s,g=o===null?r0(p,f/d):o==="auto"?f:o);const P={},T=(M,O)=>{LN(O)||(P[M]=O.toString())};T("width",p),T("height",g);const k=[a.left,a.top,d,f];return P.viewBox=k.join(" "),{attributes:P,viewBox:k,body:i}}const BN=/\sid="(\S+)"/g,AN="IconifyId"+Date.now().toString(16)+(Math.random()*16777216|0).toString(16);let CN=0;function jN(t,e=AN){const n=[];let r;for(;r=BN.exec(t);)n.push(r[1]);if(!n.length)return t;const a="suffix"+(Math.random()*16777216|Date.now()).toString(16);return n.forEach(i=>{const s=typeof e=="function"?e(i):e+(CN++).toString(),o=i.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");t=t.replace(new RegExp('([#;"])('+o+')([")]|\\.[a-z])',"g"),"$1"+s+a+"$3")}),t=t.replace(new RegExp(a,"g"),""),t}const Kc=Object.create(null);function UN(t,e){Kc[t]=e}function Yc(t){return Kc[t]||Kc[""]}function lu(t){let e;if(typeof t.resources=="string")e=[t.resources];else if(e=t.resources,!(e instanceof Array)||!e.length)return null;return{resources:e,path:t.path||"/",maxURL:t.maxURL||500,rotate:t.rotate||750,timeout:t.timeout||5e3,random:t.random===!0,index:t.index||0,dataAfterTimeout:t.dataAfterTimeout!==!1}}const fu=Object.create(null),ei=["https://api.simplesvg.com","https://api.unisvg.com"],ls=[];for(;ei.length>0;)ei.length===1||Math.random()>.5?ls.push(ei.shift()):ls.push(ei.pop());fu[""]=lu({resources:["https://api.iconify.design"].concat(ls)});function XN(t,e){const n=lu(e);return n===null?!1:(fu[t]=n,!0)}function hu(t){return fu[t]}const DN=()=>{let t;try{if(t=fetch,typeof t=="function")return t}catch{}};let a0=DN();function FN(t,e){const n=hu(t);if(!n)return 0;let r;if(!n.maxURL)r=0;else{let a=0;n.resources.forEach(s=>{a=Math.max(a,s.length)});const i=e+".json?icons=";r=n.maxURL-a-n.path.length-i.length}return r}function qN(t){return t===404}const ZN=(t,e,n)=>{const r=[],a=FN(t,e),i="icons";let s={type:i,provider:t,prefix:e,icons:[]},o=0;return n.forEach((d,f)=>{o+=d.length+1,o>=a&&f>0&&(r.push(s),s={type:i,provider:t,prefix:e,icons:[]},o=d.length),s.icons.push(d)}),r.push(s),r};function WN(t){if(typeof t=="string"){const e=hu(t);if(e)return e.path}return"/"}const GN=(t,e,n)=>{if(!a0){n("abort",424);return}let r=WN(e.provider);switch(e.type){case"icons":{const i=e.prefix,o=e.icons.join(","),d=new URLSearchParams({icons:o});r+=i+".json?"+d.toString();break}case"custom":{const i=e.uri;r+=i.slice(0,1)==="/"?i.slice(1):i;break}default:n("abort",400);return}let a=503;a0(t+r).then(i=>{const s=i.status;if(s!==200){setTimeout(()=>{n(qN(s)?"abort":"next",s)});return}return a=501,i.json()}).then(i=>{if(typeof i!="object"||i===null){setTimeout(()=>{i===404?n("abort",i):n("next",a)});return}setTimeout(()=>{n("success",i)})}).catch(()=>{n("next",a)})},KN={prepare:ZN,send:GN};function YN(t){const e={loaded:[],missing:[],pending:[]},n=Object.create(null);t.sort((a,i)=>a.provider!==i.provider?a.provider.localeCompare(i.provider):a.prefix!==i.prefix?a.prefix.localeCompare(i.prefix):a.name.localeCompare(i.name));let r={provider:"",prefix:"",name:""};return t.forEach(a=>{if(r.name===a.name&&r.prefix===a.prefix&&r.provider===a.provider)return;r=a;const i=a.provider,s=a.prefix,o=a.name,d=n[i]||(n[i]=Object.create(null)),f=d[s]||(d[s]=ta(i,s));let p;o in f.icons?p=e.loaded:s===""||f.missing.has(o)?p=e.missing:p=e.pending;const g={provider:i,prefix:s,name:o};p.push(g)}),e}function um(t,e){t.forEach(n=>{const r=n.loaderCallbacks;r&&(n.loaderCallbacks=r.filter(a=>a.id!==e))})}function JN(t){t.pendingCallbacksFlag||(t.pendingCallbacksFlag=!0,setTimeout(()=>{t.pendingCallbacksFlag=!1;const e=t.loaderCallbacks?t.loaderCallbacks.slice(0):[];if(!e.length)return;let n=!1;const r=t.provider,a=t.prefix;e.forEach(i=>{const s=i.icons,o=s.pending.length;s.pending=s.pending.filter(d=>{if(d.prefix!==a)return!0;const f=d.name;if(t.icons[f])s.loaded.push({provider:r,prefix:a,name:f});else if(t.missing.has(f))s.missing.push({provider:r,prefix:a,name:f});else return n=!0,!0;return!1}),s.pending.length!==o&&(n||um([t],i.id),i.callback(s.loaded.slice(0),s.missing.slice(0),s.pending.slice(0),i.abort))})}))}let _N=0;function QN(t,e,n){const r=_N++,a=um.bind(null,n,r);if(!e.pending.length)return a;const i={id:r,icons:e,callback:t,abort:a};return n.forEach(s=>{(s.loaderCallbacks||(s.loaderCallbacks=[])).push(i)}),a}function $N(t,e=!0,n=!1){const r=[];return t.forEach(a=>{const i=typeof a=="string"?po(a,e,n):a;i&&r.push(i)}),r}var eV={resources:[],index:0,timeout:2e3,rotate:750,random:!1,dataAfterTimeout:!1};function tV(t,e,n,r){const a=t.resources.length,i=t.random?Math.floor(Math.random()*a):t.index;let s;if(t.random){let z=t.resources.slice(0);for(s=[];z.length>1;){const B=Math.floor(Math.random()*z.length);s.push(z[B]),z=z.slice(0,B).concat(z.slice(B+1))}s=s.concat(z)}else s=t.resources.slice(i).concat(t.resources.slice(0,i));const o=Date.now();let d="pending",f=0,p,g=null,P=[],T=[];typeof r=="function"&&T.push(r);function k(){g&&(clearTimeout(g),g=null)}function M(){d==="pending"&&(d="aborted"),k(),P.forEach(z=>{z.status==="pending"&&(z.status="aborted")}),P=[]}function O(z,B){B&&(T=[]),typeof z=="function"&&T.push(z)}function V(){return{startTime:o,payload:e,status:d,queriesSent:f,queriesPending:P.length,subscribe:O,abort:M}}function N(){d="failed",T.forEach(z=>{z(void 0,p)})}function E(){P.forEach(z=>{z.status==="pending"&&(z.status="aborted")}),P=[]}function A(z,B,F){const ee=B!=="success";switch(P=P.filter(W=>W!==z),d){case"pending":break;case"failed":if(ee||!t.dataAfterTimeout)return;break;default:return}if(B==="abort"){p=F,N();return}if(ee){p=F,P.length||(s.length?H():N());return}if(k(),E(),!t.random){const W=t.resources.indexOf(z.resource);W!==-1&&W!==t.index&&(t.index=W)}d="completed",T.forEach(W=>{W(F)})}function H(){if(d!=="pending")return;k();const z=s.shift();if(z===void 0){if(P.length){g=setTimeout(()=>{k(),d==="pending"&&(E(),N())},t.timeout);return}N();return}const B={status:"pending",resource:z,callback:(F,ee)=>{A(B,F,ee)}};P.push(B),f++,g=setTimeout(H,t.rotate),n(z,e,B.callback)}return setTimeout(H),V}function lm(t){const e={...eV,...t};let n=[];function r(){n=n.filter(o=>o().status==="pending")}function a(o,d,f){const p=tV(e,o,d,(g,P)=>{r(),f&&f(g,P)});return n.push(p),p}function i(o){return n.find(d=>o(d))||null}return{query:a,find:i,setIndex:o=>{e.index=o},getIndex:()=>e.index,cleanup:r}}function i0(){}const cc=Object.create(null);function nV(t){if(!cc[t]){const e=hu(t);if(!e)return;const n=lm(e),r={config:e,redundancy:n};cc[t]=r}return cc[t]}function rV(t,e,n){let r,a;if(typeof t=="string"){const i=Yc(t);if(!i)return n(void 0,424),i0;a=i.send;const s=nV(t);s&&(r=s.redundancy)}else{const i=lu(t);if(i){r=lm(i);const s=t.resources?t.resources[0]:"",o=Yc(s);o&&(a=o.send)}}return!r||!a?(n(void 0,424),i0):r.query(e,a,n)().abort}const s0="iconify2",wi="iconify",fm=wi+"-count",o0=wi+"-version",hm=36e5,aV=168,iV=50;function Jc(t,e){try{return t.getItem(e)}catch{}}function pu(t,e,n){try{return t.setItem(e,n),!0}catch{}}function c0(t,e){try{t.removeItem(e)}catch{}}function _c(t,e){return pu(t,fm,e.toString())}function Qc(t){return parseInt(Jc(t,fm))||0}const bo={local:!0,session:!0},pm={local:new Set,session:new Set};let mu=!1;function sV(t){mu=t}let ts=typeof window>"u"?{}:window;function mm(t){const e=t+"Storage";try{if(ts&&ts[e]&&typeof ts[e].length=="number")return ts[e]}catch{}bo[t]=!1}function bm(t,e){const n=mm(t);if(!n)return;const r=Jc(n,o0);if(r!==s0){if(r){const o=Qc(n);for(let d=0;d<o;d++)c0(n,wi+d.toString())}pu(n,o0,s0),_c(n,0);return}const a=Math.floor(Date.now()/hm)-aV,i=o=>{const d=wi+o.toString(),f=Jc(n,d);if(typeof f=="string"){try{const p=JSON.parse(f);if(typeof p=="object"&&typeof p.cached=="number"&&p.cached>a&&typeof p.provider=="string"&&typeof p.data=="object"&&typeof p.data.prefix=="string"&&e(p,o))return!0}catch{}c0(n,d)}};let s=Qc(n);for(let o=s-1;o>=0;o--)i(o)||(o===s-1?(s--,_c(n,s)):pm[t].add(o))}function ym(){if(!mu){sV(!0);for(const t in bo)bm(t,e=>{const n=e.data,r=e.provider,a=n.prefix,i=ta(r,a);if(!uu(i,n).length)return!1;const s=n.lastModified||-1;return i.lastModifiedCached=i.lastModifiedCached?Math.min(i.lastModifiedCached,s):s,!0})}}function oV(t,e){const n=t.lastModifiedCached;if(n&&n>=e)return n===e;if(t.lastModifiedCached=e,n)for(const r in bo)bm(r,a=>{const i=a.data;return a.provider!==t.provider||i.prefix!==t.prefix||i.lastModified===e});return!0}function cV(t,e){mu||ym();function n(r){let a;if(!bo[r]||!(a=mm(r)))return;const i=pm[r];let s;if(i.size)i.delete(s=Array.from(i).shift());else if(s=Qc(a),s>=iV||!_c(a,s+1))return;const o={cached:Math.floor(Date.now()/hm),provider:t.provider,data:e};return pu(a,wi+s.toString(),JSON.stringify(o))}e.lastModified&&!oV(t,e.lastModified)||Object.keys(e.icons).length&&(e.not_found&&(e=Object.assign({},e),delete e.not_found),n("local")||n("session"))}function d0(){}function dV(t){t.iconsLoaderFlag||(t.iconsLoaderFlag=!0,setTimeout(()=>{t.iconsLoaderFlag=!1,JN(t)}))}function uV(t,e){t.iconsToLoad?t.iconsToLoad=t.iconsToLoad.concat(e).sort():t.iconsToLoad=e,t.iconsQueueFlag||(t.iconsQueueFlag=!0,setTimeout(()=>{t.iconsQueueFlag=!1;const{provider:n,prefix:r}=t,a=t.iconsToLoad;delete t.iconsToLoad;let i;if(!a||!(i=Yc(n)))return;i.prepare(n,r,a).forEach(o=>{rV(n,o,d=>{if(typeof d!="object")o.icons.forEach(f=>{t.missing.add(f)});else try{const f=uu(t,d);if(!f.length)return;const p=t.pendingIcons;p&&f.forEach(g=>{p.delete(g)}),cV(t,d)}catch(f){console.error(f)}dV(t)})})}))}const lV=(t,e)=>{const n=$N(t,!0,om()),r=YN(n);if(!r.pending.length){let d=!0;return e&&setTimeout(()=>{d&&e(r.loaded,r.missing,r.pending,d0)}),()=>{d=!1}}const a=Object.create(null),i=[];let s,o;return r.pending.forEach(d=>{const{provider:f,prefix:p}=d;if(p===o&&f===s)return;s=f,o=p,i.push(ta(f,p));const g=a[f]||(a[f]=Object.create(null));g[p]||(g[p]=[])}),r.pending.forEach(d=>{const{provider:f,prefix:p,name:g}=d,P=ta(f,p),T=P.pendingIcons||(P.pendingIcons=new Set);T.has(g)||(T.add(g),a[f][p].push(g))}),i.forEach(d=>{const{provider:f,prefix:p}=d;a[f][p].length&&uV(d,a[f][p])}),e?QN(e,r,i):d0};function fV(t,e){const n={...t};for(const r in e){const a=e[r],i=typeof a;r in cm?(a===null||a&&(i==="string"||i==="number"))&&(n[r]=a):i===typeof n[r]&&(n[r]=r==="rotate"?a%4:a)}return n}const hV=/[\s,]+/;function pV(t,e){e.split(hV).forEach(n=>{switch(n.trim()){case"horizontal":t.hFlip=!0;break;case"vertical":t.vFlip=!0;break}})}function mV(t,e=0){const n=t.replace(/^-?[0-9.]*/,"");function r(a){for(;a<0;)a+=4;return a%4}if(n===""){const a=parseInt(t);return isNaN(a)?0:r(a)}else if(n!==t){let a=0;switch(n){case"%":a=25;break;case"deg":a=90}if(a){let i=parseFloat(t.slice(0,t.length-n.length));return isNaN(i)?0:(i=i/a,i%1===0?r(i):0)}}return e}function bV(t,e){let n=t.indexOf("xlink:")===-1?"":' xmlns:xlink="http://www.w3.org/1999/xlink"';for(const r in e)n+=" "+r+'="'+e[r]+'"';return'<svg xmlns="http://www.w3.org/2000/svg"'+n+">"+t+"</svg>"}function yV(t){return t.replace(/"/g,"'").replace(/%/g,"%25").replace(/#/g,"%23").replace(/</g,"%3C").replace(/>/g,"%3E").replace(/\s+/g," ")}function xV(t){return"data:image/svg+xml,"+yV(t)}function gV(t){return'url("'+xV(t)+'")'}const u0={...dm,inline:!1},vV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink","aria-hidden":!0,role:"img"},wV={display:"inline-block"},$c={"background-color":"currentColor"},xm={"background-color":"transparent"},l0={image:"var(--svg)",repeat:"no-repeat",size:"100% 100%"},f0={"-webkit-mask":$c,mask:$c,background:xm};for(const t in f0){const e=f0[t];for(const n in l0)e[t+"-"+n]=l0[n]}function PV(t){return t+(t.match(/^[-0-9.]+$/)?"px":"")}function MV(t,e){const n=fV(u0,e),r=e.mode||"svg",a=r==="svg"?{...vV}:{};t.body.indexOf("xlink:")===-1&&delete a["xmlns:xlink"];let i=typeof e.style=="string"?e.style:"";for(let V in e){const N=e[V];if(N!==void 0)switch(V){case"icon":case"style":case"onLoad":case"mode":break;case"inline":case"hFlip":case"vFlip":n[V]=N===!0||N==="true"||N===1;break;case"flip":typeof N=="string"&&pV(n,N);break;case"color":i=i+(i.length>0&&i.trim().slice(-1)!==";"?";":"")+"color: "+N+"; ";break;case"rotate":typeof N=="string"?n[V]=mV(N):typeof N=="number"&&(n[V]=N);break;case"ariaHidden":case"aria-hidden":N!==!0&&N!=="true"&&delete a["aria-hidden"];break;default:if(V.slice(0,3)==="on:")break;u0[V]===void 0&&(a[V]=N)}}const s=RN(t,n),o=s.attributes;if(n.inline&&(i="vertical-align: -0.125em; "+i),r==="svg"){Object.assign(a,o),i!==""&&(a.style=i);let V=0,N=e.id;return typeof N=="string"&&(N=N.replace(/-/g,"_")),{svg:!0,attributes:a,body:jN(s.body,N?()=>N+"ID"+V++:"iconifySvelte")}}const{body:d,width:f,height:p}=t,g=r==="mask"||(r==="bg"?!1:d.indexOf("currentColor")!==-1),P=bV(d,{...o,width:f+"",height:p+""}),k={"--svg":gV(P)},M=V=>{const N=o[V];N&&(k[V]=PV(N))};M("width"),M("height"),Object.assign(k,wV,g?$c:xm);let O="";for(const V in k)O+=V+": "+k[V]+";";return a.style=O+i,{svg:!1,attributes:a}}om(!0);UN("",KN);if(typeof document<"u"&&typeof window<"u"){ym();const t=window;if(t.IconifyPreload!==void 0){const e=t.IconifyPreload,n="Invalid IconifyPreload syntax.";typeof e=="object"&&e!==null&&(e instanceof Array?e:[e]).forEach(r=>{try{(typeof r!="object"||r===null||r instanceof Array||typeof r.icons!="object"||typeof r.prefix!="string"||!NN(r))&&console.error(n)}catch{console.error(n)}})}if(t.IconifyProviders!==void 0){const e=t.IconifyProviders;if(typeof e=="object"&&e!==null)for(let n in e){const r="IconifyProviders["+n+"] is invalid.";try{const a=e[n];if(typeof a!="object"||!a||a.resources===void 0)continue;XN(n,a)||console.error(r)}catch{console.error(r)}}}}function nH(t,e,n,r,a){function i(){e.loading&&(e.loading.abort(),e.loading=null)}if(typeof t=="object"&&t!==null&&typeof t.body=="string")return e.name="",i(),{data:{...mo,...t}};let s;if(typeof t!="string"||(s=po(t,!1,!0))===null)return i(),null;const o=kN(s);if(!o)return n&&(!e.loading||e.loading.name!==t)&&(i(),e.name="",e.loading={name:t,abort:lV([s],r)}),null;i(),e.name!==t&&(e.name=t,a&&!e.destroyed&&a(t));const d=["iconify"];return s.prefix!==""&&d.push("iconify--"+s.prefix),s.provider!==""&&d.push("iconify--"+s.provider),{data:o,classes:d}}function rH(t,e){return t?MV({...mo,...t},e):null}var TV=Object.defineProperty,SV=(t,e,n)=>e in t?TV(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,rt=(t,e,n)=>SV(t,typeof e!="symbol"?e+"":e,n);const kV={rpc:{checkDelegations:{description:"Test a list of MSAs to see if they have delegated to the provider MSA",params:[{name:"delegator_msa_ids",type:"Vec<DelegatorId>"},{name:"provider_msa_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"Vec<(DelegatorId, bool)>"},grantedSchemaIdsByMsaId:{description:"Fetch the list of schema ids that a delegator has granted to provider",params:[{name:"delegator_msa_id",type:"DelegatorId"},{name:"provider_msa_id",type:"ProviderId"}],type:"Option<Vec<SchemaGrantResponse>>"},getKeysByMsaId:{description:"Fetch Keys for an MSA Id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<KeyInfoResponse>"}},types:{MessageSourceId:"u64",DelegatorId:"MessageSourceId",ProviderId:"MessageSourceId",KeyInfoResponse:{msa_keys:"Vec<AccountId>",msa_id:"MessageSourceId"},SchemaGrantResponse:{schema_id:"SchemaId",revoked_at:"BlockNumber"}},runtime:{MsaRuntimeApi:[{methods:{has_delegation:{description:"Check to see if a delegation existed between the given delegator and provider at a given block",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"bool"},get_granted_schemas_by_msa_id:{description:"Get the list of schema ids (if any) that exist in any delegation between the delegator and provider",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"}],type:"Option<Vec<SchemaId>>"}},version:1},{methods:{has_delegation:{description:"Check to see if a delegation existed between the given delegator and provider at a given block",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"bool"},get_granted_schemas_by_msa_id:{description:"Get the list of schema ids (if any) that exist in any delegation between the delegator and provider",params:[{name:"delegator_id",type:"DelegatorId"},{name:"provider_id",type:"ProviderId"}],type:"Option<Vec<SchemaGrantResponse>>"}},version:2}]}},OV={rpc:{getBySchemaId:{description:"Get messages by schemaId paginated",params:[{name:"schema_id",type:"SchemaId"},{name:"pagination",type:"BlockPaginationRequest"}],type:"BlockPaginationResponseMessage"}},types:{BlockPaginationRequest:{from_block:"BlockNumber",from_index:"u32",to_block:"BlockNumber",page_size:"u32"},MessageResponse:{payload:"Option<Vec<u8>>",cid:"Option<Vec<u8>>",provider_msa_id:"MessageSourceId",msa_id:"Option<MessageSourceId>",index:"u16",block_number:"BlockNumber",payload_length:"Option<u32>"},BlockPaginationResponseMessage:{content:"Vec<MessageResponse>",has_next:"bool",next_block:"Option<BlockNumber>",next_index:"Option<u32>"}},runtime:{MessagesRuntimeApi:[{methods:{get_messages_by_schema_and_block:{description:"Retrieve the messages for a particular schema and block number",params:[{name:"schema_id",type:"SchemaId"},{name:"schema_payload_location",type:"PayloadLocation"},{name:"block_number",type:"BlockNumber"}],type:"Vec<MessageResponse>"},get_schema_by_id:{description:"Retrieve a schema by id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"}},version:1}]}},NV={rpc:{getBySchemaId:{description:"Get a Schema by Id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"},checkSchemaValidity:{description:"",params:[{name:"model",type:"SchemaModel"},{name:"at",type:"BlockHash",isOptional:!0}],type:"bool"},getVersions:{description:"Get different versions and schema ids for a complete schema name or only a namespace",params:[{name:"schema_name",type:"String"}],type:"Option<Vec<SchemaVersionResponse>>"}},types:{SchemaId:"u16",SchemaModel:"Vec<u8>",SchemaVersion:"u8",SchemaResponse:{schema_id:"SchemaId",model:"SchemaModel",model_type:"ModelType",payload_location:"PayloadLocation",settings:"Vec<SchemaSetting>"},ModelType:{_enum:["AvroBinary","Parquet"]},PayloadLocation:{_enum:["OnChain","IPFS","Itemized","Paginated"]},SchemaSetting:{_enum:["AppendOnly","SignatureRequired"]},SchemaVersionResponse:{schema_name:"String",schema_version:"SchemaVersion",schema_id:"SchemaId"}},runtime:{SchemasRuntimeApi:[{methods:{get_schema_by_id:{description:"Fetch the schema by id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"},get_schema_versions_by_name:{description:"Fetch the schema versions by name",params:[{name:"schema_name",type:"Vec<u8>"}],type:"Option<Vec<SchemaVersionResponse>>"}},version:2}]}},VV={rpc:{getPaginatedStorage:{description:"Gets pages of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Vec<PaginatedStorageResponse>"},getItemizedStorage:{description:"Gets itemized of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"ItemizedStoragePageResponse"}},types:{PageId:"u16",PageHash:"u32",PageNonce:"u16",ItemizedStorageResponse:{index:"u16",payload:"Vec<u8>"},PaginatedStorageResponse:{page_id:"PageId",msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",payload:"Vec<u8>"},ItemizedStoragePageResponse:{msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",items:"Vec<ItemizedStorageResponse>"}},runtime:{StatefulStorageRuntimeApi:[{methods:{get_paginated_storage:{description:"Fetch the stateful paginated storage by msa_id and schema_id",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Result<Vec<PaginatedStorageResponse>, SpRuntimeDispatchError>"},get_itemized_storage:{description:"Fetch the stateful itemized storage by msa_id and schema_id",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Result<ItemizedStoragePageResponse, SpRuntimeDispatchError>"}},version:1}]}},IV={rpc:{getHandleForMsa:{description:"Get handle for a given msa_id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<HandleResponse>"},getMsaForHandle:{description:"Get msa_id for a given handle",params:[{name:"display_handle",type:"String"}],type:"Option<MessageSourceId>"},getNextSuffixes:{description:"Get next suffixes for a given handle and count",params:[{name:"base_handle",type:"String"},{name:"count",type:"u16"}],type:"PresumptiveSuffixesResponse"},validateHandle:{description:"Check whether the supplied handle passes all the checks performed by claim_handle call.",params:[{name:"base_handle",type:"String"}],type:"bool"}},types:{HandleSuffix:"u16",HandleResponse:{base_handle:"String",canonical_base:"String",suffix:"u16"},PresumptiveSuffixesResponse:{suffixes:"Vec<HandleSuffix>",base_handle:"String"}},runtime:{HandlesRuntimeApi:[{methods:{get_handle_for_msa:{description:"Get handle for a given msa_id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<HandleResponse>"},get_msa_for_handle:{description:"Get msa_id for a given handle",params:[{name:"display_handle",type:"Vec<u8>"}],type:"Option<MessageSourceId>"},get_next_suffixes:{description:"Get next suffixes for a given handle and count",params:[{name:"base_handle",type:"Vec<u8>"},{name:"count",type:"u16"}],type:"PresumptiveSuffixesResponse"},validate_handle:{description:"Check whether the supplied handle passes all the checks performed by claim_handle call.",params:[{name:"base_handle",type:"String"}],type:"bool"}},version:2}]}},EV={rpc:{getEvents:{description:"Get block Events",params:[{name:"at",type:"H256"}],type:"Vec<RpcEvent>"}},types:{RpcEvent:{phase:"Option<u32>",pallet:"u8",event:"u8",data:"Vec<u8>"}},runtime:{AdditionalRuntimeApi:[{methods:{get_events:{description:"Get the events with simple SCALE decoding",params:[],type:"Vec<RpcEvent>"}},version:1}]}},zV={rpc:{computeCapacityFeeDetails:{description:"Compute the capacity fee details for a given transaction",params:[{name:"encoded_xt",type:"Vec<u8>"},{name:"at",type:"Option<BlockHash>"}],type:"FeeDetails"}},types:{},runtime:{CapacityTransactionPaymentRuntimeApi:[{methods:{compute_capacity_fee:{description:"Compute the capacity fee for a given transaction",params:[{name:"encoded_xt",type:"Vec<u8>"},{name:"at",type:"Option<BlockHash>"}],type:"FeeDetails"}}}]}},bu=Object.freeze(Object.defineProperty({__proto__:null,frequency:EV,frequencyTxPayment:zV,handles:IV,messages:OV,msa:kV,schemas:NV,statefulStorage:VV},Symbol.toStringTag,{value:"Module"}));Object.entries(bu).reduce((t,[e,n])=>({...t,...n.types}),{});Object.entries(bu).reduce((t,[e,n])=>({...t,[e]:n.rpc}),{});Object.entries(bu).reduce((t,[e,n])=>({...t,...n.runtime}),{});var Rs;(function(t){t.Handshake="handshake",t.WalletProxyResponseMessage="walletProxyResponseMessage"})(Rs||(Rs={}));var Bs;(function(t){t.FailedToOpenWindow="Failed to open window",t.MessagePortNotSet="MessagePort is not set.",t.FailedToEstablishHandshake="Failed to establish handshake with the window."})(Bs||(Bs={}));class gm{constructor(){rt(this,"_messagePort"),rt(this,"eventTarget",new EventTarget)}static async create(){const e=new gm;return await e.initialize(),e}async initialize(){return new Promise((e,n)=>{const r=setTimeout(()=>{this._messagePort||(window.removeEventListener("message",a),n(new Error(Bs.FailedToEstablishHandshake)))},3e3),a=i=>{i.data===Rs.Handshake&&i.ports[0]&&(clearTimeout(r),this.messagePort=i.ports[0],this.setupMessageChannel(),window.removeEventListener("message",a),e())};window.addEventListener("message",a,!1),window.opener.postMessage(Rs.Handshake,"*")})}setupMessageChannel(){this.messagePort.onmessage=e=>{this.eventTarget.dispatchEvent(new CustomEvent(e.data.eventName,{detail:e.data.payload}))},this.messagePort.start()}set messagePort(e){this._messagePort=e}get messagePort(){if(!this._messagePort)throw new Error(Bs.MessagePortNotSet);return this._messagePort}sendEvent(e,n){this.messagePort.postMessage({eventName:e,payload:n})}on(e,n,r){const a=i=>{n(i)};this.eventTarget.addEventListener(e,a,r)}off(e,n){const r=a=>{n(a)};this.eventTarget.removeEventListener(e,r)}dispose(){this.messagePort.close()}}var ed;(function(t){t.LOCALHOST="http://localhost:9944"})(ed||(ed={}));var td;(function(t){t.DEV="http://localhost:5173"})(td||(td={}));var h0;(function(t){t.CreateSponsoredAccountWithDelegation="createSponsoredAccountWithDelegation",t.GrantDelegation="grantDelegation",t.ClaimHandle="claimHandle"})(h0||(h0={}));var p0;(function(t){t.InvalidSignature="Invalid signature",t.ExpiredSignature="Transaction signature is expired",t.UnsupportedExtrinsic="Unsupported extrinsic call",t.InvalidMsaId="Invalid MSA ID",t.SignupKeysMismatch="Signing keys do not match",t.InvalidHex="Expected hex-encoded call",t.ApiNotReady="API is not ready",t.ResponseError="Error from response"})(p0||(p0={}));var m0;(function(t){t.InvalidMessage="Invalid message",t.InvalidSignature="Invalid signature",t.ExpiredSignature="Signature is expired",t.InvalidMsaId="Invalid MSA ID",t.InvalidHex="Expected hex-encoded signature",t.ApiNotReady="API is not ready",t.ResponseError="Error from response"})(m0||(m0={}));const HV=[{name:"profile"},{name:"public-key-key-agreement"},{name:"public-follows"},{name:"private-follows"},{name:"private-connections"}];td.DEV,ed.LOCALHOST;function LV(t){return t("return this")}const na=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:LV(Function);function yu(t,e){return typeof na[t]>"u"?e:na[t]}let RV=class{constructor(t){rt(this,"__encoding"),this.__encoding=t}decode(t){let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);return e}};const BV=yu("TextDecoder",RV);let AV=class{encode(t){const e=t.length,n=new Uint8Array(e);for(let r=0;r<e;r++)n[r]=t.charCodeAt(r);return n}};const CV=yu("TextEncoder",AV);function jV(t){return typeof t=="function"}function UV(){return Number.NaN}const b0=yu("BigInt",UV),dc="0123456789abcdef",As=new Uint8Array(256),vm=new Uint8Array(256*256);for(let t=0,e=dc.length;t<e;t++)As[dc[t].charCodeAt(0)|0]=t|0,t>9&&(As[dc[t].toUpperCase().charCodeAt(0)|0]=t|0);for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)vm[e|n]=As[t]<<4|As[n]}function XV(t,e=-1){if(!t)return new Uint8Array;let n=t.startsWith("0x")?2:0;const r=Math.ceil((t.length-n)/2),a=Math.ceil(e===-1?r:e/8),i=new Uint8Array(a),s=a>r?a-r:0;for(let o=s;o<a;o++,n+=2)i[o]=vm[t.charCodeAt(n)<<8|t.charCodeAt(n+1)];return i}var DV=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function FV(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(r){var a=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(n,r,a.get?a:{enumerable:!0,get:function(){return t[r]}})}),n}var qV={exports:{}};const ZV={},WV=Object.freeze(Object.defineProperty({__proto__:null,default:ZV},Symbol.toStringTag,{value:"Module"})),GV=FV(WV);(function(t){(function(e,n){function r(c,l){if(!c)throw new Error(l||"Assertion failed")}function a(c,l){c.super_=l;var h=function(){};h.prototype=l.prototype,c.prototype=new h,c.prototype.constructor=c}function i(c,l,h){if(i.isBN(c))return c;this.negative=0,this.words=null,this.length=0,this.red=null,c!==null&&((l==="le"||l==="be")&&(h=l,l=10),this._init(c||0,l||10,h||"be"))}typeof e=="object"?e.exports=i:n.BN=i,i.BN=i,i.wordSize=26;var s;try{typeof window<"u"&&typeof window.Buffer<"u"?s=window.Buffer:s=GV.Buffer}catch{}i.isBN=function(c){return c instanceof i?!0:c!==null&&typeof c=="object"&&c.constructor.wordSize===i.wordSize&&Array.isArray(c.words)},i.max=function(c,l){return c.cmp(l)>0?c:l},i.min=function(c,l){return c.cmp(l)<0?c:l},i.prototype._init=function(c,l,h){if(typeof c=="number")return this._initNumber(c,l,h);if(typeof c=="object")return this._initArray(c,l,h);l==="hex"&&(l=16),r(l===(l|0)&&l>=2&&l<=36),c=c.toString().replace(/\s+/g,"");var m=0;c[0]==="-"&&(m++,this.negative=1),m<c.length&&(l===16?this._parseHex(c,m,h):(this._parseBase(c,l,m),h==="le"&&this._initArray(this.toArray(),l,h)))},i.prototype._initNumber=function(c,l,h){c<0&&(this.negative=1,c=-c),c<67108864?(this.words=[c&67108863],this.length=1):c<4503599627370496?(this.words=[c&67108863,c/67108864&67108863],this.length=2):(r(c<9007199254740992),this.words=[c&67108863,c/67108864&67108863,1],this.length=3),h==="le"&&this._initArray(this.toArray(),l,h)},i.prototype._initArray=function(c,l,h){if(r(typeof c.length=="number"),c.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(c.length/3),this.words=new Array(this.length);for(var m=0;m<this.length;m++)this.words[m]=0;var y,v,w=0;if(h==="be")for(m=c.length-1,y=0;m>=0;m-=3)v=c[m]|c[m-1]<<8|c[m-2]<<16,this.words[y]|=v<<w&67108863,this.words[y+1]=v>>>26-w&67108863,w+=24,w>=26&&(w-=26,y++);else if(h==="le")for(m=0,y=0;m<c.length;m+=3)v=c[m]|c[m+1]<<8|c[m+2]<<16,this.words[y]|=v<<w&67108863,this.words[y+1]=v>>>26-w&67108863,w+=24,w>=26&&(w-=26,y++);return this._strip()};function o(c,l){var h=c.charCodeAt(l);if(h>=48&&h<=57)return h-48;if(h>=65&&h<=70)return h-55;if(h>=97&&h<=102)return h-87;r(!1,"Invalid character in "+c)}function d(c,l,h){var m=o(c,h);return h-1>=l&&(m|=o(c,h-1)<<4),m}i.prototype._parseHex=function(c,l,h){this.length=Math.ceil((c.length-l)/6),this.words=new Array(this.length);for(var m=0;m<this.length;m++)this.words[m]=0;var y=0,v=0,w;if(h==="be")for(m=c.length-1;m>=l;m-=2)w=d(c,l,m)<<y,this.words[v]|=w&67108863,y>=18?(y-=18,v+=1,this.words[v]|=w>>>26):y+=8;else{var b=c.length-l;for(m=b%2===0?l+1:l;m<c.length;m+=2)w=d(c,l,m)<<y,this.words[v]|=w&67108863,y>=18?(y-=18,v+=1,this.words[v]|=w>>>26):y+=8}this._strip()};function f(c,l,h,m){for(var y=0,v=0,w=Math.min(c.length,h),b=l;b<w;b++){var u=c.charCodeAt(b)-48;y*=m,u>=49?v=u-49+10:u>=17?v=u-17+10:v=u,r(u>=0&&v<m,"Invalid character"),y+=v}return y}i.prototype._parseBase=function(c,l,h){this.words=[0],this.length=1;for(var m=0,y=1;y<=67108863;y*=l)m++;m--,y=y/l|0;for(var v=c.length-h,w=v%m,b=Math.min(v,v-w)+h,u=0,x=h;x<b;x+=m)u=f(c,x,x+m,l),this.imuln(y),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(w!==0){var R=1;for(u=f(c,x,c.length,l),x=0;x<w;x++)R*=l;this.imuln(R),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this._strip()},i.prototype.copy=function(c){c.words=new Array(this.length);for(var l=0;l<this.length;l++)c.words[l]=this.words[l];c.length=this.length,c.negative=this.negative,c.red=this.red};function p(c,l){c.words=l.words,c.length=l.length,c.negative=l.negative,c.red=l.red}if(i.prototype._move=function(c){p(c,this)},i.prototype.clone=function(){var c=new i(null);return this.copy(c),c},i.prototype._expand=function(c){for(;this.length<c;)this.words[this.length++]=0;return this},i.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},i.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{i.prototype[Symbol.for("nodejs.util.inspect.custom")]=g}catch{i.prototype.inspect=g}else i.prototype.inspect=g;function g(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var P=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],T=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],k=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];i.prototype.toString=function(c,l){c=c||10,l=l|0||1;var h;if(c===16||c==="hex"){h="";for(var m=0,y=0,v=0;v<this.length;v++){var w=this.words[v],b=((w<<m|y)&16777215).toString(16);y=w>>>24-m&16777215,m+=2,m>=26&&(m-=26,v--),y!==0||v!==this.length-1?h=P[6-b.length]+b+h:h=b+h}for(y!==0&&(h=y.toString(16)+h);h.length%l!==0;)h="0"+h;return this.negative!==0&&(h="-"+h),h}if(c===(c|0)&&c>=2&&c<=36){var u=T[c],x=k[c];h="";var R=this.clone();for(R.negative=0;!R.isZero();){var L=R.modrn(x).toString(c);R=R.idivn(x),R.isZero()?h=L+h:h=P[u-L.length]+L+h}for(this.isZero()&&(h="0"+h);h.length%l!==0;)h="0"+h;return this.negative!==0&&(h="-"+h),h}r(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var c=this.words[0];return this.length===2?c+=this.words[1]*67108864:this.length===3&&this.words[2]===1?c+=4503599627370496+this.words[1]*67108864:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-c:c},i.prototype.toJSON=function(){return this.toString(16,2)},s&&(i.prototype.toBuffer=function(c,l){return this.toArrayLike(s,c,l)}),i.prototype.toArray=function(c,l){return this.toArrayLike(Array,c,l)};var M=function(c,l){return c.allocUnsafe?c.allocUnsafe(l):new c(l)};i.prototype.toArrayLike=function(c,l,h){this._strip();var m=this.byteLength(),y=h||Math.max(1,m);r(m<=y,"byte array longer than desired length"),r(y>0,"Requested array length <= 0");var v=M(c,y),w=l==="le"?"LE":"BE";return this["_toArrayLike"+w](v,m),v},i.prototype._toArrayLikeLE=function(c,l){for(var h=0,m=0,y=0,v=0;y<this.length;y++){var w=this.words[y]<<v|m;c[h++]=w&255,h<c.length&&(c[h++]=w>>8&255),h<c.length&&(c[h++]=w>>16&255),v===6?(h<c.length&&(c[h++]=w>>24&255),m=0,v=0):(m=w>>>24,v+=2)}if(h<c.length)for(c[h++]=m;h<c.length;)c[h++]=0},i.prototype._toArrayLikeBE=function(c,l){for(var h=c.length-1,m=0,y=0,v=0;y<this.length;y++){var w=this.words[y]<<v|m;c[h--]=w&255,h>=0&&(c[h--]=w>>8&255),h>=0&&(c[h--]=w>>16&255),v===6?(h>=0&&(c[h--]=w>>24&255),m=0,v=0):(m=w>>>24,v+=2)}if(h>=0)for(c[h--]=m;h>=0;)c[h--]=0},Math.clz32?i.prototype._countBits=function(c){return 32-Math.clz32(c)}:i.prototype._countBits=function(c){var l=c,h=0;return l>=4096&&(h+=13,l>>>=13),l>=64&&(h+=7,l>>>=7),l>=8&&(h+=4,l>>>=4),l>=2&&(h+=2,l>>>=2),h+l},i.prototype._zeroBits=function(c){if(c===0)return 26;var l=c,h=0;return l&8191||(h+=13,l>>>=13),l&127||(h+=7,l>>>=7),l&15||(h+=4,l>>>=4),l&3||(h+=2,l>>>=2),l&1||h++,h},i.prototype.bitLength=function(){var c=this.words[this.length-1],l=this._countBits(c);return(this.length-1)*26+l};function O(c){for(var l=new Array(c.bitLength()),h=0;h<l.length;h++){var m=h/26|0,y=h%26;l[h]=c.words[m]>>>y&1}return l}i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var c=0,l=0;l<this.length;l++){var h=this._zeroBits(this.words[l]);if(c+=h,h!==26)break}return c},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(c){return this.negative!==0?this.abs().inotn(c).iaddn(1):this.clone()},i.prototype.fromTwos=function(c){return this.testn(c-1)?this.notn(c).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return this.negative!==0},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(c){for(;this.length<c.length;)this.words[this.length++]=0;for(var l=0;l<c.length;l++)this.words[l]=this.words[l]|c.words[l];return this._strip()},i.prototype.ior=function(c){return r((this.negative|c.negative)===0),this.iuor(c)},i.prototype.or=function(c){return this.length>c.length?this.clone().ior(c):c.clone().ior(this)},i.prototype.uor=function(c){return this.length>c.length?this.clone().iuor(c):c.clone().iuor(this)},i.prototype.iuand=function(c){var l;this.length>c.length?l=c:l=this;for(var h=0;h<l.length;h++)this.words[h]=this.words[h]&c.words[h];return this.length=l.length,this._strip()},i.prototype.iand=function(c){return r((this.negative|c.negative)===0),this.iuand(c)},i.prototype.and=function(c){return this.length>c.length?this.clone().iand(c):c.clone().iand(this)},i.prototype.uand=function(c){return this.length>c.length?this.clone().iuand(c):c.clone().iuand(this)},i.prototype.iuxor=function(c){var l,h;this.length>c.length?(l=this,h=c):(l=c,h=this);for(var m=0;m<h.length;m++)this.words[m]=l.words[m]^h.words[m];if(this!==l)for(;m<l.length;m++)this.words[m]=l.words[m];return this.length=l.length,this._strip()},i.prototype.ixor=function(c){return r((this.negative|c.negative)===0),this.iuxor(c)},i.prototype.xor=function(c){return this.length>c.length?this.clone().ixor(c):c.clone().ixor(this)},i.prototype.uxor=function(c){return this.length>c.length?this.clone().iuxor(c):c.clone().iuxor(this)},i.prototype.inotn=function(c){r(typeof c=="number"&&c>=0);var l=Math.ceil(c/26)|0,h=c%26;this._expand(l),h>0&&l--;for(var m=0;m<l;m++)this.words[m]=~this.words[m]&67108863;return h>0&&(this.words[m]=~this.words[m]&67108863>>26-h),this._strip()},i.prototype.notn=function(c){return this.clone().inotn(c)},i.prototype.setn=function(c,l){r(typeof c=="number"&&c>=0);var h=c/26|0,m=c%26;return this._expand(h+1),l?this.words[h]=this.words[h]|1<<m:this.words[h]=this.words[h]&~(1<<m),this._strip()},i.prototype.iadd=function(c){var l;if(this.negative!==0&&c.negative===0)return this.negative=0,l=this.isub(c),this.negative^=1,this._normSign();if(this.negative===0&&c.negative!==0)return c.negative=0,l=this.isub(c),c.negative=1,l._normSign();var h,m;this.length>c.length?(h=this,m=c):(h=c,m=this);for(var y=0,v=0;v<m.length;v++)l=(h.words[v]|0)+(m.words[v]|0)+y,this.words[v]=l&67108863,y=l>>>26;for(;y!==0&&v<h.length;v++)l=(h.words[v]|0)+y,this.words[v]=l&67108863,y=l>>>26;if(this.length=h.length,y!==0)this.words[this.length]=y,this.length++;else if(h!==this)for(;v<h.length;v++)this.words[v]=h.words[v];return this},i.prototype.add=function(c){var l;return c.negative!==0&&this.negative===0?(c.negative=0,l=this.sub(c),c.negative^=1,l):c.negative===0&&this.negative!==0?(this.negative=0,l=c.sub(this),this.negative=1,l):this.length>c.length?this.clone().iadd(c):c.clone().iadd(this)},i.prototype.isub=function(c){if(c.negative!==0){c.negative=0;var l=this.iadd(c);return c.negative=1,l._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(c),this.negative=1,this._normSign();var h=this.cmp(c);if(h===0)return this.negative=0,this.length=1,this.words[0]=0,this;var m,y;h>0?(m=this,y=c):(m=c,y=this);for(var v=0,w=0;w<y.length;w++)l=(m.words[w]|0)-(y.words[w]|0)+v,v=l>>26,this.words[w]=l&67108863;for(;v!==0&&w<m.length;w++)l=(m.words[w]|0)+v,v=l>>26,this.words[w]=l&67108863;if(v===0&&w<m.length&&m!==this)for(;w<m.length;w++)this.words[w]=m.words[w];return this.length=Math.max(this.length,w),m!==this&&(this.negative=1),this._strip()},i.prototype.sub=function(c){return this.clone().isub(c)};function V(c,l,h){h.negative=l.negative^c.negative;var m=c.length+l.length|0;h.length=m,m=m-1|0;var y=c.words[0]|0,v=l.words[0]|0,w=y*v,b=w&67108863,u=w/67108864|0;h.words[0]=b;for(var x=1;x<m;x++){for(var R=u>>>26,L=u&67108863,X=Math.min(x,l.length-1),te=Math.max(0,x-c.length+1);te<=X;te++){var Z=x-te|0;y=c.words[Z]|0,v=l.words[te]|0,w=y*v+L,R+=w/67108864|0,L=w&67108863}h.words[x]=L|0,u=R|0}return u!==0?h.words[x]=u|0:h.length--,h._strip()}var N=function(c,l,h){var m=c.words,y=l.words,v=h.words,w=0,b,u,x,R=m[0]|0,L=R&8191,X=R>>>13,te=m[1]|0,Z=te&8191,K=te>>>13,_e=m[2]|0,ae=_e&8191,de=_e>>>13,Re=m[3]|0,ue=Re&8191,se=Re>>>13,ft=m[4]|0,he=ft&8191,Me=ft>>>13,zt=m[5]|0,Te=zt&8191,ce=zt>>>13,Ht=m[6]|0,ye=Ht&8191,be=Ht>>>13,Tt=m[7]|0,xe=Tt&8191,ge=Tt>>>13,St=m[8]|0,ve=St&8191,Se=St>>>13,Lt=m[9]|0,ke=Lt&8191,Oe=Lt>>>13,Jt=y[0]|0,He=Jt&8191,Ne=Jt>>>13,kt=y[1]|0,Be=kt&8191,we=kt>>>13,Ot=y[2]|0,Ie=Ot&8191,Ve=Ot>>>13,jt=y[3]|0,Le=jt&8191,Ee=jt>>>13,_t=y[4]|0,ze=_t&8191,pe=_t>>>13,ja=y[5]|0,Ae=ja&8191,Ce=ja>>>13,Ua=y[6]|0,je=Ua&8191,Ue=Ua>>>13,Xa=y[7]|0,Xe=Xa&8191,De=Xa>>>13,Da=y[8]|0,Fe=Da&8191,qe=Da>>>13,Fa=y[9]|0,Ze=Fa&8191,We=Fa>>>13;h.negative=c.negative^l.negative,h.length=19,b=Math.imul(L,He),u=Math.imul(L,Ne),u=u+Math.imul(X,He)|0,x=Math.imul(X,Ne);var yr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(yr>>>26)|0,yr&=67108863,b=Math.imul(Z,He),u=Math.imul(Z,Ne),u=u+Math.imul(K,He)|0,x=Math.imul(K,Ne),b=b+Math.imul(L,Be)|0,u=u+Math.imul(L,we)|0,u=u+Math.imul(X,Be)|0,x=x+Math.imul(X,we)|0;var xr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(xr>>>26)|0,xr&=67108863,b=Math.imul(ae,He),u=Math.imul(ae,Ne),u=u+Math.imul(de,He)|0,x=Math.imul(de,Ne),b=b+Math.imul(Z,Be)|0,u=u+Math.imul(Z,we)|0,u=u+Math.imul(K,Be)|0,x=x+Math.imul(K,we)|0,b=b+Math.imul(L,Ie)|0,u=u+Math.imul(L,Ve)|0,u=u+Math.imul(X,Ie)|0,x=x+Math.imul(X,Ve)|0;var gr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(gr>>>26)|0,gr&=67108863,b=Math.imul(ue,He),u=Math.imul(ue,Ne),u=u+Math.imul(se,He)|0,x=Math.imul(se,Ne),b=b+Math.imul(ae,Be)|0,u=u+Math.imul(ae,we)|0,u=u+Math.imul(de,Be)|0,x=x+Math.imul(de,we)|0,b=b+Math.imul(Z,Ie)|0,u=u+Math.imul(Z,Ve)|0,u=u+Math.imul(K,Ie)|0,x=x+Math.imul(K,Ve)|0,b=b+Math.imul(L,Le)|0,u=u+Math.imul(L,Ee)|0,u=u+Math.imul(X,Le)|0,x=x+Math.imul(X,Ee)|0;var vr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(vr>>>26)|0,vr&=67108863,b=Math.imul(he,He),u=Math.imul(he,Ne),u=u+Math.imul(Me,He)|0,x=Math.imul(Me,Ne),b=b+Math.imul(ue,Be)|0,u=u+Math.imul(ue,we)|0,u=u+Math.imul(se,Be)|0,x=x+Math.imul(se,we)|0,b=b+Math.imul(ae,Ie)|0,u=u+Math.imul(ae,Ve)|0,u=u+Math.imul(de,Ie)|0,x=x+Math.imul(de,Ve)|0,b=b+Math.imul(Z,Le)|0,u=u+Math.imul(Z,Ee)|0,u=u+Math.imul(K,Le)|0,x=x+Math.imul(K,Ee)|0,b=b+Math.imul(L,ze)|0,u=u+Math.imul(L,pe)|0,u=u+Math.imul(X,ze)|0,x=x+Math.imul(X,pe)|0;var wr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(wr>>>26)|0,wr&=67108863,b=Math.imul(Te,He),u=Math.imul(Te,Ne),u=u+Math.imul(ce,He)|0,x=Math.imul(ce,Ne),b=b+Math.imul(he,Be)|0,u=u+Math.imul(he,we)|0,u=u+Math.imul(Me,Be)|0,x=x+Math.imul(Me,we)|0,b=b+Math.imul(ue,Ie)|0,u=u+Math.imul(ue,Ve)|0,u=u+Math.imul(se,Ie)|0,x=x+Math.imul(se,Ve)|0,b=b+Math.imul(ae,Le)|0,u=u+Math.imul(ae,Ee)|0,u=u+Math.imul(de,Le)|0,x=x+Math.imul(de,Ee)|0,b=b+Math.imul(Z,ze)|0,u=u+Math.imul(Z,pe)|0,u=u+Math.imul(K,ze)|0,x=x+Math.imul(K,pe)|0,b=b+Math.imul(L,Ae)|0,u=u+Math.imul(L,Ce)|0,u=u+Math.imul(X,Ae)|0,x=x+Math.imul(X,Ce)|0;var Pr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Pr>>>26)|0,Pr&=67108863,b=Math.imul(ye,He),u=Math.imul(ye,Ne),u=u+Math.imul(be,He)|0,x=Math.imul(be,Ne),b=b+Math.imul(Te,Be)|0,u=u+Math.imul(Te,we)|0,u=u+Math.imul(ce,Be)|0,x=x+Math.imul(ce,we)|0,b=b+Math.imul(he,Ie)|0,u=u+Math.imul(he,Ve)|0,u=u+Math.imul(Me,Ie)|0,x=x+Math.imul(Me,Ve)|0,b=b+Math.imul(ue,Le)|0,u=u+Math.imul(ue,Ee)|0,u=u+Math.imul(se,Le)|0,x=x+Math.imul(se,Ee)|0,b=b+Math.imul(ae,ze)|0,u=u+Math.imul(ae,pe)|0,u=u+Math.imul(de,ze)|0,x=x+Math.imul(de,pe)|0,b=b+Math.imul(Z,Ae)|0,u=u+Math.imul(Z,Ce)|0,u=u+Math.imul(K,Ae)|0,x=x+Math.imul(K,Ce)|0,b=b+Math.imul(L,je)|0,u=u+Math.imul(L,Ue)|0,u=u+Math.imul(X,je)|0,x=x+Math.imul(X,Ue)|0;var Mr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Mr>>>26)|0,Mr&=67108863,b=Math.imul(xe,He),u=Math.imul(xe,Ne),u=u+Math.imul(ge,He)|0,x=Math.imul(ge,Ne),b=b+Math.imul(ye,Be)|0,u=u+Math.imul(ye,we)|0,u=u+Math.imul(be,Be)|0,x=x+Math.imul(be,we)|0,b=b+Math.imul(Te,Ie)|0,u=u+Math.imul(Te,Ve)|0,u=u+Math.imul(ce,Ie)|0,x=x+Math.imul(ce,Ve)|0,b=b+Math.imul(he,Le)|0,u=u+Math.imul(he,Ee)|0,u=u+Math.imul(Me,Le)|0,x=x+Math.imul(Me,Ee)|0,b=b+Math.imul(ue,ze)|0,u=u+Math.imul(ue,pe)|0,u=u+Math.imul(se,ze)|0,x=x+Math.imul(se,pe)|0,b=b+Math.imul(ae,Ae)|0,u=u+Math.imul(ae,Ce)|0,u=u+Math.imul(de,Ae)|0,x=x+Math.imul(de,Ce)|0,b=b+Math.imul(Z,je)|0,u=u+Math.imul(Z,Ue)|0,u=u+Math.imul(K,je)|0,x=x+Math.imul(K,Ue)|0,b=b+Math.imul(L,Xe)|0,u=u+Math.imul(L,De)|0,u=u+Math.imul(X,Xe)|0,x=x+Math.imul(X,De)|0;var Tr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Tr>>>26)|0,Tr&=67108863,b=Math.imul(ve,He),u=Math.imul(ve,Ne),u=u+Math.imul(Se,He)|0,x=Math.imul(Se,Ne),b=b+Math.imul(xe,Be)|0,u=u+Math.imul(xe,we)|0,u=u+Math.imul(ge,Be)|0,x=x+Math.imul(ge,we)|0,b=b+Math.imul(ye,Ie)|0,u=u+Math.imul(ye,Ve)|0,u=u+Math.imul(be,Ie)|0,x=x+Math.imul(be,Ve)|0,b=b+Math.imul(Te,Le)|0,u=u+Math.imul(Te,Ee)|0,u=u+Math.imul(ce,Le)|0,x=x+Math.imul(ce,Ee)|0,b=b+Math.imul(he,ze)|0,u=u+Math.imul(he,pe)|0,u=u+Math.imul(Me,ze)|0,x=x+Math.imul(Me,pe)|0,b=b+Math.imul(ue,Ae)|0,u=u+Math.imul(ue,Ce)|0,u=u+Math.imul(se,Ae)|0,x=x+Math.imul(se,Ce)|0,b=b+Math.imul(ae,je)|0,u=u+Math.imul(ae,Ue)|0,u=u+Math.imul(de,je)|0,x=x+Math.imul(de,Ue)|0,b=b+Math.imul(Z,Xe)|0,u=u+Math.imul(Z,De)|0,u=u+Math.imul(K,Xe)|0,x=x+Math.imul(K,De)|0,b=b+Math.imul(L,Fe)|0,u=u+Math.imul(L,qe)|0,u=u+Math.imul(X,Fe)|0,x=x+Math.imul(X,qe)|0;var Sr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Sr>>>26)|0,Sr&=67108863,b=Math.imul(ke,He),u=Math.imul(ke,Ne),u=u+Math.imul(Oe,He)|0,x=Math.imul(Oe,Ne),b=b+Math.imul(ve,Be)|0,u=u+Math.imul(ve,we)|0,u=u+Math.imul(Se,Be)|0,x=x+Math.imul(Se,we)|0,b=b+Math.imul(xe,Ie)|0,u=u+Math.imul(xe,Ve)|0,u=u+Math.imul(ge,Ie)|0,x=x+Math.imul(ge,Ve)|0,b=b+Math.imul(ye,Le)|0,u=u+Math.imul(ye,Ee)|0,u=u+Math.imul(be,Le)|0,x=x+Math.imul(be,Ee)|0,b=b+Math.imul(Te,ze)|0,u=u+Math.imul(Te,pe)|0,u=u+Math.imul(ce,ze)|0,x=x+Math.imul(ce,pe)|0,b=b+Math.imul(he,Ae)|0,u=u+Math.imul(he,Ce)|0,u=u+Math.imul(Me,Ae)|0,x=x+Math.imul(Me,Ce)|0,b=b+Math.imul(ue,je)|0,u=u+Math.imul(ue,Ue)|0,u=u+Math.imul(se,je)|0,x=x+Math.imul(se,Ue)|0,b=b+Math.imul(ae,Xe)|0,u=u+Math.imul(ae,De)|0,u=u+Math.imul(de,Xe)|0,x=x+Math.imul(de,De)|0,b=b+Math.imul(Z,Fe)|0,u=u+Math.imul(Z,qe)|0,u=u+Math.imul(K,Fe)|0,x=x+Math.imul(K,qe)|0,b=b+Math.imul(L,Ze)|0,u=u+Math.imul(L,We)|0,u=u+Math.imul(X,Ze)|0,x=x+Math.imul(X,We)|0;var kr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(kr>>>26)|0,kr&=67108863,b=Math.imul(ke,Be),u=Math.imul(ke,we),u=u+Math.imul(Oe,Be)|0,x=Math.imul(Oe,we),b=b+Math.imul(ve,Ie)|0,u=u+Math.imul(ve,Ve)|0,u=u+Math.imul(Se,Ie)|0,x=x+Math.imul(Se,Ve)|0,b=b+Math.imul(xe,Le)|0,u=u+Math.imul(xe,Ee)|0,u=u+Math.imul(ge,Le)|0,x=x+Math.imul(ge,Ee)|0,b=b+Math.imul(ye,ze)|0,u=u+Math.imul(ye,pe)|0,u=u+Math.imul(be,ze)|0,x=x+Math.imul(be,pe)|0,b=b+Math.imul(Te,Ae)|0,u=u+Math.imul(Te,Ce)|0,u=u+Math.imul(ce,Ae)|0,x=x+Math.imul(ce,Ce)|0,b=b+Math.imul(he,je)|0,u=u+Math.imul(he,Ue)|0,u=u+Math.imul(Me,je)|0,x=x+Math.imul(Me,Ue)|0,b=b+Math.imul(ue,Xe)|0,u=u+Math.imul(ue,De)|0,u=u+Math.imul(se,Xe)|0,x=x+Math.imul(se,De)|0,b=b+Math.imul(ae,Fe)|0,u=u+Math.imul(ae,qe)|0,u=u+Math.imul(de,Fe)|0,x=x+Math.imul(de,qe)|0,b=b+Math.imul(Z,Ze)|0,u=u+Math.imul(Z,We)|0,u=u+Math.imul(K,Ze)|0,x=x+Math.imul(K,We)|0;var Or=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Or>>>26)|0,Or&=67108863,b=Math.imul(ke,Ie),u=Math.imul(ke,Ve),u=u+Math.imul(Oe,Ie)|0,x=Math.imul(Oe,Ve),b=b+Math.imul(ve,Le)|0,u=u+Math.imul(ve,Ee)|0,u=u+Math.imul(Se,Le)|0,x=x+Math.imul(Se,Ee)|0,b=b+Math.imul(xe,ze)|0,u=u+Math.imul(xe,pe)|0,u=u+Math.imul(ge,ze)|0,x=x+Math.imul(ge,pe)|0,b=b+Math.imul(ye,Ae)|0,u=u+Math.imul(ye,Ce)|0,u=u+Math.imul(be,Ae)|0,x=x+Math.imul(be,Ce)|0,b=b+Math.imul(Te,je)|0,u=u+Math.imul(Te,Ue)|0,u=u+Math.imul(ce,je)|0,x=x+Math.imul(ce,Ue)|0,b=b+Math.imul(he,Xe)|0,u=u+Math.imul(he,De)|0,u=u+Math.imul(Me,Xe)|0,x=x+Math.imul(Me,De)|0,b=b+Math.imul(ue,Fe)|0,u=u+Math.imul(ue,qe)|0,u=u+Math.imul(se,Fe)|0,x=x+Math.imul(se,qe)|0,b=b+Math.imul(ae,Ze)|0,u=u+Math.imul(ae,We)|0,u=u+Math.imul(de,Ze)|0,x=x+Math.imul(de,We)|0;var Nr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Nr>>>26)|0,Nr&=67108863,b=Math.imul(ke,Le),u=Math.imul(ke,Ee),u=u+Math.imul(Oe,Le)|0,x=Math.imul(Oe,Ee),b=b+Math.imul(ve,ze)|0,u=u+Math.imul(ve,pe)|0,u=u+Math.imul(Se,ze)|0,x=x+Math.imul(Se,pe)|0,b=b+Math.imul(xe,Ae)|0,u=u+Math.imul(xe,Ce)|0,u=u+Math.imul(ge,Ae)|0,x=x+Math.imul(ge,Ce)|0,b=b+Math.imul(ye,je)|0,u=u+Math.imul(ye,Ue)|0,u=u+Math.imul(be,je)|0,x=x+Math.imul(be,Ue)|0,b=b+Math.imul(Te,Xe)|0,u=u+Math.imul(Te,De)|0,u=u+Math.imul(ce,Xe)|0,x=x+Math.imul(ce,De)|0,b=b+Math.imul(he,Fe)|0,u=u+Math.imul(he,qe)|0,u=u+Math.imul(Me,Fe)|0,x=x+Math.imul(Me,qe)|0,b=b+Math.imul(ue,Ze)|0,u=u+Math.imul(ue,We)|0,u=u+Math.imul(se,Ze)|0,x=x+Math.imul(se,We)|0;var Vr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Vr>>>26)|0,Vr&=67108863,b=Math.imul(ke,ze),u=Math.imul(ke,pe),u=u+Math.imul(Oe,ze)|0,x=Math.imul(Oe,pe),b=b+Math.imul(ve,Ae)|0,u=u+Math.imul(ve,Ce)|0,u=u+Math.imul(Se,Ae)|0,x=x+Math.imul(Se,Ce)|0,b=b+Math.imul(xe,je)|0,u=u+Math.imul(xe,Ue)|0,u=u+Math.imul(ge,je)|0,x=x+Math.imul(ge,Ue)|0,b=b+Math.imul(ye,Xe)|0,u=u+Math.imul(ye,De)|0,u=u+Math.imul(be,Xe)|0,x=x+Math.imul(be,De)|0,b=b+Math.imul(Te,Fe)|0,u=u+Math.imul(Te,qe)|0,u=u+Math.imul(ce,Fe)|0,x=x+Math.imul(ce,qe)|0,b=b+Math.imul(he,Ze)|0,u=u+Math.imul(he,We)|0,u=u+Math.imul(Me,Ze)|0,x=x+Math.imul(Me,We)|0;var Ir=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Ir>>>26)|0,Ir&=67108863,b=Math.imul(ke,Ae),u=Math.imul(ke,Ce),u=u+Math.imul(Oe,Ae)|0,x=Math.imul(Oe,Ce),b=b+Math.imul(ve,je)|0,u=u+Math.imul(ve,Ue)|0,u=u+Math.imul(Se,je)|0,x=x+Math.imul(Se,Ue)|0,b=b+Math.imul(xe,Xe)|0,u=u+Math.imul(xe,De)|0,u=u+Math.imul(ge,Xe)|0,x=x+Math.imul(ge,De)|0,b=b+Math.imul(ye,Fe)|0,u=u+Math.imul(ye,qe)|0,u=u+Math.imul(be,Fe)|0,x=x+Math.imul(be,qe)|0,b=b+Math.imul(Te,Ze)|0,u=u+Math.imul(Te,We)|0,u=u+Math.imul(ce,Ze)|0,x=x+Math.imul(ce,We)|0;var Er=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Er>>>26)|0,Er&=67108863,b=Math.imul(ke,je),u=Math.imul(ke,Ue),u=u+Math.imul(Oe,je)|0,x=Math.imul(Oe,Ue),b=b+Math.imul(ve,Xe)|0,u=u+Math.imul(ve,De)|0,u=u+Math.imul(Se,Xe)|0,x=x+Math.imul(Se,De)|0,b=b+Math.imul(xe,Fe)|0,u=u+Math.imul(xe,qe)|0,u=u+Math.imul(ge,Fe)|0,x=x+Math.imul(ge,qe)|0,b=b+Math.imul(ye,Ze)|0,u=u+Math.imul(ye,We)|0,u=u+Math.imul(be,Ze)|0,x=x+Math.imul(be,We)|0;var zr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(zr>>>26)|0,zr&=67108863,b=Math.imul(ke,Xe),u=Math.imul(ke,De),u=u+Math.imul(Oe,Xe)|0,x=Math.imul(Oe,De),b=b+Math.imul(ve,Fe)|0,u=u+Math.imul(ve,qe)|0,u=u+Math.imul(Se,Fe)|0,x=x+Math.imul(Se,qe)|0,b=b+Math.imul(xe,Ze)|0,u=u+Math.imul(xe,We)|0,u=u+Math.imul(ge,Ze)|0,x=x+Math.imul(ge,We)|0;var Hr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Hr>>>26)|0,Hr&=67108863,b=Math.imul(ke,Fe),u=Math.imul(ke,qe),u=u+Math.imul(Oe,Fe)|0,x=Math.imul(Oe,qe),b=b+Math.imul(ve,Ze)|0,u=u+Math.imul(ve,We)|0,u=u+Math.imul(Se,Ze)|0,x=x+Math.imul(Se,We)|0;var Lr=(w+b|0)+((u&8191)<<13)|0;w=(x+(u>>>13)|0)+(Lr>>>26)|0,Lr&=67108863,b=Math.imul(ke,Ze),u=Math.imul(ke,We),u=u+Math.imul(Oe,Ze)|0,x=Math.imul(Oe,We);var Rr=(w+b|0)+((u&8191)<<13)|0;return w=(x+(u>>>13)|0)+(Rr>>>26)|0,Rr&=67108863,v[0]=yr,v[1]=xr,v[2]=gr,v[3]=vr,v[4]=wr,v[5]=Pr,v[6]=Mr,v[7]=Tr,v[8]=Sr,v[9]=kr,v[10]=Or,v[11]=Nr,v[12]=Vr,v[13]=Ir,v[14]=Er,v[15]=zr,v[16]=Hr,v[17]=Lr,v[18]=Rr,w!==0&&(v[19]=w,h.length++),h};Math.imul||(N=V);function E(c,l,h){h.negative=l.negative^c.negative,h.length=c.length+l.length;for(var m=0,y=0,v=0;v<h.length-1;v++){var w=y;y=0;for(var b=m&67108863,u=Math.min(v,l.length-1),x=Math.max(0,v-c.length+1);x<=u;x++){var R=v-x,L=c.words[R]|0,X=l.words[x]|0,te=L*X,Z=te&67108863;w=w+(te/67108864|0)|0,Z=Z+b|0,b=Z&67108863,w=w+(Z>>>26)|0,y+=w>>>26,w&=67108863}h.words[v]=b,m=w,w=y}return m!==0?h.words[v]=m:h.length--,h._strip()}function A(c,l,h){return E(c,l,h)}i.prototype.mulTo=function(c,l){var h,m=this.length+c.length;return this.length===10&&c.length===10?h=N(this,c,l):m<63?h=V(this,c,l):m<1024?h=E(this,c,l):h=A(this,c,l),h},i.prototype.mul=function(c){var l=new i(null);return l.words=new Array(this.length+c.length),this.mulTo(c,l)},i.prototype.mulf=function(c){var l=new i(null);return l.words=new Array(this.length+c.length),A(this,c,l)},i.prototype.imul=function(c){return this.clone().mulTo(c,this)},i.prototype.imuln=function(c){var l=c<0;l&&(c=-c),r(typeof c=="number"),r(c<67108864);for(var h=0,m=0;m<this.length;m++){var y=(this.words[m]|0)*c,v=(y&67108863)+(h&67108863);h>>=26,h+=y/67108864|0,h+=v>>>26,this.words[m]=v&67108863}return h!==0&&(this.words[m]=h,this.length++),l?this.ineg():this},i.prototype.muln=function(c){return this.clone().imuln(c)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(c){var l=O(c);if(l.length===0)return new i(1);for(var h=this,m=0;m<l.length&&l[m]===0;m++,h=h.sqr());if(++m<l.length)for(var y=h.sqr();m<l.length;m++,y=y.sqr())l[m]!==0&&(h=h.mul(y));return h},i.prototype.iushln=function(c){r(typeof c=="number"&&c>=0);var l=c%26,h=(c-l)/26,m=67108863>>>26-l<<26-l,y;if(l!==0){var v=0;for(y=0;y<this.length;y++){var w=this.words[y]&m,b=(this.words[y]|0)-w<<l;this.words[y]=b|v,v=w>>>26-l}v&&(this.words[y]=v,this.length++)}if(h!==0){for(y=this.length-1;y>=0;y--)this.words[y+h]=this.words[y];for(y=0;y<h;y++)this.words[y]=0;this.length+=h}return this._strip()},i.prototype.ishln=function(c){return r(this.negative===0),this.iushln(c)},i.prototype.iushrn=function(c,l,h){r(typeof c=="number"&&c>=0);var m;l?m=(l-l%26)/26:m=0;var y=c%26,v=Math.min((c-y)/26,this.length),w=67108863^67108863>>>y<<y,b=h;if(m-=v,m=Math.max(0,m),b){for(var u=0;u<v;u++)b.words[u]=this.words[u];b.length=v}if(v!==0)if(this.length>v)for(this.length-=v,u=0;u<this.length;u++)this.words[u]=this.words[u+v];else this.words[0]=0,this.length=1;var x=0;for(u=this.length-1;u>=0&&(x!==0||u>=m);u--){var R=this.words[u]|0;this.words[u]=x<<26-y|R>>>y,x=R&w}return b&&x!==0&&(b.words[b.length++]=x),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},i.prototype.ishrn=function(c,l,h){return r(this.negative===0),this.iushrn(c,l,h)},i.prototype.shln=function(c){return this.clone().ishln(c)},i.prototype.ushln=function(c){return this.clone().iushln(c)},i.prototype.shrn=function(c){return this.clone().ishrn(c)},i.prototype.ushrn=function(c){return this.clone().iushrn(c)},i.prototype.testn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,h=(c-l)/26,m=1<<l;if(this.length<=h)return!1;var y=this.words[h];return!!(y&m)},i.prototype.imaskn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,h=(c-l)/26;if(r(this.negative===0,"imaskn works only with positive numbers"),this.length<=h)return this;if(l!==0&&h++,this.length=Math.min(h,this.length),l!==0){var m=67108863^67108863>>>l<<l;this.words[this.length-1]&=m}return this._strip()},i.prototype.maskn=function(c){return this.clone().imaskn(c)},i.prototype.iaddn=function(c){return r(typeof c=="number"),r(c<67108864),c<0?this.isubn(-c):this.negative!==0?this.length===1&&(this.words[0]|0)<=c?(this.words[0]=c-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(c),this.negative=1,this):this._iaddn(c)},i.prototype._iaddn=function(c){this.words[0]+=c;for(var l=0;l<this.length&&this.words[l]>=67108864;l++)this.words[l]-=67108864,l===this.length-1?this.words[l+1]=1:this.words[l+1]++;return this.length=Math.max(this.length,l+1),this},i.prototype.isubn=function(c){if(r(typeof c=="number"),r(c<67108864),c<0)return this.iaddn(-c);if(this.negative!==0)return this.negative=0,this.iaddn(c),this.negative=1,this;if(this.words[0]-=c,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var l=0;l<this.length&&this.words[l]<0;l++)this.words[l]+=67108864,this.words[l+1]-=1;return this._strip()},i.prototype.addn=function(c){return this.clone().iaddn(c)},i.prototype.subn=function(c){return this.clone().isubn(c)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(c,l,h){var m=c.length+h,y;this._expand(m);var v,w=0;for(y=0;y<c.length;y++){v=(this.words[y+h]|0)+w;var b=(c.words[y]|0)*l;v-=b&67108863,w=(v>>26)-(b/67108864|0),this.words[y+h]=v&67108863}for(;y<this.length-h;y++)v=(this.words[y+h]|0)+w,w=v>>26,this.words[y+h]=v&67108863;if(w===0)return this._strip();for(r(w===-1),w=0,y=0;y<this.length;y++)v=-(this.words[y]|0)+w,w=v>>26,this.words[y]=v&67108863;return this.negative=1,this._strip()},i.prototype._wordDiv=function(c,l){var h=this.length-c.length,m=this.clone(),y=c,v=y.words[y.length-1]|0,w=this._countBits(v);h=26-w,h!==0&&(y=y.ushln(h),m.iushln(h),v=y.words[y.length-1]|0);var b=m.length-y.length,u;if(l!=="mod"){u=new i(null),u.length=b+1,u.words=new Array(u.length);for(var x=0;x<u.length;x++)u.words[x]=0}var R=m.clone()._ishlnsubmul(y,1,b);R.negative===0&&(m=R,u&&(u.words[b]=1));for(var L=b-1;L>=0;L--){var X=(m.words[y.length+L]|0)*67108864+(m.words[y.length+L-1]|0);for(X=Math.min(X/v|0,67108863),m._ishlnsubmul(y,X,L);m.negative!==0;)X--,m.negative=0,m._ishlnsubmul(y,1,L),m.isZero()||(m.negative^=1);u&&(u.words[L]=X)}return u&&u._strip(),m._strip(),l!=="div"&&h!==0&&m.iushrn(h),{div:u||null,mod:m}},i.prototype.divmod=function(c,l,h){if(r(!c.isZero()),this.isZero())return{div:new i(0),mod:new i(0)};var m,y,v;return this.negative!==0&&c.negative===0?(v=this.neg().divmod(c,l),l!=="mod"&&(m=v.div.neg()),l!=="div"&&(y=v.mod.neg(),h&&y.negative!==0&&y.iadd(c)),{div:m,mod:y}):this.negative===0&&c.negative!==0?(v=this.divmod(c.neg(),l),l!=="mod"&&(m=v.div.neg()),{div:m,mod:v.mod}):this.negative&c.negative?(v=this.neg().divmod(c.neg(),l),l!=="div"&&(y=v.mod.neg(),h&&y.negative!==0&&y.isub(c)),{div:v.div,mod:y}):c.length>this.length||this.cmp(c)<0?{div:new i(0),mod:this}:c.length===1?l==="div"?{div:this.divn(c.words[0]),mod:null}:l==="mod"?{div:null,mod:new i(this.modrn(c.words[0]))}:{div:this.divn(c.words[0]),mod:new i(this.modrn(c.words[0]))}:this._wordDiv(c,l)},i.prototype.div=function(c){return this.divmod(c,"div",!1).div},i.prototype.mod=function(c){return this.divmod(c,"mod",!1).mod},i.prototype.umod=function(c){return this.divmod(c,"mod",!0).mod},i.prototype.divRound=function(c){var l=this.divmod(c);if(l.mod.isZero())return l.div;var h=l.div.negative!==0?l.mod.isub(c):l.mod,m=c.ushrn(1),y=c.andln(1),v=h.cmp(m);return v<0||y===1&&v===0?l.div:l.div.negative!==0?l.div.isubn(1):l.div.iaddn(1)},i.prototype.modrn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var h=(1<<26)%c,m=0,y=this.length-1;y>=0;y--)m=(h*m+(this.words[y]|0))%c;return l?-m:m},i.prototype.modn=function(c){return this.modrn(c)},i.prototype.idivn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var h=0,m=this.length-1;m>=0;m--){var y=(this.words[m]|0)+h*67108864;this.words[m]=y/c|0,h=y%c}return this._strip(),l?this.ineg():this},i.prototype.divn=function(c){return this.clone().idivn(c)},i.prototype.egcd=function(c){r(c.negative===0),r(!c.isZero());var l=this,h=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var m=new i(1),y=new i(0),v=new i(0),w=new i(1),b=0;l.isEven()&&h.isEven();)l.iushrn(1),h.iushrn(1),++b;for(var u=h.clone(),x=l.clone();!l.isZero();){for(var R=0,L=1;!(l.words[0]&L)&&R<26;++R,L<<=1);if(R>0)for(l.iushrn(R);R-- >0;)(m.isOdd()||y.isOdd())&&(m.iadd(u),y.isub(x)),m.iushrn(1),y.iushrn(1);for(var X=0,te=1;!(h.words[0]&te)&&X<26;++X,te<<=1);if(X>0)for(h.iushrn(X);X-- >0;)(v.isOdd()||w.isOdd())&&(v.iadd(u),w.isub(x)),v.iushrn(1),w.iushrn(1);l.cmp(h)>=0?(l.isub(h),m.isub(v),y.isub(w)):(h.isub(l),v.isub(m),w.isub(y))}return{a:v,b:w,gcd:h.iushln(b)}},i.prototype._invmp=function(c){r(c.negative===0),r(!c.isZero());var l=this,h=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var m=new i(1),y=new i(0),v=h.clone();l.cmpn(1)>0&&h.cmpn(1)>0;){for(var w=0,b=1;!(l.words[0]&b)&&w<26;++w,b<<=1);if(w>0)for(l.iushrn(w);w-- >0;)m.isOdd()&&m.iadd(v),m.iushrn(1);for(var u=0,x=1;!(h.words[0]&x)&&u<26;++u,x<<=1);if(u>0)for(h.iushrn(u);u-- >0;)y.isOdd()&&y.iadd(v),y.iushrn(1);l.cmp(h)>=0?(l.isub(h),m.isub(y)):(h.isub(l),y.isub(m))}var R;return l.cmpn(1)===0?R=m:R=y,R.cmpn(0)<0&&R.iadd(c),R},i.prototype.gcd=function(c){if(this.isZero())return c.abs();if(c.isZero())return this.abs();var l=this.clone(),h=c.clone();l.negative=0,h.negative=0;for(var m=0;l.isEven()&&h.isEven();m++)l.iushrn(1),h.iushrn(1);do{for(;l.isEven();)l.iushrn(1);for(;h.isEven();)h.iushrn(1);var y=l.cmp(h);if(y<0){var v=l;l=h,h=v}else if(y===0||h.cmpn(1)===0)break;l.isub(h)}while(!0);return h.iushln(m)},i.prototype.invm=function(c){return this.egcd(c).a.umod(c)},i.prototype.isEven=function(){return(this.words[0]&1)===0},i.prototype.isOdd=function(){return(this.words[0]&1)===1},i.prototype.andln=function(c){return this.words[0]&c},i.prototype.bincn=function(c){r(typeof c=="number");var l=c%26,h=(c-l)/26,m=1<<l;if(this.length<=h)return this._expand(h+1),this.words[h]|=m,this;for(var y=m,v=h;y!==0&&v<this.length;v++){var w=this.words[v]|0;w+=y,y=w>>>26,w&=67108863,this.words[v]=w}return y!==0&&(this.words[v]=y,this.length++),this},i.prototype.isZero=function(){return this.length===1&&this.words[0]===0},i.prototype.cmpn=function(c){var l=c<0;if(this.negative!==0&&!l)return-1;if(this.negative===0&&l)return 1;this._strip();var h;if(this.length>1)h=1;else{l&&(c=-c),r(c<=67108863,"Number is too big");var m=this.words[0]|0;h=m===c?0:m<c?-1:1}return this.negative!==0?-h|0:h},i.prototype.cmp=function(c){if(this.negative!==0&&c.negative===0)return-1;if(this.negative===0&&c.negative!==0)return 1;var l=this.ucmp(c);return this.negative!==0?-l|0:l},i.prototype.ucmp=function(c){if(this.length>c.length)return 1;if(this.length<c.length)return-1;for(var l=0,h=this.length-1;h>=0;h--){var m=this.words[h]|0,y=c.words[h]|0;if(m!==y){m<y?l=-1:m>y&&(l=1);break}}return l},i.prototype.gtn=function(c){return this.cmpn(c)===1},i.prototype.gt=function(c){return this.cmp(c)===1},i.prototype.gten=function(c){return this.cmpn(c)>=0},i.prototype.gte=function(c){return this.cmp(c)>=0},i.prototype.ltn=function(c){return this.cmpn(c)===-1},i.prototype.lt=function(c){return this.cmp(c)===-1},i.prototype.lten=function(c){return this.cmpn(c)<=0},i.prototype.lte=function(c){return this.cmp(c)<=0},i.prototype.eqn=function(c){return this.cmpn(c)===0},i.prototype.eq=function(c){return this.cmp(c)===0},i.red=function(c){return new C(c)},i.prototype.toRed=function(c){return r(!this.red,"Already a number in reduction context"),r(this.negative===0,"red works only with positives"),c.convertTo(this)._forceRed(c)},i.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(c){return this.red=c,this},i.prototype.forceRed=function(c){return r(!this.red,"Already a number in reduction context"),this._forceRed(c)},i.prototype.redAdd=function(c){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,c)},i.prototype.redIAdd=function(c){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,c)},i.prototype.redSub=function(c){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,c)},i.prototype.redISub=function(c){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,c)},i.prototype.redShl=function(c){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,c)},i.prototype.redMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.mul(this,c)},i.prototype.redIMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.imul(this,c)},i.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(c){return r(this.red&&!c.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,c)};var H={k256:null,p224:null,p192:null,p25519:null};function z(c,l){this.name=c,this.p=new i(l,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}z.prototype._tmp=function(){var c=new i(null);return c.words=new Array(Math.ceil(this.n/13)),c},z.prototype.ireduce=function(c){var l=c,h;do this.split(l,this.tmp),l=this.imulK(l),l=l.iadd(this.tmp),h=l.bitLength();while(h>this.n);var m=h<this.n?-1:l.ucmp(this.p);return m===0?(l.words[0]=0,l.length=1):m>0?l.isub(this.p):l.strip!==void 0?l.strip():l._strip(),l},z.prototype.split=function(c,l){c.iushrn(this.n,0,l)},z.prototype.imulK=function(c){return c.imul(this.k)};function B(){z.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}a(B,z),B.prototype.split=function(c,l){for(var h=4194303,m=Math.min(c.length,9),y=0;y<m;y++)l.words[y]=c.words[y];if(l.length=m,c.length<=9){c.words[0]=0,c.length=1;return}var v=c.words[9];for(l.words[l.length++]=v&h,y=10;y<c.length;y++){var w=c.words[y]|0;c.words[y-10]=(w&h)<<4|v>>>22,v=w}v>>>=22,c.words[y-10]=v,v===0&&c.length>10?c.length-=10:c.length-=9},B.prototype.imulK=function(c){c.words[c.length]=0,c.words[c.length+1]=0,c.length+=2;for(var l=0,h=0;h<c.length;h++){var m=c.words[h]|0;l+=m*977,c.words[h]=l&67108863,l=m*64+(l/67108864|0)}return c.words[c.length-1]===0&&(c.length--,c.words[c.length-1]===0&&c.length--),c};function F(){z.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}a(F,z);function ee(){z.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}a(ee,z);function W(){z.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}a(W,z),W.prototype.imulK=function(c){for(var l=0,h=0;h<c.length;h++){var m=(c.words[h]|0)*19+l,y=m&67108863;m>>>=26,c.words[h]=y,l=m}return l!==0&&(c.words[c.length++]=l),c},i._prime=function(c){if(H[c])return H[c];var l;if(c==="k256")l=new B;else if(c==="p224")l=new F;else if(c==="p192")l=new ee;else if(c==="p25519")l=new W;else throw new Error("Unknown prime "+c);return H[c]=l,l};function C(c){if(typeof c=="string"){var l=i._prime(c);this.m=l.p,this.prime=l}else r(c.gtn(1),"modulus must be greater than 1"),this.m=c,this.prime=null}C.prototype._verify1=function(c){r(c.negative===0,"red works only with positives"),r(c.red,"red works only with red numbers")},C.prototype._verify2=function(c,l){r((c.negative|l.negative)===0,"red works only with positives"),r(c.red&&c.red===l.red,"red works only with red numbers")},C.prototype.imod=function(c){return this.prime?this.prime.ireduce(c)._forceRed(this):(p(c,c.umod(this.m)._forceRed(this)),c)},C.prototype.neg=function(c){return c.isZero()?c.clone():this.m.sub(c)._forceRed(this)},C.prototype.add=function(c,l){this._verify2(c,l);var h=c.add(l);return h.cmp(this.m)>=0&&h.isub(this.m),h._forceRed(this)},C.prototype.iadd=function(c,l){this._verify2(c,l);var h=c.iadd(l);return h.cmp(this.m)>=0&&h.isub(this.m),h},C.prototype.sub=function(c,l){this._verify2(c,l);var h=c.sub(l);return h.cmpn(0)<0&&h.iadd(this.m),h._forceRed(this)},C.prototype.isub=function(c,l){this._verify2(c,l);var h=c.isub(l);return h.cmpn(0)<0&&h.iadd(this.m),h},C.prototype.shl=function(c,l){return this._verify1(c),this.imod(c.ushln(l))},C.prototype.imul=function(c,l){return this._verify2(c,l),this.imod(c.imul(l))},C.prototype.mul=function(c,l){return this._verify2(c,l),this.imod(c.mul(l))},C.prototype.isqr=function(c){return this.imul(c,c.clone())},C.prototype.sqr=function(c){return this.mul(c,c)},C.prototype.sqrt=function(c){if(c.isZero())return c.clone();var l=this.m.andln(3);if(r(l%2===1),l===3){var h=this.m.add(new i(1)).iushrn(2);return this.pow(c,h)}for(var m=this.m.subn(1),y=0;!m.isZero()&&m.andln(1)===0;)y++,m.iushrn(1);r(!m.isZero());var v=new i(1).toRed(this),w=v.redNeg(),b=this.m.subn(1).iushrn(1),u=this.m.bitLength();for(u=new i(2*u*u).toRed(this);this.pow(u,b).cmp(w)!==0;)u.redIAdd(w);for(var x=this.pow(u,m),R=this.pow(c,m.addn(1).iushrn(1)),L=this.pow(c,m),X=y;L.cmp(v)!==0;){for(var te=L,Z=0;te.cmp(v)!==0;Z++)te=te.redSqr();r(Z<X);var K=this.pow(x,new i(1).iushln(X-Z-1));R=R.redMul(K),x=K.redSqr(),L=L.redMul(x),X=Z}return R},C.prototype.invm=function(c){var l=c._invmp(this.m);return l.negative!==0?(l.negative=0,this.imod(l).redNeg()):this.imod(l)},C.prototype.pow=function(c,l){if(l.isZero())return new i(1).toRed(this);if(l.cmpn(1)===0)return c.clone();var h=4,m=new Array(1<<h);m[0]=new i(1).toRed(this),m[1]=c;for(var y=2;y<m.length;y++)m[y]=this.mul(m[y-1],c);var v=m[0],w=0,b=0,u=l.bitLength()%26;for(u===0&&(u=26),y=l.length-1;y>=0;y--){for(var x=l.words[y],R=u-1;R>=0;R--){var L=x>>R&1;if(v!==m[0]&&(v=this.sqr(v)),L===0&&w===0){b=0;continue}w<<=1,w|=L,b++,!(b!==h&&(y!==0||R!==0))&&(v=this.mul(v,m[w]),b=0,w=0)}u=26}return v},C.prototype.convertTo=function(c){var l=c.umod(this.m);return l===c?l.clone():l},C.prototype.convertFrom=function(c){var l=c.clone();return l.red=null,l},i.mont=function(c){return new oe(c)};function oe(c){C.call(this,c),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}a(oe,C),oe.prototype.convertTo=function(c){return this.imod(c.ushln(this.shift))},oe.prototype.convertFrom=function(c){var l=this.imod(c.mul(this.rinv));return l.red=null,l},oe.prototype.imul=function(c,l){if(c.isZero()||l.isZero())return c.words[0]=0,c.length=1,c;var h=c.imul(l),m=h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),y=h.isub(m).iushrn(this.shift),v=y;return y.cmp(this.m)>=0?v=y.isub(this.m):y.cmpn(0)<0&&(v=y.iadd(this.m)),v._forceRed(this)},oe.prototype.mul=function(c,l){if(c.isZero()||l.isZero())return new i(0)._forceRed(this);var h=c.mul(l),m=h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),y=h.isub(m).iushrn(this.shift),v=y;return y.cmp(this.m)>=0?v=y.isub(this.m):y.cmpn(0)<0&&(v=y.iadd(this.m)),v._forceRed(this)},oe.prototype.invm=function(c){var l=this.imod(c._invmp(this.m).mul(this.r2));return l._forceRed(this)}})(t,DV)})(qV);const KV=/^0x[\da-fA-F]+$/;function YV(t,e=-1,n){return typeof t=="string"&&(t==="0x"||KV.test(t))&&(e===-1?t.length%2===0:t.length===2+Math.ceil(e/4))}typeof b0=="function"&&b0.asIntN;const JV=typeof na.Buffer=="function"&&typeof na.Buffer.isBuffer=="function";na.process;function _V(t){return JV&&!!t&&jV(t.readDoubleLE)&&na.Buffer.isBuffer(t)}function QV(t){return(t&&t.constructor)===Uint8Array||t instanceof Uint8Array}const $V=new CV;function xu(t){return t?$V.encode(t.toString()):new Uint8Array}function wm(t){return QV(t)?_V(t)?new Uint8Array(t):t:YV(t)?XV(t):Array.isArray(t)?new Uint8Array(t):xu(t)}const nd=new Array(256),eI=new Array(256*256);for(let t=0;t<256;t++)nd[t]=t.toString(16).padStart(2,"0");for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)eI[e|n]=nd[t]+nd[n]}const tI=new BV("utf-8");function y0(t){return t?tI.decode(t):""}const nI=wm("<Bytes>"),rI=wm("</Bytes>");nI.length+rI.length;const aI=na.crypto;function iI(t){return aI.getRandomValues(t)}const fs={getRandomValues:iI},sI={crypto:fs};class oI{constructor(e){rt(this,"__internal__bridge"),rt(this,"abort",()=>{throw new Error("abort")}),rt(this,"__wbindgen_is_undefined",n=>this.__internal__bridge.getObject(n)===void 0),rt(this,"__wbindgen_throw",(n,r)=>{throw new Error(this.__internal__bridge.getString(n,r))}),rt(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(sI)),rt(this,"__wbg_require_604837428532a733",(n,r)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(n,r)}`)}),rt(this,"__wbg_crypto_968f1772287e2df0",n=>this.__internal__bridge.addObject(fs)),rt(this,"__wbg_getRandomValues_a3d34b4fee3c2869",n=>this.__internal__bridge.addObject(fs.getRandomValues)),rt(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(n,r,a)=>{fs.getRandomValues(this.__internal__bridge.getU8a(r,a))}),rt(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(n,r,a)=>{throw new Error("randomFillsync is not available")}),rt(this,"__wbindgen_object_drop_ref",n=>{this.__internal__bridge.takeObject(n)}),this.__internal__bridge=e}}class cI{constructor(e){rt(this,"__internal__createWasm"),rt(this,"__internal__heap"),rt(this,"__internal__wbg"),rt(this,"__internal__cachegetInt32"),rt(this,"__internal__cachegetUint8"),rt(this,"__internal__heapNext"),rt(this,"__internal__wasm"),rt(this,"__internal__wasmError"),rt(this,"__internal__wasmPromise"),rt(this,"__internal__type"),this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new oI(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){(!this.__internal__wasmPromise||e)&&(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:n,type:r,wasm:a}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=a,this.__internal__wasmError=n,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const n=this.getObject(e);return this.dropObject(e),n}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const n=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[n],this.__internal__heap[n]=e,n}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,n){return this.getUint8().subarray(e/1,e/1+n)}getString(e,n){return y0(this.getU8a(e,n))}allocU8a(e){const n=this.__internal__wasm.__wbindgen_malloc(e.length*1);return this.getUint8().set(e,n/1),[n,e.length]}allocString(e){return this.allocU8a(xu(e))}resultU8a(){const e=this.getInt32()[2],n=this.getInt32()[8/4+1],r=this.getU8a(e,n).slice();return this.__internal__wasm.__wbindgen_free(e,n*1),r}resultString(){return y0(this.resultU8a())}}function dI(t,e,n){return async r=>{const a={error:null,type:"none",wasm:null};try{if(e!=null&&e.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const i=await WebAssembly.instantiate(e,{wbg:r});a.wasm=i.instance.exports,a.type="wasm"}catch(i){a.error=`FATAL: Unable to initialize @polkadot/wasm-${t}:: ${i.message}`,console.error(a.error)}return a}}const x0="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Pm=new Array(256);for(let t=0,e=x0.length;t<e;t++)Pm[x0.charCodeAt(t)]=t;function uI(t,e){let n=0,r=0,a=-1;for(let i=0,s=e.length-1;a!==s;i++)n=n<<6|Pm[t.charCodeAt(i)],(r+=6)>=8&&(e[++a]=n>>>(r-=8)&255);return e}const Nn=Uint8Array,Jr=Uint16Array,rd=Uint32Array,lI=new Nn([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Mm=new Nn([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Tm=new Nn([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Sm=(t,e)=>{const n=new Jr(31);for(let a=0;a<31;++a)n[a]=e+=1<<t[a-1];const r=new rd(n[30]);for(let a=1;a<30;++a)for(let i=n[a];i<n[a+1];++i)r[i]=i-n[a]<<5|a;return[n,r]},[km,fI]=Sm(Mm,2);km[28]=258,fI[258]=28;const[hI]=Sm(Tm,0),Om=new Jr(32768);for(let t=0;t<32768;++t){let e=(t&43690)>>>1|(t&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,Om[t]=((e&65280)>>>8|(e&255)<<8)>>>1}const li=(t,e,n)=>{const r=t.length;let a=0;const i=new Jr(e);for(;a<r;++a)t[a]&&++i[t[a]-1];const s=new Jr(e);for(a=1;a<e;++a)s[a]=s[a-1]+i[a-1]<<1;let o;{o=new Jr(1<<e);const d=15-e;for(a=0;a<r;++a)if(t[a]){const f=a<<4|t[a],p=e-t[a];let g=s[t[a]-1]++<<p;for(const P=g|(1<<p)-1;g<=P;++g)o[Om[g]>>d]=f}}return o},ji=new Nn(288);for(let t=0;t<144;++t)ji[t]=8;for(let t=144;t<256;++t)ji[t]=9;for(let t=256;t<280;++t)ji[t]=7;for(let t=280;t<288;++t)ji[t]=8;const Nm=new Nn(32);for(let t=0;t<32;++t)Nm[t]=5;const pI=li(ji,9),mI=li(Nm,5),ln=(t,e,n)=>{const r=e>>>3;return(t[r]|t[r+1]<<8)>>>(e&7)&n},uc=(t,e)=>{const n=e>>>3;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>>(e&7)},bI=t=>(t>>>3)+(t&7&&1),yI=(t,e,n)=>{(n==null||n>t.length)&&(n=t.length);const r=new(t instanceof Jr?Jr:t instanceof rd?rd:Nn)(n-e);return r.set(t.subarray(e,n)),r},lc=t=>{let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e},xI=(t,e,n)=>{const r=!n||n.i;n||(n={});const a=t.length,i=!e||!r;e||(e=new Nn(a*3));const s=M=>{let O=e.length;if(M>O){const V=new Nn(Math.max(O<<1,M));V.set(e),e=V}};let o=n.f||0,d=n.p||0,f=n.b||0,p=n.l,g=n.d,P=n.m,T=n.n;if(o&&!p)return e;const k=a<<3;do{if(!p){n.f=o=ln(t,d,1);const N=ln(t,d+1,3);if(d+=3,N)if(N==1)p=pI,g=mI,P=9,T=5;else if(N==2){const E=ln(t,d,31)+257,A=ln(t,d+10,15)+4,H=E+ln(t,d+5,31)+1;d+=14;const z=new Nn(H),B=new Nn(19);for(let c=0;c<A;++c)B[lI[c]]=ln(t,d+c*3,7);d+=A*3;const F=lc(B),ee=(1<<F)-1;if(!r&&d+H*(F+7)>k)break;const W=li(B,F);for(let c=0;c<H;){const l=W[ln(t,d,ee)];d+=l&15;const h=l>>>4;if(h<16)z[c++]=h;else{let m=0,y=0;for(h==16?(y=3+ln(t,d,3),d+=2,m=z[c-1]):h==17?(y=3+ln(t,d,7),d+=3):h==18&&(y=11+ln(t,d,127),d+=7);y--;)z[c++]=m}}const C=z.subarray(0,E),oe=z.subarray(E);P=lc(C),T=lc(oe),p=li(C,P),g=li(oe,T)}else throw"invalid block type";else{const E=bI(d)+4,A=t[E-4]|t[E-3]<<8,H=E+A;if(H>a){if(r)throw"unexpected EOF";break}i&&s(f+A),e.set(t.subarray(E,H),f),n.b=f+=A,n.p=d=H<<3;continue}if(d>k)throw"unexpected EOF"}i&&s(f+131072);const M=(1<<P)-1,O=(1<<T)-1,V=P+T+18;for(;r||d+V<k;){const N=p[uc(t,d)&M],E=N>>>4;if(d+=N&15,d>k)throw"unexpected EOF";if(!N)throw"invalid length/literal";if(E<256)e[f++]=E;else if(E==256){p=void 0;break}else{let A=E-254;if(E>264){const ee=E-257,W=Mm[ee];A=ln(t,d,(1<<W)-1)+km[ee],d+=W}const H=g[uc(t,d)&O],z=H>>>4;if(!H)throw"invalid distance";d+=H&15;let B=hI[z];if(z>3){const ee=Tm[z];B+=uc(t,d)&(1<<ee)-1,d+=ee}if(d>k)throw"unexpected EOF";i&&s(f+131072);const F=f+A;for(;f<F;f+=4)e[f]=e[f-B],e[f+1]=e[f+1-B],e[f+2]=e[f+2-B],e[f+3]=e[f+3-B];f=F}}n.l=p,n.p=d,n.b=f,p&&(o=1,n.m=P,n.d=g,n.n=T)}while(!o);return f==e.length?e:yI(e,0,f)},gI=t=>{if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function vI(t,e){return xI((gI(t),t.subarray(2,-4)),e)}var wI=171008,PI=339468,MI="";const TI=vI(uI(MI,new Uint8Array(wI)),new Uint8Array(PI)),SI=dI("crypto",TI);new cI(SI);function g0(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`positive integer expected, not ${t}`)}function kI(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function yo(t,...e){if(!kI(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${t.length}`)}function OI(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");g0(t.outputLen),g0(t.blockLen)}function Cs(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function NI(t,e){yo(t);const n=e.outputLen;if(t.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}const fc=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const hc=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),Tn=(t,e)=>t<<32-e|t>>>e;new Uint8Array(new Uint32Array([287454020]).buffer)[0];function VI(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function gu(t){return typeof t=="string"&&(t=VI(t)),yo(t),t}function II(...t){let e=0;for(let r=0;r<t.length;r++){const a=t[r];yo(a),e+=a.length}const n=new Uint8Array(e);for(let r=0,a=0;r<t.length;r++){const i=t[r];n.set(i,a),a+=i.length}return n}class Vm{clone(){return this._cloneInto()}}function Im(t){const e=r=>t().update(gu(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function Em(t=32){if(fc&&typeof fc.getRandomValues=="function")return fc.getRandomValues(new Uint8Array(t));throw new Error("crypto.getRandomValues must be defined")}const ns=BigInt(2**32-1),ad=BigInt(32);function zm(t,e=!1){return e?{h:Number(t&ns),l:Number(t>>ad&ns)}:{h:Number(t>>ad&ns)|0,l:Number(t&ns)|0}}function EI(t,e=!1){let n=new Uint32Array(t.length),r=new Uint32Array(t.length);for(let a=0;a<t.length;a++){const{h:i,l:s}=zm(t[a],e);[n[a],r[a]]=[i,s]}return[n,r]}const zI=(t,e)=>BigInt(t>>>0)<<ad|BigInt(e>>>0),HI=(t,e,n)=>t>>>n,LI=(t,e,n)=>t<<32-n|e>>>n,RI=(t,e,n)=>t>>>n|e<<32-n,BI=(t,e,n)=>t<<32-n|e>>>n,AI=(t,e,n)=>t<<64-n|e>>>n-32,CI=(t,e,n)=>t>>>n-32|e<<64-n,jI=(t,e)=>e,UI=(t,e)=>t,XI=(t,e,n)=>t<<n|e>>>32-n,DI=(t,e,n)=>e<<n|t>>>32-n,FI=(t,e,n)=>e<<n-32|t>>>64-n,qI=(t,e,n)=>t<<n-32|e>>>64-n;function ZI(t,e,n,r){const a=(e>>>0)+(r>>>0);return{h:t+n+(a/2**32|0)|0,l:a|0}}const WI=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),GI=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,KI=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),YI=(t,e,n,r,a)=>e+n+r+a+(t/2**32|0)|0,JI=(t,e,n,r,a)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(a>>>0),_I=(t,e,n,r,a,i)=>e+n+r+a+i+(t/2**32|0)|0,Ge={fromBig:zm,split:EI,toBig:zI,shrSH:HI,shrSL:LI,rotrSH:RI,rotrSL:BI,rotrBH:AI,rotrBL:CI,rotr32H:jI,rotr32L:UI,rotlSH:XI,rotlSL:DI,rotlBH:FI,rotlBL:qI,add:ZI,add3L:WI,add3H:GI,add4L:KI,add4H:YI,add5H:_I,add5L:JI};xu("SS58PRE");const QI=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],$I={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},eE={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},tE={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,enjin:1155,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,pendulum:354,phala:354,picasso:434,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vtb:694,xxnetwork:1955,zeitgeist:354},nE={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},v0=[0,2,42],rE=["testnet"];function aE(t){var e,n;const r=t.network||"",a=r.replace(/_/g,"-").split("-"),i=t;return i.slip44=tE[r],i.hasLedgerSupport=!!i.slip44,i.genesisHash=$I[r]||[],i.icon=eE[r]||"substrate",i.isTestnet=!!nE[r]||rE.includes(a[a.length-1]),i.isIgnored=i.isTestnet||!(t.standardAccount&&(e=t.decimals)!=null&&e.length&&(n=t.symbols)!=null&&n.length)&&t.prefix!==42,i}function iE({genesisHash:t,prefix:e}){return!!t.length||e===42}function sE(t){return!t.isIgnored&&!!t.network}function oE(t,e){const n=v0.includes(t.prefix),r=v0.includes(e.prefix);return n===r?n?0:t.displayName.localeCompare(e.displayName):n?-1:1}const cE=QI.map(aE),dE=cE.filter(sE).sort(oE);dE.filter(iE);function uE(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const a=BigInt(32),i=BigInt(4294967295),s=Number(n>>a&i),o=Number(n&i),d=r?4:0,f=r?0:4;t.setUint32(e+d,s,r),t.setUint32(e+f,o,r)}const lE=(t,e,n)=>t&e^~t&n,fE=(t,e,n)=>t&e^t&n^e&n;class Hm extends Vm{constructor(e,n,r,a){super(),this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=a,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=hc(this.buffer)}update(e){Cs(this);const{view:n,buffer:r,blockLen:a}=this;e=gu(e);const i=e.length;for(let s=0;s<i;){const o=Math.min(a-this.pos,i-s);if(o===a){const d=hc(e);for(;a<=i-s;s+=a)this.process(d,s);continue}r.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===a&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Cs(this),NI(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:a,isLE:i}=this;let{pos:s}=this;n[s++]=128,this.buffer.subarray(s).fill(0),this.padOffset>a-s&&(this.process(r,0),s=0);for(let g=s;g<a;g++)n[g]=0;uE(r,a-8,BigInt(this.length*8),i),this.process(r,0);const o=hc(e),d=this.outputLen;if(d%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const f=d/4,p=this.get();if(f>p.length)throw new Error("_sha2: outputLen bigger than state");for(let g=0;g<f;g++)o.setUint32(4*g,p[g],i)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:a,finished:i,destroyed:s,pos:o}=this;return e.length=a,e.pos=o,e.finished=i,e.destroyed=s,a%n&&e.buffer.set(r),e}}const hE=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),ar=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),ir=new Uint32Array(64);class pE extends Hm{constructor(){super(64,32,8,!1),this.A=ar[0]|0,this.B=ar[1]|0,this.C=ar[2]|0,this.D=ar[3]|0,this.E=ar[4]|0,this.F=ar[5]|0,this.G=ar[6]|0,this.H=ar[7]|0}get(){const{A:e,B:n,C:r,D:a,E:i,F:s,G:o,H:d}=this;return[e,n,r,a,i,s,o,d]}set(e,n,r,a,i,s,o,d){this.A=e|0,this.B=n|0,this.C=r|0,this.D=a|0,this.E=i|0,this.F=s|0,this.G=o|0,this.H=d|0}process(e,n){for(let g=0;g<16;g++,n+=4)ir[g]=e.getUint32(n,!1);for(let g=16;g<64;g++){const P=ir[g-15],T=ir[g-2],k=Tn(P,7)^Tn(P,18)^P>>>3,M=Tn(T,17)^Tn(T,19)^T>>>10;ir[g]=M+ir[g-7]+k+ir[g-16]|0}let{A:r,B:a,C:i,D:s,E:o,F:d,G:f,H:p}=this;for(let g=0;g<64;g++){const P=Tn(o,6)^Tn(o,11)^Tn(o,25),T=p+P+lE(o,d,f)+hE[g]+ir[g]|0,k=(Tn(r,2)^Tn(r,13)^Tn(r,22))+fE(r,a,i)|0;p=f,f=d,d=o,o=s+T|0,s=i,i=a,a=r,r=T+k|0}r=r+this.A|0,a=a+this.B|0,i=i+this.C|0,s=s+this.D|0,o=o+this.E|0,d=d+this.F|0,f=f+this.G|0,p=p+this.H|0,this.set(r,a,i,s,o,d,f,p)}roundClean(){ir.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const mE=Im(()=>new pE);class Lm extends Vm{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,OI(e);const r=gu(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const a=this.blockLen,i=new Uint8Array(a);i.set(r.length>a?e.create().update(r).digest():r);for(let s=0;s<i.length;s++)i[s]^=54;this.iHash.update(i),this.oHash=e.create();for(let s=0;s<i.length;s++)i[s]^=106;this.oHash.update(i),i.fill(0)}update(e){return Cs(this),this.iHash.update(e),this}digestInto(e){Cs(this),yo(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:a,destroyed:i,blockLen:s,outputLen:o}=this;return e=e,e.finished=a,e.destroyed=i,e.blockLen=s,e.outputLen=o,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const Rm=(t,e,n)=>new Lm(t,e).update(n).digest();Rm.create=(t,e)=>new Lm(t,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Bm=BigInt(0),xo=BigInt(1),bE=BigInt(2);function ra(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function Ui(t){if(!ra(t))throw new Error("Uint8Array expected")}const yE=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function aa(t){Ui(t);let e="";for(let n=0;n<t.length;n++)e+=yE[t[n]];return e}function Am(t){const e=t.toString(16);return e.length&1?`0${e}`:e}function vu(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return BigInt(t===""?"0":`0x${t}`)}const zn={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function w0(t){if(t>=zn._0&&t<=zn._9)return t-zn._0;if(t>=zn._A&&t<=zn._F)return t-(zn._A-10);if(t>=zn._a&&t<=zn._f)return t-(zn._a-10)}function Ea(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);const e=t.length,n=e/2;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let a=0,i=0;a<n;a++,i+=2){const s=w0(t.charCodeAt(i)),o=w0(t.charCodeAt(i+1));if(s===void 0||o===void 0){const d=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character "'+d+'" at index '+i)}r[a]=s*16+o}return r}function _r(t){return vu(aa(t))}function va(t){return Ui(t),vu(aa(Uint8Array.from(t).reverse()))}function za(t,e){return Ea(t.toString(16).padStart(e*2,"0"))}function Pi(t,e){return za(t,e).reverse()}function xE(t){return Ea(Am(t))}function pt(t,e,n){let r;if(typeof e=="string")try{r=Ea(e)}catch(i){throw new Error(`${t} must be valid hex string, got "${e}". Cause: ${i}`)}else if(ra(e))r=Uint8Array.from(e);else throw new Error(`${t} must be hex string or Uint8Array`);const a=r.length;if(typeof n=="number"&&a!==n)throw new Error(`${t} expected ${n} bytes, got ${a}`);return r}function ia(...t){let e=0;for(let r=0;r<t.length;r++){const a=t[r];Ui(a),e+=a.length}const n=new Uint8Array(e);for(let r=0,a=0;r<t.length;r++){const i=t[r];n.set(i,a),a+=i.length}return n}function gE(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return n===0}function vE(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function wE(t){let e;for(e=0;t>Bm;t>>=xo,e+=1);return e}function PE(t,e){return t>>BigInt(e)&xo}function ME(t,e,n){return t|(n?xo:Bm)<<BigInt(e)}const wu=t=>(bE<<BigInt(t-1))-xo,pc=t=>new Uint8Array(t),P0=t=>Uint8Array.from(t);function Cm(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");let r=pc(t),a=pc(t),i=0;const s=()=>{r.fill(1),a.fill(0),i=0},o=(...p)=>n(a,r,...p),d=(p=pc())=>{a=o(P0([0]),p),r=o(),p.length!==0&&(a=o(P0([1]),p),r=o())},f=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let p=0;const g=[];for(;p<e;){r=o();const P=r.slice();g.push(P),p+=r.length}return ia(...g)};return(p,g)=>{s(),d(p);let P;for(;!(P=g(f()));)d();return s(),P}}const TE={bigint:t=>typeof t=="bigint",function:t=>typeof t=="function",boolean:t=>typeof t=="boolean",string:t=>typeof t=="string",stringOrUint8Array:t=>typeof t=="string"||ra(t),isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>typeof t=="function"&&Number.isSafeInteger(t.outputLen)};function Ca(t,e,n={}){const r=(a,i,s)=>{const o=TE[i];if(typeof o!="function")throw new Error(`Invalid validator "${i}", expected function`);const d=t[a];if(!(s&&d===void 0)&&!o(d,t))throw new Error(`Invalid param ${String(a)}=${d} (${typeof d}), expected ${i}`)};for(const[a,i]of Object.entries(e))r(a,i,!1);for(const[a,i]of Object.entries(n))r(a,i,!0);return t}const SE=Object.freeze(Object.defineProperty({__proto__:null,abytes:Ui,bitGet:PE,bitLen:wE,bitMask:wu,bitSet:ME,bytesToHex:aa,bytesToNumberBE:_r,bytesToNumberLE:va,concatBytes:ia,createHmacDrbg:Cm,ensureBytes:pt,equalBytes:gE,hexToBytes:Ea,hexToNumber:vu,isBytes:ra,numberToBytesBE:za,numberToBytesLE:Pi,numberToHexUnpadded:Am,numberToVarBytesBE:xE,utf8ToBytes:vE,validateObject:Ca},Symbol.toStringTag,{value:"Module"}));/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const yt=BigInt(0),ot=BigInt(1),Dr=BigInt(2),kE=BigInt(3),id=BigInt(4),M0=BigInt(5),T0=BigInt(8);BigInt(9);BigInt(16);function at(t,e){const n=t%e;return n>=yt?n:e+n}function OE(t,e,n){if(n<=yt||e<yt)throw new Error("Expected power/modulo > 0");if(n===ot)return yt;let r=ot;for(;e>yt;)e&ot&&(r=r*t%n),t=t*t%n,e>>=ot;return r}function ct(t,e,n){let r=t;for(;e-- >yt;)r*=r,r%=n;return r}function sd(t,e){if(t===yt||e<=yt)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let n=at(t,e),r=e,a=yt,i=ot;for(;n!==yt;){const s=r/n,o=r%n,d=a-i*s;r=n,n=o,a=i,i=d}if(r!==ot)throw new Error("invert: does not exist");return at(a,e)}function NE(t){const e=(t-ot)/Dr;let n,r,a;for(n=t-ot,r=0;n%Dr===yt;n/=Dr,r++);for(a=Dr;a<t&&OE(a,e,t)!==t-ot;a++);if(r===1){const s=(t+ot)/id;return function(o,d){const f=o.pow(d,s);if(!o.eql(o.sqr(f),d))throw new Error("Cannot find square root");return f}}const i=(n+ot)/Dr;return function(s,o){if(s.pow(o,e)===s.neg(s.ONE))throw new Error("Cannot find square root");let d=r,f=s.pow(s.mul(s.ONE,a),n),p=s.pow(o,i),g=s.pow(o,n);for(;!s.eql(g,s.ONE);){if(s.eql(g,s.ZERO))return s.ZERO;let P=1;for(let k=s.sqr(g);P<d&&!s.eql(k,s.ONE);P++)k=s.sqr(k);const T=s.pow(f,ot<<BigInt(d-P-1));f=s.sqr(T),p=s.mul(p,T),g=s.mul(g,f),d=P}return p}}function VE(t){if(t%id===kE){const e=(t+ot)/id;return function(n,r){const a=n.pow(r,e);if(!n.eql(n.sqr(a),r))throw new Error("Cannot find square root");return a}}if(t%T0===M0){const e=(t-M0)/T0;return function(n,r){const a=n.mul(r,Dr),i=n.pow(a,e),s=n.mul(r,i),o=n.mul(n.mul(s,Dr),i),d=n.mul(s,n.sub(o,n.ONE));if(!n.eql(n.sqr(d),r))throw new Error("Cannot find square root");return d}}return NE(t)}const IE=(t,e)=>(at(t,e)&ot)===ot,EE=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function zE(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},n=EE.reduce((r,a)=>(r[a]="function",r),e);return Ca(t,n)}function HE(t,e,n){if(n<yt)throw new Error("Expected power > 0");if(n===yt)return t.ONE;if(n===ot)return e;let r=t.ONE,a=e;for(;n>yt;)n&ot&&(r=t.mul(r,a)),a=t.sqr(a),n>>=ot;return r}function LE(t,e){const n=new Array(e.length),r=e.reduce((i,s,o)=>t.is0(s)?i:(n[o]=i,t.mul(i,s)),t.ONE),a=t.inv(r);return e.reduceRight((i,s,o)=>t.is0(s)?i:(n[o]=t.mul(i,n[o]),t.mul(i,s)),a),n}function jm(t,e){const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function Um(t,e,n=!1,r={}){if(t<=yt)throw new Error(`Expected Field ORDER > 0, got ${t}`);const{nBitLength:a,nByteLength:i}=jm(t,e);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");const s=VE(t),o=Object.freeze({ORDER:t,BITS:a,BYTES:i,MASK:wu(a),ZERO:yt,ONE:ot,create:d=>at(d,t),isValid:d=>{if(typeof d!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof d}`);return yt<=d&&d<t},is0:d=>d===yt,isOdd:d=>(d&ot)===ot,neg:d=>at(-d,t),eql:(d,f)=>d===f,sqr:d=>at(d*d,t),add:(d,f)=>at(d+f,t),sub:(d,f)=>at(d-f,t),mul:(d,f)=>at(d*f,t),pow:(d,f)=>HE(o,d,f),div:(d,f)=>at(d*sd(f,t),t),sqrN:d=>d*d,addN:(d,f)=>d+f,subN:(d,f)=>d-f,mulN:(d,f)=>d*f,inv:d=>sd(d,t),sqrt:r.sqrt||(d=>s(o,d)),invertBatch:d=>LE(o,d),cmov:(d,f,p)=>p?f:d,toBytes:d=>n?Pi(d,i):za(d,i),fromBytes:d=>{if(d.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${d.length}`);return n?va(d):_r(d)}});return Object.freeze(o)}function Xm(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function Dm(t){const e=Xm(t);return e+Math.ceil(e/2)}function RE(t,e,n=!1){const r=t.length,a=Xm(e),i=Dm(e);if(r<16||r<i||r>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${r}`);const s=n?_r(t):va(t),o=at(s,e-ot)+ot;return n?Pi(o,a):za(o,a)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const BE=BigInt(0),mc=BigInt(1);function Fm(t,e){const n=(a,i)=>{const s=i.negate();return a?s:i},r=a=>{const i=Math.ceil(e/a)+1,s=2**(a-1);return{windows:i,windowSize:s}};return{constTimeNegate:n,unsafeLadder(a,i){let s=t.ZERO,o=a;for(;i>BE;)i&mc&&(s=s.add(o)),o=o.double(),i>>=mc;return s},precomputeWindow(a,i){const{windows:s,windowSize:o}=r(i),d=[];let f=a,p=f;for(let g=0;g<s;g++){p=f,d.push(p);for(let P=1;P<o;P++)p=p.add(f),d.push(p);f=p.double()}return d},wNAF(a,i,s){const{windows:o,windowSize:d}=r(a);let f=t.ZERO,p=t.BASE;const g=BigInt(2**a-1),P=2**a,T=BigInt(a);for(let k=0;k<o;k++){const M=k*d;let O=Number(s&g);s>>=T,O>d&&(O-=P,s+=mc);const V=M,N=M+Math.abs(O)-1,E=k%2!==0,A=O<0;O===0?p=p.add(n(E,i[V])):f=f.add(n(A,i[N]))}return{p:f,f:p}},wNAFCached(a,i,s,o){const d=a._WINDOW_SIZE||1;let f=i.get(a);return f||(f=this.precomputeWindow(a,d),d!==1&&i.set(a,o(f))),this.wNAF(d,f,s)}}}function Pu(t){return zE(t.Fp),Ca(t,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...jm(t.n,t.nBitLength),...t,p:t.Fp.ORDER})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function AE(t){const e=Pu(t);Ca(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:n,Fp:r,a}=e;if(n){if(!r.eql(a,r.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof n!="object"||typeof n.beta!="bigint"||typeof n.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}const{bytesToNumberBE:CE,hexToBytes:jE}=SE,qr={Err:class extends Error{constructor(t=""){super(t)}},_parseInt(t){const{Err:e}=qr;if(t.length<2||t[0]!==2)throw new e("Invalid signature integer tag");const n=t[1],r=t.subarray(2,n+2);if(!n||r.length!==n)throw new e("Invalid signature integer: wrong length");if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return{d:CE(r),l:t.subarray(n+2)}},toSig(t){const{Err:e}=qr,n=typeof t=="string"?jE(t):t;Ui(n);let r=n.length;if(r<2||n[0]!=48)throw new e("Invalid signature tag");if(n[1]!==r-2)throw new e("Invalid signature: incorrect length");const{d:a,l:i}=qr._parseInt(n.subarray(2)),{d:s,l:o}=qr._parseInt(i);if(o.length)throw new e("Invalid signature: left bytes after parsing");return{r:a,s}},hexFromSig(t){const e=f=>Number.parseInt(f[0],16)&8?"00"+f:f,n=f=>{const p=f.toString(16);return p.length&1?`0${p}`:p},r=e(n(t.s)),a=e(n(t.r)),i=r.length/2,s=a.length/2,o=n(i),d=n(s);return`30${n(s+i+4)}02${d}${a}02${o}${r}`}},Cn=BigInt(0),rn=BigInt(1);BigInt(2);const S0=BigInt(3);BigInt(4);function UE(t){const e=AE(t),{Fp:n}=e,r=e.toBytes||((k,M,O)=>{const V=M.toAffine();return ia(Uint8Array.from([4]),n.toBytes(V.x),n.toBytes(V.y))}),a=e.fromBytes||(k=>{const M=k.subarray(1),O=n.fromBytes(M.subarray(0,n.BYTES)),V=n.fromBytes(M.subarray(n.BYTES,2*n.BYTES));return{x:O,y:V}});function i(k){const{a:M,b:O}=e,V=n.sqr(k),N=n.mul(V,k);return n.add(n.add(N,n.mul(k,M)),O)}if(!n.eql(n.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function s(k){return typeof k=="bigint"&&Cn<k&&k<e.n}function o(k){if(!s(k))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function d(k){const{allowedPrivateKeyLengths:M,nByteLength:O,wrapPrivateKey:V,n:N}=e;if(M&&typeof k!="bigint"){if(ra(k)&&(k=aa(k)),typeof k!="string"||!M.includes(k.length))throw new Error("Invalid key");k=k.padStart(O*2,"0")}let E;try{E=typeof k=="bigint"?k:_r(pt("private key",k,O))}catch{throw new Error(`private key must be ${O} bytes, hex or bigint, not ${typeof k}`)}return V&&(E=at(E,N)),o(E),E}const f=new Map;function p(k){if(!(k instanceof g))throw new Error("ProjectivePoint expected")}class g{constructor(M,O,V){if(this.px=M,this.py=O,this.pz=V,M==null||!n.isValid(M))throw new Error("x required");if(O==null||!n.isValid(O))throw new Error("y required");if(V==null||!n.isValid(V))throw new Error("z required")}static fromAffine(M){const{x:O,y:V}=M||{};if(!M||!n.isValid(O)||!n.isValid(V))throw new Error("invalid affine point");if(M instanceof g)throw new Error("projective point not allowed");const N=E=>n.eql(E,n.ZERO);return N(O)&&N(V)?g.ZERO:new g(O,V,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(M){const O=n.invertBatch(M.map(V=>V.pz));return M.map((V,N)=>V.toAffine(O[N])).map(g.fromAffine)}static fromHex(M){const O=g.fromAffine(a(pt("pointHex",M)));return O.assertValidity(),O}static fromPrivateKey(M){return g.BASE.multiply(d(M))}_setWindowSize(M){this._WINDOW_SIZE=M,f.delete(this)}assertValidity(){if(this.is0()){if(e.allowInfinityPoint&&!n.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:M,y:O}=this.toAffine();if(!n.isValid(M)||!n.isValid(O))throw new Error("bad point: x or y not FE");const V=n.sqr(O),N=i(M);if(!n.eql(V,N))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:M}=this.toAffine();if(n.isOdd)return!n.isOdd(M);throw new Error("Field doesn't support isOdd")}equals(M){p(M);const{px:O,py:V,pz:N}=this,{px:E,py:A,pz:H}=M,z=n.eql(n.mul(O,H),n.mul(E,N)),B=n.eql(n.mul(V,H),n.mul(A,N));return z&&B}negate(){return new g(this.px,n.neg(this.py),this.pz)}double(){const{a:M,b:O}=e,V=n.mul(O,S0),{px:N,py:E,pz:A}=this;let H=n.ZERO,z=n.ZERO,B=n.ZERO,F=n.mul(N,N),ee=n.mul(E,E),W=n.mul(A,A),C=n.mul(N,E);return C=n.add(C,C),B=n.mul(N,A),B=n.add(B,B),H=n.mul(M,B),z=n.mul(V,W),z=n.add(H,z),H=n.sub(ee,z),z=n.add(ee,z),z=n.mul(H,z),H=n.mul(C,H),B=n.mul(V,B),W=n.mul(M,W),C=n.sub(F,W),C=n.mul(M,C),C=n.add(C,B),B=n.add(F,F),F=n.add(B,F),F=n.add(F,W),F=n.mul(F,C),z=n.add(z,F),W=n.mul(E,A),W=n.add(W,W),F=n.mul(W,C),H=n.sub(H,F),B=n.mul(W,ee),B=n.add(B,B),B=n.add(B,B),new g(H,z,B)}add(M){p(M);const{px:O,py:V,pz:N}=this,{px:E,py:A,pz:H}=M;let z=n.ZERO,B=n.ZERO,F=n.ZERO;const ee=e.a,W=n.mul(e.b,S0);let C=n.mul(O,E),oe=n.mul(V,A),c=n.mul(N,H),l=n.add(O,V),h=n.add(E,A);l=n.mul(l,h),h=n.add(C,oe),l=n.sub(l,h),h=n.add(O,N);let m=n.add(E,H);return h=n.mul(h,m),m=n.add(C,c),h=n.sub(h,m),m=n.add(V,N),z=n.add(A,H),m=n.mul(m,z),z=n.add(oe,c),m=n.sub(m,z),F=n.mul(ee,h),z=n.mul(W,c),F=n.add(z,F),z=n.sub(oe,F),F=n.add(oe,F),B=n.mul(z,F),oe=n.add(C,C),oe=n.add(oe,C),c=n.mul(ee,c),h=n.mul(W,h),oe=n.add(oe,c),c=n.sub(C,c),c=n.mul(ee,c),h=n.add(h,c),C=n.mul(oe,h),B=n.add(B,C),C=n.mul(m,h),z=n.mul(l,z),z=n.sub(z,C),C=n.mul(l,oe),F=n.mul(m,F),F=n.add(F,C),new g(z,B,F)}subtract(M){return this.add(M.negate())}is0(){return this.equals(g.ZERO)}wNAF(M){return T.wNAFCached(this,f,M,O=>{const V=n.invertBatch(O.map(N=>N.pz));return O.map((N,E)=>N.toAffine(V[E])).map(g.fromAffine)})}multiplyUnsafe(M){const O=g.ZERO;if(M===Cn)return O;if(o(M),M===rn)return this;const{endo:V}=e;if(!V)return T.unsafeLadder(this,M);let{k1neg:N,k1:E,k2neg:A,k2:H}=V.splitScalar(M),z=O,B=O,F=this;for(;E>Cn||H>Cn;)E&rn&&(z=z.add(F)),H&rn&&(B=B.add(F)),F=F.double(),E>>=rn,H>>=rn;return N&&(z=z.negate()),A&&(B=B.negate()),B=new g(n.mul(B.px,V.beta),B.py,B.pz),z.add(B)}multiply(M){o(M);let O=M,V,N;const{endo:E}=e;if(E){const{k1neg:A,k1:H,k2neg:z,k2:B}=E.splitScalar(O);let{p:F,f:ee}=this.wNAF(H),{p:W,f:C}=this.wNAF(B);F=T.constTimeNegate(A,F),W=T.constTimeNegate(z,W),W=new g(n.mul(W.px,E.beta),W.py,W.pz),V=F.add(W),N=ee.add(C)}else{const{p:A,f:H}=this.wNAF(O);V=A,N=H}return g.normalizeZ([V,N])[0]}multiplyAndAddUnsafe(M,O,V){const N=g.BASE,E=(H,z)=>z===Cn||z===rn||!H.equals(N)?H.multiplyUnsafe(z):H.multiply(z),A=E(this,O).add(E(M,V));return A.is0()?void 0:A}toAffine(M){const{px:O,py:V,pz:N}=this,E=this.is0();M==null&&(M=E?n.ONE:n.inv(N));const A=n.mul(O,M),H=n.mul(V,M),z=n.mul(N,M);if(E)return{x:n.ZERO,y:n.ZERO};if(!n.eql(z,n.ONE))throw new Error("invZ was invalid");return{x:A,y:H}}isTorsionFree(){const{h:M,isTorsionFree:O}=e;if(M===rn)return!0;if(O)return O(g,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:M,clearCofactor:O}=e;return M===rn?this:O?O(g,this):this.multiplyUnsafe(e.h)}toRawBytes(M=!0){return this.assertValidity(),r(g,this,M)}toHex(M=!0){return aa(this.toRawBytes(M))}}g.BASE=new g(e.Gx,e.Gy,n.ONE),g.ZERO=new g(n.ZERO,n.ONE,n.ZERO);const P=e.nBitLength,T=Fm(g,e.endo?Math.ceil(P/2):P);return{CURVE:e,ProjectivePoint:g,normPrivateKeyToScalar:d,weierstrassEquation:i,isWithinCurveOrder:s}}function XE(t){const e=Pu(t);return Ca(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function DE(t){const e=XE(t),{Fp:n,n:r}=e,a=n.BYTES+1,i=2*n.BYTES+1;function s(h){return Cn<h&&h<n.ORDER}function o(h){return at(h,r)}function d(h){return sd(h,r)}const{ProjectivePoint:f,normPrivateKeyToScalar:p,weierstrassEquation:g,isWithinCurveOrder:P}=UE({...e,toBytes(h,m,y){const v=m.toAffine(),w=n.toBytes(v.x),b=ia;return y?b(Uint8Array.from([m.hasEvenY()?2:3]),w):b(Uint8Array.from([4]),w,n.toBytes(v.y))},fromBytes(h){const m=h.length,y=h[0],v=h.subarray(1);if(m===a&&(y===2||y===3)){const w=_r(v);if(!s(w))throw new Error("Point is not on curve");const b=g(w);let u;try{u=n.sqrt(b)}catch(R){const L=R instanceof Error?": "+R.message:"";throw new Error("Point is not on curve"+L)}const x=(u&rn)===rn;return(y&1)===1!==x&&(u=n.neg(u)),{x:w,y:u}}else if(m===i&&y===4){const w=n.fromBytes(v.subarray(0,n.BYTES)),b=n.fromBytes(v.subarray(n.BYTES,2*n.BYTES));return{x:w,y:b}}else throw new Error(`Point of length ${m} was invalid. Expected ${a} compressed bytes or ${i} uncompressed bytes`)}}),T=h=>aa(za(h,e.nByteLength));function k(h){const m=r>>rn;return h>m}function M(h){return k(h)?o(-h):h}const O=(h,m,y)=>_r(h.slice(m,y));class V{constructor(m,y,v){this.r=m,this.s=y,this.recovery=v,this.assertValidity()}static fromCompact(m){const y=e.nByteLength;return m=pt("compactSignature",m,y*2),new V(O(m,0,y),O(m,y,2*y))}static fromDER(m){const{r:y,s:v}=qr.toSig(pt("DER",m));return new V(y,v)}assertValidity(){if(!P(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!P(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(m){return new V(this.r,this.s,m)}recoverPublicKey(m){const{r:y,s:v,recovery:w}=this,b=B(pt("msgHash",m));if(w==null||![0,1,2,3].includes(w))throw new Error("recovery id invalid");const u=w===2||w===3?y+e.n:y;if(u>=n.ORDER)throw new Error("recovery id 2 or 3 invalid");const x=w&1?"03":"02",R=f.fromHex(x+T(u)),L=d(u),X=o(-b*L),te=o(v*L),Z=f.BASE.multiplyAndAddUnsafe(R,X,te);if(!Z)throw new Error("point at infinify");return Z.assertValidity(),Z}hasHighS(){return k(this.s)}normalizeS(){return this.hasHighS()?new V(this.r,o(-this.s),this.recovery):this}toDERRawBytes(){return Ea(this.toDERHex())}toDERHex(){return qr.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return Ea(this.toCompactHex())}toCompactHex(){return T(this.r)+T(this.s)}}const N={isValidPrivateKey(h){try{return p(h),!0}catch{return!1}},normPrivateKeyToScalar:p,randomPrivateKey:()=>{const h=Dm(e.n);return RE(e.randomBytes(h),e.n)},precompute(h=8,m=f.BASE){return m._setWindowSize(h),m.multiply(BigInt(3)),m}};function E(h,m=!0){return f.fromPrivateKey(h).toRawBytes(m)}function A(h){const m=ra(h),y=typeof h=="string",v=(m||y)&&h.length;return m?v===a||v===i:y?v===2*a||v===2*i:h instanceof f}function H(h,m,y=!0){if(A(h))throw new Error("first arg must be private key");if(!A(m))throw new Error("second arg must be public key");return f.fromHex(m).multiply(p(h)).toRawBytes(y)}const z=e.bits2int||function(h){const m=_r(h),y=h.length*8-e.nBitLength;return y>0?m>>BigInt(y):m},B=e.bits2int_modN||function(h){return o(z(h))},F=wu(e.nBitLength);function ee(h){if(typeof h!="bigint")throw new Error("bigint expected");if(!(Cn<=h&&h<F))throw new Error(`bigint expected < 2^${e.nBitLength}`);return za(h,e.nByteLength)}function W(h,m,y=C){if(["recovered","canonical"].some(_e=>_e in y))throw new Error("sign() legacy options not supported");const{hash:v,randomBytes:w}=e;let{lowS:b,prehash:u,extraEntropy:x}=y;b==null&&(b=!0),h=pt("msgHash",h),u&&(h=pt("prehashed msgHash",v(h)));const R=B(h),L=p(m),X=[ee(L),ee(R)];if(x!=null&&x!==!1){const _e=x===!0?w(n.BYTES):x;X.push(pt("extraEntropy",_e))}const te=ia(...X),Z=R;function K(_e){const ae=z(_e);if(!P(ae))return;const de=d(ae),Re=f.BASE.multiply(ae).toAffine(),ue=o(Re.x);if(ue===Cn)return;const se=o(de*o(Z+ue*L));if(se===Cn)return;let ft=(Re.x===ue?0:2)|Number(Re.y&rn),he=se;return b&&k(se)&&(he=M(se),ft^=1),new V(ue,he,ft)}return{seed:te,k2sig:K}}const C={lowS:e.lowS,prehash:!1},oe={lowS:e.lowS,prehash:!1};function c(h,m,y=C){const{seed:v,k2sig:w}=W(h,m,y),b=e;return Cm(b.hash.outputLen,b.nByteLength,b.hmac)(v,w)}f.BASE._setWindowSize(8);function l(h,m,y,v=oe){var w;const b=h;if(m=pt("msgHash",m),y=pt("publicKey",y),"strict"in v)throw new Error("options.strict was renamed to lowS");const{lowS:u,prehash:x}=v;let R,L;try{if(typeof b=="string"||ra(b))try{R=V.fromDER(b)}catch(Re){if(!(Re instanceof qr.Err))throw Re;R=V.fromCompact(b)}else if(typeof b=="object"&&typeof b.r=="bigint"&&typeof b.s=="bigint"){const{r:Re,s:ue}=b;R=new V(Re,ue)}else throw new Error("PARSE");L=f.fromHex(y)}catch(Re){if(Re.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(u&&R.hasHighS())return!1;x&&(m=e.hash(m));const{r:X,s:te}=R,Z=B(m),K=d(te),_e=o(Z*K),ae=o(X*K),de=(w=f.BASE.multiplyAndAddUnsafe(L,_e,ae))==null?void 0:w.toAffine();return de?o(de.x)===X:!1}return{CURVE:e,getPublicKey:E,getSharedSecret:H,sign:c,verify:l,ProjectivePoint:f,Signature:V,utils:N}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function FE(t){return{hash:t,hmac:(e,...n)=>Rm(t,e,II(...n)),randomBytes:Em}}function qE(t,e){const n=r=>DE({...t,...FE(r)});return Object.freeze({...n(e),create:n})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const qm=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),k0=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),ZE=BigInt(1),od=BigInt(2),O0=(t,e)=>(t+e/od)/e;function WE(t){const e=qm,n=BigInt(3),r=BigInt(6),a=BigInt(11),i=BigInt(22),s=BigInt(23),o=BigInt(44),d=BigInt(88),f=t*t*t%e,p=f*f*t%e,g=ct(p,n,e)*p%e,P=ct(g,n,e)*p%e,T=ct(P,od,e)*f%e,k=ct(T,a,e)*T%e,M=ct(k,i,e)*k%e,O=ct(M,o,e)*M%e,V=ct(O,d,e)*O%e,N=ct(V,o,e)*M%e,E=ct(N,n,e)*p%e,A=ct(E,s,e)*k%e,H=ct(A,r,e)*f%e,z=ct(H,od,e);if(!cd.eql(cd.sqr(z),t))throw new Error("Cannot find square root");return z}const cd=Um(qm,void 0,void 0,{sqrt:WE}),GE=qE({a:BigInt(0),b:BigInt(7),Fp:cd,n:k0,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=k0,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-ZE*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),a=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=n,s=BigInt("0x100000000000000000000000000000000"),o=O0(i*t,e),d=O0(-r*t,e);let f=at(t-o*n-d*a,e),p=at(-o*r-d*i,e);const g=f>s,P=p>s;if(g&&(f=e-f),P&&(p=e-p),f>s||p>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:g,k1:f,k2neg:P,k2:p}}}},mE);BigInt(0);GE.ProjectivePoint;const[KE,YE]=Ge.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(t=>BigInt(t))),sr=new Uint32Array(80),or=new Uint32Array(80);class JE extends Hm{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:n,Bh:r,Bl:a,Ch:i,Cl:s,Dh:o,Dl:d,Eh:f,El:p,Fh:g,Fl:P,Gh:T,Gl:k,Hh:M,Hl:O}=this;return[e,n,r,a,i,s,o,d,f,p,g,P,T,k,M,O]}set(e,n,r,a,i,s,o,d,f,p,g,P,T,k,M,O){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=a|0,this.Ch=i|0,this.Cl=s|0,this.Dh=o|0,this.Dl=d|0,this.Eh=f|0,this.El=p|0,this.Fh=g|0,this.Fl=P|0,this.Gh=T|0,this.Gl=k|0,this.Hh=M|0,this.Hl=O|0}process(e,n){for(let E=0;E<16;E++,n+=4)sr[E]=e.getUint32(n),or[E]=e.getUint32(n+=4);for(let E=16;E<80;E++){const A=sr[E-15]|0,H=or[E-15]|0,z=Ge.rotrSH(A,H,1)^Ge.rotrSH(A,H,8)^Ge.shrSH(A,H,7),B=Ge.rotrSL(A,H,1)^Ge.rotrSL(A,H,8)^Ge.shrSL(A,H,7),F=sr[E-2]|0,ee=or[E-2]|0,W=Ge.rotrSH(F,ee,19)^Ge.rotrBH(F,ee,61)^Ge.shrSH(F,ee,6),C=Ge.rotrSL(F,ee,19)^Ge.rotrBL(F,ee,61)^Ge.shrSL(F,ee,6),oe=Ge.add4L(B,C,or[E-7],or[E-16]),c=Ge.add4H(oe,z,W,sr[E-7],sr[E-16]);sr[E]=c|0,or[E]=oe|0}let{Ah:r,Al:a,Bh:i,Bl:s,Ch:o,Cl:d,Dh:f,Dl:p,Eh:g,El:P,Fh:T,Fl:k,Gh:M,Gl:O,Hh:V,Hl:N}=this;for(let E=0;E<80;E++){const A=Ge.rotrSH(g,P,14)^Ge.rotrSH(g,P,18)^Ge.rotrBH(g,P,41),H=Ge.rotrSL(g,P,14)^Ge.rotrSL(g,P,18)^Ge.rotrBL(g,P,41),z=g&T^~g&M,B=P&k^~P&O,F=Ge.add5L(N,H,B,YE[E],or[E]),ee=Ge.add5H(F,V,A,z,KE[E],sr[E]),W=F|0,C=Ge.rotrSH(r,a,28)^Ge.rotrBH(r,a,34)^Ge.rotrBH(r,a,39),oe=Ge.rotrSL(r,a,28)^Ge.rotrBL(r,a,34)^Ge.rotrBL(r,a,39),c=r&i^r&o^i&o,l=a&s^a&d^s&d;V=M|0,N=O|0,M=T|0,O=k|0,T=g|0,k=P|0,{h:g,l:P}=Ge.add(f|0,p|0,ee|0,W|0),f=o|0,p=d|0,o=i|0,d=s|0,i=r|0,s=a|0;const h=Ge.add3L(W,oe,l);r=Ge.add3H(h,ee,C,c),a=h|0}({h:r,l:a}=Ge.add(this.Ah|0,this.Al|0,r|0,a|0)),{h:i,l:s}=Ge.add(this.Bh|0,this.Bl|0,i|0,s|0),{h:o,l:d}=Ge.add(this.Ch|0,this.Cl|0,o|0,d|0),{h:f,l:p}=Ge.add(this.Dh|0,this.Dl|0,f|0,p|0),{h:g,l:P}=Ge.add(this.Eh|0,this.El|0,g|0,P|0),{h:T,l:k}=Ge.add(this.Fh|0,this.Fl|0,T|0,k|0),{h:M,l:O}=Ge.add(this.Gh|0,this.Gl|0,M|0,O|0),{h:V,l:N}=Ge.add(this.Hh|0,this.Hl|0,V|0,N|0),this.set(r,a,i,s,o,d,f,p,g,P,T,k,M,O,V,N)}roundClean(){sr.fill(0),or.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const _E=Im(()=>new JE);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const fn=BigInt(0),Dt=BigInt(1),rs=BigInt(2),QE=BigInt(8),$E={zip215:!0};function ez(t){const e=Pu(t);return Ca(t,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function tz(t){const e=ez(t),{Fp:n,n:r,prehash:a,hash:i,randomBytes:s,nByteLength:o,h:d}=e,f=rs<<BigInt(o*8)-Dt,p=n.create,g=e.uvRatio||((y,v)=>{try{return{isValid:!0,value:n.sqrt(y*n.inv(v))}}catch{return{isValid:!1,value:fn}}}),P=e.adjustScalarBytes||(y=>y),T=e.domain||((y,v,w)=>{if(v.length||w)throw new Error("Contexts/pre-hash are not supported");return y}),k=y=>typeof y=="bigint"&&fn<y,M=(y,v)=>k(y)&&k(v)&&y<v,O=y=>y===fn||M(y,f);function V(y,v){if(M(y,v))return y;throw new Error(`Expected valid scalar < ${v}, got ${typeof y} ${y}`)}function N(y){return y===fn?y:V(y,r)}const E=new Map;function A(y){if(!(y instanceof H))throw new Error("ExtendedPoint expected")}class H{constructor(v,w,b,u){if(this.ex=v,this.ey=w,this.ez=b,this.et=u,!O(v))throw new Error("x required");if(!O(w))throw new Error("y required");if(!O(b))throw new Error("z required");if(!O(u))throw new Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(v){if(v instanceof H)throw new Error("extended point not allowed");const{x:w,y:b}=v||{};if(!O(w)||!O(b))throw new Error("invalid affine point");return new H(w,b,Dt,p(w*b))}static normalizeZ(v){const w=n.invertBatch(v.map(b=>b.ez));return v.map((b,u)=>b.toAffine(w[u])).map(H.fromAffine)}_setWindowSize(v){this._WINDOW_SIZE=v,E.delete(this)}assertValidity(){const{a:v,d:w}=e;if(this.is0())throw new Error("bad point: ZERO");const{ex:b,ey:u,ez:x,et:R}=this,L=p(b*b),X=p(u*u),te=p(x*x),Z=p(te*te),K=p(L*v),_e=p(te*p(K+X)),ae=p(Z+p(w*p(L*X)));if(_e!==ae)throw new Error("bad point: equation left != right (1)");const de=p(b*u),Re=p(x*R);if(de!==Re)throw new Error("bad point: equation left != right (2)")}equals(v){A(v);const{ex:w,ey:b,ez:u}=this,{ex:x,ey:R,ez:L}=v,X=p(w*L),te=p(x*u),Z=p(b*L),K=p(R*u);return X===te&&Z===K}is0(){return this.equals(H.ZERO)}negate(){return new H(p(-this.ex),this.ey,this.ez,p(-this.et))}double(){const{a:v}=e,{ex:w,ey:b,ez:u}=this,x=p(w*w),R=p(b*b),L=p(rs*p(u*u)),X=p(v*x),te=w+b,Z=p(p(te*te)-x-R),K=X+R,_e=K-L,ae=X-R,de=p(Z*_e),Re=p(K*ae),ue=p(Z*ae),se=p(_e*K);return new H(de,Re,se,ue)}add(v){A(v);const{a:w,d:b}=e,{ex:u,ey:x,ez:R,et:L}=this,{ex:X,ey:te,ez:Z,et:K}=v;if(w===BigInt(-1)){const Ht=p((x-u)*(te+X)),ye=p((x+u)*(te-X)),be=p(ye-Ht);if(be===fn)return this.double();const Tt=p(R*rs*K),xe=p(L*rs*Z),ge=xe+Tt,St=ye+Ht,ve=xe-Tt,Se=p(ge*be),Lt=p(St*ve),ke=p(ge*ve),Oe=p(be*St);return new H(Se,Lt,Oe,ke)}const _e=p(u*X),ae=p(x*te),de=p(L*b*K),Re=p(R*Z),ue=p((u+x)*(X+te)-_e-ae),se=Re-de,ft=Re+de,he=p(ae-w*_e),Me=p(ue*se),zt=p(ft*he),Te=p(ue*he),ce=p(se*ft);return new H(Me,zt,ce,Te)}subtract(v){return this.add(v.negate())}wNAF(v){return F.wNAFCached(this,E,v,H.normalizeZ)}multiply(v){const{p:w,f:b}=this.wNAF(V(v,r));return H.normalizeZ([w,b])[0]}multiplyUnsafe(v){let w=N(v);return w===fn?B:this.equals(B)||w===Dt?this:this.equals(z)?this.wNAF(w).p:F.unsafeLadder(this,w)}isSmallOrder(){return this.multiplyUnsafe(d).is0()}isTorsionFree(){return F.unsafeLadder(this,r).is0()}toAffine(v){const{ex:w,ey:b,ez:u}=this,x=this.is0();v==null&&(v=x?QE:n.inv(u));const R=p(w*v),L=p(b*v),X=p(u*v);if(x)return{x:fn,y:Dt};if(X!==Dt)throw new Error("invZ was invalid");return{x:R,y:L}}clearCofactor(){const{h:v}=e;return v===Dt?this:this.multiplyUnsafe(v)}static fromHex(v,w=!1){const{d:b,a:u}=e,x=n.BYTES;v=pt("pointHex",v,x);const R=v.slice(),L=v[x-1];R[x-1]=L&-129;const X=va(R);X===fn||(w?V(X,f):V(X,n.ORDER));const te=p(X*X),Z=p(te-Dt),K=p(b*te-u);let{isValid:_e,value:ae}=g(Z,K);if(!_e)throw new Error("Point.fromHex: invalid y coordinate");const de=(ae&Dt)===Dt,Re=(L&128)!==0;if(!w&&ae===fn&&Re)throw new Error("Point.fromHex: x=0 and x_0=1");return Re!==de&&(ae=p(-ae)),H.fromAffine({x:ae,y:X})}static fromPrivateKey(v){return C(v).point}toRawBytes(){const{x:v,y:w}=this.toAffine(),b=Pi(w,n.BYTES);return b[b.length-1]|=v&Dt?128:0,b}toHex(){return aa(this.toRawBytes())}}H.BASE=new H(e.Gx,e.Gy,Dt,p(e.Gx*e.Gy)),H.ZERO=new H(fn,Dt,Dt,fn);const{BASE:z,ZERO:B}=H,F=Fm(H,o*8);function ee(y){return at(y,r)}function W(y){return ee(va(y))}function C(y){const v=o;y=pt("private key",y,v);const w=pt("hashed private key",i(y),2*v),b=P(w.slice(0,v)),u=w.slice(v,2*v),x=W(b),R=z.multiply(x),L=R.toRawBytes();return{head:b,prefix:u,scalar:x,point:R,pointBytes:L}}function oe(y){return C(y).pointBytes}function c(y=new Uint8Array,...v){const w=ia(...v);return W(i(T(w,pt("context",y),!!a)))}function l(y,v,w={}){y=pt("message",y),a&&(y=a(y));const{prefix:b,scalar:u,pointBytes:x}=C(v),R=c(w.context,b,y),L=z.multiply(R).toRawBytes(),X=c(w.context,L,x,y),te=ee(R+X*u);N(te);const Z=ia(L,Pi(te,n.BYTES));return pt("result",Z,o*2)}const h=$E;function m(y,v,w,b=h){const{context:u,zip215:x}=b,R=n.BYTES;y=pt("signature",y,2*R),v=pt("message",v),a&&(v=a(v));const L=va(y.slice(R,2*R));let X,te,Z;try{X=H.fromHex(w,x),te=H.fromHex(y.slice(0,R),x),Z=z.multiplyUnsafe(L)}catch{return!1}if(!x&&X.isSmallOrder())return!1;const K=c(u,te.toRawBytes(),X.toRawBytes(),v);return te.add(X.multiplyUnsafe(K)).subtract(Z).clearCofactor().equals(H.ZERO)}return z._setWindowSize(8),{CURVE:e,getPublicKey:oe,sign:l,verify:m,ExtendedPoint:H,utils:{getExtendedPublicKey:C,randomPrivateKey:()=>s(n.BYTES),precompute(y=8,v=H.BASE){return v._setWindowSize(y),v.multiply(BigInt(3)),v}}}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Mu=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),N0=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt(0);const nz=BigInt(1),V0=BigInt(2);BigInt(3);const rz=BigInt(5),az=BigInt(8);function iz(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),a=BigInt(80),i=Mu,s=t*t%i*t%i,o=ct(s,V0,i)*s%i,d=ct(o,nz,i)*t%i,f=ct(d,rz,i)*d%i,p=ct(f,e,i)*f%i,g=ct(p,n,i)*p%i,P=ct(g,r,i)*g%i,T=ct(P,a,i)*P%i,k=ct(T,a,i)*P%i,M=ct(k,e,i)*f%i;return{pow_p_5_8:ct(M,V0,i)*t%i,b2:s}}function sz(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}function oz(t,e){const n=Mu,r=at(e*e*e,n),a=at(r*r*e,n),i=iz(t*a).pow_p_5_8;let s=at(t*r*i,n);const o=at(e*s*s,n),d=s,f=at(s*N0,n),p=o===t,g=o===at(-t,n),P=o===at(-t*N0,n);return p&&(s=d),(g||P)&&(s=f),IE(s,n)&&(s=at(-s,n)),{isValid:p||g,value:s}}const cz=Um(Mu,void 0,!0),dz={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:cz,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:az,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:_E,randomBytes:Em,adjustScalarBytes:sz,uvRatio:oz};tz(dz);const uz=[],lz=BigInt(0),ti=BigInt(1),fz=BigInt(2),hz=BigInt(7),pz=BigInt(256),mz=BigInt(113);for(let t=0,e=ti,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5];let a=lz;for(let i=0;i<7;i++)e=(e<<ti^(e>>hz)*mz)%pz,e&fz&&(a^=ti<<(ti<<BigInt(i))-ti);uz.push(a)}var I0;(function(t){t.CURRENT_VERSION="1.0.0"})(I0||(I0={}));const bz="ConfiguredExtensions";var yz=(t=>(t[t.None=0]="None",t[t.Authorized=1]="Authorized",t[t.Rejected=2]="Rejected",t))(yz||{});function xz(){const{subscribe:t,update:e}=dN(bz,{});return e(r=>{for(const a of Object.values(gN))r!=null&&r[a.injectedName]||(r[a.injectedName]={injectedName:a.injectedName,installed:!1,authorized:0});return r}),{subscribe:t,updateExtension:r=>{e(a=>(a[r.injectedName]=r,a))}}}const aH=xz();export{_z as $,tH as A,Sz as B,aH as C,Uz as D,yz as E,Dz as F,Gz as G,Bz as H,Jz as J,Kz as K,Az as L,Tz as O,Cz as U,gm as V,Zz as W,qz as X,Yz as Y,Wz as Z,Pz as a,Za as b,nH as c,Qz as d,gN as e,Xz as f,rH as g,oN as h,Et as i,Ur as j,Mz as k,Rs as l,Fz as q,eH as r,dN as s,$z as t,jz as z};
