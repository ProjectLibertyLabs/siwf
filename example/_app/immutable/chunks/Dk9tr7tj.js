var Dw=Object.defineProperty;var vb=t=>{throw TypeError(t)};var Fw=(t,e,n)=>e in t?Dw(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var Dt=(t,e,n)=>Fw(t,typeof e!="symbol"?e+"":e,n),wb=(t,e,n)=>e.has(t)||vb("Cannot "+n);var Tn=(t,e,n)=>(wb(t,e,"read from private field"),n?n.call(t):e.get(t)),Ls=(t,e,n)=>e.has(t)?vb("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,n),Hs=(t,e,n,r)=>(wb(t,e,"write to private field"),r?r.call(t,n):e.set(t,n),n);import{n as Bt,J as Zw,d as oe,K as qw,L as Ww,M as Ss,o as fe,m as we,S as oi,i as ci,s as ui,b as _e,r as fn,v as km,N as R8,O as Rr,P as xs,Q as B8,R as vs,T as mo,f as ot,U as Tm,V as bo,W as Nm,X as Pb,e as Ne,j as Oe,y as rn,a as $r,p as en,q as tn,c as de,A as an,C as ie,Y as Kt,h as ht,g as tr,B as sn,k as pt,t as nr,z as on,Z as jf,D as Yr,_ as Cf,F as ei,G as ti,H as ni,I as ri,l as Gw,$ as Yp,a0 as Uf,a1 as ms,a2 as ln,a3 as ct,a4 as Yw,a5 as wa,a6 as Kp,w as Kw,a7 as Bn,E as uc,a8 as X8,a9 as j8,aa as id,ab as C8,ac as Mb}from"./DWml0nFi.js";import"./IHki7fMi.js";import{_ as Jw}from"./C1FmrZbK.js";import{w as Qw}from"./NJEsD3lf.js";const U8=typeof window<"u";let Jp=U8?()=>window.performance.now():()=>Date.now(),Om=U8?t=>requestAnimationFrame(t):Bt;const pc=new Set;function D8(t){pc.forEach(e=>{e.c(t)||(pc.delete(e),e.f())}),pc.size!==0&&Om(D8)}function F8(t){let e;return pc.size===0&&Om(D8),{promise:new Promise(n=>{pc.add(e={c:t,f:n})}),abort(){pc.delete(e)}}}const _w=typeof window<"u"?window:typeof globalThis<"u"?globalThis:global,Df=new Map;let Ff=0;function $w(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}function eP(t,e){const n={stylesheet:qw(e),rules:{}};return Df.set(t,n),n}function tP(t,e,n,r,i,a,s,o=0){const u=16.666/r;let h=`{
`;for(let z=0;z<=1;z+=u){const j=e+(n-e)*a(z);h+=z*100+`%{${s(j,1-j)}}
`}const p=h+`100% {${s(n,1-n)}}
}`,y=`__svelte_${$w(p)}_${o}`,w=Zw(t),{stylesheet:P,rules:N}=Df.get(w)||eP(w,t);N[y]||(N[y]=!0,P.insertRule(`@keyframes ${y} ${p}`,P.cssRules.length));const O=t.style.animation||"";return t.style.animation=`${O?`${O}, `:""}${y} ${r}ms linear ${i}ms 1 both`,Ff+=1,y}function nP(t,e){const n=(t.style.animation||"").split(", "),r=n.filter(e?a=>a.indexOf(e)<0:a=>a.indexOf("__svelte")===-1),i=n.length-r.length;i&&(t.style.animation=r.join(", "),Ff-=i,Ff||rP())}function rP(){Om(()=>{Ff||(Df.forEach(t=>{const{ownerNode:e}=t.stylesheet;e&&oe(e)}),Df.clear())})}function iP(t,e,n,r){if(!e)return Bt;const i=t.getBoundingClientRect();if(e.left===i.left&&e.right===i.right&&e.top===i.top&&e.bottom===i.bottom)return Bt;const{delay:a=0,duration:s=300,easing:o=Ww,start:u=Jp()+a,end:h=u+s,tick:p=Bt,css:y}=n(t,{from:e,to:i},r);let w=!0,P=!1,N;function O(){y&&(N=tP(t,0,1,s,a,o,y)),a||(P=!0)}function z(){y&&nP(t,N),w=!1}return F8(j=>{if(!P&&j>=u&&(P=!0),P&&j>=h&&(p(1,0),z()),!w)return!1;if(P){const I=j-u,A=0+1*o(I/s);p(A,1-A)}return!0}),O(),p(0,1),z}function aP(t){const e=getComputedStyle(t);if(e.position!=="absolute"&&e.position!=="fixed"){const{width:n,height:r}=e,i=t.getBoundingClientRect();t.style.position="absolute",t.style.width=n,t.style.height=r,sP(t,i)}}function sP(t,e){const n=t.getBoundingClientRect();if(e.left!==n.left||e.top!==n.top){const r=getComputedStyle(t),i=r.transform==="none"?"":r.transform;t.style.transform=`${i} translate(${e.left-n.left}px, ${e.top-n.top}px)`}}function qi(t){return(t==null?void 0:t.length)!==void 0?t:Array.from(t)}function oP(t,e){we(t,1,1,()=>{e.delete(t.key)})}function cP(t,e){t.f(),oP(t,e)}function uP(t,e,n,r,i,a,s,o,u,h,p,y){let w=t.length,P=a.length,N=w;const O={};for(;N--;)O[t[N].key]=N;const z=[],j=new Map,I=new Map,A=[];for(N=P;N--;){const C=y(i,a,N),F=n(C);let S=s.get(F);S?A.push(()=>S.p(C,e)):(S=h(F,C),S.c()),j.set(F,z[N]=S),F in O&&I.set(F,Math.abs(N-O[F]))}const U=new Set,H=new Set;function X(C){fe(C,1),C.m(o,p),s.set(C.key,C),p=C.first,P--}for(;w&&P;){const C=z[P-1],F=t[w-1],S=C.key,R=F.key;C===F?(p=C.first,w--,P--):j.has(R)?!s.has(S)||U.has(S)?X(C):H.has(R)?w--:I.get(S)>I.get(R)?(H.add(S),X(C)):(U.add(R),w--):(u(F,s),w--)}for(;w--;){const C=t[w];j.has(C.key)||u(C,s)}for(;P;)X(z[P-1]);return Ss(A),z}function Rl(t,e){const n={},r={},i={$$scope:1};let a=t.length;for(;a--;){const s=t[a],o=e[a];if(o){for(const u in s)u in o||(r[u]=1);for(const u in o)i[u]||(n[u]=o[u],i[u]=1);t[a]=o}else for(const u in s)i[u]=1}for(const s in r)s in n||(n[s]=void 0);return n}var lP=Object.defineProperty,dP=(t,e,n)=>e in t?lP(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ft=(t,e,n)=>dP(t,typeof e!="symbol"?e+"":e,n);const fP={rpc:{checkDelegations:{description:"Test a list of MSAs to see if they have delegated to the provider MSA",params:[{name:"delegator_msa_ids",type:"Vec<DelegatorId>"},{name:"provider_msa_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"Vec<(DelegatorId, bool)>"},grantedSchemaIdsByMsaId:{description:"Fetch the list of schema ids that a delegator has granted to provider",params:[{name:"delegator_msa_id",type:"DelegatorId"},{name:"provider_msa_id",type:"ProviderId"}],type:"Option<Vec<SchemaGrantResponse>>"},getKeysByMsaId:{description:"Fetch Keys for an MSA Id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<KeyInfoResponse>"},getAllGrantedDelegationsByMsaId:{description:"Get the list of all delegated providers with schema permission grants",params:[{name:"delegator_msa_id",type:"DelegatorId"}],type:"Vec<DelegationResponse>"}},types:{MessageSourceId:"u64",DelegatorId:"MessageSourceId",ProviderId:"MessageSourceId",KeyInfoResponse:{msa_keys:"Vec<AccountId>",msa_id:"MessageSourceId"},SchemaGrantResponse:{schema_id:"SchemaId",revoked_at:"BlockNumber"},DelegationResponse:{provider_id:"ProviderId",permissions:"Vec<SchemaGrantResponse>"},CommonPrimitivesMsaDelegatorId:"u64",CommonPrimitivesMsaProviderId:"u64"}},hP={rpc:{getBySchemaId:{description:"Get messages by schemaId paginated",params:[{name:"schema_id",type:"SchemaId"},{name:"pagination",type:"BlockPaginationRequest"}],type:"BlockPaginationResponseMessage"}},types:{BlockPaginationRequest:{from_block:"BlockNumber",from_index:"u32",to_block:"BlockNumber",page_size:"u32"},MessageResponse:{payload:"Option<Vec<u8>>",cid:"Option<Vec<u8>>",provider_msa_id:"MessageSourceId",msa_id:"Option<MessageSourceId>",index:"u16",block_number:"BlockNumber",payload_length:"Option<u32>"},BlockPaginationResponseMessage:{content:"Vec<MessageResponse>",has_next:"bool",next_block:"Option<BlockNumber>",next_index:"Option<u32>"}}},pP={rpc:{getBySchemaId:{description:"Get a Schema by Id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"},checkSchemaValidity:{description:"",params:[{name:"model",type:"SchemaModel"},{name:"at",type:"BlockHash",isOptional:!0}],type:"bool"},getVersions:{description:"Get different versions and schema ids for a complete schema name or only a namespace",params:[{name:"schema_name",type:"String"}],type:"Option<Vec<SchemaVersionResponse>>"}},types:{SchemaId:"u16",SchemaModel:"Vec<u8>",SchemaVersion:"u8",SchemaResponse:{schema_id:"SchemaId",model:"SchemaModel",model_type:"ModelType",payload_location:"PayloadLocation",settings:"Vec<SchemaSetting>"},ModelType:{_enum:["AvroBinary","Parquet"]},PayloadLocation:{_enum:["OnChain","IPFS","Itemized","Paginated"]},SchemaSetting:{_enum:["AppendOnly","SignatureRequired"]},SchemaVersionResponse:{schema_name:"String",schema_version:"SchemaVersion",schema_id:"SchemaId"}}},mP={rpc:{getPaginatedStorage:{description:"Gets pages of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Vec<PaginatedStorageResponse>"},getItemizedStorage:{description:"Gets itemized of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"ItemizedStoragePageResponse"}},types:{PageId:"u16",PageHash:"u32",PageNonce:"u16",ItemizedStorageResponse:{index:"u16",payload:"Vec<u8>"},PaginatedStorageResponse:{page_id:"PageId",msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",payload:"Vec<u8>"},ItemizedStoragePageResponse:{msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",items:"Vec<ItemizedStorageResponse>"}}},bP={rpc:{getHandleForMsa:{description:"Get handle for a given msa_id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<HandleResponse>"},getMsaForHandle:{description:"Get msa_id for a given handle",params:[{name:"display_handle",type:"String"}],type:"Option<MessageSourceId>"},getNextSuffixes:{description:"Get next suffixes for a given handle and count",params:[{name:"base_handle",type:"String"},{name:"count",type:"u16"}],type:"PresumptiveSuffixesResponse"},validateHandle:{description:"Check whether the supplied handle passes all the checks performed by claim_handle call.",params:[{name:"base_handle",type:"String"}],type:"bool"}},types:{HandleSuffix:"u16",HandleResponse:{base_handle:"String",canonical_base:"String",suffix:"u16"},PresumptiveSuffixesResponse:{suffixes:"Vec<HandleSuffix>",base_handle:"String"}}},yP={rpc:{getEvents:{description:"Get block Events",params:[{name:"at",type:"H256"}],type:"Vec<RpcEvent>"},getMissingNonceValues:{description:"Get missing nonce values for an account",params:[{name:"account",type:"AccountId32"}],type:"Vec<Index>"}},types:{RpcEvent:{phase:"Option<u32>",pallet:"u8",event:"u8",data:"Vec<u8>"},SpConsensusSlotsSlotDuration:"u64"}},gP={rpc:{computeCapacityFeeDetails:{description:"Compute the capacity fee details for a given transaction",params:[{name:"encoded_xt",type:"Vec<u8>"},{name:"at",type:"Option<BlockHash>"}],type:"FeeDetails"}},types:{}},xP={rpc:{dummy:{description:"This API has no custom RPCs",params:[],type:"undefined"}},types:{RewardEra:"u32",UnclaimedRewardInfo:{reward_era:"RewardEra",expires_at_block:"BlockNumber",staked_amount:"Balance",eligible_amount:"Balance",earned_amount:"Balance"}}},Z8=Object.freeze(Object.defineProperty({__proto__:null,capacity:xP,frequency:yP,frequencyTxPayment:gP,handles:bP,messages:hP,msa:fP,schemas:pP,statefulStorage:mP},Symbol.toStringTag,{value:"Module"})),vP={transactionWatch_v1:{submitAndWatch:{description:"",type:"",params:[]},unwatch:{description:"",type:"",params:[]}},transaction_v1:{broadcast:{description:"",type:"",params:[]},stop:{description:"",type:"",params:[]}},chainHead_v1:{body:{description:"",type:"",params:[]},call:{description:"",type:"",params:[]},continue:{description:"",type:"",params:[]},follow:{description:"",type:"",params:[]},header:{description:"",type:"",params:[]},stopOperation:{description:"",type:"",params:[]},storage:{description:"",type:"",params:[]},unfollow:{description:"",type:"",params:[]},unpin:{description:"",type:"",params:[]}}};Object.entries(Z8).reduce((t,[e,n])=>({...t,...n.types}),{});Object.entries(Z8).reduce((t,[e,n])=>({...t,[e]:n.rpc}),{...vP});var Zf=(t=>(t.Handshake="handshake",t.WalletProxyResponseMessage="walletProxyResponseMessage",t))(Zf||{}),Qp=(t=>(t.FailedToOpenWindow="Failed to open window",t.MessagePortNotSet="MessagePort is not set.",t.FailedToEstablishHandshake="Failed to establish handshake with the window.",t))(Qp||{});let wP=class q8{constructor(){ft(this,"channel"),ft(this,"eventTarget"),ft(this,"handshakeComplete",!1),ft(this,"childWindow")}static async create(e,n){const r=new q8;return await r.initialize(e,n),r}async initialize(e,n){if(this.channel=new MessageChannel,this.eventTarget=new EventTarget,this.childWindow=window.open(e,"_blank",n),this.childWindow)await this.setupChannel(e);else throw new Error(Qp.FailedToOpenWindow)}setupChannel(e){return new Promise((n,r)=>{const i=setTimeout(()=>{this.handshakeComplete||(window.removeEventListener("message",a),r(new Error(Qp.FailedToEstablishHandshake)))},3e3),a=s=>{s.origin===new URL(e).origin&&s.data===Zf.Handshake&&(clearTimeout(i),this.childWindow.postMessage(Zf.Handshake,s.origin,[this.channel.port2]),this.channel.port1.onmessage=o=>{this.eventTarget.dispatchEvent(new CustomEvent(o.data.eventName,{detail:o.data.payload}))},this.channel.port1.start(),window.removeEventListener("message",a),console.log("handshake complete"),this.handshakeComplete=!0,n())};window.addEventListener("message",a)})}sendEvent(e,n){this.channel.port1.postMessage({eventName:e,payload:n})}on(e,n,r){const i=a=>{n(a)};this.eventTarget.addEventListener(e,i,r)}off(e,n){const r=i=>{n(i)};this.eventTarget.removeEventListener(e,r)}dispose(){this.channel.port1.close()}};var W8=(t=>(t.LOCALHOST="http://localhost:9944",t))(W8||{}),G8=(t=>(t.DEV="http://localhost:5173",t))(G8||{}),Ki=(t=>(t.CreateSponsoredAccountWithDelegation="createSponsoredAccountWithDelegation",t.GrantDelegation="grantDelegation",t.ClaimHandle="claimHandle",t))(Ki||{}),Br=(t=>(t.InvalidSignature="Invalid signature",t.ExpiredSignature="Transaction signature is expired",t.UnsupportedExtrinsic="Unsupported extrinsic call",t.InvalidMsaId="Invalid MSA ID",t.SignupKeysMismatch="Signing keys do not match",t.InvalidHex="Expected hex-encoded call",t.ApiNotReady="API is not ready",t.ResponseError="Error from response",t))(Br||{});const PP=[{name:"dsnp.profile-resources@v1"},{name:"dsnp.public-key-key-agreement@v1"},{name:"dsnp.public-follows@v1"},{name:"dsnp.private-follows@v1"},{name:"dsnp.private-connections@v1"}],Y8={providerId:"",proxyUrl:G8.DEV,frequencyRpcUrl:W8.LOCALHOST,schemas:PP,siwsOptions:{expiresInMsecs:3e5}};let _p=Y8;const MP=()=>_p,kb=t=>{_p={..._p,...t}};function K8(t){return t.startsWith("0x")}function kP(t){return t("return this")}const yo=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:kP(Function);function Vm(t,e){return typeof yo[t]>"u"?e:yo[t]}let TP=class{constructor(e){ft(this,"__encoding"),this.__encoding=e}decode(e){let n="";for(let r=0,i=e.length;r<i;r++)n+=String.fromCharCode(e[r]);return n}};const NP=Vm("TextDecoder",TP);let OP=class{encode(e){const n=e.length,r=new Uint8Array(n);for(let i=0;i<n;i++)r[i]=e.charCodeAt(i);return r}};const VP=Vm("TextEncoder",OP);function go(t){return typeof t=="function"}function J8(t,e){if(!t)throw new Error(go(e)?e():e)}function Pte(t,e){return J8(t!=null,e),t}function Mte(t){throw new Error(`This codepath should be unreachable. Unhandled input: ${t}`)}function SP(){return Number.NaN}const Tb=Vm("BigInt",SP),Th="0123456789abcdef",qf=new Uint8Array(256),Q8=new Uint8Array(256*256);for(let t=0,e=Th.length;t<e;t++)qf[Th[t].charCodeAt(0)|0]=t|0,t>9&&(qf[Th[t].toUpperCase().charCodeAt(0)|0]=t|0);for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)Q8[e|n]=qf[t]<<4|qf[n]}function $p(t,e=-1){if(!t)return new Uint8Array;let n=t.startsWith("0x")?2:0;const r=Math.ceil((t.length-n)/2),i=Math.ceil(e===-1?r:e/8),a=new Uint8Array(i),s=i>r?i-r:0;for(let o=s;o<i;o++,n+=2)a[o]=Q8[t.charCodeAt(n)<<8|t.charCodeAt(n+1)];return a}var _8=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function $8(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function EP(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(r){var i=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:function(){return t[r]}})}),n}var eg={exports:{}};const zP={},IP=Object.freeze(Object.defineProperty({__proto__:null,default:zP},Symbol.toStringTag,{value:"Module"})),LP=EP(IP);(function(t){(function(e,n){function r(c,l){if(!c)throw new Error(l||"Assertion failed")}function i(c,l){c.super_=l;var f=function(){};f.prototype=l.prototype,c.prototype=new f,c.prototype.constructor=c}function a(c,l,f){if(a.isBN(c))return c;this.negative=0,this.words=null,this.length=0,this.red=null,c!==null&&((l==="le"||l==="be")&&(f=l,l=10),this._init(c||0,l||10,f||"be"))}typeof e=="object"?e.exports=a:n.BN=a,a.BN=a,a.wordSize=26;var s;try{typeof window<"u"&&typeof window.Buffer<"u"?s=window.Buffer:s=LP.Buffer}catch{}a.isBN=function(c){return c instanceof a?!0:c!==null&&typeof c=="object"&&c.constructor.wordSize===a.wordSize&&Array.isArray(c.words)},a.max=function(c,l){return c.cmp(l)>0?c:l},a.min=function(c,l){return c.cmp(l)<0?c:l},a.prototype._init=function(c,l,f){if(typeof c=="number")return this._initNumber(c,l,f);if(typeof c=="object")return this._initArray(c,l,f);l==="hex"&&(l=16),r(l===(l|0)&&l>=2&&l<=36),c=c.toString().replace(/\s+/g,"");var b=0;c[0]==="-"&&(b++,this.negative=1),b<c.length&&(l===16?this._parseHex(c,b,f):(this._parseBase(c,l,b),f==="le"&&this._initArray(this.toArray(),l,f)))},a.prototype._initNumber=function(c,l,f){c<0&&(this.negative=1,c=-c),c<67108864?(this.words=[c&67108863],this.length=1):c<4503599627370496?(this.words=[c&67108863,c/67108864&67108863],this.length=2):(r(c<9007199254740992),this.words=[c&67108863,c/67108864&67108863,1],this.length=3),f==="le"&&this._initArray(this.toArray(),l,f)},a.prototype._initArray=function(c,l,f){if(r(typeof c.length=="number"),c.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(c.length/3),this.words=new Array(this.length);for(var b=0;b<this.length;b++)this.words[b]=0;var g,v,M=0;if(f==="be")for(b=c.length-1,g=0;b>=0;b-=3)v=c[b]|c[b-1]<<8|c[b-2]<<16,this.words[g]|=v<<M&67108863,this.words[g+1]=v>>>26-M&67108863,M+=24,M>=26&&(M-=26,g++);else if(f==="le")for(b=0,g=0;b<c.length;b+=3)v=c[b]|c[b+1]<<8|c[b+2]<<16,this.words[g]|=v<<M&67108863,this.words[g+1]=v>>>26-M&67108863,M+=24,M>=26&&(M-=26,g++);return this._strip()};function o(c,l){var f=c.charCodeAt(l);if(f>=48&&f<=57)return f-48;if(f>=65&&f<=70)return f-55;if(f>=97&&f<=102)return f-87;r(!1,"Invalid character in "+c)}function u(c,l,f){var b=o(c,f);return f-1>=l&&(b|=o(c,f-1)<<4),b}a.prototype._parseHex=function(c,l,f){this.length=Math.ceil((c.length-l)/6),this.words=new Array(this.length);for(var b=0;b<this.length;b++)this.words[b]=0;var g=0,v=0,M;if(f==="be")for(b=c.length-1;b>=l;b-=2)M=u(c,l,b)<<g,this.words[v]|=M&67108863,g>=18?(g-=18,v+=1,this.words[v]|=M>>>26):g+=8;else{var x=c.length-l;for(b=x%2===0?l+1:l;b<c.length;b+=2)M=u(c,l,b)<<g,this.words[v]|=M&67108863,g>=18?(g-=18,v+=1,this.words[v]|=M>>>26):g+=8}this._strip()};function h(c,l,f,b){for(var g=0,v=0,M=Math.min(c.length,f),x=l;x<M;x++){var d=c.charCodeAt(x)-48;g*=b,d>=49?v=d-49+10:d>=17?v=d-17+10:v=d,r(d>=0&&v<b,"Invalid character"),g+=v}return g}a.prototype._parseBase=function(c,l,f){this.words=[0],this.length=1;for(var b=0,g=1;g<=67108863;g*=l)b++;b--,g=g/l|0;for(var v=c.length-f,M=v%b,x=Math.min(v,v-M)+f,d=0,m=f;m<x;m+=b)d=h(c,m,m+b,l),this.imuln(g),this.words[0]+d<67108864?this.words[0]+=d:this._iaddn(d);if(M!==0){var V=1;for(d=h(c,m,c.length,l),m=0;m<M;m++)V*=l;this.imuln(V),this.words[0]+d<67108864?this.words[0]+=d:this._iaddn(d)}this._strip()},a.prototype.copy=function(c){c.words=new Array(this.length);for(var l=0;l<this.length;l++)c.words[l]=this.words[l];c.length=this.length,c.negative=this.negative,c.red=this.red};function p(c,l){c.words=l.words,c.length=l.length,c.negative=l.negative,c.red=l.red}if(a.prototype._move=function(c){p(c,this)},a.prototype.clone=function(){var c=new a(null);return this.copy(c),c},a.prototype._expand=function(c){for(;this.length<c;)this.words[this.length++]=0;return this},a.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},a.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{a.prototype[Symbol.for("nodejs.util.inspect.custom")]=y}catch{a.prototype.inspect=y}else a.prototype.inspect=y;function y(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var w=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],P=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],N=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];a.prototype.toString=function(c,l){c=c||10,l=l|0||1;var f;if(c===16||c==="hex"){f="";for(var b=0,g=0,v=0;v<this.length;v++){var M=this.words[v],x=((M<<b|g)&16777215).toString(16);g=M>>>24-b&16777215,b+=2,b>=26&&(b-=26,v--),g!==0||v!==this.length-1?f=w[6-x.length]+x+f:f=x+f}for(g!==0&&(f=g.toString(16)+f);f.length%l!==0;)f="0"+f;return this.negative!==0&&(f="-"+f),f}if(c===(c|0)&&c>=2&&c<=36){var d=P[c],m=N[c];f="";var V=this.clone();for(V.negative=0;!V.isZero();){var B=V.modrn(m).toString(c);V=V.idivn(m),V.isZero()?f=B+f:f=w[d-B.length]+B+f}for(this.isZero()&&(f="0"+f);f.length%l!==0;)f="0"+f;return this.negative!==0&&(f="-"+f),f}r(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var c=this.words[0];return this.length===2?c+=this.words[1]*67108864:this.length===3&&this.words[2]===1?c+=4503599627370496+this.words[1]*67108864:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-c:c},a.prototype.toJSON=function(){return this.toString(16,2)},s&&(a.prototype.toBuffer=function(c,l){return this.toArrayLike(s,c,l)}),a.prototype.toArray=function(c,l){return this.toArrayLike(Array,c,l)};var O=function(c,l){return c.allocUnsafe?c.allocUnsafe(l):new c(l)};a.prototype.toArrayLike=function(c,l,f){this._strip();var b=this.byteLength(),g=f||Math.max(1,b);r(b<=g,"byte array longer than desired length"),r(g>0,"Requested array length <= 0");var v=O(c,g),M=l==="le"?"LE":"BE";return this["_toArrayLike"+M](v,b),v},a.prototype._toArrayLikeLE=function(c,l){for(var f=0,b=0,g=0,v=0;g<this.length;g++){var M=this.words[g]<<v|b;c[f++]=M&255,f<c.length&&(c[f++]=M>>8&255),f<c.length&&(c[f++]=M>>16&255),v===6?(f<c.length&&(c[f++]=M>>24&255),b=0,v=0):(b=M>>>24,v+=2)}if(f<c.length)for(c[f++]=b;f<c.length;)c[f++]=0},a.prototype._toArrayLikeBE=function(c,l){for(var f=c.length-1,b=0,g=0,v=0;g<this.length;g++){var M=this.words[g]<<v|b;c[f--]=M&255,f>=0&&(c[f--]=M>>8&255),f>=0&&(c[f--]=M>>16&255),v===6?(f>=0&&(c[f--]=M>>24&255),b=0,v=0):(b=M>>>24,v+=2)}if(f>=0)for(c[f--]=b;f>=0;)c[f--]=0},Math.clz32?a.prototype._countBits=function(c){return 32-Math.clz32(c)}:a.prototype._countBits=function(c){var l=c,f=0;return l>=4096&&(f+=13,l>>>=13),l>=64&&(f+=7,l>>>=7),l>=8&&(f+=4,l>>>=4),l>=2&&(f+=2,l>>>=2),f+l},a.prototype._zeroBits=function(c){if(c===0)return 26;var l=c,f=0;return l&8191||(f+=13,l>>>=13),l&127||(f+=7,l>>>=7),l&15||(f+=4,l>>>=4),l&3||(f+=2,l>>>=2),l&1||f++,f},a.prototype.bitLength=function(){var c=this.words[this.length-1],l=this._countBits(c);return(this.length-1)*26+l};function z(c){for(var l=new Array(c.bitLength()),f=0;f<l.length;f++){var b=f/26|0,g=f%26;l[f]=c.words[b]>>>g&1}return l}a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var c=0,l=0;l<this.length;l++){var f=this._zeroBits(this.words[l]);if(c+=f,f!==26)break}return c},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(c){return this.negative!==0?this.abs().inotn(c).iaddn(1):this.clone()},a.prototype.fromTwos=function(c){return this.testn(c-1)?this.notn(c).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return this.negative!==0},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(c){for(;this.length<c.length;)this.words[this.length++]=0;for(var l=0;l<c.length;l++)this.words[l]=this.words[l]|c.words[l];return this._strip()},a.prototype.ior=function(c){return r((this.negative|c.negative)===0),this.iuor(c)},a.prototype.or=function(c){return this.length>c.length?this.clone().ior(c):c.clone().ior(this)},a.prototype.uor=function(c){return this.length>c.length?this.clone().iuor(c):c.clone().iuor(this)},a.prototype.iuand=function(c){var l;this.length>c.length?l=c:l=this;for(var f=0;f<l.length;f++)this.words[f]=this.words[f]&c.words[f];return this.length=l.length,this._strip()},a.prototype.iand=function(c){return r((this.negative|c.negative)===0),this.iuand(c)},a.prototype.and=function(c){return this.length>c.length?this.clone().iand(c):c.clone().iand(this)},a.prototype.uand=function(c){return this.length>c.length?this.clone().iuand(c):c.clone().iuand(this)},a.prototype.iuxor=function(c){var l,f;this.length>c.length?(l=this,f=c):(l=c,f=this);for(var b=0;b<f.length;b++)this.words[b]=l.words[b]^f.words[b];if(this!==l)for(;b<l.length;b++)this.words[b]=l.words[b];return this.length=l.length,this._strip()},a.prototype.ixor=function(c){return r((this.negative|c.negative)===0),this.iuxor(c)},a.prototype.xor=function(c){return this.length>c.length?this.clone().ixor(c):c.clone().ixor(this)},a.prototype.uxor=function(c){return this.length>c.length?this.clone().iuxor(c):c.clone().iuxor(this)},a.prototype.inotn=function(c){r(typeof c=="number"&&c>=0);var l=Math.ceil(c/26)|0,f=c%26;this._expand(l),f>0&&l--;for(var b=0;b<l;b++)this.words[b]=~this.words[b]&67108863;return f>0&&(this.words[b]=~this.words[b]&67108863>>26-f),this._strip()},a.prototype.notn=function(c){return this.clone().inotn(c)},a.prototype.setn=function(c,l){r(typeof c=="number"&&c>=0);var f=c/26|0,b=c%26;return this._expand(f+1),l?this.words[f]=this.words[f]|1<<b:this.words[f]=this.words[f]&~(1<<b),this._strip()},a.prototype.iadd=function(c){var l;if(this.negative!==0&&c.negative===0)return this.negative=0,l=this.isub(c),this.negative^=1,this._normSign();if(this.negative===0&&c.negative!==0)return c.negative=0,l=this.isub(c),c.negative=1,l._normSign();var f,b;this.length>c.length?(f=this,b=c):(f=c,b=this);for(var g=0,v=0;v<b.length;v++)l=(f.words[v]|0)+(b.words[v]|0)+g,this.words[v]=l&67108863,g=l>>>26;for(;g!==0&&v<f.length;v++)l=(f.words[v]|0)+g,this.words[v]=l&67108863,g=l>>>26;if(this.length=f.length,g!==0)this.words[this.length]=g,this.length++;else if(f!==this)for(;v<f.length;v++)this.words[v]=f.words[v];return this},a.prototype.add=function(c){var l;return c.negative!==0&&this.negative===0?(c.negative=0,l=this.sub(c),c.negative^=1,l):c.negative===0&&this.negative!==0?(this.negative=0,l=c.sub(this),this.negative=1,l):this.length>c.length?this.clone().iadd(c):c.clone().iadd(this)},a.prototype.isub=function(c){if(c.negative!==0){c.negative=0;var l=this.iadd(c);return c.negative=1,l._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(c),this.negative=1,this._normSign();var f=this.cmp(c);if(f===0)return this.negative=0,this.length=1,this.words[0]=0,this;var b,g;f>0?(b=this,g=c):(b=c,g=this);for(var v=0,M=0;M<g.length;M++)l=(b.words[M]|0)-(g.words[M]|0)+v,v=l>>26,this.words[M]=l&67108863;for(;v!==0&&M<b.length;M++)l=(b.words[M]|0)+v,v=l>>26,this.words[M]=l&67108863;if(v===0&&M<b.length&&b!==this)for(;M<b.length;M++)this.words[M]=b.words[M];return this.length=Math.max(this.length,M),b!==this&&(this.negative=1),this._strip()},a.prototype.sub=function(c){return this.clone().isub(c)};function j(c,l,f){f.negative=l.negative^c.negative;var b=c.length+l.length|0;f.length=b,b=b-1|0;var g=c.words[0]|0,v=l.words[0]|0,M=g*v,x=M&67108863,d=M/67108864|0;f.words[0]=x;for(var m=1;m<b;m++){for(var V=d>>>26,B=d&67108863,k=Math.min(m,l.length-1),Z=Math.max(0,m-c.length+1);Z<=k;Z++){var q=m-Z|0;g=c.words[q]|0,v=l.words[Z]|0,M=g*v+B,V+=M/67108864|0,B=M&67108863}f.words[m]=B|0,d=V|0}return d!==0?f.words[m]=d|0:f.length--,f._strip()}var I=function(c,l,f){var b=c.words,g=l.words,v=f.words,M=0,x,d,m,V=b[0]|0,B=V&8191,k=V>>>13,Z=b[1]|0,q=Z&8191,W=Z>>>13,J=b[2]|0,_=J&8191,K=J>>>13,se=b[3]|0,pe=se&8191,re=se>>>13,Fe=b[4]|0,Ce=Fe&8191,le=Fe>>>13,Ye=b[5]|0,je=Ye&8191,ge=Ye>>>13,Ke=b[6]|0,te=Ke&8191,ce=Ke>>>13,Ve=b[7]|0,Ue=Ve&8191,ue=Ve>>>13,lt=b[8]|0,We=lt&8191,xe=lt>>>13,yt=b[9]|0,$e=yt&8191,Se=yt>>>13,gt=g[0]|0,De=gt&8191,ve=gt>>>13,vt=g[1]|0,Ge=vt&8191,Pe=vt>>>13,Tt=g[2]|0,Je=Tt&8191,Ee=Tt>>>13,Ot=g[3]|0,et=Ot&8191,ze=Ot>>>13,wt=g[4]|0,tt=wt&8191,Ie=wt>>>13,xt=g[5]|0,nt=xt&8191,Le=xt>>>13,Vt=g[6]|0,rt=Vt&8191,He=Vt>>>13,St=g[7]|0,it=St&8191,Ae=St>>>13,Et=g[8]|0,at=Et&8191,Re=Et>>>13,zt=g[9]|0,st=zt&8191,Be=zt>>>13;f.negative=c.negative^l.negative,f.length=19,x=Math.imul(B,De),d=Math.imul(B,ve),d=d+Math.imul(k,De)|0,m=Math.imul(k,ve);var Pt=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,x=Math.imul(q,De),d=Math.imul(q,ve),d=d+Math.imul(W,De)|0,m=Math.imul(W,ve),x=x+Math.imul(B,Ge)|0,d=d+Math.imul(B,Pe)|0,d=d+Math.imul(k,Ge)|0,m=m+Math.imul(k,Pe)|0;var vn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(vn>>>26)|0,vn&=67108863,x=Math.imul(_,De),d=Math.imul(_,ve),d=d+Math.imul(K,De)|0,m=Math.imul(K,ve),x=x+Math.imul(q,Ge)|0,d=d+Math.imul(q,Pe)|0,d=d+Math.imul(W,Ge)|0,m=m+Math.imul(W,Pe)|0,x=x+Math.imul(B,Je)|0,d=d+Math.imul(B,Ee)|0,d=d+Math.imul(k,Je)|0,m=m+Math.imul(k,Ee)|0;var wn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(wn>>>26)|0,wn&=67108863,x=Math.imul(pe,De),d=Math.imul(pe,ve),d=d+Math.imul(re,De)|0,m=Math.imul(re,ve),x=x+Math.imul(_,Ge)|0,d=d+Math.imul(_,Pe)|0,d=d+Math.imul(K,Ge)|0,m=m+Math.imul(K,Pe)|0,x=x+Math.imul(q,Je)|0,d=d+Math.imul(q,Ee)|0,d=d+Math.imul(W,Je)|0,m=m+Math.imul(W,Ee)|0,x=x+Math.imul(B,et)|0,d=d+Math.imul(B,ze)|0,d=d+Math.imul(k,et)|0,m=m+Math.imul(k,ze)|0;var Pn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Pn>>>26)|0,Pn&=67108863,x=Math.imul(Ce,De),d=Math.imul(Ce,ve),d=d+Math.imul(le,De)|0,m=Math.imul(le,ve),x=x+Math.imul(pe,Ge)|0,d=d+Math.imul(pe,Pe)|0,d=d+Math.imul(re,Ge)|0,m=m+Math.imul(re,Pe)|0,x=x+Math.imul(_,Je)|0,d=d+Math.imul(_,Ee)|0,d=d+Math.imul(K,Je)|0,m=m+Math.imul(K,Ee)|0,x=x+Math.imul(q,et)|0,d=d+Math.imul(q,ze)|0,d=d+Math.imul(W,et)|0,m=m+Math.imul(W,ze)|0,x=x+Math.imul(B,tt)|0,d=d+Math.imul(B,Ie)|0,d=d+Math.imul(k,tt)|0,m=m+Math.imul(k,Ie)|0;var Mn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Mn>>>26)|0,Mn&=67108863,x=Math.imul(je,De),d=Math.imul(je,ve),d=d+Math.imul(ge,De)|0,m=Math.imul(ge,ve),x=x+Math.imul(Ce,Ge)|0,d=d+Math.imul(Ce,Pe)|0,d=d+Math.imul(le,Ge)|0,m=m+Math.imul(le,Pe)|0,x=x+Math.imul(pe,Je)|0,d=d+Math.imul(pe,Ee)|0,d=d+Math.imul(re,Je)|0,m=m+Math.imul(re,Ee)|0,x=x+Math.imul(_,et)|0,d=d+Math.imul(_,ze)|0,d=d+Math.imul(K,et)|0,m=m+Math.imul(K,ze)|0,x=x+Math.imul(q,tt)|0,d=d+Math.imul(q,Ie)|0,d=d+Math.imul(W,tt)|0,m=m+Math.imul(W,Ie)|0,x=x+Math.imul(B,nt)|0,d=d+Math.imul(B,Le)|0,d=d+Math.imul(k,nt)|0,m=m+Math.imul(k,Le)|0;var kn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(kn>>>26)|0,kn&=67108863,x=Math.imul(te,De),d=Math.imul(te,ve),d=d+Math.imul(ce,De)|0,m=Math.imul(ce,ve),x=x+Math.imul(je,Ge)|0,d=d+Math.imul(je,Pe)|0,d=d+Math.imul(ge,Ge)|0,m=m+Math.imul(ge,Pe)|0,x=x+Math.imul(Ce,Je)|0,d=d+Math.imul(Ce,Ee)|0,d=d+Math.imul(le,Je)|0,m=m+Math.imul(le,Ee)|0,x=x+Math.imul(pe,et)|0,d=d+Math.imul(pe,ze)|0,d=d+Math.imul(re,et)|0,m=m+Math.imul(re,ze)|0,x=x+Math.imul(_,tt)|0,d=d+Math.imul(_,Ie)|0,d=d+Math.imul(K,tt)|0,m=m+Math.imul(K,Ie)|0,x=x+Math.imul(q,nt)|0,d=d+Math.imul(q,Le)|0,d=d+Math.imul(W,nt)|0,m=m+Math.imul(W,Le)|0,x=x+Math.imul(B,rt)|0,d=d+Math.imul(B,He)|0,d=d+Math.imul(k,rt)|0,m=m+Math.imul(k,He)|0;var pr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(pr>>>26)|0,pr&=67108863,x=Math.imul(Ue,De),d=Math.imul(Ue,ve),d=d+Math.imul(ue,De)|0,m=Math.imul(ue,ve),x=x+Math.imul(te,Ge)|0,d=d+Math.imul(te,Pe)|0,d=d+Math.imul(ce,Ge)|0,m=m+Math.imul(ce,Pe)|0,x=x+Math.imul(je,Je)|0,d=d+Math.imul(je,Ee)|0,d=d+Math.imul(ge,Je)|0,m=m+Math.imul(ge,Ee)|0,x=x+Math.imul(Ce,et)|0,d=d+Math.imul(Ce,ze)|0,d=d+Math.imul(le,et)|0,m=m+Math.imul(le,ze)|0,x=x+Math.imul(pe,tt)|0,d=d+Math.imul(pe,Ie)|0,d=d+Math.imul(re,tt)|0,m=m+Math.imul(re,Ie)|0,x=x+Math.imul(_,nt)|0,d=d+Math.imul(_,Le)|0,d=d+Math.imul(K,nt)|0,m=m+Math.imul(K,Le)|0,x=x+Math.imul(q,rt)|0,d=d+Math.imul(q,He)|0,d=d+Math.imul(W,rt)|0,m=m+Math.imul(W,He)|0,x=x+Math.imul(B,it)|0,d=d+Math.imul(B,Ae)|0,d=d+Math.imul(k,it)|0,m=m+Math.imul(k,Ae)|0;var mr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(mr>>>26)|0,mr&=67108863,x=Math.imul(We,De),d=Math.imul(We,ve),d=d+Math.imul(xe,De)|0,m=Math.imul(xe,ve),x=x+Math.imul(Ue,Ge)|0,d=d+Math.imul(Ue,Pe)|0,d=d+Math.imul(ue,Ge)|0,m=m+Math.imul(ue,Pe)|0,x=x+Math.imul(te,Je)|0,d=d+Math.imul(te,Ee)|0,d=d+Math.imul(ce,Je)|0,m=m+Math.imul(ce,Ee)|0,x=x+Math.imul(je,et)|0,d=d+Math.imul(je,ze)|0,d=d+Math.imul(ge,et)|0,m=m+Math.imul(ge,ze)|0,x=x+Math.imul(Ce,tt)|0,d=d+Math.imul(Ce,Ie)|0,d=d+Math.imul(le,tt)|0,m=m+Math.imul(le,Ie)|0,x=x+Math.imul(pe,nt)|0,d=d+Math.imul(pe,Le)|0,d=d+Math.imul(re,nt)|0,m=m+Math.imul(re,Le)|0,x=x+Math.imul(_,rt)|0,d=d+Math.imul(_,He)|0,d=d+Math.imul(K,rt)|0,m=m+Math.imul(K,He)|0,x=x+Math.imul(q,it)|0,d=d+Math.imul(q,Ae)|0,d=d+Math.imul(W,it)|0,m=m+Math.imul(W,Ae)|0,x=x+Math.imul(B,at)|0,d=d+Math.imul(B,Re)|0,d=d+Math.imul(k,at)|0,m=m+Math.imul(k,Re)|0;var br=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(br>>>26)|0,br&=67108863,x=Math.imul($e,De),d=Math.imul($e,ve),d=d+Math.imul(Se,De)|0,m=Math.imul(Se,ve),x=x+Math.imul(We,Ge)|0,d=d+Math.imul(We,Pe)|0,d=d+Math.imul(xe,Ge)|0,m=m+Math.imul(xe,Pe)|0,x=x+Math.imul(Ue,Je)|0,d=d+Math.imul(Ue,Ee)|0,d=d+Math.imul(ue,Je)|0,m=m+Math.imul(ue,Ee)|0,x=x+Math.imul(te,et)|0,d=d+Math.imul(te,ze)|0,d=d+Math.imul(ce,et)|0,m=m+Math.imul(ce,ze)|0,x=x+Math.imul(je,tt)|0,d=d+Math.imul(je,Ie)|0,d=d+Math.imul(ge,tt)|0,m=m+Math.imul(ge,Ie)|0,x=x+Math.imul(Ce,nt)|0,d=d+Math.imul(Ce,Le)|0,d=d+Math.imul(le,nt)|0,m=m+Math.imul(le,Le)|0,x=x+Math.imul(pe,rt)|0,d=d+Math.imul(pe,He)|0,d=d+Math.imul(re,rt)|0,m=m+Math.imul(re,He)|0,x=x+Math.imul(_,it)|0,d=d+Math.imul(_,Ae)|0,d=d+Math.imul(K,it)|0,m=m+Math.imul(K,Ae)|0,x=x+Math.imul(q,at)|0,d=d+Math.imul(q,Re)|0,d=d+Math.imul(W,at)|0,m=m+Math.imul(W,Re)|0,x=x+Math.imul(B,st)|0,d=d+Math.imul(B,Be)|0,d=d+Math.imul(k,st)|0,m=m+Math.imul(k,Be)|0;var yr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(yr>>>26)|0,yr&=67108863,x=Math.imul($e,Ge),d=Math.imul($e,Pe),d=d+Math.imul(Se,Ge)|0,m=Math.imul(Se,Pe),x=x+Math.imul(We,Je)|0,d=d+Math.imul(We,Ee)|0,d=d+Math.imul(xe,Je)|0,m=m+Math.imul(xe,Ee)|0,x=x+Math.imul(Ue,et)|0,d=d+Math.imul(Ue,ze)|0,d=d+Math.imul(ue,et)|0,m=m+Math.imul(ue,ze)|0,x=x+Math.imul(te,tt)|0,d=d+Math.imul(te,Ie)|0,d=d+Math.imul(ce,tt)|0,m=m+Math.imul(ce,Ie)|0,x=x+Math.imul(je,nt)|0,d=d+Math.imul(je,Le)|0,d=d+Math.imul(ge,nt)|0,m=m+Math.imul(ge,Le)|0,x=x+Math.imul(Ce,rt)|0,d=d+Math.imul(Ce,He)|0,d=d+Math.imul(le,rt)|0,m=m+Math.imul(le,He)|0,x=x+Math.imul(pe,it)|0,d=d+Math.imul(pe,Ae)|0,d=d+Math.imul(re,it)|0,m=m+Math.imul(re,Ae)|0,x=x+Math.imul(_,at)|0,d=d+Math.imul(_,Re)|0,d=d+Math.imul(K,at)|0,m=m+Math.imul(K,Re)|0,x=x+Math.imul(q,st)|0,d=d+Math.imul(q,Be)|0,d=d+Math.imul(W,st)|0,m=m+Math.imul(W,Be)|0;var gr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(gr>>>26)|0,gr&=67108863,x=Math.imul($e,Je),d=Math.imul($e,Ee),d=d+Math.imul(Se,Je)|0,m=Math.imul(Se,Ee),x=x+Math.imul(We,et)|0,d=d+Math.imul(We,ze)|0,d=d+Math.imul(xe,et)|0,m=m+Math.imul(xe,ze)|0,x=x+Math.imul(Ue,tt)|0,d=d+Math.imul(Ue,Ie)|0,d=d+Math.imul(ue,tt)|0,m=m+Math.imul(ue,Ie)|0,x=x+Math.imul(te,nt)|0,d=d+Math.imul(te,Le)|0,d=d+Math.imul(ce,nt)|0,m=m+Math.imul(ce,Le)|0,x=x+Math.imul(je,rt)|0,d=d+Math.imul(je,He)|0,d=d+Math.imul(ge,rt)|0,m=m+Math.imul(ge,He)|0,x=x+Math.imul(Ce,it)|0,d=d+Math.imul(Ce,Ae)|0,d=d+Math.imul(le,it)|0,m=m+Math.imul(le,Ae)|0,x=x+Math.imul(pe,at)|0,d=d+Math.imul(pe,Re)|0,d=d+Math.imul(re,at)|0,m=m+Math.imul(re,Re)|0,x=x+Math.imul(_,st)|0,d=d+Math.imul(_,Be)|0,d=d+Math.imul(K,st)|0,m=m+Math.imul(K,Be)|0;var xr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(xr>>>26)|0,xr&=67108863,x=Math.imul($e,et),d=Math.imul($e,ze),d=d+Math.imul(Se,et)|0,m=Math.imul(Se,ze),x=x+Math.imul(We,tt)|0,d=d+Math.imul(We,Ie)|0,d=d+Math.imul(xe,tt)|0,m=m+Math.imul(xe,Ie)|0,x=x+Math.imul(Ue,nt)|0,d=d+Math.imul(Ue,Le)|0,d=d+Math.imul(ue,nt)|0,m=m+Math.imul(ue,Le)|0,x=x+Math.imul(te,rt)|0,d=d+Math.imul(te,He)|0,d=d+Math.imul(ce,rt)|0,m=m+Math.imul(ce,He)|0,x=x+Math.imul(je,it)|0,d=d+Math.imul(je,Ae)|0,d=d+Math.imul(ge,it)|0,m=m+Math.imul(ge,Ae)|0,x=x+Math.imul(Ce,at)|0,d=d+Math.imul(Ce,Re)|0,d=d+Math.imul(le,at)|0,m=m+Math.imul(le,Re)|0,x=x+Math.imul(pe,st)|0,d=d+Math.imul(pe,Be)|0,d=d+Math.imul(re,st)|0,m=m+Math.imul(re,Be)|0;var vr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(vr>>>26)|0,vr&=67108863,x=Math.imul($e,tt),d=Math.imul($e,Ie),d=d+Math.imul(Se,tt)|0,m=Math.imul(Se,Ie),x=x+Math.imul(We,nt)|0,d=d+Math.imul(We,Le)|0,d=d+Math.imul(xe,nt)|0,m=m+Math.imul(xe,Le)|0,x=x+Math.imul(Ue,rt)|0,d=d+Math.imul(Ue,He)|0,d=d+Math.imul(ue,rt)|0,m=m+Math.imul(ue,He)|0,x=x+Math.imul(te,it)|0,d=d+Math.imul(te,Ae)|0,d=d+Math.imul(ce,it)|0,m=m+Math.imul(ce,Ae)|0,x=x+Math.imul(je,at)|0,d=d+Math.imul(je,Re)|0,d=d+Math.imul(ge,at)|0,m=m+Math.imul(ge,Re)|0,x=x+Math.imul(Ce,st)|0,d=d+Math.imul(Ce,Be)|0,d=d+Math.imul(le,st)|0,m=m+Math.imul(le,Be)|0;var wr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(wr>>>26)|0,wr&=67108863,x=Math.imul($e,nt),d=Math.imul($e,Le),d=d+Math.imul(Se,nt)|0,m=Math.imul(Se,Le),x=x+Math.imul(We,rt)|0,d=d+Math.imul(We,He)|0,d=d+Math.imul(xe,rt)|0,m=m+Math.imul(xe,He)|0,x=x+Math.imul(Ue,it)|0,d=d+Math.imul(Ue,Ae)|0,d=d+Math.imul(ue,it)|0,m=m+Math.imul(ue,Ae)|0,x=x+Math.imul(te,at)|0,d=d+Math.imul(te,Re)|0,d=d+Math.imul(ce,at)|0,m=m+Math.imul(ce,Re)|0,x=x+Math.imul(je,st)|0,d=d+Math.imul(je,Be)|0,d=d+Math.imul(ge,st)|0,m=m+Math.imul(ge,Be)|0;var Pr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Pr>>>26)|0,Pr&=67108863,x=Math.imul($e,rt),d=Math.imul($e,He),d=d+Math.imul(Se,rt)|0,m=Math.imul(Se,He),x=x+Math.imul(We,it)|0,d=d+Math.imul(We,Ae)|0,d=d+Math.imul(xe,it)|0,m=m+Math.imul(xe,Ae)|0,x=x+Math.imul(Ue,at)|0,d=d+Math.imul(Ue,Re)|0,d=d+Math.imul(ue,at)|0,m=m+Math.imul(ue,Re)|0,x=x+Math.imul(te,st)|0,d=d+Math.imul(te,Be)|0,d=d+Math.imul(ce,st)|0,m=m+Math.imul(ce,Be)|0;var Mr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Mr>>>26)|0,Mr&=67108863,x=Math.imul($e,it),d=Math.imul($e,Ae),d=d+Math.imul(Se,it)|0,m=Math.imul(Se,Ae),x=x+Math.imul(We,at)|0,d=d+Math.imul(We,Re)|0,d=d+Math.imul(xe,at)|0,m=m+Math.imul(xe,Re)|0,x=x+Math.imul(Ue,st)|0,d=d+Math.imul(Ue,Be)|0,d=d+Math.imul(ue,st)|0,m=m+Math.imul(ue,Be)|0;var kr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(kr>>>26)|0,kr&=67108863,x=Math.imul($e,at),d=Math.imul($e,Re),d=d+Math.imul(Se,at)|0,m=Math.imul(Se,Re),x=x+Math.imul(We,st)|0,d=d+Math.imul(We,Be)|0,d=d+Math.imul(xe,st)|0,m=m+Math.imul(xe,Be)|0;var Tr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Tr>>>26)|0,Tr&=67108863,x=Math.imul($e,st),d=Math.imul($e,Be),d=d+Math.imul(Se,st)|0,m=Math.imul(Se,Be);var Nr=(M+x|0)+((d&8191)<<13)|0;return M=(m+(d>>>13)|0)+(Nr>>>26)|0,Nr&=67108863,v[0]=Pt,v[1]=vn,v[2]=wn,v[3]=Pn,v[4]=Mn,v[5]=kn,v[6]=pr,v[7]=mr,v[8]=br,v[9]=yr,v[10]=gr,v[11]=xr,v[12]=vr,v[13]=wr,v[14]=Pr,v[15]=Mr,v[16]=kr,v[17]=Tr,v[18]=Nr,M!==0&&(v[19]=M,f.length++),f};Math.imul||(I=j);function A(c,l,f){f.negative=l.negative^c.negative,f.length=c.length+l.length;for(var b=0,g=0,v=0;v<f.length-1;v++){var M=g;g=0;for(var x=b&67108863,d=Math.min(v,l.length-1),m=Math.max(0,v-c.length+1);m<=d;m++){var V=v-m,B=c.words[V]|0,k=l.words[m]|0,Z=B*k,q=Z&67108863;M=M+(Z/67108864|0)|0,q=q+x|0,x=q&67108863,M=M+(q>>>26)|0,g+=M>>>26,M&=67108863}f.words[v]=x,b=M,M=g}return b!==0?f.words[v]=b:f.length--,f._strip()}function U(c,l,f){return A(c,l,f)}a.prototype.mulTo=function(c,l){var f,b=this.length+c.length;return this.length===10&&c.length===10?f=I(this,c,l):b<63?f=j(this,c,l):b<1024?f=A(this,c,l):f=U(this,c,l),f},a.prototype.mul=function(c){var l=new a(null);return l.words=new Array(this.length+c.length),this.mulTo(c,l)},a.prototype.mulf=function(c){var l=new a(null);return l.words=new Array(this.length+c.length),U(this,c,l)},a.prototype.imul=function(c){return this.clone().mulTo(c,this)},a.prototype.imuln=function(c){var l=c<0;l&&(c=-c),r(typeof c=="number"),r(c<67108864);for(var f=0,b=0;b<this.length;b++){var g=(this.words[b]|0)*c,v=(g&67108863)+(f&67108863);f>>=26,f+=g/67108864|0,f+=v>>>26,this.words[b]=v&67108863}return f!==0&&(this.words[b]=f,this.length++),this.length=c===0?1:this.length,l?this.ineg():this},a.prototype.muln=function(c){return this.clone().imuln(c)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(c){var l=z(c);if(l.length===0)return new a(1);for(var f=this,b=0;b<l.length&&l[b]===0;b++,f=f.sqr());if(++b<l.length)for(var g=f.sqr();b<l.length;b++,g=g.sqr())l[b]!==0&&(f=f.mul(g));return f},a.prototype.iushln=function(c){r(typeof c=="number"&&c>=0);var l=c%26,f=(c-l)/26,b=67108863>>>26-l<<26-l,g;if(l!==0){var v=0;for(g=0;g<this.length;g++){var M=this.words[g]&b,x=(this.words[g]|0)-M<<l;this.words[g]=x|v,v=M>>>26-l}v&&(this.words[g]=v,this.length++)}if(f!==0){for(g=this.length-1;g>=0;g--)this.words[g+f]=this.words[g];for(g=0;g<f;g++)this.words[g]=0;this.length+=f}return this._strip()},a.prototype.ishln=function(c){return r(this.negative===0),this.iushln(c)},a.prototype.iushrn=function(c,l,f){r(typeof c=="number"&&c>=0);var b;l?b=(l-l%26)/26:b=0;var g=c%26,v=Math.min((c-g)/26,this.length),M=67108863^67108863>>>g<<g,x=f;if(b-=v,b=Math.max(0,b),x){for(var d=0;d<v;d++)x.words[d]=this.words[d];x.length=v}if(v!==0)if(this.length>v)for(this.length-=v,d=0;d<this.length;d++)this.words[d]=this.words[d+v];else this.words[0]=0,this.length=1;var m=0;for(d=this.length-1;d>=0&&(m!==0||d>=b);d--){var V=this.words[d]|0;this.words[d]=m<<26-g|V>>>g,m=V&M}return x&&m!==0&&(x.words[x.length++]=m),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},a.prototype.ishrn=function(c,l,f){return r(this.negative===0),this.iushrn(c,l,f)},a.prototype.shln=function(c){return this.clone().ishln(c)},a.prototype.ushln=function(c){return this.clone().iushln(c)},a.prototype.shrn=function(c){return this.clone().ishrn(c)},a.prototype.ushrn=function(c){return this.clone().iushrn(c)},a.prototype.testn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,f=(c-l)/26,b=1<<l;if(this.length<=f)return!1;var g=this.words[f];return!!(g&b)},a.prototype.imaskn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,f=(c-l)/26;if(r(this.negative===0,"imaskn works only with positive numbers"),this.length<=f)return this;if(l!==0&&f++,this.length=Math.min(f,this.length),l!==0){var b=67108863^67108863>>>l<<l;this.words[this.length-1]&=b}return this._strip()},a.prototype.maskn=function(c){return this.clone().imaskn(c)},a.prototype.iaddn=function(c){return r(typeof c=="number"),r(c<67108864),c<0?this.isubn(-c):this.negative!==0?this.length===1&&(this.words[0]|0)<=c?(this.words[0]=c-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(c),this.negative=1,this):this._iaddn(c)},a.prototype._iaddn=function(c){this.words[0]+=c;for(var l=0;l<this.length&&this.words[l]>=67108864;l++)this.words[l]-=67108864,l===this.length-1?this.words[l+1]=1:this.words[l+1]++;return this.length=Math.max(this.length,l+1),this},a.prototype.isubn=function(c){if(r(typeof c=="number"),r(c<67108864),c<0)return this.iaddn(-c);if(this.negative!==0)return this.negative=0,this.iaddn(c),this.negative=1,this;if(this.words[0]-=c,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var l=0;l<this.length&&this.words[l]<0;l++)this.words[l]+=67108864,this.words[l+1]-=1;return this._strip()},a.prototype.addn=function(c){return this.clone().iaddn(c)},a.prototype.subn=function(c){return this.clone().isubn(c)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(c,l,f){var b=c.length+f,g;this._expand(b);var v,M=0;for(g=0;g<c.length;g++){v=(this.words[g+f]|0)+M;var x=(c.words[g]|0)*l;v-=x&67108863,M=(v>>26)-(x/67108864|0),this.words[g+f]=v&67108863}for(;g<this.length-f;g++)v=(this.words[g+f]|0)+M,M=v>>26,this.words[g+f]=v&67108863;if(M===0)return this._strip();for(r(M===-1),M=0,g=0;g<this.length;g++)v=-(this.words[g]|0)+M,M=v>>26,this.words[g]=v&67108863;return this.negative=1,this._strip()},a.prototype._wordDiv=function(c,l){var f=this.length-c.length,b=this.clone(),g=c,v=g.words[g.length-1]|0,M=this._countBits(v);f=26-M,f!==0&&(g=g.ushln(f),b.iushln(f),v=g.words[g.length-1]|0);var x=b.length-g.length,d;if(l!=="mod"){d=new a(null),d.length=x+1,d.words=new Array(d.length);for(var m=0;m<d.length;m++)d.words[m]=0}var V=b.clone()._ishlnsubmul(g,1,x);V.negative===0&&(b=V,d&&(d.words[x]=1));for(var B=x-1;B>=0;B--){var k=(b.words[g.length+B]|0)*67108864+(b.words[g.length+B-1]|0);for(k=Math.min(k/v|0,67108863),b._ishlnsubmul(g,k,B);b.negative!==0;)k--,b.negative=0,b._ishlnsubmul(g,1,B),b.isZero()||(b.negative^=1);d&&(d.words[B]=k)}return d&&d._strip(),b._strip(),l!=="div"&&f!==0&&b.iushrn(f),{div:d||null,mod:b}},a.prototype.divmod=function(c,l,f){if(r(!c.isZero()),this.isZero())return{div:new a(0),mod:new a(0)};var b,g,v;return this.negative!==0&&c.negative===0?(v=this.neg().divmod(c,l),l!=="mod"&&(b=v.div.neg()),l!=="div"&&(g=v.mod.neg(),f&&g.negative!==0&&g.iadd(c)),{div:b,mod:g}):this.negative===0&&c.negative!==0?(v=this.divmod(c.neg(),l),l!=="mod"&&(b=v.div.neg()),{div:b,mod:v.mod}):this.negative&c.negative?(v=this.neg().divmod(c.neg(),l),l!=="div"&&(g=v.mod.neg(),f&&g.negative!==0&&g.isub(c)),{div:v.div,mod:g}):c.length>this.length||this.cmp(c)<0?{div:new a(0),mod:this}:c.length===1?l==="div"?{div:this.divn(c.words[0]),mod:null}:l==="mod"?{div:null,mod:new a(this.modrn(c.words[0]))}:{div:this.divn(c.words[0]),mod:new a(this.modrn(c.words[0]))}:this._wordDiv(c,l)},a.prototype.div=function(c){return this.divmod(c,"div",!1).div},a.prototype.mod=function(c){return this.divmod(c,"mod",!1).mod},a.prototype.umod=function(c){return this.divmod(c,"mod",!0).mod},a.prototype.divRound=function(c){var l=this.divmod(c);if(l.mod.isZero())return l.div;var f=l.div.negative!==0?l.mod.isub(c):l.mod,b=c.ushrn(1),g=c.andln(1),v=f.cmp(b);return v<0||g===1&&v===0?l.div:l.div.negative!==0?l.div.isubn(1):l.div.iaddn(1)},a.prototype.modrn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var f=(1<<26)%c,b=0,g=this.length-1;g>=0;g--)b=(f*b+(this.words[g]|0))%c;return l?-b:b},a.prototype.modn=function(c){return this.modrn(c)},a.prototype.idivn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var f=0,b=this.length-1;b>=0;b--){var g=(this.words[b]|0)+f*67108864;this.words[b]=g/c|0,f=g%c}return this._strip(),l?this.ineg():this},a.prototype.divn=function(c){return this.clone().idivn(c)},a.prototype.egcd=function(c){r(c.negative===0),r(!c.isZero());var l=this,f=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var b=new a(1),g=new a(0),v=new a(0),M=new a(1),x=0;l.isEven()&&f.isEven();)l.iushrn(1),f.iushrn(1),++x;for(var d=f.clone(),m=l.clone();!l.isZero();){for(var V=0,B=1;!(l.words[0]&B)&&V<26;++V,B<<=1);if(V>0)for(l.iushrn(V);V-- >0;)(b.isOdd()||g.isOdd())&&(b.iadd(d),g.isub(m)),b.iushrn(1),g.iushrn(1);for(var k=0,Z=1;!(f.words[0]&Z)&&k<26;++k,Z<<=1);if(k>0)for(f.iushrn(k);k-- >0;)(v.isOdd()||M.isOdd())&&(v.iadd(d),M.isub(m)),v.iushrn(1),M.iushrn(1);l.cmp(f)>=0?(l.isub(f),b.isub(v),g.isub(M)):(f.isub(l),v.isub(b),M.isub(g))}return{a:v,b:M,gcd:f.iushln(x)}},a.prototype._invmp=function(c){r(c.negative===0),r(!c.isZero());var l=this,f=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var b=new a(1),g=new a(0),v=f.clone();l.cmpn(1)>0&&f.cmpn(1)>0;){for(var M=0,x=1;!(l.words[0]&x)&&M<26;++M,x<<=1);if(M>0)for(l.iushrn(M);M-- >0;)b.isOdd()&&b.iadd(v),b.iushrn(1);for(var d=0,m=1;!(f.words[0]&m)&&d<26;++d,m<<=1);if(d>0)for(f.iushrn(d);d-- >0;)g.isOdd()&&g.iadd(v),g.iushrn(1);l.cmp(f)>=0?(l.isub(f),b.isub(g)):(f.isub(l),g.isub(b))}var V;return l.cmpn(1)===0?V=b:V=g,V.cmpn(0)<0&&V.iadd(c),V},a.prototype.gcd=function(c){if(this.isZero())return c.abs();if(c.isZero())return this.abs();var l=this.clone(),f=c.clone();l.negative=0,f.negative=0;for(var b=0;l.isEven()&&f.isEven();b++)l.iushrn(1),f.iushrn(1);do{for(;l.isEven();)l.iushrn(1);for(;f.isEven();)f.iushrn(1);var g=l.cmp(f);if(g<0){var v=l;l=f,f=v}else if(g===0||f.cmpn(1)===0)break;l.isub(f)}while(!0);return f.iushln(b)},a.prototype.invm=function(c){return this.egcd(c).a.umod(c)},a.prototype.isEven=function(){return(this.words[0]&1)===0},a.prototype.isOdd=function(){return(this.words[0]&1)===1},a.prototype.andln=function(c){return this.words[0]&c},a.prototype.bincn=function(c){r(typeof c=="number");var l=c%26,f=(c-l)/26,b=1<<l;if(this.length<=f)return this._expand(f+1),this.words[f]|=b,this;for(var g=b,v=f;g!==0&&v<this.length;v++){var M=this.words[v]|0;M+=g,g=M>>>26,M&=67108863,this.words[v]=M}return g!==0&&(this.words[v]=g,this.length++),this},a.prototype.isZero=function(){return this.length===1&&this.words[0]===0},a.prototype.cmpn=function(c){var l=c<0;if(this.negative!==0&&!l)return-1;if(this.negative===0&&l)return 1;this._strip();var f;if(this.length>1)f=1;else{l&&(c=-c),r(c<=67108863,"Number is too big");var b=this.words[0]|0;f=b===c?0:b<c?-1:1}return this.negative!==0?-f|0:f},a.prototype.cmp=function(c){if(this.negative!==0&&c.negative===0)return-1;if(this.negative===0&&c.negative!==0)return 1;var l=this.ucmp(c);return this.negative!==0?-l|0:l},a.prototype.ucmp=function(c){if(this.length>c.length)return 1;if(this.length<c.length)return-1;for(var l=0,f=this.length-1;f>=0;f--){var b=this.words[f]|0,g=c.words[f]|0;if(b!==g){b<g?l=-1:b>g&&(l=1);break}}return l},a.prototype.gtn=function(c){return this.cmpn(c)===1},a.prototype.gt=function(c){return this.cmp(c)===1},a.prototype.gten=function(c){return this.cmpn(c)>=0},a.prototype.gte=function(c){return this.cmp(c)>=0},a.prototype.ltn=function(c){return this.cmpn(c)===-1},a.prototype.lt=function(c){return this.cmp(c)===-1},a.prototype.lten=function(c){return this.cmpn(c)<=0},a.prototype.lte=function(c){return this.cmp(c)<=0},a.prototype.eqn=function(c){return this.cmpn(c)===0},a.prototype.eq=function(c){return this.cmp(c)===0},a.red=function(c){return new E(c)},a.prototype.toRed=function(c){return r(!this.red,"Already a number in reduction context"),r(this.negative===0,"red works only with positives"),c.convertTo(this)._forceRed(c)},a.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(c){return this.red=c,this},a.prototype.forceRed=function(c){return r(!this.red,"Already a number in reduction context"),this._forceRed(c)},a.prototype.redAdd=function(c){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,c)},a.prototype.redIAdd=function(c){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,c)},a.prototype.redSub=function(c){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,c)},a.prototype.redISub=function(c){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,c)},a.prototype.redShl=function(c){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,c)},a.prototype.redMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.mul(this,c)},a.prototype.redIMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.imul(this,c)},a.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(c){return r(this.red&&!c.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,c)};var H={k256:null,p224:null,p192:null,p25519:null};function X(c,l){this.name=c,this.p=new a(l,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}X.prototype._tmp=function(){var c=new a(null);return c.words=new Array(Math.ceil(this.n/13)),c},X.prototype.ireduce=function(c){var l=c,f;do this.split(l,this.tmp),l=this.imulK(l),l=l.iadd(this.tmp),f=l.bitLength();while(f>this.n);var b=f<this.n?-1:l.ucmp(this.p);return b===0?(l.words[0]=0,l.length=1):b>0?l.isub(this.p):l.strip!==void 0?l.strip():l._strip(),l},X.prototype.split=function(c,l){c.iushrn(this.n,0,l)},X.prototype.imulK=function(c){return c.imul(this.k)};function C(){X.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}i(C,X),C.prototype.split=function(c,l){for(var f=4194303,b=Math.min(c.length,9),g=0;g<b;g++)l.words[g]=c.words[g];if(l.length=b,c.length<=9){c.words[0]=0,c.length=1;return}var v=c.words[9];for(l.words[l.length++]=v&f,g=10;g<c.length;g++){var M=c.words[g]|0;c.words[g-10]=(M&f)<<4|v>>>22,v=M}v>>>=22,c.words[g-10]=v,v===0&&c.length>10?c.length-=10:c.length-=9},C.prototype.imulK=function(c){c.words[c.length]=0,c.words[c.length+1]=0,c.length+=2;for(var l=0,f=0;f<c.length;f++){var b=c.words[f]|0;l+=b*977,c.words[f]=l&67108863,l=b*64+(l/67108864|0)}return c.words[c.length-1]===0&&(c.length--,c.words[c.length-1]===0&&c.length--),c};function F(){X.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}i(F,X);function S(){X.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}i(S,X);function R(){X.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}i(R,X),R.prototype.imulK=function(c){for(var l=0,f=0;f<c.length;f++){var b=(c.words[f]|0)*19+l,g=b&67108863;b>>>=26,c.words[f]=g,l=b}return l!==0&&(c.words[c.length++]=l),c},a._prime=function(c){if(H[c])return H[c];var l;if(c==="k256")l=new C;else if(c==="p224")l=new F;else if(c==="p192")l=new S;else if(c==="p25519")l=new R;else throw new Error("Unknown prime "+c);return H[c]=l,l};function E(c){if(typeof c=="string"){var l=a._prime(c);this.m=l.p,this.prime=l}else r(c.gtn(1),"modulus must be greater than 1"),this.m=c,this.prime=null}E.prototype._verify1=function(c){r(c.negative===0,"red works only with positives"),r(c.red,"red works only with red numbers")},E.prototype._verify2=function(c,l){r((c.negative|l.negative)===0,"red works only with positives"),r(c.red&&c.red===l.red,"red works only with red numbers")},E.prototype.imod=function(c){return this.prime?this.prime.ireduce(c)._forceRed(this):(p(c,c.umod(this.m)._forceRed(this)),c)},E.prototype.neg=function(c){return c.isZero()?c.clone():this.m.sub(c)._forceRed(this)},E.prototype.add=function(c,l){this._verify2(c,l);var f=c.add(l);return f.cmp(this.m)>=0&&f.isub(this.m),f._forceRed(this)},E.prototype.iadd=function(c,l){this._verify2(c,l);var f=c.iadd(l);return f.cmp(this.m)>=0&&f.isub(this.m),f},E.prototype.sub=function(c,l){this._verify2(c,l);var f=c.sub(l);return f.cmpn(0)<0&&f.iadd(this.m),f._forceRed(this)},E.prototype.isub=function(c,l){this._verify2(c,l);var f=c.isub(l);return f.cmpn(0)<0&&f.iadd(this.m),f},E.prototype.shl=function(c,l){return this._verify1(c),this.imod(c.ushln(l))},E.prototype.imul=function(c,l){return this._verify2(c,l),this.imod(c.imul(l))},E.prototype.mul=function(c,l){return this._verify2(c,l),this.imod(c.mul(l))},E.prototype.isqr=function(c){return this.imul(c,c.clone())},E.prototype.sqr=function(c){return this.mul(c,c)},E.prototype.sqrt=function(c){if(c.isZero())return c.clone();var l=this.m.andln(3);if(r(l%2===1),l===3){var f=this.m.add(new a(1)).iushrn(2);return this.pow(c,f)}for(var b=this.m.subn(1),g=0;!b.isZero()&&b.andln(1)===0;)g++,b.iushrn(1);r(!b.isZero());var v=new a(1).toRed(this),M=v.redNeg(),x=this.m.subn(1).iushrn(1),d=this.m.bitLength();for(d=new a(2*d*d).toRed(this);this.pow(d,x).cmp(M)!==0;)d.redIAdd(M);for(var m=this.pow(d,b),V=this.pow(c,b.addn(1).iushrn(1)),B=this.pow(c,b),k=g;B.cmp(v)!==0;){for(var Z=B,q=0;Z.cmp(v)!==0;q++)Z=Z.redSqr();r(q<k);var W=this.pow(m,new a(1).iushln(k-q-1));V=V.redMul(W),m=W.redSqr(),B=B.redMul(m),k=q}return V},E.prototype.invm=function(c){var l=c._invmp(this.m);return l.negative!==0?(l.negative=0,this.imod(l).redNeg()):this.imod(l)},E.prototype.pow=function(c,l){if(l.isZero())return new a(1).toRed(this);if(l.cmpn(1)===0)return c.clone();var f=4,b=new Array(1<<f);b[0]=new a(1).toRed(this),b[1]=c;for(var g=2;g<b.length;g++)b[g]=this.mul(b[g-1],c);var v=b[0],M=0,x=0,d=l.bitLength()%26;for(d===0&&(d=26),g=l.length-1;g>=0;g--){for(var m=l.words[g],V=d-1;V>=0;V--){var B=m>>V&1;if(v!==b[0]&&(v=this.sqr(v)),B===0&&M===0){x=0;continue}M<<=1,M|=B,x++,!(x!==f&&(g!==0||V!==0))&&(v=this.mul(v,b[M]),x=0,M=0)}d=26}return v},E.prototype.convertTo=function(c){var l=c.umod(this.m);return l===c?l.clone():l},E.prototype.convertFrom=function(c){var l=c.clone();return l.red=null,l},a.mont=function(c){return new L(c)};function L(c){E.call(this,c),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}i(L,E),L.prototype.convertTo=function(c){return this.imod(c.ushln(this.shift))},L.prototype.convertFrom=function(c){var l=this.imod(c.mul(this.rinv));return l.red=null,l},L.prototype.imul=function(c,l){if(c.isZero()||l.isZero())return c.words[0]=0,c.length=1,c;var f=c.imul(l),b=f.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),g=f.isub(b).iushrn(this.shift),v=g;return g.cmp(this.m)>=0?v=g.isub(this.m):g.cmpn(0)<0&&(v=g.iadd(this.m)),v._forceRed(this)},L.prototype.mul=function(c,l){if(c.isZero()||l.isZero())return new a(0)._forceRed(this);var f=c.mul(l),b=f.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),g=f.isub(b).iushrn(this.shift),v=g;return g.cmp(this.m)>=0?v=g.isub(this.m):g.cmpn(0)<0&&(v=g.iadd(this.m)),v._forceRed(this)},L.prototype.invm=function(c){var l=this.imod(c._invmp(this.m).mul(this.r2));return l._forceRed(this)}})(t,_8)})(eg);var HP=eg.exports;const hs=$8(HP),tg=/^0x[\da-fA-F]+$/,AP=/^[\da-fA-F]+$/;function Bl(t,e=-1,n){return typeof t=="string"&&(t==="0x"||tg.test(t))&&(e===-1?n||t.length%2===0:t.length===2+Math.ceil(e/4))}function ng(t){return!!t&&typeof t=="object"}function rg(...t){return e=>(ng(e)||go(e))&&t.every(n=>go(e[n]))}function kte(...t){return e=>go(e)&&t.every(n=>go(e[n]))}function Tte(...t){return e=>ng(e)&&t.every(n=>go(e[n]))}const RP=rg("toBigInt"),BP=rg("toBn"),Xc=typeof Tb=="function"&&typeof Tb.asIntN=="function",XP=typeof yo.Buffer=="function"&&typeof yo.Buffer.isBuffer=="function";yo.process;function jP(t){return XP&&!!t&&go(t.readDoubleLE)&&yo.Buffer.isBuffer(t)}function ig(t){return(t&&t.constructor)===Uint8Array||t instanceof Uint8Array}const CP=new VP;function Sm(t){return t?CP.encode(t.toString()):new Uint8Array}function Ft(t,e=!1){if(e&&t==null)throw new Error("u8aToU8a: Expected non-null, non-undefined value");return ig(t)?jP(t)?new Uint8Array(t):t:Bl(t)?$p(t):Array.isArray(t)?new Uint8Array(t):Sm(t)}function Wf(...t){const e=t.length,n=new Array(e);let r=0;for(let i=0;i<e;i++)n[i]=Ft(t[i]),r+=n[i].length;return ag(n,r)}function ag(t,e=0){const n=t.length;let r=0;if(!e)for(let a=0;a<n;a++)e+=t[a].length;const i=new Uint8Array(e);for(let a=0;a<n;a++)i.set(t[a],r),r+=t[a].length;return i}function mc(t,e){const n=Ft(t),r=Ft(e);if(n.length===r.length){const i=new DataView(n.buffer,n.byteOffset),a=new DataView(r.buffer,r.byteOffset),s=n.length%4|0,o=n.length-s|0;for(let u=0;u<o;u+=4)if(i.getUint32(u)!==a.getUint32(u))return!1;for(let u=o,h=n.length;u<h;u++)if(n[u]!==r[u])return!1;return!0}return!1}const Gf=new Array(256),sg=new Array(256*256);for(let t=0;t<256;t++)Gf[t]=t.toString(16).padStart(2,"0");for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)sg[e|n]=Gf[t]+Gf[n]}function Nh(t,e){const n=t.length%2|0,r=t.length-n|0;for(let i=0;i<r;i+=2)e+=sg[t[i]<<8|t[i+1]];return n&&(e+=Gf[t[r]|0]),e}function Vd(t,e=-1,n=!0){const r=n?"0x":"";if(t!=null&&t.length){if(e>0){const i=Math.ceil(e/8);if(t.length>i)return`${Nh(t.subarray(0,i/2),r)}…${Nh(t.subarray(t.length-i/2),"")}`}}else return r;return Nh(t,r)}const UP=new NP("utf-8");function Nb(t){return t?UP.decode(t):""}const Oh=Ft(`Ethereum Signed Message:
`),yl=Ft("<Bytes>"),gl=Ft("</Bytes>"),DP=yl.length+gl.length;function Yf(t,e){return t.length>=DP&&mc(t.subarray(0,yl.length),yl)&&mc(t.slice(-gl.length),gl)||e&&t.length>=Oh.length&&mc(t.subarray(0,Oh.length),Oh)}function FP(t){const e=Ft(t);return Yf(e,!1)?e.subarray(yl.length,e.length-gl.length):e}function og(t){const e=Ft(t);return Yf(e,!0)?e:ag([yl,e,gl])}function ZP(t){if(!t||t==="0x")return"";if(tg.test(t))return t.substring(2);if(AP.test(t))return t;throw new Error(`Expected hex value to convert, found '${t}'`)}function qP(t,{isLe:e=!1,isNegative:n=!1}={}){if(!t||t==="0x")return new hs(0);const r=ZP(t),i=new hs(r,16,e?"le":"be");return n?i.fromTwos(r.length*4):i}function WP(t){return typeof t=="bigint"}function GP(t){return t?hs.isBN(t)?t:Bl(t)?qP(t.toString()):WP(t)?new hs(t.toString()):BP(t)?t.toBn():RP(t)?new hs(t.toBigInt().toString()):new hs(t):new hs(0)}const YP={bitLength:-1,isLe:!0,isNegative:!1};function Ob(t,{bitLength:e=-1,isLe:n=!0,isNegative:r=!1}=YP){const i=GP(t),a=Math.ceil(e===-1?i.bitLength()/8:(e||0)/8);if(!t)return e===-1?new Uint8Array(1):new Uint8Array(a);const s=new Uint8Array(a),o=r?i.toTwos(a*8):i;return s.set(o.toArray(n?"le":"be",a),0),s}const KP=yo.crypto;function JP(t){return KP.getRandomValues(t)}const Sd={getRandomValues:JP},QP={crypto:Sd};let _P=class{constructor(e){ft(this,"__internal__bridge"),ft(this,"abort",()=>{throw new Error("abort")}),ft(this,"__wbindgen_is_undefined",n=>this.__internal__bridge.getObject(n)===void 0),ft(this,"__wbindgen_throw",(n,r)=>{throw new Error(this.__internal__bridge.getString(n,r))}),ft(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(QP)),ft(this,"__wbg_require_604837428532a733",(n,r)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(n,r)}`)}),ft(this,"__wbg_crypto_968f1772287e2df0",n=>this.__internal__bridge.addObject(Sd)),ft(this,"__wbg_getRandomValues_a3d34b4fee3c2869",n=>this.__internal__bridge.addObject(Sd.getRandomValues)),ft(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(n,r,i)=>{Sd.getRandomValues(this.__internal__bridge.getU8a(r,i))}),ft(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(n,r,i)=>{throw new Error("randomFillsync is not available")}),ft(this,"__wbindgen_object_drop_ref",n=>{this.__internal__bridge.takeObject(n)}),this.__internal__bridge=e}},$P=class{constructor(e){ft(this,"__internal__createWasm"),ft(this,"__internal__heap"),ft(this,"__internal__wbg"),ft(this,"__internal__cachegetInt32"),ft(this,"__internal__cachegetUint8"),ft(this,"__internal__heapNext"),ft(this,"__internal__wasm"),ft(this,"__internal__wasmError"),ft(this,"__internal__wasmPromise"),ft(this,"__internal__type"),this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new _P(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){(!this.__internal__wasmPromise||e)&&(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:n,type:r,wasm:i}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=i,this.__internal__wasmError=n,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const n=this.getObject(e);return this.dropObject(e),n}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const n=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[n],this.__internal__heap[n]=e,n}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,n){return this.getUint8().subarray(e/1,e/1+n)}getString(e,n){return Nb(this.getU8a(e,n))}allocU8a(e){const n=this.__internal__wasm.__wbindgen_malloc(e.length*1);return this.getUint8().set(e,n/1),[n,e.length]}allocString(e){return this.allocU8a(Sm(e))}resultU8a(){const e=this.getInt32()[2],n=this.getInt32()[8/4+1],r=this.getU8a(e,n).slice();return this.__internal__wasm.__wbindgen_free(e,n*1),r}resultString(){return Nb(this.resultU8a())}};function eM(t,e,n){return async r=>{const i={error:null,type:"none",wasm:null};try{if(e!=null&&e.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const a=await WebAssembly.instantiate(e,{wbg:r});i.wasm=a.instance.exports,i.type="wasm"}catch(a){i.error=`FATAL: Unable to initialize @polkadot/wasm-${t}:: ${a.message}`,console.error(i.error)}return i}}const Vb="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",cg=new Array(256);for(let t=0,e=Vb.length;t<e;t++)cg[Vb.charCodeAt(t)]=t;function tM(t,e){let n=0,r=0,i=-1;for(let a=0,s=e.length-1;i!==s;a++)n=n<<6|cg[t.charCodeAt(a)],(r+=6)>=8&&(e[++i]=n>>>(r-=8)&255);return e}const Wi=Uint8Array,co=Uint16Array,e1=Uint32Array,nM=new Wi([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ug=new Wi([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),lg=new Wi([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),dg=(t,e)=>{const n=new co(31);for(let i=0;i<31;++i)n[i]=e+=1<<t[i-1];const r=new e1(n[30]);for(let i=1;i<30;++i)for(let a=n[i];a<n[i+1];++a)r[a]=a-n[i]<<5|i;return[n,r]},[fg,rM]=dg(ug,2);fg[28]=258,rM[258]=28;const[iM]=dg(lg,0),hg=new co(32768);for(let t=0;t<32768;++t){let e=(t&43690)>>>1|(t&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,hg[t]=((e&65280)>>>8|(e&255)<<8)>>>1}const $u=(t,e,n)=>{const r=t.length;let i=0;const a=new co(e);for(;i<r;++i)t[i]&&++a[t[i]-1];const s=new co(e);for(i=1;i<e;++i)s[i]=s[i-1]+a[i-1]<<1;let o;{o=new co(1<<e);const u=15-e;for(i=0;i<r;++i)if(t[i]){const h=i<<4|t[i],p=e-t[i];let y=s[t[i]-1]++<<p;for(const w=y|(1<<p)-1;y<=w;++y)o[hg[y]>>u]=h}}return o},Xl=new Wi(288);for(let t=0;t<144;++t)Xl[t]=8;for(let t=144;t<256;++t)Xl[t]=9;for(let t=256;t<280;++t)Xl[t]=7;for(let t=280;t<288;++t)Xl[t]=8;const pg=new Wi(32);for(let t=0;t<32;++t)pg[t]=5;const aM=$u(Xl,9),sM=$u(pg,5),di=(t,e,n)=>{const r=e>>>3;return(t[r]|t[r+1]<<8)>>>(e&7)&n},Vh=(t,e)=>{const n=e>>>3;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>>(e&7)},oM=t=>(t>>>3)+(t&7&&1),cM=(t,e,n)=>{(n==null||n>t.length)&&(n=t.length);const r=new(t instanceof co?co:t instanceof e1?e1:Wi)(n-e);return r.set(t.subarray(e,n)),r},Sh=t=>{let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e},uM=(t,e,n)=>{const r=!n||n.i;n||(n={});const i=t.length,a=!e||!r;e||(e=new Wi(i*3));const s=O=>{let z=e.length;if(O>z){const j=new Wi(Math.max(z<<1,O));j.set(e),e=j}};let o=n.f||0,u=n.p||0,h=n.b||0,p=n.l,y=n.d,w=n.m,P=n.n;if(o&&!p)return e;const N=i<<3;do{if(!p){n.f=o=di(t,u,1);const I=di(t,u+1,3);if(u+=3,I)if(I==1)p=aM,y=sM,w=9,P=5;else if(I==2){const A=di(t,u,31)+257,U=di(t,u+10,15)+4,H=A+di(t,u+5,31)+1;u+=14;const X=new Wi(H),C=new Wi(19);for(let c=0;c<U;++c)C[nM[c]]=di(t,u+c*3,7);u+=U*3;const F=Sh(C),S=(1<<F)-1;if(!r&&u+H*(F+7)>N)break;const R=$u(C,F);for(let c=0;c<H;){const l=R[di(t,u,S)];u+=l&15;const f=l>>>4;if(f<16)X[c++]=f;else{let b=0,g=0;for(f==16?(g=3+di(t,u,3),u+=2,b=X[c-1]):f==17?(g=3+di(t,u,7),u+=3):f==18&&(g=11+di(t,u,127),u+=7);g--;)X[c++]=b}}const E=X.subarray(0,A),L=X.subarray(A);w=Sh(E),P=Sh(L),p=$u(E,w),y=$u(L,P)}else throw"invalid block type";else{const A=oM(u)+4,U=t[A-4]|t[A-3]<<8,H=A+U;if(H>i){if(r)throw"unexpected EOF";break}a&&s(h+U),e.set(t.subarray(A,H),h),n.b=h+=U,n.p=u=H<<3;continue}if(u>N)throw"unexpected EOF"}a&&s(h+131072);const O=(1<<w)-1,z=(1<<P)-1,j=w+P+18;for(;r||u+j<N;){const I=p[Vh(t,u)&O],A=I>>>4;if(u+=I&15,u>N)throw"unexpected EOF";if(!I)throw"invalid length/literal";if(A<256)e[h++]=A;else if(A==256){p=void 0;break}else{let U=A-254;if(A>264){const S=A-257,R=ug[S];U=di(t,u,(1<<R)-1)+fg[S],u+=R}const H=y[Vh(t,u)&z],X=H>>>4;if(!H)throw"invalid distance";u+=H&15;let C=iM[X];if(X>3){const S=lg[X];C+=Vh(t,u)&(1<<S)-1,u+=S}if(u>N)throw"unexpected EOF";a&&s(h+131072);const F=h+U;for(;h<F;h+=4)e[h]=e[h-C],e[h+1]=e[h+1-C],e[h+2]=e[h+2-C],e[h+3]=e[h+3-C];h=F}}n.l=p,n.p=u,n.b=h,p&&(o=1,n.m=w,n.d=y,n.n=P)}while(!o);return h==e.length?e:cM(e,0,h)},lM=t=>{if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function dM(t,e){return uM((lM(t),t.subarray(2,-4)),e)}var fM=171008,hM=339468,pM="";const mM=dM(tM(pM,new Uint8Array(fM)),new Uint8Array(hM)),bM=eM("crypto",mM),Ct=new $P(bM);async function yM(t){return Ct.init(t)}function Ia(t){return(...e)=>{if(!Ct.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return t(Ct.wasm,...e)}}const gM=Ia((t,e,n,r)=>t.ext_ed_verify(...Ct.allocU8a(e),...Ct.allocU8a(n),...Ct.allocU8a(r))!==0),xM=Ia((t,e)=>(t.ext_secp_pub_compress(8,...Ct.allocU8a(e)),Ct.resultU8a())),vM=Ia((t,e)=>(t.ext_secp_pub_expand(8,...Ct.allocU8a(e)),Ct.resultU8a())),wM=Ia((t,e,n,r)=>(t.ext_secp_recover(8,...Ct.allocU8a(e),...Ct.allocU8a(n),r),Ct.resultU8a())),PM=Ia((t,e,n,r)=>t.ext_sr_verify(...Ct.allocU8a(e),...Ct.allocU8a(n),...Ct.allocU8a(r))!==0),MM=Ia((t,e,n,r)=>(t.ext_blake2b(8,...Ct.allocU8a(e),...Ct.allocU8a(n),r),Ct.resultU8a())),kM=Ia((t,e)=>(t.ext_keccak256(8,...Ct.allocU8a(e)),Ct.resultU8a())),TM=Ia((t,e)=>(t.ext_keccak512(8,...Ct.allocU8a(e)),Ct.resultU8a())),Vte=Ia((t,e,n)=>(t.ext_twox(8,...Ct.allocU8a(e),n),Ct.resultU8a()));function Mo(){return!!Ct.wasm}async function NM(){try{return!!await yM()}catch{return!1}}function mg(){return NM().then(()=>{if(!Mo())throw new Error("Unable to initialize @polkadot/util-crypto");return!0}).catch(()=>!1)}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function OM(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function bg(t,e){return Array.isArray(e)?e.length===0?!0:t?e.every(n=>typeof n=="string"):e.every(n=>Number.isSafeInteger(n)):!1}function t1(t,e){if(typeof e!="string")throw new Error(`${t}: string expected`);return!0}function yg(t){if(!Number.isSafeInteger(t))throw new Error(`invalid integer: ${t}`)}function n1(t){if(!Array.isArray(t))throw new Error("array expected")}function gg(t,e){if(!bg(!0,e))throw new Error(`${t}: array of strings expected`)}function VM(t,e){if(!bg(!1,e))throw new Error(`${t}: array of numbers expected`)}function SM(...t){const e=a=>a,n=(a,s)=>o=>a(s(o)),r=t.map(a=>a.encode).reduceRight(n,e),i=t.map(a=>a.decode).reduce(n,e);return{encode:r,decode:i}}function EM(t){const e=t.split(""),n=e.length;gg("alphabet",e);const r=new Map(e.map((i,a)=>[i,a]));return{encode:i=>(n1(i),i.map(a=>{if(!Number.isSafeInteger(a)||a<0||a>=n)throw new Error(`alphabet.encode: digit index outside alphabet "${a}". Allowed: ${t}`);return e[a]})),decode:i=>(n1(i),i.map(a=>{t1("alphabet.decode",a);const s=r.get(a);if(s===void 0)throw new Error(`Unknown letter: "${a}". Allowed: ${t}`);return s}))}}function zM(t=""){return t1("join",t),{encode:e=>(gg("join.decode",e),e.join(t)),decode:e=>(t1("join.decode",e),e.split(t))}}function Sb(t,e,n){if(e<2)throw new Error(`convertRadix: invalid from=${e}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: invalid to=${n}, base cannot be less than 2`);if(n1(t),!t.length)return[];let r=0;const i=[],a=Array.from(t,o=>{if(yg(o),o<0||o>=e)throw new Error(`invalid integer: ${o}`);return o}),s=a.length;for(;;){let o=0,u=!0;for(let h=r;h<s;h++){const p=a[h],y=e*o,w=y+p;if(!Number.isSafeInteger(w)||y/e!==o||w-p!==y)throw new Error("convertRadix: carry overflow");const P=w/n;o=w%n;const N=Math.floor(P);if(a[h]=N,!Number.isSafeInteger(N)||N*n+o!==w)throw new Error("convertRadix: carry overflow");if(u)N?u=!1:r=h;else continue}if(i.push(o),u)break}for(let o=0;o<t.length-1&&t[o]===0;o++)i.push(0);return i.reverse()}function IM(t){yg(t);const e=2**8;return{encode:n=>{if(!OM(n))throw new Error("radix.encode input should be Uint8Array");return Sb(Array.from(n),e,t)},decode:n=>(VM("radix.decode",n),Uint8Array.from(Sb(n,t,e)))}}const LM=t=>SM(IM(58),EM(t),zM("")),HM=LM("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function AM({coder:t,ipfs:e},n){return(r,i)=>(n(r,i),t.decode(i?r.substring(1):r))}function RM({coder:t,ipfs:e}){return(n,r)=>{const i=t.encode(Ft(n));return r?`${e}${i}`:i}}function BM({chars:t,ipfs:e,type:n,withPadding:r}){return(i,a)=>{if(typeof i!="string")throw new Error(`Expected ${n} string input`);if(a&&!i.startsWith(e))throw new Error(`Expected ipfs-compatible ${n} to start with '${e}'`);for(let s=a?1:0,o=i.length;s<o;s++)if(!t.includes(i[s]))if(r&&i[s]==="="){if(s!==o-1&&i[s+1]!=="=")throw new Error(`Invalid ${n} padding sequence "${i[s]}${i[s+1]}" at index ${s}`)}else throw new Error(`Invalid ${n} character "${i[s]}" (0x${i.charCodeAt(s).toString(16)}) at index ${s}`);return!0}}const Em={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:HM,ipfs:"z",type:"base58"},XM=BM(Em),jM=AM(Em,XM),CM=RM(Em),Ho=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function zm(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function ws(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function Xr(t,...e){if(!zm(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function UM(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");ws(t.outputLen),ws(t.blockLen)}function Ps(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function Im(t,e){Xr(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function xl(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function Pi(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function Eh(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function Ni(t,e){return t<<32-e|t>>>e}const xg=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function vg(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const sa=xg?t=>t:t=>vg(t);function DM(t){for(let e=0;e<t.length;e++)t[e]=vg(t[e]);return t}const ss=xg?t=>t:DM,wg=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",FM=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function kc(t){if(Xr(t),wg)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=FM[t[n]];return e}const ta={_0:48,_9:57,A:65,F:70,a:97,f:102};function Eb(t){if(t>=ta._0&&t<=ta._9)return t-ta._0;if(t>=ta.A&&t<=ta.F)return t-(ta.A-10);if(t>=ta.a&&t<=ta.f)return t-(ta.a-10)}function Lm(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(wg)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let i=0,a=0;i<n;i++,a+=2){const s=Eb(t.charCodeAt(a)),o=Eb(t.charCodeAt(a+1));if(s===void 0||o===void 0){const u=t[a]+t[a+1];throw new Error('hex string expected, got non-hex character "'+u+'" at index '+a)}r[i]=s*16+o}return r}function ZM(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function Pa(t){return typeof t=="string"&&(t=ZM(t)),Xr(t),t}function ga(...t){let e=0;for(let r=0;r<t.length;r++){const i=t[r];Xr(i),e+=i.length}const n=new Uint8Array(e);for(let r=0,i=0;r<t.length;r++){const a=t[r];n.set(a,i),i+=a.length}return n}let z0=class{};function Hm(t){const e=r=>t().update(Pa(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function qM(t){const e=(r,i)=>t(i).update(Pa(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function Pg(t=32){if(Ho&&typeof Ho.getRandomValues=="function")return Ho.getRandomValues(new Uint8Array(t));if(Ho&&typeof Ho.randomBytes=="function")return Uint8Array.from(Ho.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}const WM=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]);function GM(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const i=BigInt(32),a=BigInt(4294967295),s=Number(n>>i&a),o=Number(n&a),u=r?4:0,h=r?0:4;t.setUint32(e+u,s,r),t.setUint32(e+h,o,r)}function YM(t,e,n){return t&e^~t&n}function KM(t,e,n){return t&e^t&n^e&n}let Mg=class extends z0{constructor(e,n,r,i){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=i,this.buffer=new Uint8Array(e),this.view=Eh(this.buffer)}update(e){Ps(this),e=Pa(e),Xr(e);const{view:n,buffer:r,blockLen:i}=this,a=e.length;for(let s=0;s<a;){const o=Math.min(i-this.pos,a-s);if(o===i){const u=Eh(e);for(;i<=a-s;s+=i)this.process(u,s);continue}r.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===i&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Ps(this),Im(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:i,isLE:a}=this;let{pos:s}=this;n[s++]=128,Pi(this.buffer.subarray(s)),this.padOffset>i-s&&(this.process(r,0),s=0);for(let y=s;y<i;y++)n[y]=0;GM(r,i-8,BigInt(this.length*8),a),this.process(r,0);const o=Eh(e),u=this.outputLen;if(u%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const h=u/4,p=this.get();if(h>p.length)throw new Error("_sha2: outputLen bigger than state");for(let y=0;y<h;y++)o.setUint32(4*y,p[y],a)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:i,finished:a,destroyed:s,pos:o}=this;return e.destroyed=s,e.finished=a,e.length=i,e.pos=o,i%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}};const ja=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Xn=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),ad=BigInt(2**32-1),zb=BigInt(32);function kg(t,e=!1){return e?{h:Number(t&ad),l:Number(t>>zb&ad)}:{h:Number(t>>zb&ad)|0,l:Number(t&ad)|0}}function Tg(t,e=!1){const n=t.length;let r=new Uint32Array(n),i=new Uint32Array(n);for(let a=0;a<n;a++){const{h:s,l:o}=kg(t[a],e);[r[a],i[a]]=[s,o]}return[r,i]}const Ib=(t,e,n)=>t>>>n,Lb=(t,e,n)=>t<<32-n|e>>>n,os=(t,e,n)=>t>>>n|e<<32-n,cs=(t,e,n)=>t<<32-n|e>>>n,cu=(t,e,n)=>t<<64-n|e>>>n-32,uu=(t,e,n)=>t>>>n-32|e<<64-n,JM=(t,e)=>e,QM=(t,e)=>t,_M=(t,e,n)=>t<<n|e>>>32-n,$M=(t,e,n)=>e<<n|t>>>32-n,ek=(t,e,n)=>e<<n-32|t>>>64-n,tk=(t,e,n)=>t<<n-32|e>>>64-n;function yi(t,e,n,r){const i=(e>>>0)+(r>>>0);return{h:t+n+(i/2**32|0)|0,l:i|0}}const Am=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),Rm=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,nk=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),rk=(t,e,n,r,i)=>e+n+r+i+(t/2**32|0)|0,ik=(t,e,n,r,i)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(i>>>0),ak=(t,e,n,r,i,a)=>e+n+r+i+a+(t/2**32|0)|0,hn=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),Me=new Uint32Array(32);function Ca(t,e,n,r,i,a){const s=i[a],o=i[a+1];let u=Me[2*t],h=Me[2*t+1],p=Me[2*e],y=Me[2*e+1],w=Me[2*n],P=Me[2*n+1],N=Me[2*r],O=Me[2*r+1],z=Am(u,p,s);h=Rm(z,h,y,o),u=z|0,{Dh:O,Dl:N}={Dh:O^h,Dl:N^u},{Dh:O,Dl:N}={Dh:JM(O,N),Dl:QM(O)},{h:P,l:w}=yi(P,w,O,N),{Bh:y,Bl:p}={Bh:y^P,Bl:p^w},{Bh:y,Bl:p}={Bh:os(y,p,24),Bl:cs(y,p,24)},Me[2*t]=u,Me[2*t+1]=h,Me[2*e]=p,Me[2*e+1]=y,Me[2*n]=w,Me[2*n+1]=P,Me[2*r]=N,Me[2*r+1]=O}function Ua(t,e,n,r,i,a){const s=i[a],o=i[a+1];let u=Me[2*t],h=Me[2*t+1],p=Me[2*e],y=Me[2*e+1],w=Me[2*n],P=Me[2*n+1],N=Me[2*r],O=Me[2*r+1],z=Am(u,p,s);h=Rm(z,h,y,o),u=z|0,{Dh:O,Dl:N}={Dh:O^h,Dl:N^u},{Dh:O,Dl:N}={Dh:os(O,N,16),Dl:cs(O,N,16)},{h:P,l:w}=yi(P,w,O,N),{Bh:y,Bl:p}={Bh:y^P,Bl:p^w},{Bh:y,Bl:p}={Bh:cu(y,p,63),Bl:uu(y,p,63)},Me[2*t]=u,Me[2*t+1]=h,Me[2*e]=p,Me[2*e+1]=y,Me[2*n]=w,Me[2*n+1]=P,Me[2*r]=N,Me[2*r+1]=O}function sk(t,e={},n,r,i){if(ws(n),t<0||t>n)throw new Error("outputLen bigger than keyLen");const{key:a,salt:s,personalization:o}=e;if(a!==void 0&&(a.length<1||a.length>n))throw new Error("key length must be undefined or 1.."+n);if(s!==void 0&&s.length!==r)throw new Error("salt must be undefined or "+r);if(o!==void 0&&o.length!==i)throw new Error("personalization must be undefined or "+i)}let ok=class extends z0{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,ws(e),ws(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=xl(this.buffer)}update(e){Ps(this),e=Pa(e),Xr(e);const{blockLen:n,buffer:r,buffer32:i}=this,a=e.length,s=e.byteOffset,o=e.buffer;for(let u=0;u<a;){this.pos===n&&(ss(i),this.compress(i,0,!1),ss(i),this.pos=0);const h=Math.min(n-this.pos,a-u),p=s+u;if(h===n&&!(p%4)&&u+h<a){const y=new Uint32Array(o,p,Math.floor((a-u)/4));ss(y);for(let w=0;u+n<a;w+=i.length,u+=n)this.length+=n,this.compress(y,w,!1);ss(y);continue}r.set(e.subarray(u,u+h),this.pos),this.pos+=h,this.length+=h,u+=h}return this}digestInto(e){Ps(this),Im(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,Pi(this.buffer.subarray(n)),ss(r),this.compress(r,0,!0),ss(r);const i=xl(e);this.get().forEach((a,s)=>i[s]=sa(a))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:i,destroyed:a,outputLen:s,pos:o}=this;return e||(e=new this.constructor({dkLen:s})),e.set(...this.get()),e.buffer.set(n),e.destroyed=a,e.finished=i,e.length=r,e.pos=o,e.outputLen=s,e}clone(){return this._cloneInto()}},ck=class extends ok{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=hn[0]|0,this.v0h=hn[1]|0,this.v1l=hn[2]|0,this.v1h=hn[3]|0,this.v2l=hn[4]|0,this.v2h=hn[5]|0,this.v3l=hn[6]|0,this.v3h=hn[7]|0,this.v4l=hn[8]|0,this.v4h=hn[9]|0,this.v5l=hn[10]|0,this.v5h=hn[11]|0,this.v6l=hn[12]|0,this.v6h=hn[13]|0,this.v7l=hn[14]|0,this.v7h=hn[15]|0,sk(n,e,64,16,16);let{key:r,personalization:i,salt:a}=e,s=0;if(r!==void 0&&(r=Pa(r),s=r.length),this.v0l^=this.outputLen|s<<8|65536|1<<24,a!==void 0){a=Pa(a);const o=xl(a);this.v4l^=sa(o[0]),this.v4h^=sa(o[1]),this.v5l^=sa(o[2]),this.v5h^=sa(o[3])}if(i!==void 0){i=Pa(i);const o=xl(i);this.v6l^=sa(o[0]),this.v6h^=sa(o[1]),this.v7l^=sa(o[2]),this.v7h^=sa(o[3])}if(r!==void 0){const o=new Uint8Array(this.blockLen);o.set(r),this.update(o)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:i,v2l:a,v2h:s,v3l:o,v3h:u,v4l:h,v4h:p,v5l:y,v5h:w,v6l:P,v6h:N,v7l:O,v7h:z}=this;return[e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z]}set(e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=i|0,this.v2l=a|0,this.v2h=s|0,this.v3l=o|0,this.v3h=u|0,this.v4l=h|0,this.v4h=p|0,this.v5l=y|0,this.v5h=w|0,this.v6l=P|0,this.v6h=N|0,this.v7l=O|0,this.v7h=z|0}compress(e,n,r){this.get().forEach((u,h)=>Me[h]=u),Me.set(hn,16);let{h:i,l:a}=kg(BigInt(this.length));Me[24]=hn[8]^a,Me[25]=hn[9]^i,r&&(Me[28]=~Me[28],Me[29]=~Me[29]);let s=0;const o=WM;for(let u=0;u<12;u++)Ca(0,4,8,12,e,n+2*o[s++]),Ua(0,4,8,12,e,n+2*o[s++]),Ca(1,5,9,13,e,n+2*o[s++]),Ua(1,5,9,13,e,n+2*o[s++]),Ca(2,6,10,14,e,n+2*o[s++]),Ua(2,6,10,14,e,n+2*o[s++]),Ca(3,7,11,15,e,n+2*o[s++]),Ua(3,7,11,15,e,n+2*o[s++]),Ca(0,5,10,15,e,n+2*o[s++]),Ua(0,5,10,15,e,n+2*o[s++]),Ca(1,6,11,12,e,n+2*o[s++]),Ua(1,6,11,12,e,n+2*o[s++]),Ca(2,7,8,13,e,n+2*o[s++]),Ua(2,7,8,13,e,n+2*o[s++]),Ca(3,4,9,14,e,n+2*o[s++]),Ua(3,4,9,14,e,n+2*o[s++]);this.v0l^=Me[0]^Me[16],this.v0h^=Me[1]^Me[17],this.v1l^=Me[2]^Me[18],this.v1h^=Me[3]^Me[19],this.v2l^=Me[4]^Me[20],this.v2h^=Me[5]^Me[21],this.v3l^=Me[6]^Me[22],this.v3h^=Me[7]^Me[23],this.v4l^=Me[8]^Me[24],this.v4h^=Me[9]^Me[25],this.v5l^=Me[10]^Me[26],this.v5h^=Me[11]^Me[27],this.v6l^=Me[12]^Me[28],this.v6h^=Me[13]^Me[29],this.v7l^=Me[14]^Me[30],this.v7h^=Me[15]^Me[31],Pi(Me)}destroy(){this.destroyed=!0,Pi(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};const uk=qM(t=>new ck(t)),Hb=uk;function lk(t){return(...e)=>Vd(t(...e))}function dk(t,e){return(n,r=256,i)=>{const a=Ft(n);return!Xc||!i&&Mo()?t[r](a):e[r](a)}}function Bm(t,e=256,n,r){const i=Math.ceil(e/8),a=Ft(t);return!Xc||!r&&Mo()?MM(a,Ft(n),i):n?Hb(a,{dkLen:i,key:n}):Hb(a,{dkLen:i})}const Lte=lk(Bm),fk=Sm("SS58PRE");function Ng(t){return Bm(Wf(fk,t),512)}function hk(t){const e=t[0]&64?2:1,n=e===1?t[0]:(t[0]&63)<<2|t[1]>>6|(t[1]&63)<<8,r=[34+e,35+e].includes(t.length),i=t.length-(r?2:1),a=Ng(t.subarray(0,i));return[(t[0]&128)===0&&![46,47].includes(t[0])&&(r?t[t.length-2]===a[0]&&t[t.length-1]===a[1]:t[t.length-1]===a[0]),i,e,n]}const pk=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"autonomys",displayName:"Autonomys",symbols:["AI3"],decimals:[18],standardAccount:"*25519",website:"https://autonomys.xyz"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],mk={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],encointer:["0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],frequency:["0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],integritee:["0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da","0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],liberland:["0x6bd89e052d67a45bb60a9a23e8581053d5e0d619f15cb9865946937e690c42d6"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],peaq:["0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polimec:["0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vara:["0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},bk={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},yk={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,bittensor:354,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,encointer:434,enjin:1155,equilibrium:99999997,frequency:2091,genshiro:99999996,hydradx:354,integritee:2015,"interlay-parachain":354,karura:686,khala:434,kusama:434,liberland:767,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,peaq:3338,pendulum:354,phala:354,picasso:434,polimec:3344,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vara:4976,vtb:694,xxnetwork:1955,zeitgeist:354},gk={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},Ab=[0,2,42],xk=["testnet"];function vk(t){var e,n;const r=t.network||"",i=r.replace(/_/g,"-").split("-"),a=t;return a.slip44=yk[r],a.hasLedgerSupport=!!a.slip44,a.genesisHash=mk[r]||[],a.icon=bk[r]||"substrate",a.isTestnet=!!gk[r]||xk.includes(i[i.length-1]),a.isIgnored=a.isTestnet||!(t.standardAccount&&(e=t.decimals)!=null&&e.length&&(n=t.symbols)!=null&&n.length)&&t.prefix!==42,a}function wk({genesisHash:t,prefix:e}){return!!t.length||e===42}function Pk(t){return!t.isIgnored&&!!t.network}function Mk(t,e){const n=Ab.includes(t.prefix),r=Ab.includes(e.prefix);return n===r?n?0:t.displayName.localeCompare(e.displayName):n?-1:1}const kk=pk.map(vk),Og=kk.filter(Pk).sort(Mk),Hte=Og.filter(wk),Ed={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:Og.map(({prefix:t})=>t),prefix:42};function I0(t,e,n=-1){if(!t)throw new Error("Invalid empty address passed");if(ig(t)||Bl(t))return Ft(t);try{const r=jM(t);if(!Ed.allowedEncodedLengths.includes(r.length))throw new Error("Invalid decoded address length");const[i,a,s,o]=hk(r);if(!i&&!e)throw new Error("Invalid decoded address checksum");if(n!==-1&&n!==o)throw new Error(`Expected ss58Format ${n}, received ${o}`);return r.slice(s,a)}catch(r){throw new Error(`Decoding ${t}: ${r.message}`)}}const Rb={bitLength:256,isLe:!1},Tk=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Da=new Uint32Array(64);let Nk=class extends Mg{constructor(e=32){super(64,e,8,!1),this.A=ja[0]|0,this.B=ja[1]|0,this.C=ja[2]|0,this.D=ja[3]|0,this.E=ja[4]|0,this.F=ja[5]|0,this.G=ja[6]|0,this.H=ja[7]|0}get(){const{A:e,B:n,C:r,D:i,E:a,F:s,G:o,H:u}=this;return[e,n,r,i,a,s,o,u]}set(e,n,r,i,a,s,o,u){this.A=e|0,this.B=n|0,this.C=r|0,this.D=i|0,this.E=a|0,this.F=s|0,this.G=o|0,this.H=u|0}process(e,n){for(let y=0;y<16;y++,n+=4)Da[y]=e.getUint32(n,!1);for(let y=16;y<64;y++){const w=Da[y-15],P=Da[y-2],N=Ni(w,7)^Ni(w,18)^w>>>3,O=Ni(P,17)^Ni(P,19)^P>>>10;Da[y]=O+Da[y-7]+N+Da[y-16]|0}let{A:r,B:i,C:a,D:s,E:o,F:u,G:h,H:p}=this;for(let y=0;y<64;y++){const w=Ni(o,6)^Ni(o,11)^Ni(o,25),P=p+w+YM(o,u,h)+Tk[y]+Da[y]|0,N=(Ni(r,2)^Ni(r,13)^Ni(r,22))+KM(r,i,a)|0;p=h,h=u,u=o,o=s+P|0,s=a,a=i,i=r,r=P+N|0}r=r+this.A|0,i=i+this.B|0,a=a+this.C|0,s=s+this.D|0,o=o+this.E|0,u=u+this.F|0,h=h+this.G|0,p=p+this.H|0,this.set(r,i,a,s,o,u,h,p)}roundClean(){Pi(Da)}destroy(){this.set(0,0,0,0,0,0,0,0),Pi(this.buffer)}};const Vg=Tg(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(t=>BigInt(t))),Ok=Vg[0],Vk=Vg[1],Fa=new Uint32Array(80),Za=new Uint32Array(80);let Sk=class extends Mg{constructor(e=64){super(128,e,16,!1),this.Ah=Xn[0]|0,this.Al=Xn[1]|0,this.Bh=Xn[2]|0,this.Bl=Xn[3]|0,this.Ch=Xn[4]|0,this.Cl=Xn[5]|0,this.Dh=Xn[6]|0,this.Dl=Xn[7]|0,this.Eh=Xn[8]|0,this.El=Xn[9]|0,this.Fh=Xn[10]|0,this.Fl=Xn[11]|0,this.Gh=Xn[12]|0,this.Gl=Xn[13]|0,this.Hh=Xn[14]|0,this.Hl=Xn[15]|0}get(){const{Ah:e,Al:n,Bh:r,Bl:i,Ch:a,Cl:s,Dh:o,Dl:u,Eh:h,El:p,Fh:y,Fl:w,Gh:P,Gl:N,Hh:O,Hl:z}=this;return[e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z]}set(e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=i|0,this.Ch=a|0,this.Cl=s|0,this.Dh=o|0,this.Dl=u|0,this.Eh=h|0,this.El=p|0,this.Fh=y|0,this.Fl=w|0,this.Gh=P|0,this.Gl=N|0,this.Hh=O|0,this.Hl=z|0}process(e,n){for(let A=0;A<16;A++,n+=4)Fa[A]=e.getUint32(n),Za[A]=e.getUint32(n+=4);for(let A=16;A<80;A++){const U=Fa[A-15]|0,H=Za[A-15]|0,X=os(U,H,1)^os(U,H,8)^Ib(U,H,7),C=cs(U,H,1)^cs(U,H,8)^Lb(U,H,7),F=Fa[A-2]|0,S=Za[A-2]|0,R=os(F,S,19)^cu(F,S,61)^Ib(F,S,6),E=cs(F,S,19)^uu(F,S,61)^Lb(F,S,6),L=nk(C,E,Za[A-7],Za[A-16]),c=rk(L,X,R,Fa[A-7],Fa[A-16]);Fa[A]=c|0,Za[A]=L|0}let{Ah:r,Al:i,Bh:a,Bl:s,Ch:o,Cl:u,Dh:h,Dl:p,Eh:y,El:w,Fh:P,Fl:N,Gh:O,Gl:z,Hh:j,Hl:I}=this;for(let A=0;A<80;A++){const U=os(y,w,14)^os(y,w,18)^cu(y,w,41),H=cs(y,w,14)^cs(y,w,18)^uu(y,w,41),X=y&P^~y&O,C=w&N^~w&z,F=ik(I,H,C,Vk[A],Za[A]),S=ak(F,j,U,X,Ok[A],Fa[A]),R=F|0,E=os(r,i,28)^cu(r,i,34)^cu(r,i,39),L=cs(r,i,28)^uu(r,i,34)^uu(r,i,39),c=r&a^r&o^a&o,l=i&s^i&u^s&u;j=O|0,I=z|0,O=P|0,z=N|0,P=y|0,N=w|0,{h:y,l:w}=yi(h|0,p|0,S|0,R|0),h=o|0,p=u|0,o=a|0,u=s|0,a=r|0,s=i|0;const f=Am(R,L,l);r=Rm(f,S,E,c),i=f|0}({h:r,l:i}=yi(this.Ah|0,this.Al|0,r|0,i|0)),{h:a,l:s}=yi(this.Bh|0,this.Bl|0,a|0,s|0),{h:o,l:u}=yi(this.Ch|0,this.Cl|0,o|0,u|0),{h,l:p}=yi(this.Dh|0,this.Dl|0,h|0,p|0),{h:y,l:w}=yi(this.Eh|0,this.El|0,y|0,w|0),{h:P,l:N}=yi(this.Fh|0,this.Fl|0,P|0,N|0),{h:O,l:z}=yi(this.Gh|0,this.Gl|0,O|0,z|0),{h:j,l:I}=yi(this.Hh|0,this.Hl|0,j|0,I|0),this.set(r,i,a,s,o,u,h,p,y,w,P,N,O,z,j,I)}roundClean(){Pi(Fa,Za)}destroy(){Pi(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};const Ek=Hm(()=>new Nk),zk=Hm(()=>new Sk);let Sg=class extends z0{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,UM(e);const r=Pa(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,a=new Uint8Array(i);a.set(r.length>i?e.create().update(r).digest():r);for(let s=0;s<a.length;s++)a[s]^=54;this.iHash.update(a),this.oHash=e.create();for(let s=0;s<a.length;s++)a[s]^=106;this.oHash.update(a),Pi(a)}update(e){return Ps(this),this.iHash.update(e),this}digestInto(e){Ps(this),Xr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:i,destroyed:a,blockLen:s,outputLen:o}=this;return e=e,e.finished=i,e.destroyed=a,e.blockLen=s,e.outputLen=o,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}};const Eg=(t,e,n)=>new Sg(t,e).update(n).digest();Eg.create=(t,e)=>new Sg(t,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Xm=BigInt(0),r1=BigInt(1);function xo(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}function sd(t){const e=t.toString(16);return e.length&1?"0"+e:e}function zg(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?Xm:BigInt("0x"+t)}function L0(t){return zg(kc(t))}function vl(t){return Xr(t),zg(kc(Uint8Array.from(t).reverse()))}function jm(t,e){return Lm(t.toString(16).padStart(e*2,"0"))}function H0(t,e){return jm(t,e).reverse()}function Jt(t,e,n){let r;if(typeof e=="string")try{r=Lm(e)}catch(a){throw new Error(t+" must be hex string or Uint8Array, cause: "+a)}else if(zm(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");const i=r.length;if(typeof n=="number"&&i!==n)throw new Error(t+" of length "+n+" expected, got "+i);return r}const zh=t=>typeof t=="bigint"&&Xm<=t;function Ik(t,e,n){return zh(t)&&zh(e)&&zh(n)&&e<=t&&t<n}function lc(t,e,n,r){if(!Ik(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function Lk(t){let e;for(e=0;t>Xm;t>>=r1,e+=1);return e}const A0=t=>(r1<<BigInt(t))-r1;function Hk(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");const r=w=>new Uint8Array(w),i=w=>Uint8Array.of(w);let a=r(t),s=r(t),o=0;const u=()=>{a.fill(1),s.fill(0),o=0},h=(...w)=>n(s,a,...w),p=(w=r(0))=>{s=h(i(0),w),a=h(),w.length!==0&&(s=h(i(1),w),a=h())},y=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let w=0;const P=[];for(;w<e;){a=h();const N=a.slice();P.push(N),w+=a.length}return ga(...P)};return(w,P)=>{u(),p(w);let N;for(;!(N=P(y()));)p();return u(),N}}function jl(t,e,n={}){if(!t||typeof t!="object")throw new Error("expected valid options object");function r(i,a,s){const o=t[i];if(s&&o===void 0)return;const u=typeof o;if(u!==a||o===null)throw new Error(`param "${i}" is invalid: expected ${a}, got ${u}`)}Object.entries(e).forEach(([i,a])=>r(i,a,!1)),Object.entries(n).forEach(([i,a])=>r(i,a,!0))}function Kf(t){const e=new WeakMap;return(n,...r)=>{const i=e.get(n);if(i!==void 0)return i;const a=t(n,...r);return e.set(n,a),a}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const cr=BigInt(0),In=BigInt(1),Qs=BigInt(2),Ak=BigInt(3),Ig=BigInt(4),Lg=BigInt(5),Hg=BigInt(8);function _t(t,e){const n=t%e;return n>=cr?n:e+n}function Gt(t,e,n){let r=t;for(;e-- >cr;)r*=r,r%=n;return r}function Bb(t,e){if(t===cr)throw new Error("invert: expected non-zero number");if(e<=cr)throw new Error("invert: expected positive modulus, got "+e);let n=_t(t,e),r=e,i=cr,a=In;for(;n!==cr;){const s=r/n,o=r%n,u=i-a*s;r=n,n=o,i=a,a=u}if(r!==In)throw new Error("invert: does not exist");return _t(i,e)}function Ag(t,e){const n=(t.ORDER+In)/Ig,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error("Cannot find square root");return r}function Rk(t,e){const n=(t.ORDER-Lg)/Hg,r=t.mul(e,Qs),i=t.pow(r,n),a=t.mul(e,i),s=t.mul(t.mul(a,Qs),i),o=t.mul(a,t.sub(s,t.ONE));if(!t.eql(t.sqr(o),e))throw new Error("Cannot find square root");return o}function Bk(t){if(t<BigInt(3))throw new Error("sqrt is not defined for small field");let e=t-In,n=0;for(;e%Qs===cr;)e/=Qs,n++;let r=Qs;const i=jc(t);for(;Xb(i,r)===1;)if(r++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(n===1)return Ag;let a=i.pow(r,e);const s=(e+In)/Qs;return function(o,u){if(o.is0(u))return u;if(Xb(o,u)!==1)throw new Error("Cannot find square root");let h=n,p=o.mul(o.ONE,a),y=o.pow(u,e),w=o.pow(u,s);for(;!o.eql(y,o.ONE);){if(o.is0(y))return o.ZERO;let P=1,N=o.sqr(y);for(;!o.eql(N,o.ONE);)if(P++,N=o.sqr(N),P===h)throw new Error("Cannot find square root");const O=In<<BigInt(h-P-1),z=o.pow(p,O);h=P,p=o.sqr(z),y=o.mul(y,p),w=o.mul(w,z)}return w}}function Xk(t){return t%Ig===Ak?Ag:t%Hg===Lg?Rk:Bk(t)}const jk=(t,e)=>(_t(t,e)&In)===In,Ck=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Uk(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"},n=Ck.reduce((r,i)=>(r[i]="function",r),e);return jl(t,n),t}function Dk(t,e,n){if(n<cr)throw new Error("invalid exponent, negatives unsupported");if(n===cr)return t.ONE;if(n===In)return e;let r=t.ONE,i=e;for(;n>cr;)n&In&&(r=t.mul(r,i)),i=t.sqr(i),n>>=In;return r}function Rg(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),i=e.reduce((s,o,u)=>t.is0(o)?s:(r[u]=s,t.mul(s,o)),t.ONE),a=t.inv(i);return e.reduceRight((s,o,u)=>t.is0(o)?s:(r[u]=t.mul(s,r[u]),t.mul(s,o)),a),r}function Xb(t,e){const n=(t.ORDER-In)/Qs,r=t.pow(e,n),i=t.eql(r,t.ONE),a=t.eql(r,t.ZERO),s=t.eql(r,t.neg(t.ONE));if(!i&&!a&&!s)throw new Error("invalid Legendre symbol result");return i?1:a?0:-1}function Fk(t,e){e!==void 0&&ws(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function jc(t,e,n=!1,r={}){if(t<=cr)throw new Error("invalid field: expected ORDER > 0, got "+t);let i,a;if(typeof e=="object"&&e!=null){if(r.sqrt||n)throw new Error("cannot specify opts in two arguments");const p=e;p.BITS&&(i=p.BITS),p.sqrt&&(a=p.sqrt),typeof p.isLE=="boolean"&&(n=p.isLE)}else typeof e=="number"&&(i=e),r.sqrt&&(a=r.sqrt);const{nBitLength:s,nByteLength:o}=Fk(t,i);if(o>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let u;const h=Object.freeze({ORDER:t,isLE:n,BITS:s,BYTES:o,MASK:A0(s),ZERO:cr,ONE:In,create:p=>_t(p,t),isValid:p=>{if(typeof p!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof p);return cr<=p&&p<t},is0:p=>p===cr,isValidNot0:p=>!h.is0(p)&&h.isValid(p),isOdd:p=>(p&In)===In,neg:p=>_t(-p,t),eql:(p,y)=>p===y,sqr:p=>_t(p*p,t),add:(p,y)=>_t(p+y,t),sub:(p,y)=>_t(p-y,t),mul:(p,y)=>_t(p*y,t),pow:(p,y)=>Dk(h,p,y),div:(p,y)=>_t(p*Bb(y,t),t),sqrN:p=>p*p,addN:(p,y)=>p+y,subN:(p,y)=>p-y,mulN:(p,y)=>p*y,inv:p=>Bb(p,t),sqrt:a||(p=>(u||(u=Xk(t)),u(h,p))),toBytes:p=>n?H0(p,o):jm(p,o),fromBytes:p=>{if(p.length!==o)throw new Error("Field.fromBytes: expected "+o+" bytes, got "+p.length);return n?vl(p):L0(p)},invertBatch:p=>Rg(h,p),cmov:(p,y,w)=>w?y:p});return Object.freeze(h)}function Bg(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function Xg(t){const e=Bg(t);return e+Math.ceil(e/2)}function Zk(t,e,n=!1){const r=t.length,i=Bg(e),a=Xg(e);if(r<16||r<a||r>1024)throw new Error("expected "+a+"-1024 bytes of input, got "+r);const s=n?vl(t):L0(t),o=_t(s,e-In)+In;return n?H0(o,i):jm(o,i)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Tc=BigInt(0),_s=BigInt(1);function el(t,e){const n=e.negate();return t?n:e}function jg(t,e,n){const r=e==="pz"?a=>a.pz:a=>a.ez,i=Rg(t.Fp,n.map(r));return n.map((a,s)=>a.toAffine(i[s])).map(t.fromAffine)}function Cg(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function Ih(t,e){Cg(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),i=2**t,a=A0(t),s=BigInt(t);return{windows:n,windowSize:r,mask:a,maxNumber:i,shiftBy:s}}function jb(t,e,n){const{windowSize:r,mask:i,maxNumber:a,shiftBy:s}=n;let o=Number(t&i),u=t>>s;o>r&&(o-=a,u+=_s);const h=e*r,p=h+Math.abs(o)-1,y=o===0,w=o<0,P=e%2!==0;return{nextN:u,offset:p,isZero:y,isNeg:w,isNegF:P,offsetF:h}}function qk(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error("invalid point at index "+r)})}function Wk(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error("invalid scalar at index "+r)})}const Lh=new WeakMap,Ug=new WeakMap;function Hh(t){return Ug.get(t)||1}function Cb(t){if(t!==Tc)throw new Error("invalid wNAF")}function Dg(t,e){return{constTimeNegate:el,hasPrecomputes(n){return Hh(n)!==1},unsafeLadder(n,r,i=t.ZERO){let a=n;for(;r>Tc;)r&_s&&(i=i.add(a)),a=a.double(),r>>=_s;return i},precomputeWindow(n,r){const{windows:i,windowSize:a}=Ih(r,e),s=[];let o=n,u=o;for(let h=0;h<i;h++){u=o,s.push(u);for(let p=1;p<a;p++)u=u.add(o),s.push(u);o=u.double()}return s},wNAF(n,r,i){let a=t.ZERO,s=t.BASE;const o=Ih(n,e);for(let u=0;u<o.windows;u++){const{nextN:h,offset:p,isZero:y,isNeg:w,isNegF:P,offsetF:N}=jb(i,u,o);i=h,y?s=s.add(el(P,r[N])):a=a.add(el(w,r[p]))}return Cb(i),{p:a,f:s}},wNAFUnsafe(n,r,i,a=t.ZERO){const s=Ih(n,e);for(let o=0;o<s.windows&&i!==Tc;o++){const{nextN:u,offset:h,isZero:p,isNeg:y}=jb(i,o,s);if(i=u,!p){const w=r[h];a=a.add(y?w.negate():w)}}return Cb(i),a},getPrecomputes(n,r,i){let a=Lh.get(r);return a||(a=this.precomputeWindow(r,n),n!==1&&(typeof i=="function"&&(a=i(a)),Lh.set(r,a))),a},wNAFCached(n,r,i){const a=Hh(n);return this.wNAF(a,this.getPrecomputes(a,n,i),r)},wNAFCachedUnsafe(n,r,i,a){const s=Hh(n);return s===1?this.unsafeLadder(n,r,a):this.wNAFUnsafe(s,this.getPrecomputes(s,n,i),r,a)},setWindowSize(n,r){Cg(r,e),Ug.set(n,r),Lh.delete(n)}}}function Gk(t,e,n,r){let i=e,a=t.ZERO,s=t.ZERO;for(;n>Tc||r>Tc;)n&_s&&(a=a.add(i)),r&_s&&(s=s.add(i)),i=i.double(),n>>=_s,r>>=_s;return{p1:a,p2:s}}function Fg(t,e,n,r){qk(n,t),Wk(r,e);const i=n.length,a=r.length;if(i!==a)throw new Error("arrays of points and scalars must have equal length");const s=t.ZERO,o=Lk(BigInt(i));let u=1;o>12?u=o-3:o>4?u=o-2:o>0&&(u=2);const h=A0(u),p=new Array(Number(h)+1).fill(s),y=Math.floor((e.BITS-1)/u)*u;let w=s;for(let P=y;P>=0;P-=u){p.fill(s);for(let O=0;O<a;O++){const z=r[O],j=Number(z>>BigInt(P)&h);p[j]=p[j].add(n[O])}let N=s;for(let O=p.length-1,z=s;O>0;O--)z=z.add(p[O]),N=N.add(z);if(w=w.add(N),P!==0)for(let O=0;O<u;O++)w=w.double()}return w}function Ub(t,e){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return Uk(e),e}else return jc(t)}function Zg(t,e,n={}){if(!e||typeof e!="object")throw new Error(`expected valid ${t} CURVE object`);for(const s of["p","n","h"]){const o=e[s];if(!(typeof o=="bigint"&&o>Tc))throw new Error(`CURVE.${s} must be positive bigint`)}const r=Ub(e.p,n.Fp),i=Ub(e.n,n.Fn),a=["Gx","Gy","a",t==="weierstrass"?"b":"d"];for(const s of a)if(!r.isValid(e[s]))throw new Error(`CURVE.${s} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:i}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Db(t){t.lowS!==void 0&&xo("lowS",t.lowS),t.prehash!==void 0&&xo("prehash",t.prehash)}let Yk=class extends Error{constructor(e=""){super(e)}};const pa={Err:Yk,_tlv:{encode:(t,e)=>{const{Err:n}=pa;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length&1)throw new n("tlv.encode: unpadded data");const r=e.length/2,i=sd(r);if(i.length/2&128)throw new n("tlv.encode: long form length too big");const a=r>127?sd(i.length/2|128):"";return sd(t)+a+i+e},decode(t,e){const{Err:n}=pa;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const i=e[r++],a=!!(i&128);let s=0;if(!a)s=i;else{const u=i&127;if(!u)throw new n("tlv.decode(long): indefinite length not supported");if(u>4)throw new n("tlv.decode(long): byte length is too big");const h=e.subarray(r,r+u);if(h.length!==u)throw new n("tlv.decode: length bytes not complete");if(h[0]===0)throw new n("tlv.decode(long): zero leftmost byte");for(const p of h)s=s<<8|p;if(r+=u,s<128)throw new n("tlv.decode(long): not minimal encoding")}const o=e.subarray(r,r+s);if(o.length!==s)throw new n("tlv.decode: wrong value length");return{v:o,l:e.subarray(r+s)}}},_int:{encode(t){const{Err:e}=pa;if(t<tl)throw new e("integer: negative integers are not allowed");let n=sd(t);if(Number.parseInt(n[0],16)&8&&(n="00"+n),n.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return n},decode(t){const{Err:e}=pa;if(t[0]&128)throw new e("invalid signature integer: negative");if(t[0]===0&&!(t[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return L0(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=pa,i=Jt("signature",t),{v:a,l:s}=r.decode(48,i);if(s.length)throw new e("invalid signature: left bytes after parsing");const{v:o,l:u}=r.decode(2,a),{v:h,l:p}=r.decode(2,u);if(p.length)throw new e("invalid signature: left bytes after parsing");return{r:n.decode(o),s:n.decode(h)}},hexFromSig(t){const{_tlv:e,_int:n}=pa,r=e.encode(2,n.encode(t.r)),i=e.encode(2,n.encode(t.s)),a=r+i;return e.encode(48,a)}},tl=BigInt(0),nl=BigInt(1),Kk=BigInt(2),od=BigInt(3),Jk=BigInt(4);function Qk(t,e,n){function r(i){const a=t.sqr(i),s=t.mul(a,i);return t.add(t.add(s,t.mul(i,e)),n)}return r}function qg(t,e,n){const{BYTES:r}=t;function i(a){let s;if(typeof a=="bigint")s=a;else{let o=Jt("private key",a);if(e){if(!e.includes(o.length*2))throw new Error("invalid private key");const u=new Uint8Array(r);u.set(o,u.length-o.length),o=u}try{s=t.fromBytes(o)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof a}`)}}if(n&&(s=t.create(s)),!t.isValidNot0(s))throw new Error("invalid private key: out of range [1..N-1]");return s}return i}function _k(t,e={}){const{Fp:n,Fn:r}=Zg("weierstrass",t,e),{h:i,n:a}=t;jl(e,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:s}=e;if(s&&(!n.is0(t.a)||typeof s.beta!="bigint"||typeof s.splitScalar!="function"))throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');function o(){if(!n.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}function u(F,S,R){const{x:E,y:L}=S.toAffine(),c=n.toBytes(E);if(xo("isCompressed",R),R){o();const l=!n.isOdd(L);return ga(Wg(l),c)}else return ga(Uint8Array.of(4),c,n.toBytes(L))}function h(F){Xr(F);const S=n.BYTES,R=S+1,E=2*S+1,L=F.length,c=F[0],l=F.subarray(1);if(L===R&&(c===2||c===3)){const f=n.fromBytes(l);if(!n.isValid(f))throw new Error("bad point: is not on curve, wrong x");const b=w(f);let g;try{g=n.sqrt(b)}catch(M){const x=M instanceof Error?": "+M.message:"";throw new Error("bad point: is not on curve, sqrt error"+x)}o();const v=n.isOdd(g);return(c&1)===1!==v&&(g=n.neg(g)),{x:f,y:g}}else if(L===E&&c===4){const f=n.fromBytes(l.subarray(S*0,S*1)),b=n.fromBytes(l.subarray(S*1,S*2));if(!P(f,b))throw new Error("bad point: is not on curve");return{x:f,y:b}}else throw new Error(`bad point: got length ${L}, expected compressed=${R} or uncompressed=${E}`)}const p=e.toBytes||u,y=e.fromBytes||h,w=Qk(n,t.a,t.b);function P(F,S){const R=n.sqr(S),E=w(F);return n.eql(R,E)}if(!P(t.Gx,t.Gy))throw new Error("bad curve params: generator point");const N=n.mul(n.pow(t.a,od),Jk),O=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(N,O)))throw new Error("bad curve params: a or b");function z(F,S,R=!1){if(!n.isValid(S)||R&&n.is0(S))throw new Error(`bad point coordinate ${F}`);return S}function j(F){if(!(F instanceof H))throw new Error("ProjectivePoint expected")}const I=Kf((F,S)=>{const{px:R,py:E,pz:L}=F;if(n.eql(L,n.ONE))return{x:R,y:E};const c=F.is0();S==null&&(S=c?n.ONE:n.inv(L));const l=n.mul(R,S),f=n.mul(E,S),b=n.mul(L,S);if(c)return{x:n.ZERO,y:n.ZERO};if(!n.eql(b,n.ONE))throw new Error("invZ was invalid");return{x:l,y:f}}),A=Kf(F=>{if(F.is0()){if(e.allowInfinityPoint&&!n.is0(F.py))return;throw new Error("bad point: ZERO")}const{x:S,y:R}=F.toAffine();if(!n.isValid(S)||!n.isValid(R))throw new Error("bad point: x or y not field elements");if(!P(S,R))throw new Error("bad point: equation left != right");if(!F.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function U(F,S,R,E,L){return R=new H(n.mul(R.px,F),R.py,R.pz),S=el(E,S),R=el(L,R),S.add(R)}class H{constructor(S,R,E){this.px=z("x",S),this.py=z("y",R,!0),this.pz=z("z",E),Object.freeze(this)}static fromAffine(S){const{x:R,y:E}=S||{};if(!S||!n.isValid(R)||!n.isValid(E))throw new Error("invalid affine point");if(S instanceof H)throw new Error("projective point not allowed");return n.is0(R)&&n.is0(E)?H.ZERO:new H(R,E,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(S){return jg(H,"pz",S)}static fromBytes(S){return Xr(S),H.fromHex(S)}static fromHex(S){const R=H.fromAffine(y(Jt("pointHex",S)));return R.assertValidity(),R}static fromPrivateKey(S){const R=qg(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return H.BASE.multiply(R(S))}static msm(S,R){return Fg(H,r,S,R)}precompute(S=8,R=!0){return C.setWindowSize(this,S),R||this.multiply(od),this}_setWindowSize(S){this.precompute(S)}assertValidity(){A(this)}hasEvenY(){const{y:S}=this.toAffine();if(!n.isOdd)throw new Error("Field doesn't support isOdd");return!n.isOdd(S)}equals(S){j(S);const{px:R,py:E,pz:L}=this,{px:c,py:l,pz:f}=S,b=n.eql(n.mul(R,f),n.mul(c,L)),g=n.eql(n.mul(E,f),n.mul(l,L));return b&&g}negate(){return new H(this.px,n.neg(this.py),this.pz)}double(){const{a:S,b:R}=t,E=n.mul(R,od),{px:L,py:c,pz:l}=this;let f=n.ZERO,b=n.ZERO,g=n.ZERO,v=n.mul(L,L),M=n.mul(c,c),x=n.mul(l,l),d=n.mul(L,c);return d=n.add(d,d),g=n.mul(L,l),g=n.add(g,g),f=n.mul(S,g),b=n.mul(E,x),b=n.add(f,b),f=n.sub(M,b),b=n.add(M,b),b=n.mul(f,b),f=n.mul(d,f),g=n.mul(E,g),x=n.mul(S,x),d=n.sub(v,x),d=n.mul(S,d),d=n.add(d,g),g=n.add(v,v),v=n.add(g,v),v=n.add(v,x),v=n.mul(v,d),b=n.add(b,v),x=n.mul(c,l),x=n.add(x,x),v=n.mul(x,d),f=n.sub(f,v),g=n.mul(x,M),g=n.add(g,g),g=n.add(g,g),new H(f,b,g)}add(S){j(S);const{px:R,py:E,pz:L}=this,{px:c,py:l,pz:f}=S;let b=n.ZERO,g=n.ZERO,v=n.ZERO;const M=t.a,x=n.mul(t.b,od);let d=n.mul(R,c),m=n.mul(E,l),V=n.mul(L,f),B=n.add(R,E),k=n.add(c,l);B=n.mul(B,k),k=n.add(d,m),B=n.sub(B,k),k=n.add(R,L);let Z=n.add(c,f);return k=n.mul(k,Z),Z=n.add(d,V),k=n.sub(k,Z),Z=n.add(E,L),b=n.add(l,f),Z=n.mul(Z,b),b=n.add(m,V),Z=n.sub(Z,b),v=n.mul(M,k),b=n.mul(x,V),v=n.add(b,v),b=n.sub(m,v),v=n.add(m,v),g=n.mul(b,v),m=n.add(d,d),m=n.add(m,d),V=n.mul(M,V),k=n.mul(x,k),m=n.add(m,V),V=n.sub(d,V),V=n.mul(M,V),k=n.add(k,V),d=n.mul(m,k),g=n.add(g,d),d=n.mul(Z,k),b=n.mul(B,b),b=n.sub(b,d),d=n.mul(B,m),v=n.mul(Z,v),v=n.add(v,d),new H(b,g,v)}subtract(S){return this.add(S.negate())}is0(){return this.equals(H.ZERO)}multiply(S){const{endo:R}=e;if(!r.isValidNot0(S))throw new Error("invalid scalar: out of range");let E,L;const c=l=>C.wNAFCached(this,l,H.normalizeZ);if(R){const{k1neg:l,k1:f,k2neg:b,k2:g}=R.splitScalar(S),{p:v,f:M}=c(f),{p:x,f:d}=c(g);L=M.add(d),E=U(R.beta,v,x,l,b)}else{const{p:l,f}=c(S);E=l,L=f}return H.normalizeZ([E,L])[0]}multiplyUnsafe(S){const{endo:R}=e,E=this;if(!r.isValid(S))throw new Error("invalid scalar: out of range");if(S===tl||E.is0())return H.ZERO;if(S===nl)return E;if(C.hasPrecomputes(this))return this.multiply(S);if(R){const{k1neg:L,k1:c,k2neg:l,k2:f}=R.splitScalar(S),{p1:b,p2:g}=Gk(H,E,c,f);return U(R.beta,b,g,L,l)}else return C.wNAFCachedUnsafe(E,S)}multiplyAndAddUnsafe(S,R,E){const L=this.multiplyUnsafe(R).add(S.multiplyUnsafe(E));return L.is0()?void 0:L}toAffine(S){return I(this,S)}isTorsionFree(){const{isTorsionFree:S}=e;return i===nl?!0:S?S(H,this):C.wNAFCachedUnsafe(this,a).is0()}clearCofactor(){const{clearCofactor:S}=e;return i===nl?this:S?S(H,this):this.multiplyUnsafe(i)}toBytes(S=!0){return xo("isCompressed",S),this.assertValidity(),p(H,this,S)}toRawBytes(S=!0){return this.toBytes(S)}toHex(S=!0){return kc(this.toBytes(S))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}H.BASE=new H(t.Gx,t.Gy,n.ONE),H.ZERO=new H(n.ZERO,n.ONE,n.ZERO),H.Fp=n,H.Fn=r;const X=r.BITS,C=Dg(H,e.endo?Math.ceil(X/2):X);return H}function Wg(t){return Uint8Array.of(t?2:3)}function $k(t,e,n={}){jl(e,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const r=e.randomBytes||Pg,i=e.hmac||((E,...L)=>Eg(e.hash,E,ga(...L))),{Fp:a,Fn:s}=t,{ORDER:o,BITS:u}=s;function h(E){const L=o>>nl;return E>L}function p(E){return h(E)?s.neg(E):E}function y(E,L){if(!s.isValidNot0(L))throw new Error(`invalid signature ${E}: out of range 1..CURVE.n`)}class w{constructor(L,c,l){y("r",L),y("s",c),this.r=L,this.s=c,l!=null&&(this.recovery=l),Object.freeze(this)}static fromCompact(L){const c=s.BYTES,l=Jt("compactSignature",L,c*2);return new w(s.fromBytes(l.subarray(0,c)),s.fromBytes(l.subarray(c,c*2)))}static fromDER(L){const{r:c,s:l}=pa.toSig(Jt("DER",L));return new w(c,l)}assertValidity(){}addRecoveryBit(L){return new w(this.r,this.s,L)}recoverPublicKey(L){const c=a.ORDER,{r:l,s:f,recovery:b}=this;if(b==null||![0,1,2,3].includes(b))throw new Error("recovery id invalid");if(o*Kk<c&&b>1)throw new Error("recovery id is ambiguous for h>1 curve");const g=b===2||b===3?l+o:l;if(!a.isValid(g))throw new Error("recovery id 2 or 3 invalid");const v=a.toBytes(g),M=t.fromHex(ga(Wg((b&1)===0),v)),x=s.inv(g),d=A(Jt("msgHash",L)),m=s.create(-d*x),V=s.create(f*x),B=t.BASE.multiplyUnsafe(m).add(M.multiplyUnsafe(V));if(B.is0())throw new Error("point at infinify");return B.assertValidity(),B}hasHighS(){return h(this.s)}normalizeS(){return this.hasHighS()?new w(this.r,s.neg(this.s),this.recovery):this}toBytes(L){if(L==="compact")return ga(s.toBytes(this.r),s.toBytes(this.s));if(L==="der")return Lm(pa.hexFromSig(this));throw new Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return kc(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return kc(this.toBytes("compact"))}}const P=qg(s,n.allowedPrivateKeyLengths,n.wrapPrivateKey),N={isValidPrivateKey(E){try{return P(E),!0}catch{return!1}},normPrivateKeyToScalar:P,randomPrivateKey:()=>{const E=o;return Zk(r(Xg(E)),E)},precompute(E=8,L=t.BASE){return L.precompute(E,!1)}};function O(E,L=!0){return t.fromPrivateKey(E).toBytes(L)}function z(E){if(typeof E=="bigint")return!1;if(E instanceof t)return!0;const L=Jt("key",E).length,c=a.BYTES,l=c+1,f=2*c+1;if(!(n.allowedPrivateKeyLengths||s.BYTES===l))return L===l||L===f}function j(E,L,c=!0){if(z(E)===!0)throw new Error("first arg must be private key");if(z(L)===!1)throw new Error("second arg must be public key");return t.fromHex(L).multiply(P(E)).toBytes(c)}const I=e.bits2int||function(E){if(E.length>8192)throw new Error("input is too large");const L=L0(E),c=E.length*8-u;return c>0?L>>BigInt(c):L},A=e.bits2int_modN||function(E){return s.create(I(E))},U=A0(u);function H(E){return lc("num < 2^"+u,E,tl,U),s.toBytes(E)}function X(E,L,c=C){if(["recovered","canonical"].some(B=>B in c))throw new Error("sign() legacy options not supported");const{hash:l}=e;let{lowS:f,prehash:b,extraEntropy:g}=c;f==null&&(f=!0),E=Jt("msgHash",E),Db(c),b&&(E=Jt("prehashed msgHash",l(E)));const v=A(E),M=P(L),x=[H(M),H(v)];if(g!=null&&g!==!1){const B=g===!0?r(a.BYTES):g;x.push(Jt("extraEntropy",B))}const d=ga(...x),m=v;function V(B){const k=I(B);if(!s.isValidNot0(k))return;const Z=s.inv(k),q=t.BASE.multiply(k).toAffine(),W=s.create(q.x);if(W===tl)return;const J=s.create(Z*s.create(m+W*M));if(J===tl)return;let _=(q.x===W?0:2)|Number(q.y&nl),K=J;return f&&h(J)&&(K=p(J),_^=1),new w(W,K,_)}return{seed:d,k2sig:V}}const C={lowS:e.lowS,prehash:!1},F={lowS:e.lowS,prehash:!1};function S(E,L,c=C){const{seed:l,k2sig:f}=X(E,L,c);return Hk(e.hash.outputLen,s.BYTES,i)(l,f)}t.BASE.precompute(8);function R(E,L,c,l=F){const f=E;L=Jt("msgHash",L),c=Jt("publicKey",c),Db(l);const{lowS:b,prehash:g,format:v}=l;if("strict"in l)throw new Error("options.strict was renamed to lowS");if(v!==void 0&&!["compact","der","js"].includes(v))throw new Error('format must be "compact", "der" or "js"');const M=typeof f=="string"||zm(f),x=!M&&!v&&typeof f=="object"&&f!==null&&typeof f.r=="bigint"&&typeof f.s=="bigint";if(!M&&!x)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let d,m;try{if(x)if(v===void 0||v==="js")d=new w(f.r,f.s);else throw new Error("invalid format");if(M){try{v!=="compact"&&(d=w.fromDER(f))}catch(_){if(!(_ instanceof pa.Err))throw _}!d&&v!=="der"&&(d=w.fromCompact(f))}m=t.fromHex(c)}catch{return!1}if(!d||b&&d.hasHighS())return!1;g&&(L=e.hash(L));const{r:V,s:B}=d,k=A(L),Z=s.inv(B),q=s.create(k*Z),W=s.create(V*Z),J=t.BASE.multiplyUnsafe(q).add(m.multiplyUnsafe(W));return J.is0()?!1:s.create(J.x)===V}return Object.freeze({getPublicKey:O,getSharedSecret:j,sign:S,verify:R,utils:N,Point:t,Signature:w})}function eT(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=jc(e.n,t.nBitLength),i={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:i}}function tT(t){const{CURVE:e,curveOpts:n}=eT(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function nT(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function rT(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=tT(t),i=_k(e,n),a=$k(i,r,n);return nT(t,a)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function iT(t,e){const n=r=>rT({...t,hash:r});return{...n(e),create:n}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Jf={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")};BigInt(0);const aT=BigInt(1),i1=BigInt(2),Fb=(t,e)=>(t+e/i1)/e;function sT(t){const e=Jf.p,n=BigInt(3),r=BigInt(6),i=BigInt(11),a=BigInt(22),s=BigInt(23),o=BigInt(44),u=BigInt(88),h=t*t*t%e,p=h*h*t%e,y=Gt(p,n,e)*p%e,w=Gt(y,n,e)*p%e,P=Gt(w,i1,e)*h%e,N=Gt(P,i,e)*P%e,O=Gt(N,a,e)*N%e,z=Gt(O,o,e)*O%e,j=Gt(z,u,e)*z%e,I=Gt(j,o,e)*O%e,A=Gt(I,n,e)*p%e,U=Gt(A,s,e)*N%e,H=Gt(U,r,e)*h%e,X=Gt(H,i1,e);if(!a1.eql(a1.sqr(X),t))throw new Error("Cannot find square root");return X}const a1=jc(Jf.p,void 0,void 0,{sqrt:sT}),Cm=iT({...Jf,Fp:a1,lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=Jf.n,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-aT*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),a=n,s=BigInt("0x100000000000000000000000000000000"),o=Fb(a*t,e),u=Fb(-r*t,e);let h=_t(t-o*n-u*i,e),p=_t(-o*r-u*a,e);const y=h>s,w=p>s;if(y&&(h=e-h),w&&(p=e-p),h>s||p>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:y,k1:h,k2neg:w,k2:p}}}},Ek);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Li=BigInt(0),Gn=BigInt(1),Ah=BigInt(2),oT=BigInt(8),cT={zip215:!0};function uT(t,e,n,r){const i=t.sqr(n),a=t.sqr(r),s=t.add(t.mul(e.a,i),a),o=t.add(t.ONE,t.mul(e.d,t.mul(i,a)));return t.eql(s,o)}function lT(t,e={}){const{Fp:n,Fn:r}=Zg("edwards",t,e),{h:i,n:a}=t;jl(e,{},{uvRatio:"function"});const s=Ah<<BigInt(r.BYTES*8)-Gn,o=O=>n.create(O),u=e.uvRatio||((O,z)=>{try{return{isValid:!0,value:n.sqrt(n.div(O,z))}}catch{return{isValid:!1,value:Li}}});if(!uT(n,t,t.Gx,t.Gy))throw new Error("bad curve params: generator point");function h(O,z,j=!1){const I=j?Gn:Li;return lc("coordinate "+O,z,I,s),z}function p(O){if(!(O instanceof P))throw new Error("ExtendedPoint expected")}const y=Kf((O,z)=>{const{ex:j,ey:I,ez:A}=O,U=O.is0();z==null&&(z=U?oT:n.inv(A));const H=o(j*z),X=o(I*z),C=o(A*z);if(U)return{x:Li,y:Gn};if(C!==Gn)throw new Error("invZ was invalid");return{x:H,y:X}}),w=Kf(O=>{const{a:z,d:j}=t;if(O.is0())throw new Error("bad point: ZERO");const{ex:I,ey:A,ez:U,et:H}=O,X=o(I*I),C=o(A*A),F=o(U*U),S=o(F*F),R=o(X*z),E=o(F*o(R+C)),L=o(S+o(j*o(X*C)));if(E!==L)throw new Error("bad point: equation left != right (1)");const c=o(I*A),l=o(U*H);if(c!==l)throw new Error("bad point: equation left != right (2)");return!0});class P{constructor(z,j,I,A){this.ex=h("x",z),this.ey=h("y",j),this.ez=h("z",I,!0),this.et=h("t",A),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(z){if(z instanceof P)throw new Error("extended point not allowed");const{x:j,y:I}=z||{};return h("x",j),h("y",I),new P(j,I,Gn,o(j*I))}static normalizeZ(z){return jg(P,"ez",z)}static msm(z,j){return Fg(P,r,z,j)}_setWindowSize(z){this.precompute(z)}precompute(z=8,j=!0){return N.setWindowSize(this,z),j||this.multiply(Ah),this}assertValidity(){w(this)}equals(z){p(z);const{ex:j,ey:I,ez:A}=this,{ex:U,ey:H,ez:X}=z,C=o(j*X),F=o(U*A),S=o(I*X),R=o(H*A);return C===F&&S===R}is0(){return this.equals(P.ZERO)}negate(){return new P(o(-this.ex),this.ey,this.ez,o(-this.et))}double(){const{a:z}=t,{ex:j,ey:I,ez:A}=this,U=o(j*j),H=o(I*I),X=o(Ah*o(A*A)),C=o(z*U),F=j+I,S=o(o(F*F)-U-H),R=C+H,E=R-X,L=C-H,c=o(S*E),l=o(R*L),f=o(S*L),b=o(E*R);return new P(c,l,b,f)}add(z){p(z);const{a:j,d:I}=t,{ex:A,ey:U,ez:H,et:X}=this,{ex:C,ey:F,ez:S,et:R}=z,E=o(A*C),L=o(U*F),c=o(X*I*R),l=o(H*S),f=o((A+U)*(C+F)-E-L),b=l-c,g=l+c,v=o(L-j*E),M=o(f*b),x=o(g*v),d=o(f*v),m=o(b*g);return new P(M,x,m,d)}subtract(z){return this.add(z.negate())}multiply(z){const j=z;lc("scalar",j,Gn,a);const{p:I,f:A}=N.wNAFCached(this,j,P.normalizeZ);return P.normalizeZ([I,A])[0]}multiplyUnsafe(z,j=P.ZERO){const I=z;return lc("scalar",I,Li,a),I===Li?P.ZERO:this.is0()||I===Gn?this:N.wNAFCachedUnsafe(this,I,P.normalizeZ,j)}isSmallOrder(){return this.multiplyUnsafe(i).is0()}isTorsionFree(){return N.wNAFCachedUnsafe(this,a).is0()}toAffine(z){return y(this,z)}clearCofactor(){return i===Gn?this:this.multiplyUnsafe(i)}static fromBytes(z,j=!1){return Xr(z),this.fromHex(z,j)}static fromHex(z,j=!1){const{d:I,a:A}=t,U=n.BYTES;z=Jt("pointHex",z,U),xo("zip215",j);const H=z.slice(),X=z[U-1];H[U-1]=X&-129;const C=vl(H),F=j?s:n.ORDER;lc("pointHex.y",C,Li,F);const S=o(C*C),R=o(S-Gn),E=o(I*S-A);let{isValid:L,value:c}=u(R,E);if(!L)throw new Error("Point.fromHex: invalid y coordinate");const l=(c&Gn)===Gn,f=(X&128)!==0;if(!j&&c===Li&&f)throw new Error("Point.fromHex: x=0 and x_0=1");return f!==l&&(c=o(-c)),P.fromAffine({x:c,y:C})}static fromPrivateScalar(z){return P.BASE.multiply(z)}toBytes(){const{x:z,y:j}=this.toAffine(),I=H0(j,n.BYTES);return I[I.length-1]|=z&Gn?128:0,I}toRawBytes(){return this.toBytes()}toHex(){return kc(this.toBytes())}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}P.BASE=new P(t.Gx,t.Gy,Gn,o(t.Gx*t.Gy)),P.ZERO=new P(Li,Gn,Gn,Li),P.Fp=n,P.Fn=r;const N=Dg(P,r.BYTES*8);return P}function dT(t,e){jl(e,{hash:"function"},{adjustScalarBytes:"function",randomBytes:"function",domain:"function",prehash:"function",mapToCurve:"function"});const{prehash:n,hash:r}=e,{BASE:i,Fp:a,Fn:s}=t,o=s.ORDER,u=e.randomBytes||Pg,h=e.adjustScalarBytes||(U=>U),p=e.domain||((U,H,X)=>{if(xo("phflag",X),H.length||X)throw new Error("Contexts/pre-hash are not supported");return U});function y(U){return s.create(U)}function w(U){return y(vl(U))}function P(U){const H=a.BYTES;U=Jt("private key",U,H);const X=Jt("hashed private key",r(U),2*H),C=h(X.slice(0,H)),F=X.slice(H,2*H),S=w(C);return{head:C,prefix:F,scalar:S}}function N(U){const{head:H,prefix:X,scalar:C}=P(U),F=i.multiply(C),S=F.toBytes();return{head:H,prefix:X,scalar:C,point:F,pointBytes:S}}function O(U){return N(U).pointBytes}function z(U=Uint8Array.of(),...H){const X=ga(...H);return w(r(p(X,Jt("context",U),!!n)))}function j(U,H,X={}){U=Jt("message",U),n&&(U=n(U));const{prefix:C,scalar:F,pointBytes:S}=N(H),R=z(X.context,C,U),E=i.multiply(R).toBytes(),L=z(X.context,E,S,U),c=y(R+L*F);lc("signature.s",c,Li,o);const l=a.BYTES,f=ga(E,H0(c,l));return Jt("result",f,l*2)}const I=cT;function A(U,H,X,C=I){const{context:F,zip215:S}=C,R=a.BYTES;U=Jt("signature",U,2*R),H=Jt("message",H),X=Jt("publicKey",X,R),S!==void 0&&xo("zip215",S),n&&(H=n(H));const E=vl(U.slice(R,2*R));let L,c,l;try{L=t.fromHex(X,S),c=t.fromHex(U.slice(0,R),S),l=i.multiplyUnsafe(E)}catch{return!1}if(!S&&L.isSmallOrder())return!1;const f=z(F,c.toBytes(),L.toBytes(),H);return c.add(L.multiplyUnsafe(f)).subtract(l).clearCofactor().is0()}return i.precompute(8),{getPublicKey:O,sign:j,verify:A,utils:{getExtendedPublicKey:N,randomPrivateKey:()=>u(a.BYTES),precompute(U=8,H=t.BASE){return H.precompute(U,!1)}},Point:t}}function fT(t){const e={a:t.a,d:t.d,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=jc(e.n,t.nBitLength,!0),i={Fp:n,Fn:r,uvRatio:t.uvRatio},a={hash:t.hash,randomBytes:t.randomBytes,adjustScalarBytes:t.adjustScalarBytes,domain:t.domain,prehash:t.prehash,mapToCurve:t.mapToCurve};return{CURVE:e,curveOpts:i,eddsaOpts:a}}function hT(t,e){return Object.assign({},e,{ExtendedPoint:e.Point,CURVE:t})}function pT(t){const{CURVE:e,curveOpts:n,eddsaOpts:r}=fT(t),i=lT(e,n),a=dT(i,r);return hT(t,a)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */BigInt(0);const mT=BigInt(1),Zb=BigInt(2);BigInt(3);const bT=BigInt(5),yT=BigInt(8),R0={p:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:yT,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")};function gT(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),i=BigInt(80),a=R0.p,s=t*t%a*t%a,o=Gt(s,Zb,a)*s%a,u=Gt(o,mT,a)*t%a,h=Gt(u,bT,a)*u%a,p=Gt(h,e,a)*h%a,y=Gt(p,n,a)*p%a,w=Gt(y,r,a)*y%a,P=Gt(w,i,a)*w%a,N=Gt(P,i,a)*w%a,O=Gt(N,e,a)*h%a;return{pow_p_5_8:Gt(O,Zb,a)*t%a,b2:s}}function xT(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}const qb=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");function vT(t,e){const n=R0.p,r=_t(e*e*e,n),i=_t(r*r*e,n),a=gT(t*i).pow_p_5_8;let s=_t(t*r*a,n);const o=_t(e*s*s,n),u=s,h=_t(s*qb,n),p=o===t,y=o===_t(-t,n),w=o===_t(-t*qb,n);return p&&(s=u),(y||w)&&(s=h),jk(s,n)&&(s=_t(-s,n)),{isValid:p||y,value:s}}const wT=jc(R0.p,void 0,!0),PT={...R0,Fp:wT,hash:zk,adjustScalarBytes:xT,uvRatio:vT},MT=pT(PT);function kT(t,e,n,r){const i=Ft(t),a=Ft(n),s=Ft(e);if(a.length!==32)throw new Error(`Invalid publicKey, received ${a.length}, expected 32`);if(s.length!==64)throw new Error(`Invalid signature, received ${s.length} bytes, expected 64`);try{return!Xc||!r&&Mo()?gM(s,i,a):MT.verify(s,i,a)}catch{return!1}}function TT(t,e,n){const r=Ft(n),i=Ft(e);if(r.length!==32)throw new Error(`Invalid publicKey, received ${r.length} bytes, expected 32`);if(i.length!==64)throw new Error(`Invalid signature, received ${i.length} bytes, expected 64`);return PM(i,Ft(t),r)}function NT(t,e=Ed.prefix){const n=I0(t);if(e<0||e>16383||[46,47].includes(e))throw new Error("Out of range ss58Format specified");if(!Ed.allowedDecodedLengths.includes(n.length))throw new Error(`Expected a valid key to convert, with length ${Ed.allowedDecodedLengths.join(", ")}`);const r=Wf(e<64?[e]:[(e&252)>>2|64,e>>8|(e&3)<<6],n);return CM(Wf(r,Ng(r).subarray(0,[32,33].includes(n.length)?2:1)))}const OT=BigInt(0),Wc=BigInt(1),VT=BigInt(2),ST=BigInt(7),ET=BigInt(256),zT=BigInt(113),Gg=[],Yg=[],Kg=[];for(let t=0,e=Wc,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],Gg.push(2*(5*r+n)),Yg.push((t+1)*(t+2)/2%64);let i=OT;for(let a=0;a<7;a++)e=(e<<Wc^(e>>ST)*zT)%ET,e&VT&&(i^=Wc<<(Wc<<BigInt(a))-Wc);Kg.push(i)}const Jg=Tg(Kg,!0),IT=Jg[0],LT=Jg[1],Wb=(t,e,n)=>n>32?ek(t,e,n):_M(t,e,n),Gb=(t,e,n)=>n>32?tk(t,e,n):$M(t,e,n);function HT(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let s=0;s<10;s++)n[s]=t[s]^t[s+10]^t[s+20]^t[s+30]^t[s+40];for(let s=0;s<10;s+=2){const o=(s+8)%10,u=(s+2)%10,h=n[u],p=n[u+1],y=Wb(h,p,1)^n[o],w=Gb(h,p,1)^n[o+1];for(let P=0;P<50;P+=10)t[s+P]^=y,t[s+P+1]^=w}let i=t[2],a=t[3];for(let s=0;s<24;s++){const o=Yg[s],u=Wb(i,a,o),h=Gb(i,a,o),p=Gg[s];i=t[p],a=t[p+1],t[p]=u,t[p+1]=h}for(let s=0;s<50;s+=10){for(let o=0;o<10;o++)n[o]=t[s+o];for(let o=0;o<10;o++)t[s+o]^=~n[(o+2)%10]&n[(o+4)%10]}t[0]^=IT[r],t[1]^=LT[r]}Pi(n)}let AT=class Qg extends z0{constructor(e,n,r,i=!1,a=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=i,this.rounds=a,ws(r),!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=xl(this.state)}clone(){return this._cloneInto()}keccak(){ss(this.state32),HT(this.state32,this.rounds),ss(this.state32),this.posOut=0,this.pos=0}update(e){Ps(this),e=Pa(e),Xr(e);const{blockLen:n,state:r}=this,i=e.length;for(let a=0;a<i;){const s=Math.min(n-this.pos,i-a);for(let o=0;o<s;o++)r[this.pos++]^=e[a++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:i}=this;e[r]^=n,n&128&&r===i-1&&this.keccak(),e[i-1]^=128,this.keccak()}writeInto(e){Ps(this,!1),Xr(e),this.finish();const n=this.state,{blockLen:r}=this;for(let i=0,a=e.length;i<a;){this.posOut>=r&&this.keccak();const s=Math.min(r-this.posOut,a-i);e.set(n.subarray(this.posOut,this.posOut+s),i),this.posOut+=s,i+=s}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return ws(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(Im(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,Pi(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:i,rounds:a,enableXOF:s}=this;return e||(e=new Qg(n,r,i,s,a)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=a,e.suffix=r,e.outputLen=i,e.enableXOF=s,e.destroyed=this.destroyed,e}};const _g=(t,e,n)=>Hm(()=>new AT(e,t,n)),RT=_g(1,136,256/8),BT=_g(1,72,512/8),XT=dk({256:kM,512:TM},{256:RT,512:BT});function Yb(t,e,n){return t==="keccak"?XT(e,void 0,n):Bm(e,void 0,void 0,n)}function jT(t,e){if(![33,65].includes(t.length))throw new Error(`Invalid publicKey provided, received ${t.length} bytes input`);return t.length===33?t:!Xc||Mo()?xM(t):Cm.ProjectivePoint.fromHex(t).toRawBytes(!0)}function CT(t,e){if(![33,65].includes(t.length))throw new Error(`Invalid publicKey provided, received ${t.length} bytes input`);if(t.length===65)return t.subarray(1);if(!Xc||Mo())return vM(t).subarray(1);const{px:n,py:r}=Cm.ProjectivePoint.fromHex(t);return Wf(Ob(n,Rb),Ob(r,Rb))}function UT(t,e,n,r="blake2",i){const a=Ft(e).subarray(0,64),s=Ft(t),o=!Xc||Mo()?wM(s,a,n):Cm.Signature.fromCompact(a).addRecoveryBit(n).recoverPublicKey(s).toRawBytes();if(!o)throw new Error("Unable to recover publicKey from signature");return r==="keccak"?CT(o):jT(o)}function DT(t,e,n,r="blake2",i){const a=Ft(e);if(a.length!==65)throw new Error(`Expected signature with 65 bytes, ${a.length} found instead`);const s=UT(Yb(r,t),a,a[64],r),o=Yb(r,s,i),u=Ft(n);return mc(s,u)||(r==="keccak"?mc(o.slice(-20),u.slice(-20)):mc(o,u))}const Kb=t=>(e,n,r)=>DT(e,n,r,t),s1=[["ecdsa",Kb("blake2")],["ethereum",Kb("keccak")]],$g=[["ed25519",kT],["sr25519",TT]];function zd(t,{message:e,publicKey:n,signature:r},i=[...$g,...s1]){return t.isValid=i.some(([a,s])=>{try{if(s(e,r,n))return t.crypto=a,!0}catch{}return!1}),t}function FT(t,{message:e,publicKey:n,signature:r}){if(![0,1,2].includes(r[0])||![65,66].includes(r.length))throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${r[0]}`);return r.length===66?t=zd(t,{message:e,publicKey:n,signature:r.subarray(1)},s1):(t=zd(t,{message:e,publicKey:n,signature:r.subarray(1)},$g),t.isValid||(t=zd(t,{message:e,publicKey:n,signature:r},s1)),t.isValid||(t.crypto="none")),t}function ZT(t){return[0,1,2].includes(t[0])&&[65,66].includes(t.length)?FT:zd}function ex(t,e,n){const r=Ft(e);if(![64,65,66].includes(r.length))throw new Error(`Invalid signature length, expected [64..66] bytes, found ${r.length}`);const i=I0(n),a={message:Ft(t),publicKey:i,signature:r},s={crypto:"none",isValid:!1,isWrapped:Yf(a.message,!0),publicKey:i},o=Yf(a.message,!1),u=ZT(r);return u(s,a),s.crypto!=="none"||s.isWrapped&&!o?s:(a.message=o?FP(a.message):og(a.message),u(s,a))}function Jb(t){return t.delegatorKey!==void 0}async function qT(t,e){J8(Bl(t),Br.InvalidHex);try{await e.isReady}catch(a){throw new Error(Br.ApiNotReady,{cause:a})}const n=e.tx(t),{method:r,section:i}=e.registry.findMetaCall(n.callIndex);return{method:r,section:i,args:n.args}}async function tx(t,e,n){try{await mg();const{isValid:r}=ex(og(n),e,t);return r}catch{return!1}}async function WT(t,e,n){if(!await tx(t,e,n))throw new Error(Br.InvalidSignature)}async function GT(t,e){if((await e.rpc.chain.getBlock()).block.header.number.toNumber()>t)throw new Error(Br.ExpiredSignature)}async function nx(t,e,n,r,i){await Promise.all([WT(t,e,n.toU8a()),GT(r,i)])}async function rx(t,e){const n=await qT(t,e);if(!Object.values(Ki).includes(n.method))throw new Error(`${Br.UnsupportedExtrinsic}: ${n.method}`);return{...n,publicKey:n.args[0].toHex(),proof:n.args[1].toHex(),payload:n.args[2]}}async function YT(t,e){const{publicKey:n,proof:r,payload:i,method:a}=await rx(t,e);if(a!==Ki.ClaimHandle)throw new Error(`${Br.UnsupportedExtrinsic}: ${a}`);const s=i.toJSON();return await nx(n,r,i,s.expiration,e),{msaOwnerKey:n,proof:r,payload:s}}async function KT(t,e,n){const{publicKey:r,proof:i,payload:a,method:s}=await rx(t,n);if(![Ki.CreateSponsoredAccountWithDelegation,Ki.GrantDelegation].includes(s))throw new Error(`${Br.UnsupportedExtrinsic}: ${s}`);const o=a.toJSON();if(await nx(r,i,a,o.expiration,n),e!==o.authorizedMsaId.toString())throw new Error(Br.InvalidMsaId);return{delegatorKey:r,proof:i,payload:o}}async function JT(t,e,n){const r={publicKey:"0x",expiration:Number.MAX_SAFE_INTEGER,payloads:{},calls:[]};return await t.reduce(async(i,a)=>{const s=await i,o=await QT(a,e,n);return _T(s,o,a)},Promise.resolve(r))}function QT(t,e,n){if(!K8(t.encodedExtrinsic))throw new Error(`${Br.InvalidHex}: ${t.extrinsicName}`);switch(t.extrinsicName){case Ki.CreateSponsoredAccountWithDelegation:case Ki.GrantDelegation:return KT(t.encodedExtrinsic,e,n);case Ki.ClaimHandle:return YT(t.encodedExtrinsic,n);default:throw new Error(`${Br.UnsupportedExtrinsic}: ${t.extrinsicName}`)}}function _T(t,e,n){const r=Jb(e)?e.delegatorKey:e.msaOwnerKey;if(t.publicKey!=="0x"&&t.publicKey!==r)throw new Error(Br.SignupKeysMismatch);return{publicKey:r,expiration:Math.min(e.payload.expiration,t.expiration),payloads:{...t.payloads,...Jb(e)?{addProviderPayload:e.payload}:{claimHandlePayload:e.payload}},calls:$T([...t.calls,n])}}function $T(t){const e=new Map([[Ki.CreateSponsoredAccountWithDelegation,0],[Ki.ClaimHandle,1]]);return t.sort((n,r)=>{const i=e.get(n.extrinsicName)||2;return(e.get(r.extrinsicName)||2)-i})}async function eN(t,e){return(await t.query.msa.publicKeyToMsaId(e)).unwrapOrDefault().toString()}async function tN(t,e,n){if(e.extrinsics)return JT(e.extrinsics,n,t);throw new Error(`${Br.ResponseError}: ${e.error||"Unknown Error"}`)}const nN=t=>{try{const{domain:e,address:n,azeroId:r,statement:i,uri:a,version:s,nonce:o,chainName:u,chainId:h,expirationTime:p,issuedAt:y,notBefore:w,requestId:P,resources:N}=JSON.parse(t);return!e||!n||!a||!s||!o?void 0:new cx({domain:e,address:n,azeroId:r,statement:i,uri:a,version:s,nonce:o,chainName:u,chainId:h,expirationTime:p,issuedAt:y,notBefore:w,requestId:P,resources:N})}catch{throw new Error("SIWS Error: Invalid SIWS json message.")}},ix=t=>{var e;try{const n=nN(t);if(n)return n}catch{}try{let n,r,i,a,s,o,u,h,p,y,w,P,N,O;const z=t.split(`

`),j=z[0],I=z[2]??z[1],A=j.split(`
`),U=A[0].split(" wants you to sign in with your ");if(U.length!==2)throw new Error;if(n=U[0],U[1].length===8)throw new Error;if(h=U[1].replace(" account:",""),r=A[1],!r)throw new Error;if(i=(e=A[2])==null?void 0:e.slice(1,-1),i&&!xN(i))throw new Error("Invalid Azero ID format");if(a=z[2]?z[1]:void 0,a!==void 0&&a.length===0)throw new Error;I.split(`
`).forEach(X=>{const[C,F]=X.split(": ");C==="URI"&&(s=F),C==="Version"&&(o=F),C==="Nonce"&&(u=F),C==="Chain ID"&&(p=F),C==="Issued At"&&(w=new Date(F).getTime()),C==="Expiration Time"&&(y=new Date(F).getTime()),C==="Not Before"&&(P=new Date(F).getTime()),C==="Request ID"&&(N=F)});const H=/Resources:\s*\n((?:- [^\n]*\n*)+)/g.exec(I);if(H!=null&&H.length){O=[];const X=H[1].matchAll(/- ([^\n]*)\n?/g);for(const C of X)O.push(C[1])}if(!n||!r||!s||!u||!h)throw new Error;return new cx({domain:n,address:r,statement:a,uri:s,version:o,azeroId:i,nonce:u,chainName:h,chainId:p,expirationTime:y,issuedAt:w,notBefore:P,requestId:N,resources:O})}catch(n){throw new Error("SIWS Error: Invalid SIWS message.",{cause:n})}},rN="logger/5.8.0";let Qb=!1,_b=!1;const Id={debug:1,default:2,info:2,warning:3,error:4,off:5};let $b=Id.default,Rh=null;function iN(){try{const t=[];if(["NFD","NFC","NFKD","NFKC"].forEach(e=>{try{if("test".normalize(e)!=="test")throw new Error("bad normalize")}catch{t.push(e)}}),t.length)throw new Error("missing "+t.join(", "));if("é".normalize("NFD")!=="é")throw new Error("broken implementation")}catch(t){return t.message}return null}const e3=iN();var o1;(function(t){t.DEBUG="DEBUG",t.INFO="INFO",t.WARNING="WARNING",t.ERROR="ERROR",t.OFF="OFF"})(o1||(o1={}));var xi;(function(t){t.UNKNOWN_ERROR="UNKNOWN_ERROR",t.NOT_IMPLEMENTED="NOT_IMPLEMENTED",t.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",t.NETWORK_ERROR="NETWORK_ERROR",t.SERVER_ERROR="SERVER_ERROR",t.TIMEOUT="TIMEOUT",t.BUFFER_OVERRUN="BUFFER_OVERRUN",t.NUMERIC_FAULT="NUMERIC_FAULT",t.MISSING_NEW="MISSING_NEW",t.INVALID_ARGUMENT="INVALID_ARGUMENT",t.MISSING_ARGUMENT="MISSING_ARGUMENT",t.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",t.CALL_EXCEPTION="CALL_EXCEPTION",t.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",t.NONCE_EXPIRED="NONCE_EXPIRED",t.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",t.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",t.TRANSACTION_REPLACED="TRANSACTION_REPLACED",t.ACTION_REJECTED="ACTION_REJECTED"})(xi||(xi={}));const t3="0123456789abcdef";let B0=class bn{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,n){const r=e.toLowerCase();Id[r]==null&&this.throwArgumentError("invalid log level name","logLevel",e),!($b>Id[r])&&console.log.apply(console,n)}debug(...e){this._log(bn.levels.DEBUG,e)}info(...e){this._log(bn.levels.INFO,e)}warn(...e){this._log(bn.levels.WARNING,e)}makeError(e,n,r){if(_b)return this.makeError("censored error",n,{});n||(n=bn.errors.UNKNOWN_ERROR),r||(r={});const i=[];Object.keys(r).forEach(u=>{const h=r[u];try{if(h instanceof Uint8Array){let p="";for(let y=0;y<h.length;y++)p+=t3[h[y]>>4],p+=t3[h[y]&15];i.push(u+"=Uint8Array(0x"+p+")")}else i.push(u+"="+JSON.stringify(h))}catch{i.push(u+"="+JSON.stringify(r[u].toString()))}}),i.push(`code=${n}`),i.push(`version=${this.version}`);const a=e;let s="";switch(n){case xi.NUMERIC_FAULT:{s="NUMERIC_FAULT";const u=e;switch(u){case"overflow":case"underflow":case"division-by-zero":s+="-"+u;break;case"negative-power":case"negative-width":s+="-unsupported";break;case"unbound-bitwise-result":s+="-unbound-result";break}break}case xi.CALL_EXCEPTION:case xi.INSUFFICIENT_FUNDS:case xi.MISSING_NEW:case xi.NONCE_EXPIRED:case xi.REPLACEMENT_UNDERPRICED:case xi.TRANSACTION_REPLACED:case xi.UNPREDICTABLE_GAS_LIMIT:s=n;break}s&&(e+=" [ See: https://links.ethers.org/v5-errors-"+s+" ]"),i.length&&(e+=" ("+i.join(", ")+")");const o=new Error(e);return o.reason=a,o.code=n,Object.keys(r).forEach(function(u){o[u]=r[u]}),o}throwError(e,n,r){throw this.makeError(e,n,r)}throwArgumentError(e,n,r){return this.throwError(e,bn.errors.INVALID_ARGUMENT,{argument:n,value:r})}assert(e,n,r,i){e||this.throwError(n,r,i)}assertArgument(e,n,r,i){e||this.throwArgumentError(n,r,i)}checkNormalize(e){e3&&this.throwError("platform missing String.prototype.normalize",bn.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:e3})}checkSafeUint53(e,n){typeof e=="number"&&(n==null&&(n="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(n,bn.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(n,bn.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,n,r){r?r=": "+r:r="",e<n&&this.throwError("missing argument"+r,bn.errors.MISSING_ARGUMENT,{count:e,expectedCount:n}),e>n&&this.throwError("too many arguments"+r,bn.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:n})}checkNew(e,n){(e===Object||e==null)&&this.throwError("missing new",bn.errors.MISSING_NEW,{name:n.name})}checkAbstract(e,n){e===n?this.throwError("cannot instantiate abstract class "+JSON.stringify(n.name)+" directly; use a sub-class",bn.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):(e===Object||e==null)&&this.throwError("missing new",bn.errors.MISSING_NEW,{name:n.name})}static globalLogger(){return Rh||(Rh=new bn(rN)),Rh}static setCensorship(e,n){if(!e&&n&&this.globalLogger().throwError("cannot permanently disable censorship",bn.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),Qb){if(!e)return;this.globalLogger().throwError("error censorship permanent",bn.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_b=!!e,Qb=!!n}static setLogLevel(e){const n=Id[e.toLowerCase()];if(n==null){bn.globalLogger().warn("invalid log level - "+e);return}$b=n}static from(e){return new bn(e)}};B0.errors=xi;B0.levels=o1;const aN="bytes/5.8.0",Bh=new B0(aN);function sN(t){return!!t.toHexString}function Ld(t){return t.slice||(t.slice=function(){const e=Array.prototype.slice.call(arguments);return Ld(new Uint8Array(Array.prototype.slice.apply(t,e)))}),t}function n3(t){return typeof t=="number"&&t==t&&t%1===0}function oN(t){if(t==null)return!1;if(t.constructor===Uint8Array)return!0;if(typeof t=="string"||!n3(t.length)||t.length<0)return!1;for(let e=0;e<t.length;e++){const n=t[e];if(!n3(n)||n<0||n>=256)return!1}return!0}function ax(t,e){if(e||(e={}),typeof t=="number"){Bh.checkSafeUint53(t,"invalid arrayify value");const n=[];for(;t;)n.unshift(t&255),t=parseInt(String(t/256));return n.length===0&&n.push(0),Ld(new Uint8Array(n))}if(e.allowMissingPrefix&&typeof t=="string"&&t.substring(0,2)!=="0x"&&(t="0x"+t),sN(t)&&(t=t.toHexString()),sx(t)){let n=t.substring(2);n.length%2&&(e.hexPad==="left"?n="0"+n:e.hexPad==="right"?n+="0":Bh.throwArgumentError("hex data is odd-length","value",t));const r=[];for(let i=0;i<n.length;i+=2)r.push(parseInt(n.substring(i,i+2),16));return Ld(new Uint8Array(r))}return oN(t)?Ld(new Uint8Array(t)):Bh.throwArgumentError("invalid arrayify value","value",t)}function sx(t,e){return!(typeof t!="string"||!t.match(/^0x[0-9A-Fa-f]*$/)||e&&t.length!==2+2*e)}var cN=hs.BN;function uN(t){return new cN(t,36).toString(16)}var ox={exports:{}};/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */(function(t){(function(){var e="input is invalid type",n="finalize already called",r=typeof window=="object",i=r?window:{};i.JS_SHA3_NO_WINDOW&&(r=!1);var a=!r&&typeof self=="object",s=!i.JS_SHA3_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;s?i=_8:a&&(i=self);var o=!i.JS_SHA3_NO_COMMON_JS&&!0&&t.exports,u=!i.JS_SHA3_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",h="0123456789abcdef".split(""),p=[31,7936,2031616,520093696],y=[4,1024,262144,67108864],w=[1,256,65536,16777216],P=[6,1536,393216,100663296],N=[0,8,16,24],O=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],z=[224,256,384,512],j=[128,256],I=["hex","buffer","arrayBuffer","array","digest"],A={128:168,256:136};(i.JS_SHA3_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(k){return Object.prototype.toString.call(k)==="[object Array]"}),u&&(i.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(k){return typeof k=="object"&&k.buffer&&k.buffer.constructor===ArrayBuffer});for(var U=function(k,Z,q){return function(W){return new m(k,Z,k).update(W)[q]()}},H=function(k,Z,q){return function(W,J){return new m(k,Z,J).update(W)[q]()}},X=function(k,Z,q){return function(W,J,_,K){return l["cshake"+k].update(W,J,_,K)[q]()}},C=function(k,Z,q){return function(W,J,_,K){return l["kmac"+k].update(W,J,_,K)[q]()}},F=function(k,Z,q,W){for(var J=0;J<I.length;++J){var _=I[J];k[_]=Z(q,W,_)}return k},S=function(k,Z){var q=U(k,Z,"hex");return q.create=function(){return new m(k,Z,k)},q.update=function(W){return q.create().update(W)},F(q,U,k,Z)},R=function(k,Z){var q=H(k,Z,"hex");return q.create=function(W){return new m(k,Z,W)},q.update=function(W,J){return q.create(J).update(W)},F(q,H,k,Z)},E=function(k,Z){var q=A[k],W=X(k,Z,"hex");return W.create=function(J,_,K){return!_&&!K?l["shake"+k].create(J):new m(k,Z,J).bytepad([_,K],q)},W.update=function(J,_,K,se){return W.create(_,K,se).update(J)},F(W,X,k,Z)},L=function(k,Z){var q=A[k],W=C(k,Z,"hex");return W.create=function(J,_,K){return new V(k,Z,_).bytepad(["KMAC",K],q).bytepad([J],q)},W.update=function(J,_,K,se){return W.create(J,K,se).update(_)},F(W,C,k,Z)},c=[{name:"keccak",padding:w,bits:z,createMethod:S},{name:"sha3",padding:P,bits:z,createMethod:S},{name:"shake",padding:p,bits:j,createMethod:R},{name:"cshake",padding:y,bits:j,createMethod:E},{name:"kmac",padding:y,bits:j,createMethod:L}],l={},f=[],b=0;b<c.length;++b)for(var g=c[b],v=g.bits,M=0;M<v.length;++M){var x=g.name+"_"+v[M];if(f.push(x),l[x]=g.createMethod(v[M],g.padding),g.name!=="sha3"){var d=g.name+v[M];f.push(d),l[d]=l[x]}}function m(k,Z,q){this.blocks=[],this.s=[],this.padding=Z,this.outputBits=q,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(k<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=q>>5,this.extraBytes=(q&31)>>3;for(var W=0;W<50;++W)this.s[W]=0}m.prototype.update=function(k){if(this.finalized)throw new Error(n);var Z,q=typeof k;if(q!=="string"){if(q==="object"){if(k===null)throw new Error(e);if(u&&k.constructor===ArrayBuffer)k=new Uint8Array(k);else if(!Array.isArray(k)&&(!u||!ArrayBuffer.isView(k)))throw new Error(e)}else throw new Error(e);Z=!0}for(var W=this.blocks,J=this.byteCount,_=k.length,K=this.blockCount,se=0,pe=this.s,re,Fe;se<_;){if(this.reset)for(this.reset=!1,W[0]=this.block,re=1;re<K+1;++re)W[re]=0;if(Z)for(re=this.start;se<_&&re<J;++se)W[re>>2]|=k[se]<<N[re++&3];else for(re=this.start;se<_&&re<J;++se)Fe=k.charCodeAt(se),Fe<128?W[re>>2]|=Fe<<N[re++&3]:Fe<2048?(W[re>>2]|=(192|Fe>>6)<<N[re++&3],W[re>>2]|=(128|Fe&63)<<N[re++&3]):Fe<55296||Fe>=57344?(W[re>>2]|=(224|Fe>>12)<<N[re++&3],W[re>>2]|=(128|Fe>>6&63)<<N[re++&3],W[re>>2]|=(128|Fe&63)<<N[re++&3]):(Fe=65536+((Fe&1023)<<10|k.charCodeAt(++se)&1023),W[re>>2]|=(240|Fe>>18)<<N[re++&3],W[re>>2]|=(128|Fe>>12&63)<<N[re++&3],W[re>>2]|=(128|Fe>>6&63)<<N[re++&3],W[re>>2]|=(128|Fe&63)<<N[re++&3]);if(this.lastByteIndex=re,re>=J){for(this.start=re-J,this.block=W[K],re=0;re<K;++re)pe[re]^=W[re];B(pe),this.reset=!0}else this.start=re}return this},m.prototype.encode=function(k,Z){var q=k&255,W=1,J=[q];for(k=k>>8,q=k&255;q>0;)J.unshift(q),k=k>>8,q=k&255,++W;return Z?J.push(W):J.unshift(W),this.update(J),J.length},m.prototype.encodeString=function(k){var Z,q=typeof k;if(q!=="string"){if(q==="object"){if(k===null)throw new Error(e);if(u&&k.constructor===ArrayBuffer)k=new Uint8Array(k);else if(!Array.isArray(k)&&(!u||!ArrayBuffer.isView(k)))throw new Error(e)}else throw new Error(e);Z=!0}var W=0,J=k.length;if(Z)W=J;else for(var _=0;_<k.length;++_){var K=k.charCodeAt(_);K<128?W+=1:K<2048?W+=2:K<55296||K>=57344?W+=3:(K=65536+((K&1023)<<10|k.charCodeAt(++_)&1023),W+=4)}return W+=this.encode(W*8),this.update(k),W},m.prototype.bytepad=function(k,Z){for(var q=this.encode(Z),W=0;W<k.length;++W)q+=this.encodeString(k[W]);var J=Z-q%Z,_=[];return _.length=J,this.update(_),this},m.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var k=this.blocks,Z=this.lastByteIndex,q=this.blockCount,W=this.s;if(k[Z>>2]|=this.padding[Z&3],this.lastByteIndex===this.byteCount)for(k[0]=k[q],Z=1;Z<q+1;++Z)k[Z]=0;for(k[q-1]|=2147483648,Z=0;Z<q;++Z)W[Z]^=k[Z];B(W)}},m.prototype.toString=m.prototype.hex=function(){this.finalize();for(var k=this.blockCount,Z=this.s,q=this.outputBlocks,W=this.extraBytes,J=0,_=0,K="",se;_<q;){for(J=0;J<k&&_<q;++J,++_)se=Z[J],K+=h[se>>4&15]+h[se&15]+h[se>>12&15]+h[se>>8&15]+h[se>>20&15]+h[se>>16&15]+h[se>>28&15]+h[se>>24&15];_%k===0&&(B(Z),J=0)}return W&&(se=Z[J],K+=h[se>>4&15]+h[se&15],W>1&&(K+=h[se>>12&15]+h[se>>8&15]),W>2&&(K+=h[se>>20&15]+h[se>>16&15])),K},m.prototype.arrayBuffer=function(){this.finalize();var k=this.blockCount,Z=this.s,q=this.outputBlocks,W=this.extraBytes,J=0,_=0,K=this.outputBits>>3,se;W?se=new ArrayBuffer(q+1<<2):se=new ArrayBuffer(K);for(var pe=new Uint32Array(se);_<q;){for(J=0;J<k&&_<q;++J,++_)pe[_]=Z[J];_%k===0&&B(Z)}return W&&(pe[J]=Z[J],se=se.slice(0,K)),se},m.prototype.buffer=m.prototype.arrayBuffer,m.prototype.digest=m.prototype.array=function(){this.finalize();for(var k=this.blockCount,Z=this.s,q=this.outputBlocks,W=this.extraBytes,J=0,_=0,K=[],se,pe;_<q;){for(J=0;J<k&&_<q;++J,++_)se=_<<2,pe=Z[J],K[se]=pe&255,K[se+1]=pe>>8&255,K[se+2]=pe>>16&255,K[se+3]=pe>>24&255;_%k===0&&B(Z)}return W&&(se=_<<2,pe=Z[J],K[se]=pe&255,W>1&&(K[se+1]=pe>>8&255),W>2&&(K[se+2]=pe>>16&255)),K};function V(k,Z,q){m.call(this,k,Z,q)}V.prototype=new m,V.prototype.finalize=function(){return this.encode(this.outputBits,!0),m.prototype.finalize.call(this)};var B=function(k){var Z,q,W,J,_,K,se,pe,re,Fe,Ce,le,Ye,je,ge,Ke,te,ce,Ve,Ue,ue,lt,We,xe,yt,$e,Se,gt,De,ve,vt,Ge,Pe,Tt,Je,Ee,Ot,et,ze,wt,tt,Ie,xt,nt,Le,Vt,rt,He,St,it,Ae,Et,at,Re,zt,st,Be,Pt,vn,wn,Pn,Mn,kn;for(W=0;W<48;W+=2)J=k[0]^k[10]^k[20]^k[30]^k[40],_=k[1]^k[11]^k[21]^k[31]^k[41],K=k[2]^k[12]^k[22]^k[32]^k[42],se=k[3]^k[13]^k[23]^k[33]^k[43],pe=k[4]^k[14]^k[24]^k[34]^k[44],re=k[5]^k[15]^k[25]^k[35]^k[45],Fe=k[6]^k[16]^k[26]^k[36]^k[46],Ce=k[7]^k[17]^k[27]^k[37]^k[47],le=k[8]^k[18]^k[28]^k[38]^k[48],Ye=k[9]^k[19]^k[29]^k[39]^k[49],Z=le^(K<<1|se>>>31),q=Ye^(se<<1|K>>>31),k[0]^=Z,k[1]^=q,k[10]^=Z,k[11]^=q,k[20]^=Z,k[21]^=q,k[30]^=Z,k[31]^=q,k[40]^=Z,k[41]^=q,Z=J^(pe<<1|re>>>31),q=_^(re<<1|pe>>>31),k[2]^=Z,k[3]^=q,k[12]^=Z,k[13]^=q,k[22]^=Z,k[23]^=q,k[32]^=Z,k[33]^=q,k[42]^=Z,k[43]^=q,Z=K^(Fe<<1|Ce>>>31),q=se^(Ce<<1|Fe>>>31),k[4]^=Z,k[5]^=q,k[14]^=Z,k[15]^=q,k[24]^=Z,k[25]^=q,k[34]^=Z,k[35]^=q,k[44]^=Z,k[45]^=q,Z=pe^(le<<1|Ye>>>31),q=re^(Ye<<1|le>>>31),k[6]^=Z,k[7]^=q,k[16]^=Z,k[17]^=q,k[26]^=Z,k[27]^=q,k[36]^=Z,k[37]^=q,k[46]^=Z,k[47]^=q,Z=Fe^(J<<1|_>>>31),q=Ce^(_<<1|J>>>31),k[8]^=Z,k[9]^=q,k[18]^=Z,k[19]^=q,k[28]^=Z,k[29]^=q,k[38]^=Z,k[39]^=q,k[48]^=Z,k[49]^=q,je=k[0],ge=k[1],Vt=k[11]<<4|k[10]>>>28,rt=k[10]<<4|k[11]>>>28,gt=k[20]<<3|k[21]>>>29,De=k[21]<<3|k[20]>>>29,wn=k[31]<<9|k[30]>>>23,Pn=k[30]<<9|k[31]>>>23,Ie=k[40]<<18|k[41]>>>14,xt=k[41]<<18|k[40]>>>14,Tt=k[2]<<1|k[3]>>>31,Je=k[3]<<1|k[2]>>>31,Ke=k[13]<<12|k[12]>>>20,te=k[12]<<12|k[13]>>>20,He=k[22]<<10|k[23]>>>22,St=k[23]<<10|k[22]>>>22,ve=k[33]<<13|k[32]>>>19,vt=k[32]<<13|k[33]>>>19,Mn=k[42]<<2|k[43]>>>30,kn=k[43]<<2|k[42]>>>30,Re=k[5]<<30|k[4]>>>2,zt=k[4]<<30|k[5]>>>2,Ee=k[14]<<6|k[15]>>>26,Ot=k[15]<<6|k[14]>>>26,ce=k[25]<<11|k[24]>>>21,Ve=k[24]<<11|k[25]>>>21,it=k[34]<<15|k[35]>>>17,Ae=k[35]<<15|k[34]>>>17,Ge=k[45]<<29|k[44]>>>3,Pe=k[44]<<29|k[45]>>>3,xe=k[6]<<28|k[7]>>>4,yt=k[7]<<28|k[6]>>>4,st=k[17]<<23|k[16]>>>9,Be=k[16]<<23|k[17]>>>9,et=k[26]<<25|k[27]>>>7,ze=k[27]<<25|k[26]>>>7,Ue=k[36]<<21|k[37]>>>11,ue=k[37]<<21|k[36]>>>11,Et=k[47]<<24|k[46]>>>8,at=k[46]<<24|k[47]>>>8,nt=k[8]<<27|k[9]>>>5,Le=k[9]<<27|k[8]>>>5,$e=k[18]<<20|k[19]>>>12,Se=k[19]<<20|k[18]>>>12,Pt=k[29]<<7|k[28]>>>25,vn=k[28]<<7|k[29]>>>25,wt=k[38]<<8|k[39]>>>24,tt=k[39]<<8|k[38]>>>24,lt=k[48]<<14|k[49]>>>18,We=k[49]<<14|k[48]>>>18,k[0]=je^~Ke&ce,k[1]=ge^~te&Ve,k[10]=xe^~$e&gt,k[11]=yt^~Se&De,k[20]=Tt^~Ee&et,k[21]=Je^~Ot&ze,k[30]=nt^~Vt&He,k[31]=Le^~rt&St,k[40]=Re^~st&Pt,k[41]=zt^~Be&vn,k[2]=Ke^~ce&Ue,k[3]=te^~Ve&ue,k[12]=$e^~gt&ve,k[13]=Se^~De&vt,k[22]=Ee^~et&wt,k[23]=Ot^~ze&tt,k[32]=Vt^~He&it,k[33]=rt^~St&Ae,k[42]=st^~Pt&wn,k[43]=Be^~vn&Pn,k[4]=ce^~Ue&lt,k[5]=Ve^~ue&We,k[14]=gt^~ve&Ge,k[15]=De^~vt&Pe,k[24]=et^~wt&Ie,k[25]=ze^~tt&xt,k[34]=He^~it&Et,k[35]=St^~Ae&at,k[44]=Pt^~wn&Mn,k[45]=vn^~Pn&kn,k[6]=Ue^~lt&je,k[7]=ue^~We&ge,k[16]=ve^~Ge&xe,k[17]=vt^~Pe&yt,k[26]=wt^~Ie&Tt,k[27]=tt^~xt&Je,k[36]=it^~Et&nt,k[37]=Ae^~at&Le,k[46]=wn^~Mn&Re,k[47]=Pn^~kn&zt,k[8]=lt^~je&Ke,k[9]=We^~ge&te,k[18]=Ge^~xe&$e,k[19]=Pe^~yt&Se,k[28]=Ie^~Tt&Ee,k[29]=xt^~Je&Ot,k[38]=Et^~nt&Vt,k[39]=at^~Le&rt,k[48]=Mn^~Re&st,k[49]=kn^~zt&Be,k[0]^=O[W],k[1]^=O[W+1]};if(o)t.exports=l;else for(b=0;b<f.length;++b)i[f[b]]=l[f[b]]})()})(ox);var lN=ox.exports;const dN=$8(lN);function fN(t){return"0x"+dN.keccak_256(ax(t))}const hN="address/5.8.0",lu=new B0(hN);function r3(t){sx(t,20)||lu.throwArgumentError("invalid address","address",t),t=t.toLowerCase();const e=t.substring(2).split(""),n=new Uint8Array(40);for(let i=0;i<40;i++)n[i]=e[i].charCodeAt(0);const r=ax(fN(n));for(let i=0;i<40;i+=2)r[i>>1]>>4>=8&&(e[i]=e[i].toUpperCase()),(r[i>>1]&15)>=8&&(e[i+1]=e[i+1].toUpperCase());return"0x"+e.join("")}const pN=9007199254740991;function mN(t){return Math.log10?Math.log10(t):Math.log(t)/Math.LN10}const Um={};for(let t=0;t<10;t++)Um[String(t)]=String(t);for(let t=0;t<26;t++)Um[String.fromCharCode(65+t)]=String(10+t);const i3=Math.floor(mN(pN));function bN(t){t=t.toUpperCase(),t=t.substring(4)+t.substring(0,2)+"00";let e=t.split("").map(r=>Um[r]).join("");for(;e.length>=i3;){let r=e.substring(0,i3);e=parseInt(r,10)%97+e.substring(r.length)}let n=String(98-parseInt(e,10)%97);for(;n.length<2;)n="0"+n;return n}function yN(t){let e=null;if(typeof t!="string"&&lu.throwArgumentError("invalid address","address",t),t.match(/^(0x)?[0-9a-fA-F]{40}$/))t.substring(0,2)!=="0x"&&(t="0x"+t),e=r3(t),t.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&e!==t&&lu.throwArgumentError("bad address checksum","address",t);else if(t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(t.substring(2,4)!==bN(t)&&lu.throwArgumentError("bad icap checksum","address",t),e=uN(t.substring(4));e.length<40;)e="0"+e;e=r3("0x"+e)}else lu.throwArgumentError("invalid address","address",t);return e}function gN(t){try{return yN(t),!0}catch{}return!1}const xN=t=>{const e=t.toLowerCase();return e.endsWith(".azero")||e.endsWith(".tzero")};class bc{constructor(e){if(ft(this,"bytes"),e.length===32||e.length===20){if(this.bytes=e,e.length===20&&!gN(Vd(e)))throw new Error("Invalid Ethereum address!");return}throw new Error("Address must be 32/20 bytes!")}get isEthereum(){return this.bytes.length===20}static fromSs58(e){try{const n=Bl(e)?$p(e):I0(e,!1);return new bc(n)}catch{return!1}}static fromPubKey(e){const n=new Uint8Array($p(e));return n.length!==32?!1:new bc(n)}isEqual(e){return this.bytes.every((n,r)=>n===e.bytes[r])}toSs58(e){return this.bytes.length===20?Vd(this.bytes):NT(this.bytes,e)}toPubKey(){return Vd(this.bytes)}}const vN=["1.0.0"];function wN(t){return vN.indexOf(t)!==-1}var c1;(function(t){t.CURRENT_VERSION="1.0.0"})(c1||(c1={}));let cx=class{constructor(e){ft(this,"domain"),ft(this,"address"),ft(this,"azeroId"),ft(this,"statement"),ft(this,"uri"),ft(this,"nonce"),ft(this,"chainName"),ft(this,"chainId"),ft(this,"expirationTime"),ft(this,"issuedAt"),ft(this,"notBefore"),ft(this,"version"),ft(this,"requestId"),ft(this,"resources"),ft(this,"_fromMessage");var n;typeof e=="string"&&(this._fromMessage=e,e=ix(e)),this.domain=e.domain,this.address=e.address,this.azeroId=e.azeroId,this.statement=e.statement,this.uri=e.uri,this.nonce=e.nonce,this.chainId=e.chainId,this.chainName=e.chainName??((bc.fromSs58(e.address)||{}).isEthereum?"Ethereum":"Substrate"),this.expirationTime=e.expirationTime,this.issuedAt=e.issuedAt,this.notBefore=e.notBefore,this.version=e.version||c1.CURRENT_VERSION,this.requestId=e.requestId,this.resources=(n=e.resources)!=null&&n.length?[...e.resources]:void 0,this.validateMessage()}get asJson(){var e;return{domain:this.domain,address:this.address,azeroId:this.azeroId,statement:this.statement,uri:this.uri,nonce:this.nonce,chainId:this.chainId,chainName:this.chainName,issuedAt:this.issuedAt??new Date().getTime(),expirationTime:this.expirationTime,notBefore:this.notBefore,version:this.version,requestId:this.requestId,resources:(e=this.resources)!=null&&e.length?[...this.resources]:void 0}}prepareJson(){return this.validateMessage(),this.issuedAt=this.issuedAt??new Date().getTime(),JSON.stringify(this.asJson,void 0,2)}prepareMessage(){var e;if(this._fromMessage)return this._fromMessage;this.validateMessage();let n=`${this.domain} wants you to sign in with your ${this.chainName??"Substrate"} account:
`;n+=`${this.address}
`,this.azeroId&&(n+=`(${this.azeroId})
`),n+=`
`,this.statement&&(n+=`${this.statement}

`);const r=[`URI: ${this.uri}`];return r.push(`Version: ${this.version}`),this.chainId&&r.push(`Chain ID: ${this.chainId}`),r.push(`Nonce: ${this.nonce}`),this.issuedAt=this.issuedAt??new Date().getTime(),r.push(`Issued At: ${new Date(this.issuedAt).toISOString()}`),this.expirationTime&&r.push(`Expiration Time: ${new Date(this.expirationTime).toISOString()}`),this.notBefore&&r.push(`Not Before: ${new Date(this.notBefore).toISOString()}`),this.requestId&&r.push(`Request ID: ${this.requestId}`),(e=this.resources)!=null&&e.length&&(r.push("Resources:"),this.resources.forEach(i=>r.push(`- ${i}`))),n+=r.join(`
`),n}async sign(e){if(!e.signer.signRaw)throw new Error("Wallet does not support signing message.");const n=this.prepareMessage(),{signature:r}=await e.signer.signRaw({address:this.address,data:n,type:"payload"});return{signature:r,message:n}}async signJson(e){if(!e.signer.signRaw)throw new Error("Wallet does not support signing message.");const n=this.prepareJson(),{signature:r}=await e.signer.signRaw({address:this.address,data:n,type:"payload"});return{signature:r,message:n}}validateMessage(){var e;if(!this.domain||this.domain.length===0)throw new Error("SIWS Error: domain is required");if(!this.uri||this.uri.length===0)throw new Error("SIWS Error: uri is required");if(!(this!=null&&this.version))throw new Error("SIWS Error: version is required");if(!wN(this==null?void 0:this.version))throw new Error("SIWS Error: version is not a valid version");if(!this.nonce||this.nonce.length===0)throw new Error("SIWS Error: nonce is required");if(this.issuedAt){const n=new Date(this.issuedAt);if(isNaN(n.getTime()))throw new Error("SIWS Error: issuedAt is not a valid date")}if(this.expirationTime){const n=new Date(this.expirationTime);if(isNaN(n.getTime()))throw new Error("SIWS Error: expirationTime is not a valid date");if(this.issuedAt&&n.getTime()<=new Date(this.issuedAt).getTime())throw new Error("SIWS Error: expirationTime must be greater than issuedAt");if(this!=null&&this.notBefore&&this.expirationTime<=this.notBefore)throw new Error("SIWS Error: expirationTime must be greater than notBefore");if(n.getTime()<=new Date().getTime())throw new Error("SIWS Error: message has expired!")}if(this.notBefore){const n=new Date(this.notBefore);if(isNaN(n.getTime()))throw new Error("SIWS Error: notBefore is not a valid date")}if(this.requestId&&!/^[^\n]*$/g.test(this.requestId))throw new Error("SIWS Error: requestId must not contain newlines");(e=this.resources)!=null&&e.length&&this.resources.forEach(n=>{if(!URL.canParse(n))throw new Error(`SIWS Error: resources must be valid URLs: ${n}`)})}async verifyAzeroId(){if(!this.azeroId)return!0;try{const{resolveDomainToAddress:e}=await Jw(async()=>{const{resolveDomainToAddress:a}=await import("./CEVKIIW4.js");return{resolveDomainToAddress:a}},[],import.meta.url),{address:n}=await e(this.azeroId,{chainId:this.azeroId.toLowerCase().endsWith("tzero")?"alephzero-testnet":"alephzero"});if(!n)return!1;const r=bc.fromSs58(this.address),i=bc.fromSs58(n);return!!r&&!!i&&r.isEqual(i)}catch{return!1}}async verify({signature:e}){await mg();const n=this._fromMessage??this.prepareMessage();return{success:ex(n,e,this.address).isValid,data:this}}};function PN(t){return ix(t)}function MN(t){return!!t.expirationTime&&t.expirationTime>Date.now()}async function kN(t,e){try{const n=I0(t);return K8(e.signature)?await tx(n,e.signature,e.message):!1}catch{return!1}}async function TN(t,e){var n;const r=(((n=e.resources)==null?void 0:n[0])||"").toLowerCase().replace("dsnp://","");await t.isReady;const i=await eN(t,e.address);return r===i?r:null}let $s;async function NN(t){try{$s=await wP.create(`${t}/signin`,"width=600, height=800 screenX=400 screenY=100")}catch(e){throw console.error("Error while creating window messenger",e),e}}async function ON(){var t;let e;try{e=await VN()}finally{(t=$s.childWindow)==null||t.close(),$s.dispose()}return e}async function VN(){const{providerId:t,proxyUrl:e,frequencyRpcUrl:n,schemas:r,siwsOptions:i}=MP(),a={frequencyRpcUrl:n,providerId:t,requiredSchemas:r,siwsOptions:i};return await NN(e),$s.sendEvent("signinPayload",a),new Promise((s,o)=>{const u=setInterval(function(){var h;if((h=$s==null?void 0:$s.childWindow)!=null&&h.closed)return clearInterval(u),s({})},500);$s.on(Zf.WalletProxyResponseMessage,h=>{const p=h.detail;return s(p)})})}const ux=/^[a-z0-9]+(-[a-z0-9]+)*$/,X0=(t,e,n,r="")=>{const i=t.split(":");if(t.slice(0,1)==="@"){if(i.length<2||i.length>3)return null;r=i.shift().slice(1)}if(i.length>3||!i.length)return null;if(i.length>1){const o=i.pop(),u=i.pop(),h={provider:i.length>0?i[0]:r,prefix:u,name:o};return e&&!Hd(h)?null:h}const a=i[0],s=a.split("-");if(s.length>1){const o={provider:r,prefix:s.shift(),name:s.join("-")};return e&&!Hd(o)?null:o}if(n&&r===""){const o={provider:r,prefix:"",name:a};return e&&!Hd(o,n)?null:o}return null},Hd=(t,e)=>t?!!((e&&t.prefix===""||t.prefix)&&t.name):!1,lx=Object.freeze({left:0,top:0,width:16,height:16}),Qf=Object.freeze({rotate:0,vFlip:!1,hFlip:!1}),j0=Object.freeze({...lx,...Qf}),u1=Object.freeze({...j0,body:"",hidden:!1});function SN(t,e){const n={};!t.hFlip!=!e.hFlip&&(n.hFlip=!0),!t.vFlip!=!e.vFlip&&(n.vFlip=!0);const r=((t.rotate||0)+(e.rotate||0))%4;return r&&(n.rotate=r),n}function a3(t,e){const n=SN(t,e);for(const r in u1)r in Qf?r in t&&!(r in n)&&(n[r]=Qf[r]):r in e?n[r]=e[r]:r in t&&(n[r]=t[r]);return n}function EN(t,e){const n=t.icons,r=t.aliases||Object.create(null),i=Object.create(null);function a(s){if(n[s])return i[s]=[];if(!(s in i)){i[s]=null;const o=r[s]&&r[s].parent,u=o&&a(o);u&&(i[s]=[o].concat(u))}return i[s]}return Object.keys(n).concat(Object.keys(r)).forEach(a),i}function zN(t,e,n){const r=t.icons,i=t.aliases||Object.create(null);let a={};function s(o){a=a3(r[o]||i[o],a)}return s(e),n.forEach(s),a3(t,a)}function dx(t,e){const n=[];if(typeof t!="object"||typeof t.icons!="object")return n;t.not_found instanceof Array&&t.not_found.forEach(i=>{e(i,null),n.push(i)});const r=EN(t);for(const i in r){const a=r[i];a&&(e(i,zN(t,i,a)),n.push(i))}return n}const IN={provider:"",aliases:{},not_found:{},...lx};function Xh(t,e){for(const n in e)if(n in t&&typeof t[n]!=typeof e[n])return!1;return!0}function fx(t){if(typeof t!="object"||t===null)return null;const e=t;if(typeof e.prefix!="string"||!t.icons||typeof t.icons!="object"||!Xh(t,IN))return null;const n=e.icons;for(const i in n){const a=n[i];if(!i||typeof a.body!="string"||!Xh(a,u1))return null}const r=e.aliases||Object.create(null);for(const i in r){const a=r[i],s=a.parent;if(!i||typeof s!="string"||!n[s]&&!r[s]||!Xh(a,u1))return null}return e}const s3=Object.create(null);function LN(t,e){return{provider:t,prefix:e,icons:Object.create(null),missing:new Set}}function Nc(t,e){const n=s3[t]||(s3[t]=Object.create(null));return n[e]||(n[e]=LN(t,e))}function hx(t,e){return fx(e)?dx(e,(n,r)=>{r?t.icons[n]=r:t.missing.add(n)}):[]}function HN(t,e,n){try{if(typeof n.body=="string")return t.icons[e]={...n},!0}catch{}return!1}let wl=!1;function px(t){return typeof t=="boolean"&&(wl=t),wl}function AN(t){const e=typeof t=="string"?X0(t,!0,wl):t;if(e){const n=Nc(e.provider,e.prefix),r=e.name;return n.icons[r]||(n.missing.has(r)?null:void 0)}}function RN(t,e){const n=X0(t,!0,wl);if(!n)return!1;const r=Nc(n.provider,n.prefix);return e?HN(r,n.name,e):(r.missing.add(n.name),!0)}function BN(t,e){if(typeof t!="object")return!1;if(typeof e!="string"&&(e=t.provider||""),wl&&!e&&!t.prefix){let i=!1;return fx(t)&&(t.prefix="",dx(t,(a,s)=>{RN(a,s)&&(i=!0)})),i}const n=t.prefix;if(!Hd({prefix:n,name:"a"}))return!1;const r=Nc(e,n);return!!hx(r,t)}const mx=Object.freeze({width:null,height:null}),bx=Object.freeze({...mx,...Qf}),XN=/(-?[0-9.]*[0-9]+[0-9.]*)/g,jN=/^-?[0-9.]*[0-9]+[0-9.]*$/g;function o3(t,e,n){if(e===1)return t;if(n=n||100,typeof t=="number")return Math.ceil(t*e*n)/n;if(typeof t!="string")return t;const r=t.split(XN);if(r===null||!r.length)return t;const i=[];let a=r.shift(),s=jN.test(a);for(;;){if(s){const o=parseFloat(a);isNaN(o)?i.push(a):i.push(Math.ceil(o*e*n)/n)}else i.push(a);if(a=r.shift(),a===void 0)return i.join("");s=!s}}function CN(t,e="defs"){let n="";const r=t.indexOf("<"+e);for(;r>=0;){const i=t.indexOf(">",r),a=t.indexOf("</"+e);if(i===-1||a===-1)break;const s=t.indexOf(">",a);if(s===-1)break;n+=t.slice(i+1,a).trim(),t=t.slice(0,r).trim()+t.slice(s+1)}return{defs:n,content:t}}function UN(t,e){return t?"<defs>"+t+"</defs>"+e:e}function DN(t,e,n){const r=CN(t);return UN(r.defs,e+r.content+n)}const FN=t=>t==="unset"||t==="undefined"||t==="none";function ZN(t,e){const n={...j0,...t},r={...bx,...e},i={left:n.left,top:n.top,width:n.width,height:n.height};let a=n.body;[n,r].forEach(O=>{const z=[],j=O.hFlip,I=O.vFlip;let A=O.rotate;j?I?A+=2:(z.push("translate("+(i.width+i.left).toString()+" "+(0-i.top).toString()+")"),z.push("scale(-1 1)"),i.top=i.left=0):I&&(z.push("translate("+(0-i.left).toString()+" "+(i.height+i.top).toString()+")"),z.push("scale(1 -1)"),i.top=i.left=0);let U;switch(A<0&&(A-=Math.floor(A/4)*4),A=A%4,A){case 1:U=i.height/2+i.top,z.unshift("rotate(90 "+U.toString()+" "+U.toString()+")");break;case 2:z.unshift("rotate(180 "+(i.width/2+i.left).toString()+" "+(i.height/2+i.top).toString()+")");break;case 3:U=i.width/2+i.left,z.unshift("rotate(-90 "+U.toString()+" "+U.toString()+")");break}A%2===1&&(i.left!==i.top&&(U=i.left,i.left=i.top,i.top=U),i.width!==i.height&&(U=i.width,i.width=i.height,i.height=U)),z.length&&(a=DN(a,'<g transform="'+z.join(" ")+'">',"</g>"))});const s=r.width,o=r.height,u=i.width,h=i.height;let p,y;s===null?(y=o===null?"1em":o==="auto"?h:o,p=o3(y,u/h)):(p=s==="auto"?u:s,y=o===null?o3(p,h/u):o==="auto"?h:o);const w={},P=(O,z)=>{FN(z)||(w[O]=z.toString())};P("width",p),P("height",y);const N=[i.left,i.top,u,h];return w.viewBox=N.join(" "),{attributes:w,viewBox:N,body:a}}const qN=/\sid="(\S+)"/g,WN="IconifyId"+Date.now().toString(16)+(Math.random()*16777216|0).toString(16);let GN=0;function YN(t,e=WN){const n=[];let r;for(;r=qN.exec(t);)n.push(r[1]);if(!n.length)return t;const i="suffix"+(Math.random()*16777216|Date.now()).toString(16);return n.forEach(a=>{const s=typeof e=="function"?e(a):e+(GN++).toString(),o=a.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");t=t.replace(new RegExp('([#;"])('+o+')([")]|\\.[a-z])',"g"),"$1"+s+i+"$3")}),t=t.replace(new RegExp(i,"g"),""),t}const l1=Object.create(null);function KN(t,e){l1[t]=e}function d1(t){return l1[t]||l1[""]}function Dm(t){let e;if(typeof t.resources=="string")e=[t.resources];else if(e=t.resources,!(e instanceof Array)||!e.length)return null;return{resources:e,path:t.path||"/",maxURL:t.maxURL||500,rotate:t.rotate||750,timeout:t.timeout||5e3,random:t.random===!0,index:t.index||0,dataAfterTimeout:t.dataAfterTimeout!==!1}}const Fm=Object.create(null),Gc=["https://api.simplesvg.com","https://api.unisvg.com"],Ad=[];for(;Gc.length>0;)Gc.length===1||Math.random()>.5?Ad.push(Gc.shift()):Ad.push(Gc.pop());Fm[""]=Dm({resources:["https://api.iconify.design"].concat(Ad)});function JN(t,e){const n=Dm(e);return n===null?!1:(Fm[t]=n,!0)}function Zm(t){return Fm[t]}const QN=()=>{let t;try{if(t=fetch,typeof t=="function")return t}catch{}};let c3=QN();function _N(t,e){const n=Zm(t);if(!n)return 0;let r;if(!n.maxURL)r=0;else{let i=0;n.resources.forEach(s=>{i=Math.max(i,s.length)});const a=e+".json?icons=";r=n.maxURL-i-n.path.length-a.length}return r}function $N(t){return t===404}const eO=(t,e,n)=>{const r=[],i=_N(t,e),a="icons";let s={type:a,provider:t,prefix:e,icons:[]},o=0;return n.forEach((u,h)=>{o+=u.length+1,o>=i&&h>0&&(r.push(s),s={type:a,provider:t,prefix:e,icons:[]},o=u.length),s.icons.push(u)}),r.push(s),r};function tO(t){if(typeof t=="string"){const e=Zm(t);if(e)return e.path}return"/"}const nO=(t,e,n)=>{if(!c3){n("abort",424);return}let r=tO(e.provider);switch(e.type){case"icons":{const a=e.prefix,o=e.icons.join(","),u=new URLSearchParams({icons:o});r+=a+".json?"+u.toString();break}case"custom":{const a=e.uri;r+=a.slice(0,1)==="/"?a.slice(1):a;break}default:n("abort",400);return}let i=503;c3(t+r).then(a=>{const s=a.status;if(s!==200){setTimeout(()=>{n($N(s)?"abort":"next",s)});return}return i=501,a.json()}).then(a=>{if(typeof a!="object"||a===null){setTimeout(()=>{a===404?n("abort",a):n("next",i)});return}setTimeout(()=>{n("success",a)})}).catch(()=>{n("next",i)})},rO={prepare:eO,send:nO};function iO(t){const e={loaded:[],missing:[],pending:[]},n=Object.create(null);t.sort((i,a)=>i.provider!==a.provider?i.provider.localeCompare(a.provider):i.prefix!==a.prefix?i.prefix.localeCompare(a.prefix):i.name.localeCompare(a.name));let r={provider:"",prefix:"",name:""};return t.forEach(i=>{if(r.name===i.name&&r.prefix===i.prefix&&r.provider===i.provider)return;r=i;const a=i.provider,s=i.prefix,o=i.name,u=n[a]||(n[a]=Object.create(null)),h=u[s]||(u[s]=Nc(a,s));let p;o in h.icons?p=e.loaded:s===""||h.missing.has(o)?p=e.missing:p=e.pending;const y={provider:a,prefix:s,name:o};p.push(y)}),e}function yx(t,e){t.forEach(n=>{const r=n.loaderCallbacks;r&&(n.loaderCallbacks=r.filter(i=>i.id!==e))})}function aO(t){t.pendingCallbacksFlag||(t.pendingCallbacksFlag=!0,setTimeout(()=>{t.pendingCallbacksFlag=!1;const e=t.loaderCallbacks?t.loaderCallbacks.slice(0):[];if(!e.length)return;let n=!1;const r=t.provider,i=t.prefix;e.forEach(a=>{const s=a.icons,o=s.pending.length;s.pending=s.pending.filter(u=>{if(u.prefix!==i)return!0;const h=u.name;if(t.icons[h])s.loaded.push({provider:r,prefix:i,name:h});else if(t.missing.has(h))s.missing.push({provider:r,prefix:i,name:h});else return n=!0,!0;return!1}),s.pending.length!==o&&(n||yx([t],a.id),a.callback(s.loaded.slice(0),s.missing.slice(0),s.pending.slice(0),a.abort))})}))}let sO=0;function oO(t,e,n){const r=sO++,i=yx.bind(null,n,r);if(!e.pending.length)return i;const a={id:r,icons:e,callback:t,abort:i};return n.forEach(s=>{(s.loaderCallbacks||(s.loaderCallbacks=[])).push(a)}),i}function cO(t,e=!0,n=!1){const r=[];return t.forEach(i=>{const a=typeof i=="string"?X0(i,e,n):i;a&&r.push(a)}),r}var uO={resources:[],index:0,timeout:2e3,rotate:750,random:!1,dataAfterTimeout:!1};function lO(t,e,n,r){const i=t.resources.length,a=t.random?Math.floor(Math.random()*i):t.index;let s;if(t.random){let X=t.resources.slice(0);for(s=[];X.length>1;){const C=Math.floor(Math.random()*X.length);s.push(X[C]),X=X.slice(0,C).concat(X.slice(C+1))}s=s.concat(X)}else s=t.resources.slice(a).concat(t.resources.slice(0,a));const o=Date.now();let u="pending",h=0,p,y=null,w=[],P=[];typeof r=="function"&&P.push(r);function N(){y&&(clearTimeout(y),y=null)}function O(){u==="pending"&&(u="aborted"),N(),w.forEach(X=>{X.status==="pending"&&(X.status="aborted")}),w=[]}function z(X,C){C&&(P=[]),typeof X=="function"&&P.push(X)}function j(){return{startTime:o,payload:e,status:u,queriesSent:h,queriesPending:w.length,subscribe:z,abort:O}}function I(){u="failed",P.forEach(X=>{X(void 0,p)})}function A(){w.forEach(X=>{X.status==="pending"&&(X.status="aborted")}),w=[]}function U(X,C,F){const S=C!=="success";switch(w=w.filter(R=>R!==X),u){case"pending":break;case"failed":if(S||!t.dataAfterTimeout)return;break;default:return}if(C==="abort"){p=F,I();return}if(S){p=F,w.length||(s.length?H():I());return}if(N(),A(),!t.random){const R=t.resources.indexOf(X.resource);R!==-1&&R!==t.index&&(t.index=R)}u="completed",P.forEach(R=>{R(F)})}function H(){if(u!=="pending")return;N();const X=s.shift();if(X===void 0){if(w.length){y=setTimeout(()=>{N(),u==="pending"&&(A(),I())},t.timeout);return}I();return}const C={status:"pending",resource:X,callback:(F,S)=>{U(C,F,S)}};w.push(C),h++,y=setTimeout(H,t.rotate),n(X,e,C.callback)}return setTimeout(H),j}function gx(t){const e={...uO,...t};let n=[];function r(){n=n.filter(o=>o().status==="pending")}function i(o,u,h){const p=lO(e,o,u,(y,w)=>{r(),h&&h(y,w)});return n.push(p),p}function a(o){return n.find(u=>o(u))||null}return{query:i,find:a,setIndex:o=>{e.index=o},getIndex:()=>e.index,cleanup:r}}function u3(){}const jh=Object.create(null);function dO(t){if(!jh[t]){const e=Zm(t);if(!e)return;const n=gx(e),r={config:e,redundancy:n};jh[t]=r}return jh[t]}function fO(t,e,n){let r,i;if(typeof t=="string"){const a=d1(t);if(!a)return n(void 0,424),u3;i=a.send;const s=dO(t);s&&(r=s.redundancy)}else{const a=Dm(t);if(a){r=gx(a);const s=t.resources?t.resources[0]:"",o=d1(s);o&&(i=o.send)}}return!r||!i?(n(void 0,424),u3):r.query(e,i,n)().abort}function l3(){}function hO(t){t.iconsLoaderFlag||(t.iconsLoaderFlag=!0,setTimeout(()=>{t.iconsLoaderFlag=!1,aO(t)}))}function pO(t){const e=[],n=[];return t.forEach(r=>{(r.match(ux)?e:n).push(r)}),{valid:e,invalid:n}}function Yc(t,e,n){function r(){const i=t.pendingIcons;e.forEach(a=>{i&&i.delete(a),t.icons[a]||t.missing.add(a)})}if(n&&typeof n=="object")try{if(!hx(t,n).length){r();return}}catch(i){console.error(i)}r(),hO(t)}function d3(t,e){t instanceof Promise?t.then(n=>{e(n)}).catch(()=>{e(null)}):e(t)}function mO(t,e){t.iconsToLoad?t.iconsToLoad=t.iconsToLoad.concat(e).sort():t.iconsToLoad=e,t.iconsQueueFlag||(t.iconsQueueFlag=!0,setTimeout(()=>{t.iconsQueueFlag=!1;const{provider:n,prefix:r}=t,i=t.iconsToLoad;if(delete t.iconsToLoad,!i||!i.length)return;const a=t.loadIcon;if(t.loadIcons&&(i.length>1||!a)){d3(t.loadIcons(i,r,n),p=>{Yc(t,i,p)});return}if(a){i.forEach(p=>{const y=a(p,r,n);d3(y,w=>{const P=w?{prefix:r,icons:{[p]:w}}:null;Yc(t,[p],P)})});return}const{valid:s,invalid:o}=pO(i);if(o.length&&Yc(t,o,null),!s.length)return;const u=r.match(ux)?d1(n):null;if(!u){Yc(t,s,null);return}u.prepare(n,r,s).forEach(p=>{fO(n,p,y=>{Yc(t,p.icons,y)})})}))}const bO=(t,e)=>{const n=cO(t,!0,px()),r=iO(n);if(!r.pending.length){let u=!0;return e&&setTimeout(()=>{u&&e(r.loaded,r.missing,r.pending,l3)}),()=>{u=!1}}const i=Object.create(null),a=[];let s,o;return r.pending.forEach(u=>{const{provider:h,prefix:p}=u;if(p===o&&h===s)return;s=h,o=p,a.push(Nc(h,p));const y=i[h]||(i[h]=Object.create(null));y[p]||(y[p]=[])}),r.pending.forEach(u=>{const{provider:h,prefix:p,name:y}=u,w=Nc(h,p),P=w.pendingIcons||(w.pendingIcons=new Set);P.has(y)||(P.add(y),i[h][p].push(y))}),a.forEach(u=>{const h=i[u.provider][u.prefix];h.length&&mO(u,h)}),e?oO(e,r,a):l3};function yO(t,e){const n={...t};for(const r in e){const i=e[r],a=typeof i;r in mx?(i===null||i&&(a==="string"||a==="number"))&&(n[r]=i):a===typeof n[r]&&(n[r]=r==="rotate"?i%4:i)}return n}const gO=/[\s,]+/;function xO(t,e){e.split(gO).forEach(n=>{switch(n.trim()){case"horizontal":t.hFlip=!0;break;case"vertical":t.vFlip=!0;break}})}function vO(t,e=0){const n=t.replace(/^-?[0-9.]*/,"");function r(i){for(;i<0;)i+=4;return i%4}if(n===""){const i=parseInt(t);return isNaN(i)?0:r(i)}else if(n!==t){let i=0;switch(n){case"%":i=25;break;case"deg":i=90}if(i){let a=parseFloat(t.slice(0,t.length-n.length));return isNaN(a)?0:(a=a/i,a%1===0?r(a):0)}}return e}function wO(t,e){let n=t.indexOf("xlink:")===-1?"":' xmlns:xlink="http://www.w3.org/1999/xlink"';for(const r in e)n+=" "+r+'="'+e[r]+'"';return'<svg xmlns="http://www.w3.org/2000/svg"'+n+">"+t+"</svg>"}function PO(t){return t.replace(/"/g,"'").replace(/%/g,"%25").replace(/#/g,"%23").replace(/</g,"%3C").replace(/>/g,"%3E").replace(/\s+/g," ")}function MO(t){return"data:image/svg+xml,"+PO(t)}function kO(t){return'url("'+MO(t)+'")'}const f3={...bx,inline:!1},TO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink","aria-hidden":!0,role:"img"},NO={display:"inline-block"},f1={"background-color":"currentColor"},xx={"background-color":"transparent"},h3={image:"var(--svg)",repeat:"no-repeat",size:"100% 100%"},p3={"-webkit-mask":f1,mask:f1,background:xx};for(const t in p3){const e=p3[t];for(const n in h3)e[t+"-"+n]=h3[n]}function OO(t){return t+(t.match(/^[-0-9.]+$/)?"px":"")}function VO(t,e){const n=yO(f3,e),r=e.mode||"svg",i=r==="svg"?{...TO}:{};t.body.indexOf("xlink:")===-1&&delete i["xmlns:xlink"];let a=typeof e.style=="string"?e.style:"";for(let j in e){const I=e[j];if(I!==void 0)switch(j){case"icon":case"style":case"onLoad":case"mode":case"ssr":break;case"inline":case"hFlip":case"vFlip":n[j]=I===!0||I==="true"||I===1;break;case"flip":typeof I=="string"&&xO(n,I);break;case"color":a=a+(a.length>0&&a.trim().slice(-1)!==";"?";":"")+"color: "+I+"; ";break;case"rotate":typeof I=="string"?n[j]=vO(I):typeof I=="number"&&(n[j]=I);break;case"ariaHidden":case"aria-hidden":I!==!0&&I!=="true"&&delete i["aria-hidden"];break;default:if(j.slice(0,3)==="on:")break;f3[j]===void 0&&(i[j]=I)}}const s=ZN(t,n),o=s.attributes;if(n.inline&&(a="vertical-align: -0.125em; "+a),r==="svg"){Object.assign(i,o),a!==""&&(i.style=a);let j=0,I=e.id;return typeof I=="string"&&(I=I.replace(/-/g,"_")),{svg:!0,attributes:i,body:YN(s.body,I?()=>I+"ID"+j++:"iconifySvelte")}}const{body:u,width:h,height:p}=t,y=r==="mask"||(r==="bg"?!1:u.indexOf("currentColor")!==-1),w=wO(u,{...o,width:h+"",height:p+""}),N={"--svg":kO(w)},O=j=>{const I=o[j];I&&(N[j]=OO(I))};O("width"),O("height"),Object.assign(N,NO,y?f1:xx);let z="";for(const j in N)z+=j+": "+N[j]+";";return i.style=z+a,{svg:!1,attributes:i}}px(!0);KN("",rO);if(typeof document<"u"&&typeof window<"u"){const t=window;if(t.IconifyPreload!==void 0){const e=t.IconifyPreload,n="Invalid IconifyPreload syntax.";typeof e=="object"&&e!==null&&(e instanceof Array?e:[e]).forEach(r=>{try{(typeof r!="object"||r===null||r instanceof Array||typeof r.icons!="object"||typeof r.prefix!="string"||!BN(r))&&console.error(n)}catch{console.error(n)}})}if(t.IconifyProviders!==void 0){const e=t.IconifyProviders;if(typeof e=="object"&&e!==null)for(let n in e){const r="IconifyProviders["+n+"] is invalid.";try{const i=e[n];if(typeof i!="object"||!i||i.resources===void 0)continue;JN(n,i)||console.error(r)}catch{console.error(r)}}}}function SO(t,e,n,r,i){function a(){e.loading&&(e.loading.abort(),e.loading=null)}if(typeof t=="object"&&t!==null&&typeof t.body=="string")return e.name="",a(),{data:{...j0,...t}};let s;if(typeof t!="string"||(s=X0(t,!1,!0))===null)return a(),null;const o=AN(s);if(!o)return n&&(!e.loading||e.loading.name!==t)&&(a(),e.name="",e.loading={name:t,abort:bO([s],r)}),null;a(),e.name!==t&&(e.name=t,i&&!e.destroyed&&i(t));const u=["iconify"];return s.prefix!==""&&u.push("iconify--"+s.prefix),s.provider!==""&&u.push("iconify--"+s.provider),{data:o,classes:u}}function EO(t,e){return t?VO({...j0,...t},e):null}function m3(t){let e;function n(a,s){return a[0].svg?IO:zO}let r=n(t),i=r(t);return{c(){i.c(),e=fn()},l(a){i.l(a),e=fn()},m(a,s){i.m(a,s),_e(a,e,s)},p(a,s){r===(r=n(a))&&i?i.p(a,s):(i.d(1),i=r(a),i&&(i.c(),i.m(e.parentNode,e)))},d(a){a&&oe(e),i.d(a)}}}function zO(t){let e,n=[t[0].attributes],r={};for(let i=0;i<n.length;i+=1)r=Rr(r,n[i]);return{c(){e=Oe("span"),this.h()},l(i){e=Ne(i,"SPAN",{}),ot(e).forEach(oe),this.h()},h(){Pb(e,r)},m(i,a){_e(i,e,a)},p(i,a){Pb(e,r=Rl(n,[a&1&&i[0].attributes]))},d(i){i&&oe(e)}}}function IO(t){let e,n,r=t[0].body+"",i=[t[0].attributes],a={};for(let s=0;s<i.length;s+=1)a=Rr(a,i[s]);return{c(){e=bo("svg"),n=new Nm(!0),this.h()},l(s){e=mo(s,"svg",{});var o=ot(e);n=Tm(o,!0),o.forEach(oe),this.h()},h(){n.a=null,vs(e,a)},m(s,o){_e(s,e,o),n.m(r,e)},p(s,o){o&1&&r!==(r=s[0].body+"")&&n.p(r),vs(e,a=Rl(i,[o&1&&s[0].attributes]))},d(s){s&&oe(e)}}}function LO(t){let e,n=t[0]&&m3(t);return{c(){n&&n.c(),e=fn()},l(r){n&&n.l(r),e=fn()},m(r,i){n&&n.m(r,i),_e(r,e,i)},p(r,[i]){r[0]?n?n.p(r,i):(n=m3(r),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null)},i:Bt,o:Bt,d(r){r&&oe(e),n&&n.d(r)}}}function HO(t,e,n){const r={name:"",loading:null,destroyed:!1};let i=!1,a=0,s;const o=h=>{typeof e.onLoad=="function"&&e.onLoad(h),B8()("load",{icon:h})};function u(){n(3,a++,a)}return km(()=>{n(2,i=!0)}),R8(()=>{n(1,r.destroyed=!0,r),r.loading&&(r.loading.abort(),n(1,r.loading=null,r))}),t.$$set=h=>{n(6,e=Rr(Rr({},e),xs(h)))},t.$$.update=()=>{{const h=!!e.ssr||i,p=SO(e.icon,r,h,u,o);n(0,s=p?EO(p.data,e):null),s&&p.classes&&n(0,s.attributes.class=(typeof e.class=="string"?e.class+" ":"")+p.classes.join(" "),s)}},e=xs(e),[s,r,i,a]}class La extends oi{constructor(e){super(),ci(this,e,HO,LO,ui,{})}}function AO(t){let e,n,r="Signature invalid",i;return e=new La({props:{icon:"openmoji:cross-mark"}}),{c(){on(e.$$.fragment),n=Oe("span"),n.textContent=r},l(a){sn(e.$$.fragment,a),n=Ne(a,"SPAN",{"data-svelte-h":!0}),Kt(n)!=="svelte-10lb42t"&&(n.textContent=r)},m(a,s){an(e,a,s),_e(a,n,s),i=!0},i(a){i||(fe(e.$$.fragment,a),i=!0)},o(a){we(e.$$.fragment,a),i=!1},d(a){a&&oe(n),rn(e,a)}}}function RO(t){let e,n,r="Signature verified",i;return e=new La({props:{icon:"openmoji:check-mark"}}),{c(){on(e.$$.fragment),n=Oe("span"),n.textContent=r},l(a){sn(e.$$.fragment,a),n=Ne(a,"SPAN",{"data-svelte-h":!0}),Kt(n)!=="svelte-e94vpo"&&(n.textContent=r)},m(a,s){an(e,a,s),_e(a,n,s),i=!0},i(a){i||(fe(e.$$.fragment,a),i=!0)},o(a){we(e.$$.fragment,a),i=!1},d(a){a&&oe(n),rn(e,a)}}}function b3(t){let e,n,r,i="Signature expired",a;return n=new La({props:{icon:"openmoji:cross-mark"}}),{c(){e=Oe("div"),on(n.$$.fragment),r=Oe("span"),r.textContent=i,this.h()},l(s){e=Ne(s,"DIV",{class:!0});var o=ot(e);sn(n.$$.fragment,o),r=Ne(o,"SPAN",{"data-svelte-h":!0}),Kt(r)!=="svelte-1uxqb6n"&&(r.textContent=i),o.forEach(oe),this.h()},h(){ie(e,"class","flex")},m(s,o){_e(s,e,o),an(n,e,null),de(e,r),a=!0},i(s){a||(fe(n.$$.fragment,s),a=!0)},o(s){we(n.$$.fragment,s),a=!1},d(s){s&&oe(e),rn(n)}}}function BO(t){let e,n,r="MSA: undetermined",i;return e=new La({props:{icon:"openmoji:cross-mark"}}),{c(){on(e.$$.fragment),n=Oe("span"),n.textContent=r},l(a){sn(e.$$.fragment,a),n=Ne(a,"SPAN",{"data-svelte-h":!0}),Kt(n)!=="svelte-12u5m2p"&&(n.textContent=r)},m(a,s){an(e,a,s),_e(a,n,s),i=!0},p:Bt,i(a){i||(fe(e.$$.fragment,a),i=!0)},o(a){we(e.$$.fragment,a),i=!1},d(a){a&&oe(n),rn(e,a)}}}function XO(t){let e,n,r,i,a;return e=new La({props:{icon:"openmoji:check-mark"}}),{c(){on(e.$$.fragment),n=Oe("span"),r=nr("MSA: "),i=nr(t[3])},l(s){sn(e.$$.fragment,s),n=Ne(s,"SPAN",{});var o=ot(n);r=tr(o,"MSA: "),i=tr(o,t[3]),o.forEach(oe)},m(s,o){an(e,s,o),_e(s,n,o),de(n,r),de(n,i),a=!0},p(s,o){(!a||o&8)&&$r(i,s[3])},i(s){a||(fe(e.$$.fragment,s),a=!0)},o(s){we(e.$$.fragment,s),a=!1},d(s){s&&oe(n),rn(e,s)}}}function jO(t){let e,n,r="MSA control key invalid",i;return e=new La({props:{icon:"openmoji:cross-mark"}}),{c(){on(e.$$.fragment),n=Oe("span"),n.textContent=r},l(a){sn(e.$$.fragment,a),n=Ne(a,"SPAN",{"data-svelte-h":!0}),Kt(n)!=="svelte-xkgij8"&&(n.textContent=r)},m(a,s){an(e,a,s),_e(a,n,s),i=!0},i(a){i||(fe(e.$$.fragment,a),i=!0)},o(a){we(e.$$.fragment,a),i=!1},d(a){a&&oe(n),rn(e,a)}}}function CO(t){let e,n,r="MSA control key verified",i;return e=new La({props:{icon:"openmoji:check-mark"}}),{c(){on(e.$$.fragment),n=Oe("span"),n.textContent=r},l(a){sn(e.$$.fragment,a),n=Ne(a,"SPAN",{"data-svelte-h":!0}),Kt(n)!=="svelte-rgyxc5"&&(n.textContent=r)},m(a,s){an(e,a,s),_e(a,n,s),i=!0},i(a){i||(fe(e.$$.fragment,a),i=!0)},o(a){we(e.$$.fragment,a),i=!1},d(a){a&&oe(n),rn(e,a)}}}function UO(t){let e,n,r,i='<span class="text-xl font-bold">Sign-in Payload</span>',a,s,o,u,h,p,y='<span class="text-xl font-bold">Signature:</span>',w,P,N,O,z,j,I,A,U="Payload valid",H,X,C,F,S,R,E,L,c,l,f,b,g,v;I=new La({props:{icon:"openmoji:check-mark"}});const M=[RO,AO],x=[];function d(J,_){return J[2]?0:1}C=d(t),F=x[C]=M[C](t);let m=!t[2]&&t[5]&&b3();const V=[XO,BO],B=[];function k(J,_){return J[3]?0:1}L=k(t),c=B[L]=V[L](t);const Z=[CO,jO],q=[];function W(J,_){return J[4]?0:1}return b=W(t),g=q[b]=Z[b](t),{c(){e=Oe("div"),n=Oe("div"),r=Oe("div"),r.innerHTML=i,a=pt(),s=Oe("div"),o=Oe("pre"),u=nr(t[0]),h=pt(),p=Oe("div"),p.innerHTML=y,w=pt(),P=Oe("div"),N=Oe("pre"),O=nr(t[1]),z=pt(),j=Oe("div"),on(I.$$.fragment),A=Oe("span"),A.textContent=U,H=pt(),X=Oe("div"),F.c(),S=pt(),m&&m.c(),R=pt(),E=Oe("div"),c.c(),l=pt(),f=Oe("div"),g.c(),this.h()},l(J){e=Ne(J,"DIV",{class:!0});var _=ot(e);n=Ne(_,"DIV",{class:!0});var K=ot(n);r=Ne(K,"DIV",{class:!0,"data-svelte-h":!0}),Kt(r)!=="svelte-140jlhm"&&(r.innerHTML=i),a=ht(K),s=Ne(K,"DIV",{class:!0});var se=ot(s);o=Ne(se,"PRE",{});var pe=ot(o);u=tr(pe,t[0]),pe.forEach(oe),se.forEach(oe),h=ht(K),p=Ne(K,"DIV",{class:!0,"data-svelte-h":!0}),Kt(p)!=="svelte-1uq2ha9"&&(p.innerHTML=y),w=ht(K),P=Ne(K,"DIV",{class:!0});var re=ot(P);N=Ne(re,"PRE",{});var Fe=ot(N);O=tr(Fe,t[1]),Fe.forEach(oe),re.forEach(oe),z=ht(K),j=Ne(K,"DIV",{class:!0});var Ce=ot(j);sn(I.$$.fragment,Ce),A=Ne(Ce,"SPAN",{"data-svelte-h":!0}),Kt(A)!=="svelte-1a0pdee"&&(A.textContent=U),Ce.forEach(oe),H=ht(K),X=Ne(K,"DIV",{class:!0});var le=ot(X);F.l(le),S=ht(le),m&&m.l(le),le.forEach(oe),R=ht(K),E=Ne(K,"DIV",{class:!0});var Ye=ot(E);c.l(Ye),Ye.forEach(oe),l=ht(K),f=Ne(K,"DIV",{class:!0});var je=ot(f);g.l(je),je.forEach(oe),K.forEach(oe),_.forEach(oe),this.h()},h(){ie(r,"class","pb-4"),ie(s,"class","pb-4"),ie(p,"class","pb-4"),ie(P,"class","pb-4"),ie(j,"class","flex"),ie(X,"class","flex"),ie(E,"class","flex"),ie(f,"class","flex"),ie(n,"class","flex-col items-center justify-center"),ie(e,"class","flex")},m(J,_){_e(J,e,_),de(e,n),de(n,r),de(n,a),de(n,s),de(s,o),de(o,u),de(n,h),de(n,p),de(n,w),de(n,P),de(P,N),de(N,O),de(n,z),de(n,j),an(I,j,null),de(j,A),de(n,H),de(n,X),x[C].m(X,null),de(X,S),m&&m.m(X,null),de(n,R),de(n,E),B[L].m(E,null),de(n,l),de(n,f),q[b].m(f,null),v=!0},p(J,[_]){(!v||_&1)&&$r(u,J[0]),(!v||_&2)&&$r(O,J[1]);let K=C;C=d(J),C!==K&&(en(),we(x[K],1,1,()=>{x[K]=null}),tn(),F=x[C],F||(F=x[C]=M[C](J),F.c()),fe(F,1),F.m(X,S)),!J[2]&&J[5]?m?_&36&&fe(m,1):(m=b3(),m.c(),fe(m,1),m.m(X,null)):m&&(en(),we(m,1,1,()=>{m=null}),tn());let se=L;L=k(J),L===se?B[L].p(J,_):(en(),we(B[se],1,1,()=>{B[se]=null}),tn(),c=B[L],c?c.p(J,_):(c=B[L]=V[L](J),c.c()),fe(c,1),c.m(E,null));let pe=b;b=W(J),b!==pe&&(en(),we(q[pe],1,1,()=>{q[pe]=null}),tn(),g=q[b],g||(g=q[b]=Z[b](J),g.c()),fe(g,1),g.m(f,null))},i(J){v||(fe(I.$$.fragment,J),fe(F),fe(m),fe(c),fe(g),v=!0)},o(J){we(I.$$.fragment,J),we(F),we(m),we(c),we(g),v=!1},d(J){J&&oe(e),rn(I),x[C].d(),m&&m.d(),B[L].d(),q[b].d()}}}const DO=3;function FO(t,e,n){let{siwsMessage:r}=e,{message:i}=e,{signature:a}=e,{api:s}=e,o=!1,u,h=!1,p,y=0,w;function P(){n(5,w=!MN(r)),console.log(`Payload is ${w?"expired":"not expired"}`);const N=Math.pow(DO,++y)*1e3;w||(p=setTimeout(P,N))}return km(()=>{P()}),R8(()=>{p&&clearTimeout(p)}),t.$$set=N=>{"siwsMessage"in N&&n(6,r=N.siwsMessage),"message"in N&&n(0,i=N.message),"signature"in N&&n(1,a=N.signature),"api"in N&&n(7,s=N.api)},t.$$.update=()=>{t.$$.dirty&195&&(kN(r.address,{signature:a,message:i}).then(N=>n(2,o=N)),TN(s,r).then(N=>{n(4,h=N!==null),N!==null&&n(3,u=N)}))},[i,a,o,u,h,w,r,s]}class ZO extends oi{constructor(e){super(),ci(this,e,FO,UO,ui,{siwsMessage:6,message:0,signature:1,api:7})}}function y3(t){let e,n;return e=new ZO({props:{message:t[4],signature:t[3],siwsMessage:t[2],api:t[1]}}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},p(r,i){const a={};i&16&&(a.message=r[4]),i&8&&(a.signature=r[3]),i&4&&(a.siwsMessage=r[2]),i&2&&(a.api=r[1]),e.$set(a)},i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function g3(t){let e,n,r='<span class="text-xl font-bold">Message Error</span>',i,a,s,o=(t[0].error||"Unknown error")+"",u,h,p,y,w,P="Payload invalid",N;return y=new La({props:{icon:"openmoji:cross-mark"}}),{c(){e=Oe("div"),n=Oe("div"),n.innerHTML=r,i=pt(),a=Oe("div"),s=Oe("pre"),u=nr(o),h=pt(),p=Oe("div"),on(y.$$.fragment),w=Oe("span"),w.textContent=P,this.h()},l(O){e=Ne(O,"DIV",{class:!0});var z=ot(e);n=Ne(z,"DIV",{class:!0,"data-svelte-h":!0}),Kt(n)!=="svelte-1cp1tx2"&&(n.innerHTML=r),i=ht(z),a=Ne(z,"DIV",{class:!0});var j=ot(a);s=Ne(j,"PRE",{});var I=ot(s);u=tr(I,o),I.forEach(oe),j.forEach(oe),h=ht(z),p=Ne(z,"DIV",{class:!0});var A=ot(p);sn(y.$$.fragment,A),w=Ne(A,"SPAN",{"data-svelte-h":!0}),Kt(w)!=="svelte-jiz7yl"&&(w.textContent=P),A.forEach(oe),z.forEach(oe),this.h()},h(){ie(n,"class","pb-4"),ie(a,"class","pb-4"),ie(p,"class","flex"),ie(e,"class","flex-col items-center justify-center")},m(O,z){_e(O,e,z),de(e,n),de(e,i),de(e,a),de(a,s),de(s,u),de(e,h),de(e,p),an(y,p,null),de(p,w),N=!0},p(O,z){(!N||z&1)&&o!==(o=(O[0].error||"Unknown error")+"")&&$r(u,o)},i(O){N||(fe(y.$$.fragment,O),N=!0)},o(O){we(y.$$.fragment,O),N=!1},d(O){O&&oe(e),rn(y)}}}function qO(t){let e,n,r,i=t[2]&&y3(t),a=(t[0].error||t[2]===null)&&g3(t);return{c(){e=Oe("div"),i&&i.c(),n=pt(),a&&a.c(),this.h()},l(s){e=Ne(s,"DIV",{class:!0});var o=ot(e);i&&i.l(o),n=ht(o),a&&a.l(o),o.forEach(oe),this.h()},h(){ie(e,"class","flex")},m(s,o){_e(s,e,o),i&&i.m(e,null),de(e,n),a&&a.m(e,null),r=!0},p(s,[o]){s[2]?i?(i.p(s,o),o&4&&fe(i,1)):(i=y3(s),i.c(),fe(i,1),i.m(e,n)):i&&(en(),we(i,1,1,()=>{i=null}),tn()),s[0].error||s[2]===null?a?(a.p(s,o),o&5&&fe(a,1)):(a=g3(s),a.c(),fe(a,1),a.m(e,null)):a&&(en(),we(a,1,1,()=>{a=null}),tn())},i(s){r||(fe(i),fe(a),r=!0)},o(s){we(i),we(a),r=!1},d(s){s&&oe(e),i&&i.d(),a&&a.d()}}}function WO(t,e,n){let r,i,{response:a}=e,{api:s}=e,o;function u(h){var p;try{if((p=h.siwsPayload)!=null&&p.message)return PN(h.siwsPayload.message)}catch(y){console.error(y)}return null}return t.$$set=h=>{"response"in h&&n(0,a=h.response),"api"in h&&n(1,s=h.api)},t.$$.update=()=>{var h,p;t.$$.dirty&1&&n(2,o=u(a)||null),t.$$.dirty&1&&n(4,r=((h=a.siwsPayload)==null?void 0:h.message)||""),t.$$.dirty&1&&n(3,i=((p=a.siwsPayload)==null?void 0:p.signature)||"0x")},[a,s,o,i,r]}class GO extends oi{constructor(e){super(),ci(this,e,WO,qO,ui,{response:0,api:1})}}const YO={rpc:{checkDelegations:{description:"Test a list of MSAs to see if they have delegated to the provider MSA",params:[{name:"delegator_msa_ids",type:"Vec<DelegatorId>"},{name:"provider_msa_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"Vec<(DelegatorId, bool)>"},grantedSchemaIdsByMsaId:{description:"Fetch the list of schema ids that a delegator has granted to provider",params:[{name:"delegator_msa_id",type:"DelegatorId"},{name:"provider_msa_id",type:"ProviderId"}],type:"Option<Vec<SchemaGrantResponse>>"},getKeysByMsaId:{description:"Fetch Keys for an MSA Id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<KeyInfoResponse>"},getAllGrantedDelegationsByMsaId:{description:"Get the list of all delegated providers with schema permission grants",params:[{name:"delegator_msa_id",type:"DelegatorId"}],type:"Vec<DelegationResponse>"}},types:{MessageSourceId:"u64",DelegatorId:"MessageSourceId",ProviderId:"MessageSourceId",KeyInfoResponse:{msa_keys:"Vec<AccountId>",msa_id:"MessageSourceId"},SchemaGrantResponse:{schema_id:"SchemaId",revoked_at:"BlockNumber"},DelegationResponse:{provider_id:"ProviderId",permissions:"Vec<SchemaGrantResponse>"},CommonPrimitivesMsaDelegatorId:"u64",CommonPrimitivesMsaProviderId:"u64"}},KO={rpc:{getBySchemaId:{description:"Get messages by schemaId paginated",params:[{name:"schema_id",type:"SchemaId"},{name:"pagination",type:"BlockPaginationRequest"}],type:"BlockPaginationResponseMessage"}},types:{BlockPaginationRequest:{from_block:"BlockNumber",from_index:"u32",to_block:"BlockNumber",page_size:"u32"},MessageResponse:{payload:"Option<Vec<u8>>",cid:"Option<Vec<u8>>",provider_msa_id:"MessageSourceId",msa_id:"Option<MessageSourceId>",index:"u16",block_number:"BlockNumber",payload_length:"Option<u32>"},BlockPaginationResponseMessage:{content:"Vec<MessageResponse>",has_next:"bool",next_block:"Option<BlockNumber>",next_index:"Option<u32>"}}},JO={rpc:{getBySchemaId:{description:"Get a Schema by Id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"},checkSchemaValidity:{description:"",params:[{name:"model",type:"SchemaModel"},{name:"at",type:"BlockHash",isOptional:!0}],type:"bool"},getVersions:{description:"Get different versions and schema ids for a complete schema name or only a namespace",params:[{name:"schema_name",type:"String"}],type:"Option<Vec<SchemaVersionResponse>>"}},types:{SchemaId:"u16",SchemaModel:"Vec<u8>",SchemaVersion:"u8",SchemaResponse:{schema_id:"SchemaId",model:"SchemaModel",model_type:"ModelType",payload_location:"PayloadLocation",settings:"Vec<SchemaSetting>"},ModelType:{_enum:["AvroBinary","Parquet"]},PayloadLocation:{_enum:["OnChain","IPFS","Itemized","Paginated"]},SchemaSetting:{_enum:["AppendOnly","SignatureRequired"]},SchemaVersionResponse:{schema_name:"String",schema_version:"SchemaVersion",schema_id:"SchemaId"}}},QO={rpc:{getPaginatedStorage:{description:"Gets pages of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Vec<PaginatedStorageResponse>"},getItemizedStorage:{description:"Gets itemized of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"ItemizedStoragePageResponse"}},types:{PageId:"u16",PageHash:"u32",PageNonce:"u16",ItemizedStorageResponse:{index:"u16",payload:"Vec<u8>"},PaginatedStorageResponse:{page_id:"PageId",msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",payload:"Vec<u8>"},ItemizedStoragePageResponse:{msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",items:"Vec<ItemizedStorageResponse>"}}},_O={rpc:{getHandleForMsa:{description:"Get handle for a given msa_id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<HandleResponse>"},getMsaForHandle:{description:"Get msa_id for a given handle",params:[{name:"display_handle",type:"String"}],type:"Option<MessageSourceId>"},getNextSuffixes:{description:"Get next suffixes for a given handle and count",params:[{name:"base_handle",type:"String"},{name:"count",type:"u16"}],type:"PresumptiveSuffixesResponse"},validateHandle:{description:"Check whether the supplied handle passes all the checks performed by claim_handle call.",params:[{name:"base_handle",type:"String"}],type:"bool"}},types:{HandleSuffix:"u16",HandleResponse:{base_handle:"String",canonical_base:"String",suffix:"u16"},PresumptiveSuffixesResponse:{suffixes:"Vec<HandleSuffix>",base_handle:"String"}}},$O={rpc:{getEvents:{description:"Get block Events",params:[{name:"at",type:"H256"}],type:"Vec<RpcEvent>"},getMissingNonceValues:{description:"Get missing nonce values for an account",params:[{name:"account",type:"AccountId32"}],type:"Vec<Index>"}},types:{RpcEvent:{phase:"Option<u32>",pallet:"u8",event:"u8",data:"Vec<u8>"},SpConsensusSlotsSlotDuration:"u64"}},eV={rpc:{computeCapacityFeeDetails:{description:"Compute the capacity fee details for a given transaction",params:[{name:"encoded_xt",type:"Vec<u8>"},{name:"at",type:"Option<BlockHash>"}],type:"FeeDetails"}},types:{}},tV={rpc:{dummy:{description:"This API has no custom RPCs",params:[],type:"undefined"}},types:{RewardEra:"u32",UnclaimedRewardInfo:{reward_era:"RewardEra",expires_at_block:"BlockNumber",staked_amount:"Balance",eligible_amount:"Balance",earned_amount:"Balance"}}},vx=Object.freeze(Object.defineProperty({__proto__:null,capacity:tV,frequency:$O,frequencyTxPayment:eV,handles:_O,messages:KO,msa:YO,schemas:JO,statefulStorage:QO},Symbol.toStringTag,{value:"Module"})),nV={transactionWatch_v1:{submitAndWatch:{description:"",type:"",params:[]},unwatch:{description:"",type:"",params:[]}},transaction_v1:{broadcast:{description:"",type:"",params:[]},stop:{description:"",type:"",params:[]}},chainHead_v1:{body:{description:"",type:"",params:[]},call:{description:"",type:"",params:[]},continue:{description:"",type:"",params:[]},follow:{description:"",type:"",params:[]},header:{description:"",type:"",params:[]},stopOperation:{description:"",type:"",params:[]},storage:{description:"",type:"",params:[]},unfollow:{description:"",type:"",params:[]},unpin:{description:"",type:"",params:[]}}};Object.entries(vx).reduce((t,[e,n])=>({...t,...n.types}),{});Object.entries(vx).reduce((t,[e,n])=>({...t,[e]:n.rpc}),{...nV});function rV(t){return t("return this")}const vo=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:rV(Function);function qm(t,e){return typeof vo[t]>"u"?e:vo[t]}let iV=class{constructor(e){Dt(this,"__encoding");this.__encoding=e}decode(e){let n="";for(let r=0,i=e.length;r<i;r++)n+=String.fromCharCode(e[r]);return n}};const aV=qm("TextDecoder",iV);let sV=class{encode(e){const n=e.length,r=new Uint8Array(n);for(let i=0;i<n;i++)r[i]=e.charCodeAt(i);return r}};const oV=qm("TextEncoder",sV);function h1(t){return typeof t=="function"}function cV(){return Number.NaN}const At=qm("BigInt",cV),_f=At(0),$f=At(1),x3=At(256),v3=At(256*256),uV=At("0x10000000000000000");function p1(t,{isLe:e=!0,isNegative:n=!1}={}){e||(t=t.slice().reverse());const r=t.length;if(n&&r&&t[r-1]&128){switch(r){case 0:return At(0);case 1:return At((t[0]^255)*-1-1);case 2:return At((t[0]+(t[1]<<8)^65535)*-1-1);case 4:return At((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)*-1-1)}const a=new DataView(t.buffer,t.byteOffset);if(r===8)return a.getBigInt64(0,!0);let s=At(0);const o=r%2;for(let u=r-2;u>=o;u-=2)s=s*v3+At(a.getUint16(u,!0)^65535);return o&&(s=s*x3+At(t[0]^255)),s*-$f-$f}switch(r){case 0:return At(0);case 1:return At(t[0]);case 2:return At(t[0]+(t[1]<<8));case 4:return At(t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216)}const i=new DataView(t.buffer,t.byteOffset);switch(r){case 8:return i.getBigUint64(0,!0);case 16:return i.getBigUint64(8,!0)*uV+i.getBigUint64(0,!0);default:{let a=At(0);const s=r%2;for(let o=r-2;o>=s;o-=2)a=a*v3+At(i.getUint16(o,!0));return s&&(a=a*x3+At(t[0])),a}}}const Ch="0123456789abcdef",e0=new Uint8Array(256),wx=new Uint8Array(256*256);for(let t=0,e=Ch.length;t<e;t++)e0[Ch[t].charCodeAt(0)|0]=t|0,t>9&&(e0[Ch[t].toUpperCase().charCodeAt(0)|0]=t|0);for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)wx[e|n]=e0[t]<<4|e0[n]}function yc(t,e=-1){if(!t)return new Uint8Array;let n=t.startsWith("0x")?2:0;const r=Math.ceil((t.length-n)/2),i=Math.ceil(e===-1?r:e/8),a=new Uint8Array(i),s=i>r?i-r:0;for(let o=s;o<i;o++,n+=2)a[o]=wx[t.charCodeAt(n)<<8|t.charCodeAt(n+1)];return a}function lV(t,{isLe:e=!1,isNegative:n=!1}={}){return!t||t==="0x"?At(0):p1(yc(t),{isLe:e,isNegative:n})}var dV=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function fV(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function hV(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(r){var i=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:function(){return t[r]}})}),n}var Wm={exports:{}};const pV={},mV=Object.freeze(Object.defineProperty({__proto__:null,default:pV},Symbol.toStringTag,{value:"Module"})),bV=hV(mV);Wm.exports;(function(t){(function(e,n){function r(c,l){if(!c)throw new Error(l||"Assertion failed")}function i(c,l){c.super_=l;var f=function(){};f.prototype=l.prototype,c.prototype=new f,c.prototype.constructor=c}function a(c,l,f){if(a.isBN(c))return c;this.negative=0,this.words=null,this.length=0,this.red=null,c!==null&&((l==="le"||l==="be")&&(f=l,l=10),this._init(c||0,l||10,f||"be"))}typeof e=="object"?e.exports=a:n.BN=a,a.BN=a,a.wordSize=26;var s;try{typeof window<"u"&&typeof window.Buffer<"u"?s=window.Buffer:s=bV.Buffer}catch{}a.isBN=function(l){return l instanceof a?!0:l!==null&&typeof l=="object"&&l.constructor.wordSize===a.wordSize&&Array.isArray(l.words)},a.max=function(l,f){return l.cmp(f)>0?l:f},a.min=function(l,f){return l.cmp(f)<0?l:f},a.prototype._init=function(l,f,b){if(typeof l=="number")return this._initNumber(l,f,b);if(typeof l=="object")return this._initArray(l,f,b);f==="hex"&&(f=16),r(f===(f|0)&&f>=2&&f<=36),l=l.toString().replace(/\s+/g,"");var g=0;l[0]==="-"&&(g++,this.negative=1),g<l.length&&(f===16?this._parseHex(l,g,b):(this._parseBase(l,f,g),b==="le"&&this._initArray(this.toArray(),f,b)))},a.prototype._initNumber=function(l,f,b){l<0&&(this.negative=1,l=-l),l<67108864?(this.words=[l&67108863],this.length=1):l<4503599627370496?(this.words=[l&67108863,l/67108864&67108863],this.length=2):(r(l<9007199254740992),this.words=[l&67108863,l/67108864&67108863,1],this.length=3),b==="le"&&this._initArray(this.toArray(),f,b)},a.prototype._initArray=function(l,f,b){if(r(typeof l.length=="number"),l.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(l.length/3),this.words=new Array(this.length);for(var g=0;g<this.length;g++)this.words[g]=0;var v,M,x=0;if(b==="be")for(g=l.length-1,v=0;g>=0;g-=3)M=l[g]|l[g-1]<<8|l[g-2]<<16,this.words[v]|=M<<x&67108863,this.words[v+1]=M>>>26-x&67108863,x+=24,x>=26&&(x-=26,v++);else if(b==="le")for(g=0,v=0;g<l.length;g+=3)M=l[g]|l[g+1]<<8|l[g+2]<<16,this.words[v]|=M<<x&67108863,this.words[v+1]=M>>>26-x&67108863,x+=24,x>=26&&(x-=26,v++);return this._strip()};function o(c,l){var f=c.charCodeAt(l);if(f>=48&&f<=57)return f-48;if(f>=65&&f<=70)return f-55;if(f>=97&&f<=102)return f-87;r(!1,"Invalid character in "+c)}function u(c,l,f){var b=o(c,f);return f-1>=l&&(b|=o(c,f-1)<<4),b}a.prototype._parseHex=function(l,f,b){this.length=Math.ceil((l.length-f)/6),this.words=new Array(this.length);for(var g=0;g<this.length;g++)this.words[g]=0;var v=0,M=0,x;if(b==="be")for(g=l.length-1;g>=f;g-=2)x=u(l,f,g)<<v,this.words[M]|=x&67108863,v>=18?(v-=18,M+=1,this.words[M]|=x>>>26):v+=8;else{var d=l.length-f;for(g=d%2===0?f+1:f;g<l.length;g+=2)x=u(l,f,g)<<v,this.words[M]|=x&67108863,v>=18?(v-=18,M+=1,this.words[M]|=x>>>26):v+=8}this._strip()};function h(c,l,f,b){for(var g=0,v=0,M=Math.min(c.length,f),x=l;x<M;x++){var d=c.charCodeAt(x)-48;g*=b,d>=49?v=d-49+10:d>=17?v=d-17+10:v=d,r(d>=0&&v<b,"Invalid character"),g+=v}return g}a.prototype._parseBase=function(l,f,b){this.words=[0],this.length=1;for(var g=0,v=1;v<=67108863;v*=f)g++;g--,v=v/f|0;for(var M=l.length-b,x=M%g,d=Math.min(M,M-x)+b,m=0,V=b;V<d;V+=g)m=h(l,V,V+g,f),this.imuln(v),this.words[0]+m<67108864?this.words[0]+=m:this._iaddn(m);if(x!==0){var B=1;for(m=h(l,V,l.length,f),V=0;V<x;V++)B*=f;this.imuln(B),this.words[0]+m<67108864?this.words[0]+=m:this._iaddn(m)}this._strip()},a.prototype.copy=function(l){l.words=new Array(this.length);for(var f=0;f<this.length;f++)l.words[f]=this.words[f];l.length=this.length,l.negative=this.negative,l.red=this.red};function p(c,l){c.words=l.words,c.length=l.length,c.negative=l.negative,c.red=l.red}if(a.prototype._move=function(l){p(l,this)},a.prototype.clone=function(){var l=new a(null);return this.copy(l),l},a.prototype._expand=function(l){for(;this.length<l;)this.words[this.length++]=0;return this},a.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},a.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{a.prototype[Symbol.for("nodejs.util.inspect.custom")]=y}catch{a.prototype.inspect=y}else a.prototype.inspect=y;function y(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var w=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],P=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],N=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];a.prototype.toString=function(l,f){l=l||10,f=f|0||1;var b;if(l===16||l==="hex"){b="";for(var g=0,v=0,M=0;M<this.length;M++){var x=this.words[M],d=((x<<g|v)&16777215).toString(16);v=x>>>24-g&16777215,g+=2,g>=26&&(g-=26,M--),v!==0||M!==this.length-1?b=w[6-d.length]+d+b:b=d+b}for(v!==0&&(b=v.toString(16)+b);b.length%f!==0;)b="0"+b;return this.negative!==0&&(b="-"+b),b}if(l===(l|0)&&l>=2&&l<=36){var m=P[l],V=N[l];b="";var B=this.clone();for(B.negative=0;!B.isZero();){var k=B.modrn(V).toString(l);B=B.idivn(V),B.isZero()?b=k+b:b=w[m-k.length]+k+b}for(this.isZero()&&(b="0"+b);b.length%f!==0;)b="0"+b;return this.negative!==0&&(b="-"+b),b}r(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var l=this.words[0];return this.length===2?l+=this.words[1]*67108864:this.length===3&&this.words[2]===1?l+=4503599627370496+this.words[1]*67108864:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-l:l},a.prototype.toJSON=function(){return this.toString(16,2)},s&&(a.prototype.toBuffer=function(l,f){return this.toArrayLike(s,l,f)}),a.prototype.toArray=function(l,f){return this.toArrayLike(Array,l,f)};var O=function(l,f){return l.allocUnsafe?l.allocUnsafe(f):new l(f)};a.prototype.toArrayLike=function(l,f,b){this._strip();var g=this.byteLength(),v=b||Math.max(1,g);r(g<=v,"byte array longer than desired length"),r(v>0,"Requested array length <= 0");var M=O(l,v),x=f==="le"?"LE":"BE";return this["_toArrayLike"+x](M,g),M},a.prototype._toArrayLikeLE=function(l,f){for(var b=0,g=0,v=0,M=0;v<this.length;v++){var x=this.words[v]<<M|g;l[b++]=x&255,b<l.length&&(l[b++]=x>>8&255),b<l.length&&(l[b++]=x>>16&255),M===6?(b<l.length&&(l[b++]=x>>24&255),g=0,M=0):(g=x>>>24,M+=2)}if(b<l.length)for(l[b++]=g;b<l.length;)l[b++]=0},a.prototype._toArrayLikeBE=function(l,f){for(var b=l.length-1,g=0,v=0,M=0;v<this.length;v++){var x=this.words[v]<<M|g;l[b--]=x&255,b>=0&&(l[b--]=x>>8&255),b>=0&&(l[b--]=x>>16&255),M===6?(b>=0&&(l[b--]=x>>24&255),g=0,M=0):(g=x>>>24,M+=2)}if(b>=0)for(l[b--]=g;b>=0;)l[b--]=0},Math.clz32?a.prototype._countBits=function(l){return 32-Math.clz32(l)}:a.prototype._countBits=function(l){var f=l,b=0;return f>=4096&&(b+=13,f>>>=13),f>=64&&(b+=7,f>>>=7),f>=8&&(b+=4,f>>>=4),f>=2&&(b+=2,f>>>=2),b+f},a.prototype._zeroBits=function(l){if(l===0)return 26;var f=l,b=0;return f&8191||(b+=13,f>>>=13),f&127||(b+=7,f>>>=7),f&15||(b+=4,f>>>=4),f&3||(b+=2,f>>>=2),f&1||b++,b},a.prototype.bitLength=function(){var l=this.words[this.length-1],f=this._countBits(l);return(this.length-1)*26+f};function z(c){for(var l=new Array(c.bitLength()),f=0;f<l.length;f++){var b=f/26|0,g=f%26;l[f]=c.words[b]>>>g&1}return l}a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var l=0,f=0;f<this.length;f++){var b=this._zeroBits(this.words[f]);if(l+=b,b!==26)break}return l},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(l){return this.negative!==0?this.abs().inotn(l).iaddn(1):this.clone()},a.prototype.fromTwos=function(l){return this.testn(l-1)?this.notn(l).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return this.negative!==0},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(l){for(;this.length<l.length;)this.words[this.length++]=0;for(var f=0;f<l.length;f++)this.words[f]=this.words[f]|l.words[f];return this._strip()},a.prototype.ior=function(l){return r((this.negative|l.negative)===0),this.iuor(l)},a.prototype.or=function(l){return this.length>l.length?this.clone().ior(l):l.clone().ior(this)},a.prototype.uor=function(l){return this.length>l.length?this.clone().iuor(l):l.clone().iuor(this)},a.prototype.iuand=function(l){var f;this.length>l.length?f=l:f=this;for(var b=0;b<f.length;b++)this.words[b]=this.words[b]&l.words[b];return this.length=f.length,this._strip()},a.prototype.iand=function(l){return r((this.negative|l.negative)===0),this.iuand(l)},a.prototype.and=function(l){return this.length>l.length?this.clone().iand(l):l.clone().iand(this)},a.prototype.uand=function(l){return this.length>l.length?this.clone().iuand(l):l.clone().iuand(this)},a.prototype.iuxor=function(l){var f,b;this.length>l.length?(f=this,b=l):(f=l,b=this);for(var g=0;g<b.length;g++)this.words[g]=f.words[g]^b.words[g];if(this!==f)for(;g<f.length;g++)this.words[g]=f.words[g];return this.length=f.length,this._strip()},a.prototype.ixor=function(l){return r((this.negative|l.negative)===0),this.iuxor(l)},a.prototype.xor=function(l){return this.length>l.length?this.clone().ixor(l):l.clone().ixor(this)},a.prototype.uxor=function(l){return this.length>l.length?this.clone().iuxor(l):l.clone().iuxor(this)},a.prototype.inotn=function(l){r(typeof l=="number"&&l>=0);var f=Math.ceil(l/26)|0,b=l%26;this._expand(f),b>0&&f--;for(var g=0;g<f;g++)this.words[g]=~this.words[g]&67108863;return b>0&&(this.words[g]=~this.words[g]&67108863>>26-b),this._strip()},a.prototype.notn=function(l){return this.clone().inotn(l)},a.prototype.setn=function(l,f){r(typeof l=="number"&&l>=0);var b=l/26|0,g=l%26;return this._expand(b+1),f?this.words[b]=this.words[b]|1<<g:this.words[b]=this.words[b]&~(1<<g),this._strip()},a.prototype.iadd=function(l){var f;if(this.negative!==0&&l.negative===0)return this.negative=0,f=this.isub(l),this.negative^=1,this._normSign();if(this.negative===0&&l.negative!==0)return l.negative=0,f=this.isub(l),l.negative=1,f._normSign();var b,g;this.length>l.length?(b=this,g=l):(b=l,g=this);for(var v=0,M=0;M<g.length;M++)f=(b.words[M]|0)+(g.words[M]|0)+v,this.words[M]=f&67108863,v=f>>>26;for(;v!==0&&M<b.length;M++)f=(b.words[M]|0)+v,this.words[M]=f&67108863,v=f>>>26;if(this.length=b.length,v!==0)this.words[this.length]=v,this.length++;else if(b!==this)for(;M<b.length;M++)this.words[M]=b.words[M];return this},a.prototype.add=function(l){var f;return l.negative!==0&&this.negative===0?(l.negative=0,f=this.sub(l),l.negative^=1,f):l.negative===0&&this.negative!==0?(this.negative=0,f=l.sub(this),this.negative=1,f):this.length>l.length?this.clone().iadd(l):l.clone().iadd(this)},a.prototype.isub=function(l){if(l.negative!==0){l.negative=0;var f=this.iadd(l);return l.negative=1,f._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(l),this.negative=1,this._normSign();var b=this.cmp(l);if(b===0)return this.negative=0,this.length=1,this.words[0]=0,this;var g,v;b>0?(g=this,v=l):(g=l,v=this);for(var M=0,x=0;x<v.length;x++)f=(g.words[x]|0)-(v.words[x]|0)+M,M=f>>26,this.words[x]=f&67108863;for(;M!==0&&x<g.length;x++)f=(g.words[x]|0)+M,M=f>>26,this.words[x]=f&67108863;if(M===0&&x<g.length&&g!==this)for(;x<g.length;x++)this.words[x]=g.words[x];return this.length=Math.max(this.length,x),g!==this&&(this.negative=1),this._strip()},a.prototype.sub=function(l){return this.clone().isub(l)};function j(c,l,f){f.negative=l.negative^c.negative;var b=c.length+l.length|0;f.length=b,b=b-1|0;var g=c.words[0]|0,v=l.words[0]|0,M=g*v,x=M&67108863,d=M/67108864|0;f.words[0]=x;for(var m=1;m<b;m++){for(var V=d>>>26,B=d&67108863,k=Math.min(m,l.length-1),Z=Math.max(0,m-c.length+1);Z<=k;Z++){var q=m-Z|0;g=c.words[q]|0,v=l.words[Z]|0,M=g*v+B,V+=M/67108864|0,B=M&67108863}f.words[m]=B|0,d=V|0}return d!==0?f.words[m]=d|0:f.length--,f._strip()}var I=function(l,f,b){var g=l.words,v=f.words,M=b.words,x=0,d,m,V,B=g[0]|0,k=B&8191,Z=B>>>13,q=g[1]|0,W=q&8191,J=q>>>13,_=g[2]|0,K=_&8191,se=_>>>13,pe=g[3]|0,re=pe&8191,Fe=pe>>>13,Ce=g[4]|0,le=Ce&8191,Ye=Ce>>>13,je=g[5]|0,ge=je&8191,Ke=je>>>13,te=g[6]|0,ce=te&8191,Ve=te>>>13,Ue=g[7]|0,ue=Ue&8191,lt=Ue>>>13,We=g[8]|0,xe=We&8191,yt=We>>>13,$e=g[9]|0,Se=$e&8191,gt=$e>>>13,De=v[0]|0,ve=De&8191,vt=De>>>13,Ge=v[1]|0,Pe=Ge&8191,Tt=Ge>>>13,Je=v[2]|0,Ee=Je&8191,Ot=Je>>>13,et=v[3]|0,ze=et&8191,wt=et>>>13,tt=v[4]|0,Ie=tt&8191,xt=tt>>>13,nt=v[5]|0,Le=nt&8191,Vt=nt>>>13,rt=v[6]|0,He=rt&8191,St=rt>>>13,it=v[7]|0,Ae=it&8191,Et=it>>>13,at=v[8]|0,Re=at&8191,zt=at>>>13,st=v[9]|0,Be=st&8191,Pt=st>>>13;b.negative=l.negative^f.negative,b.length=19,d=Math.imul(k,ve),m=Math.imul(k,vt),m=m+Math.imul(Z,ve)|0,V=Math.imul(Z,vt);var vn=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(vn>>>26)|0,vn&=67108863,d=Math.imul(W,ve),m=Math.imul(W,vt),m=m+Math.imul(J,ve)|0,V=Math.imul(J,vt),d=d+Math.imul(k,Pe)|0,m=m+Math.imul(k,Tt)|0,m=m+Math.imul(Z,Pe)|0,V=V+Math.imul(Z,Tt)|0;var wn=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(wn>>>26)|0,wn&=67108863,d=Math.imul(K,ve),m=Math.imul(K,vt),m=m+Math.imul(se,ve)|0,V=Math.imul(se,vt),d=d+Math.imul(W,Pe)|0,m=m+Math.imul(W,Tt)|0,m=m+Math.imul(J,Pe)|0,V=V+Math.imul(J,Tt)|0,d=d+Math.imul(k,Ee)|0,m=m+Math.imul(k,Ot)|0,m=m+Math.imul(Z,Ee)|0,V=V+Math.imul(Z,Ot)|0;var Pn=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(Pn>>>26)|0,Pn&=67108863,d=Math.imul(re,ve),m=Math.imul(re,vt),m=m+Math.imul(Fe,ve)|0,V=Math.imul(Fe,vt),d=d+Math.imul(K,Pe)|0,m=m+Math.imul(K,Tt)|0,m=m+Math.imul(se,Pe)|0,V=V+Math.imul(se,Tt)|0,d=d+Math.imul(W,Ee)|0,m=m+Math.imul(W,Ot)|0,m=m+Math.imul(J,Ee)|0,V=V+Math.imul(J,Ot)|0,d=d+Math.imul(k,ze)|0,m=m+Math.imul(k,wt)|0,m=m+Math.imul(Z,ze)|0,V=V+Math.imul(Z,wt)|0;var Mn=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(Mn>>>26)|0,Mn&=67108863,d=Math.imul(le,ve),m=Math.imul(le,vt),m=m+Math.imul(Ye,ve)|0,V=Math.imul(Ye,vt),d=d+Math.imul(re,Pe)|0,m=m+Math.imul(re,Tt)|0,m=m+Math.imul(Fe,Pe)|0,V=V+Math.imul(Fe,Tt)|0,d=d+Math.imul(K,Ee)|0,m=m+Math.imul(K,Ot)|0,m=m+Math.imul(se,Ee)|0,V=V+Math.imul(se,Ot)|0,d=d+Math.imul(W,ze)|0,m=m+Math.imul(W,wt)|0,m=m+Math.imul(J,ze)|0,V=V+Math.imul(J,wt)|0,d=d+Math.imul(k,Ie)|0,m=m+Math.imul(k,xt)|0,m=m+Math.imul(Z,Ie)|0,V=V+Math.imul(Z,xt)|0;var kn=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(kn>>>26)|0,kn&=67108863,d=Math.imul(ge,ve),m=Math.imul(ge,vt),m=m+Math.imul(Ke,ve)|0,V=Math.imul(Ke,vt),d=d+Math.imul(le,Pe)|0,m=m+Math.imul(le,Tt)|0,m=m+Math.imul(Ye,Pe)|0,V=V+Math.imul(Ye,Tt)|0,d=d+Math.imul(re,Ee)|0,m=m+Math.imul(re,Ot)|0,m=m+Math.imul(Fe,Ee)|0,V=V+Math.imul(Fe,Ot)|0,d=d+Math.imul(K,ze)|0,m=m+Math.imul(K,wt)|0,m=m+Math.imul(se,ze)|0,V=V+Math.imul(se,wt)|0,d=d+Math.imul(W,Ie)|0,m=m+Math.imul(W,xt)|0,m=m+Math.imul(J,Ie)|0,V=V+Math.imul(J,xt)|0,d=d+Math.imul(k,Le)|0,m=m+Math.imul(k,Vt)|0,m=m+Math.imul(Z,Le)|0,V=V+Math.imul(Z,Vt)|0;var pr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(pr>>>26)|0,pr&=67108863,d=Math.imul(ce,ve),m=Math.imul(ce,vt),m=m+Math.imul(Ve,ve)|0,V=Math.imul(Ve,vt),d=d+Math.imul(ge,Pe)|0,m=m+Math.imul(ge,Tt)|0,m=m+Math.imul(Ke,Pe)|0,V=V+Math.imul(Ke,Tt)|0,d=d+Math.imul(le,Ee)|0,m=m+Math.imul(le,Ot)|0,m=m+Math.imul(Ye,Ee)|0,V=V+Math.imul(Ye,Ot)|0,d=d+Math.imul(re,ze)|0,m=m+Math.imul(re,wt)|0,m=m+Math.imul(Fe,ze)|0,V=V+Math.imul(Fe,wt)|0,d=d+Math.imul(K,Ie)|0,m=m+Math.imul(K,xt)|0,m=m+Math.imul(se,Ie)|0,V=V+Math.imul(se,xt)|0,d=d+Math.imul(W,Le)|0,m=m+Math.imul(W,Vt)|0,m=m+Math.imul(J,Le)|0,V=V+Math.imul(J,Vt)|0,d=d+Math.imul(k,He)|0,m=m+Math.imul(k,St)|0,m=m+Math.imul(Z,He)|0,V=V+Math.imul(Z,St)|0;var mr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(mr>>>26)|0,mr&=67108863,d=Math.imul(ue,ve),m=Math.imul(ue,vt),m=m+Math.imul(lt,ve)|0,V=Math.imul(lt,vt),d=d+Math.imul(ce,Pe)|0,m=m+Math.imul(ce,Tt)|0,m=m+Math.imul(Ve,Pe)|0,V=V+Math.imul(Ve,Tt)|0,d=d+Math.imul(ge,Ee)|0,m=m+Math.imul(ge,Ot)|0,m=m+Math.imul(Ke,Ee)|0,V=V+Math.imul(Ke,Ot)|0,d=d+Math.imul(le,ze)|0,m=m+Math.imul(le,wt)|0,m=m+Math.imul(Ye,ze)|0,V=V+Math.imul(Ye,wt)|0,d=d+Math.imul(re,Ie)|0,m=m+Math.imul(re,xt)|0,m=m+Math.imul(Fe,Ie)|0,V=V+Math.imul(Fe,xt)|0,d=d+Math.imul(K,Le)|0,m=m+Math.imul(K,Vt)|0,m=m+Math.imul(se,Le)|0,V=V+Math.imul(se,Vt)|0,d=d+Math.imul(W,He)|0,m=m+Math.imul(W,St)|0,m=m+Math.imul(J,He)|0,V=V+Math.imul(J,St)|0,d=d+Math.imul(k,Ae)|0,m=m+Math.imul(k,Et)|0,m=m+Math.imul(Z,Ae)|0,V=V+Math.imul(Z,Et)|0;var br=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(br>>>26)|0,br&=67108863,d=Math.imul(xe,ve),m=Math.imul(xe,vt),m=m+Math.imul(yt,ve)|0,V=Math.imul(yt,vt),d=d+Math.imul(ue,Pe)|0,m=m+Math.imul(ue,Tt)|0,m=m+Math.imul(lt,Pe)|0,V=V+Math.imul(lt,Tt)|0,d=d+Math.imul(ce,Ee)|0,m=m+Math.imul(ce,Ot)|0,m=m+Math.imul(Ve,Ee)|0,V=V+Math.imul(Ve,Ot)|0,d=d+Math.imul(ge,ze)|0,m=m+Math.imul(ge,wt)|0,m=m+Math.imul(Ke,ze)|0,V=V+Math.imul(Ke,wt)|0,d=d+Math.imul(le,Ie)|0,m=m+Math.imul(le,xt)|0,m=m+Math.imul(Ye,Ie)|0,V=V+Math.imul(Ye,xt)|0,d=d+Math.imul(re,Le)|0,m=m+Math.imul(re,Vt)|0,m=m+Math.imul(Fe,Le)|0,V=V+Math.imul(Fe,Vt)|0,d=d+Math.imul(K,He)|0,m=m+Math.imul(K,St)|0,m=m+Math.imul(se,He)|0,V=V+Math.imul(se,St)|0,d=d+Math.imul(W,Ae)|0,m=m+Math.imul(W,Et)|0,m=m+Math.imul(J,Ae)|0,V=V+Math.imul(J,Et)|0,d=d+Math.imul(k,Re)|0,m=m+Math.imul(k,zt)|0,m=m+Math.imul(Z,Re)|0,V=V+Math.imul(Z,zt)|0;var yr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(yr>>>26)|0,yr&=67108863,d=Math.imul(Se,ve),m=Math.imul(Se,vt),m=m+Math.imul(gt,ve)|0,V=Math.imul(gt,vt),d=d+Math.imul(xe,Pe)|0,m=m+Math.imul(xe,Tt)|0,m=m+Math.imul(yt,Pe)|0,V=V+Math.imul(yt,Tt)|0,d=d+Math.imul(ue,Ee)|0,m=m+Math.imul(ue,Ot)|0,m=m+Math.imul(lt,Ee)|0,V=V+Math.imul(lt,Ot)|0,d=d+Math.imul(ce,ze)|0,m=m+Math.imul(ce,wt)|0,m=m+Math.imul(Ve,ze)|0,V=V+Math.imul(Ve,wt)|0,d=d+Math.imul(ge,Ie)|0,m=m+Math.imul(ge,xt)|0,m=m+Math.imul(Ke,Ie)|0,V=V+Math.imul(Ke,xt)|0,d=d+Math.imul(le,Le)|0,m=m+Math.imul(le,Vt)|0,m=m+Math.imul(Ye,Le)|0,V=V+Math.imul(Ye,Vt)|0,d=d+Math.imul(re,He)|0,m=m+Math.imul(re,St)|0,m=m+Math.imul(Fe,He)|0,V=V+Math.imul(Fe,St)|0,d=d+Math.imul(K,Ae)|0,m=m+Math.imul(K,Et)|0,m=m+Math.imul(se,Ae)|0,V=V+Math.imul(se,Et)|0,d=d+Math.imul(W,Re)|0,m=m+Math.imul(W,zt)|0,m=m+Math.imul(J,Re)|0,V=V+Math.imul(J,zt)|0,d=d+Math.imul(k,Be)|0,m=m+Math.imul(k,Pt)|0,m=m+Math.imul(Z,Be)|0,V=V+Math.imul(Z,Pt)|0;var gr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(gr>>>26)|0,gr&=67108863,d=Math.imul(Se,Pe),m=Math.imul(Se,Tt),m=m+Math.imul(gt,Pe)|0,V=Math.imul(gt,Tt),d=d+Math.imul(xe,Ee)|0,m=m+Math.imul(xe,Ot)|0,m=m+Math.imul(yt,Ee)|0,V=V+Math.imul(yt,Ot)|0,d=d+Math.imul(ue,ze)|0,m=m+Math.imul(ue,wt)|0,m=m+Math.imul(lt,ze)|0,V=V+Math.imul(lt,wt)|0,d=d+Math.imul(ce,Ie)|0,m=m+Math.imul(ce,xt)|0,m=m+Math.imul(Ve,Ie)|0,V=V+Math.imul(Ve,xt)|0,d=d+Math.imul(ge,Le)|0,m=m+Math.imul(ge,Vt)|0,m=m+Math.imul(Ke,Le)|0,V=V+Math.imul(Ke,Vt)|0,d=d+Math.imul(le,He)|0,m=m+Math.imul(le,St)|0,m=m+Math.imul(Ye,He)|0,V=V+Math.imul(Ye,St)|0,d=d+Math.imul(re,Ae)|0,m=m+Math.imul(re,Et)|0,m=m+Math.imul(Fe,Ae)|0,V=V+Math.imul(Fe,Et)|0,d=d+Math.imul(K,Re)|0,m=m+Math.imul(K,zt)|0,m=m+Math.imul(se,Re)|0,V=V+Math.imul(se,zt)|0,d=d+Math.imul(W,Be)|0,m=m+Math.imul(W,Pt)|0,m=m+Math.imul(J,Be)|0,V=V+Math.imul(J,Pt)|0;var xr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(xr>>>26)|0,xr&=67108863,d=Math.imul(Se,Ee),m=Math.imul(Se,Ot),m=m+Math.imul(gt,Ee)|0,V=Math.imul(gt,Ot),d=d+Math.imul(xe,ze)|0,m=m+Math.imul(xe,wt)|0,m=m+Math.imul(yt,ze)|0,V=V+Math.imul(yt,wt)|0,d=d+Math.imul(ue,Ie)|0,m=m+Math.imul(ue,xt)|0,m=m+Math.imul(lt,Ie)|0,V=V+Math.imul(lt,xt)|0,d=d+Math.imul(ce,Le)|0,m=m+Math.imul(ce,Vt)|0,m=m+Math.imul(Ve,Le)|0,V=V+Math.imul(Ve,Vt)|0,d=d+Math.imul(ge,He)|0,m=m+Math.imul(ge,St)|0,m=m+Math.imul(Ke,He)|0,V=V+Math.imul(Ke,St)|0,d=d+Math.imul(le,Ae)|0,m=m+Math.imul(le,Et)|0,m=m+Math.imul(Ye,Ae)|0,V=V+Math.imul(Ye,Et)|0,d=d+Math.imul(re,Re)|0,m=m+Math.imul(re,zt)|0,m=m+Math.imul(Fe,Re)|0,V=V+Math.imul(Fe,zt)|0,d=d+Math.imul(K,Be)|0,m=m+Math.imul(K,Pt)|0,m=m+Math.imul(se,Be)|0,V=V+Math.imul(se,Pt)|0;var vr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(vr>>>26)|0,vr&=67108863,d=Math.imul(Se,ze),m=Math.imul(Se,wt),m=m+Math.imul(gt,ze)|0,V=Math.imul(gt,wt),d=d+Math.imul(xe,Ie)|0,m=m+Math.imul(xe,xt)|0,m=m+Math.imul(yt,Ie)|0,V=V+Math.imul(yt,xt)|0,d=d+Math.imul(ue,Le)|0,m=m+Math.imul(ue,Vt)|0,m=m+Math.imul(lt,Le)|0,V=V+Math.imul(lt,Vt)|0,d=d+Math.imul(ce,He)|0,m=m+Math.imul(ce,St)|0,m=m+Math.imul(Ve,He)|0,V=V+Math.imul(Ve,St)|0,d=d+Math.imul(ge,Ae)|0,m=m+Math.imul(ge,Et)|0,m=m+Math.imul(Ke,Ae)|0,V=V+Math.imul(Ke,Et)|0,d=d+Math.imul(le,Re)|0,m=m+Math.imul(le,zt)|0,m=m+Math.imul(Ye,Re)|0,V=V+Math.imul(Ye,zt)|0,d=d+Math.imul(re,Be)|0,m=m+Math.imul(re,Pt)|0,m=m+Math.imul(Fe,Be)|0,V=V+Math.imul(Fe,Pt)|0;var wr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(wr>>>26)|0,wr&=67108863,d=Math.imul(Se,Ie),m=Math.imul(Se,xt),m=m+Math.imul(gt,Ie)|0,V=Math.imul(gt,xt),d=d+Math.imul(xe,Le)|0,m=m+Math.imul(xe,Vt)|0,m=m+Math.imul(yt,Le)|0,V=V+Math.imul(yt,Vt)|0,d=d+Math.imul(ue,He)|0,m=m+Math.imul(ue,St)|0,m=m+Math.imul(lt,He)|0,V=V+Math.imul(lt,St)|0,d=d+Math.imul(ce,Ae)|0,m=m+Math.imul(ce,Et)|0,m=m+Math.imul(Ve,Ae)|0,V=V+Math.imul(Ve,Et)|0,d=d+Math.imul(ge,Re)|0,m=m+Math.imul(ge,zt)|0,m=m+Math.imul(Ke,Re)|0,V=V+Math.imul(Ke,zt)|0,d=d+Math.imul(le,Be)|0,m=m+Math.imul(le,Pt)|0,m=m+Math.imul(Ye,Be)|0,V=V+Math.imul(Ye,Pt)|0;var Pr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(Pr>>>26)|0,Pr&=67108863,d=Math.imul(Se,Le),m=Math.imul(Se,Vt),m=m+Math.imul(gt,Le)|0,V=Math.imul(gt,Vt),d=d+Math.imul(xe,He)|0,m=m+Math.imul(xe,St)|0,m=m+Math.imul(yt,He)|0,V=V+Math.imul(yt,St)|0,d=d+Math.imul(ue,Ae)|0,m=m+Math.imul(ue,Et)|0,m=m+Math.imul(lt,Ae)|0,V=V+Math.imul(lt,Et)|0,d=d+Math.imul(ce,Re)|0,m=m+Math.imul(ce,zt)|0,m=m+Math.imul(Ve,Re)|0,V=V+Math.imul(Ve,zt)|0,d=d+Math.imul(ge,Be)|0,m=m+Math.imul(ge,Pt)|0,m=m+Math.imul(Ke,Be)|0,V=V+Math.imul(Ke,Pt)|0;var Mr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(Mr>>>26)|0,Mr&=67108863,d=Math.imul(Se,He),m=Math.imul(Se,St),m=m+Math.imul(gt,He)|0,V=Math.imul(gt,St),d=d+Math.imul(xe,Ae)|0,m=m+Math.imul(xe,Et)|0,m=m+Math.imul(yt,Ae)|0,V=V+Math.imul(yt,Et)|0,d=d+Math.imul(ue,Re)|0,m=m+Math.imul(ue,zt)|0,m=m+Math.imul(lt,Re)|0,V=V+Math.imul(lt,zt)|0,d=d+Math.imul(ce,Be)|0,m=m+Math.imul(ce,Pt)|0,m=m+Math.imul(Ve,Be)|0,V=V+Math.imul(Ve,Pt)|0;var kr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(kr>>>26)|0,kr&=67108863,d=Math.imul(Se,Ae),m=Math.imul(Se,Et),m=m+Math.imul(gt,Ae)|0,V=Math.imul(gt,Et),d=d+Math.imul(xe,Re)|0,m=m+Math.imul(xe,zt)|0,m=m+Math.imul(yt,Re)|0,V=V+Math.imul(yt,zt)|0,d=d+Math.imul(ue,Be)|0,m=m+Math.imul(ue,Pt)|0,m=m+Math.imul(lt,Be)|0,V=V+Math.imul(lt,Pt)|0;var Tr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(Tr>>>26)|0,Tr&=67108863,d=Math.imul(Se,Re),m=Math.imul(Se,zt),m=m+Math.imul(gt,Re)|0,V=Math.imul(gt,zt),d=d+Math.imul(xe,Be)|0,m=m+Math.imul(xe,Pt)|0,m=m+Math.imul(yt,Be)|0,V=V+Math.imul(yt,Pt)|0;var Nr=(x+d|0)+((m&8191)<<13)|0;x=(V+(m>>>13)|0)+(Nr>>>26)|0,Nr&=67108863,d=Math.imul(Se,Be),m=Math.imul(Se,Pt),m=m+Math.imul(gt,Be)|0,V=Math.imul(gt,Pt);var Zc=(x+d|0)+((m&8191)<<13)|0;return x=(V+(m>>>13)|0)+(Zc>>>26)|0,Zc&=67108863,M[0]=vn,M[1]=wn,M[2]=Pn,M[3]=Mn,M[4]=kn,M[5]=pr,M[6]=mr,M[7]=br,M[8]=yr,M[9]=gr,M[10]=xr,M[11]=vr,M[12]=wr,M[13]=Pr,M[14]=Mr,M[15]=kr,M[16]=Tr,M[17]=Nr,M[18]=Zc,x!==0&&(M[19]=x,b.length++),b};Math.imul||(I=j);function A(c,l,f){f.negative=l.negative^c.negative,f.length=c.length+l.length;for(var b=0,g=0,v=0;v<f.length-1;v++){var M=g;g=0;for(var x=b&67108863,d=Math.min(v,l.length-1),m=Math.max(0,v-c.length+1);m<=d;m++){var V=v-m,B=c.words[V]|0,k=l.words[m]|0,Z=B*k,q=Z&67108863;M=M+(Z/67108864|0)|0,q=q+x|0,x=q&67108863,M=M+(q>>>26)|0,g+=M>>>26,M&=67108863}f.words[v]=x,b=M,M=g}return b!==0?f.words[v]=b:f.length--,f._strip()}function U(c,l,f){return A(c,l,f)}a.prototype.mulTo=function(l,f){var b,g=this.length+l.length;return this.length===10&&l.length===10?b=I(this,l,f):g<63?b=j(this,l,f):g<1024?b=A(this,l,f):b=U(this,l,f),b},a.prototype.mul=function(l){var f=new a(null);return f.words=new Array(this.length+l.length),this.mulTo(l,f)},a.prototype.mulf=function(l){var f=new a(null);return f.words=new Array(this.length+l.length),U(this,l,f)},a.prototype.imul=function(l){return this.clone().mulTo(l,this)},a.prototype.imuln=function(l){var f=l<0;f&&(l=-l),r(typeof l=="number"),r(l<67108864);for(var b=0,g=0;g<this.length;g++){var v=(this.words[g]|0)*l,M=(v&67108863)+(b&67108863);b>>=26,b+=v/67108864|0,b+=M>>>26,this.words[g]=M&67108863}return b!==0&&(this.words[g]=b,this.length++),this.length=l===0?1:this.length,f?this.ineg():this},a.prototype.muln=function(l){return this.clone().imuln(l)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(l){var f=z(l);if(f.length===0)return new a(1);for(var b=this,g=0;g<f.length&&f[g]===0;g++,b=b.sqr());if(++g<f.length)for(var v=b.sqr();g<f.length;g++,v=v.sqr())f[g]!==0&&(b=b.mul(v));return b},a.prototype.iushln=function(l){r(typeof l=="number"&&l>=0);var f=l%26,b=(l-f)/26,g=67108863>>>26-f<<26-f,v;if(f!==0){var M=0;for(v=0;v<this.length;v++){var x=this.words[v]&g,d=(this.words[v]|0)-x<<f;this.words[v]=d|M,M=x>>>26-f}M&&(this.words[v]=M,this.length++)}if(b!==0){for(v=this.length-1;v>=0;v--)this.words[v+b]=this.words[v];for(v=0;v<b;v++)this.words[v]=0;this.length+=b}return this._strip()},a.prototype.ishln=function(l){return r(this.negative===0),this.iushln(l)},a.prototype.iushrn=function(l,f,b){r(typeof l=="number"&&l>=0);var g;f?g=(f-f%26)/26:g=0;var v=l%26,M=Math.min((l-v)/26,this.length),x=67108863^67108863>>>v<<v,d=b;if(g-=M,g=Math.max(0,g),d){for(var m=0;m<M;m++)d.words[m]=this.words[m];d.length=M}if(M!==0)if(this.length>M)for(this.length-=M,m=0;m<this.length;m++)this.words[m]=this.words[m+M];else this.words[0]=0,this.length=1;var V=0;for(m=this.length-1;m>=0&&(V!==0||m>=g);m--){var B=this.words[m]|0;this.words[m]=V<<26-v|B>>>v,V=B&x}return d&&V!==0&&(d.words[d.length++]=V),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},a.prototype.ishrn=function(l,f,b){return r(this.negative===0),this.iushrn(l,f,b)},a.prototype.shln=function(l){return this.clone().ishln(l)},a.prototype.ushln=function(l){return this.clone().iushln(l)},a.prototype.shrn=function(l){return this.clone().ishrn(l)},a.prototype.ushrn=function(l){return this.clone().iushrn(l)},a.prototype.testn=function(l){r(typeof l=="number"&&l>=0);var f=l%26,b=(l-f)/26,g=1<<f;if(this.length<=b)return!1;var v=this.words[b];return!!(v&g)},a.prototype.imaskn=function(l){r(typeof l=="number"&&l>=0);var f=l%26,b=(l-f)/26;if(r(this.negative===0,"imaskn works only with positive numbers"),this.length<=b)return this;if(f!==0&&b++,this.length=Math.min(b,this.length),f!==0){var g=67108863^67108863>>>f<<f;this.words[this.length-1]&=g}return this._strip()},a.prototype.maskn=function(l){return this.clone().imaskn(l)},a.prototype.iaddn=function(l){return r(typeof l=="number"),r(l<67108864),l<0?this.isubn(-l):this.negative!==0?this.length===1&&(this.words[0]|0)<=l?(this.words[0]=l-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(l),this.negative=1,this):this._iaddn(l)},a.prototype._iaddn=function(l){this.words[0]+=l;for(var f=0;f<this.length&&this.words[f]>=67108864;f++)this.words[f]-=67108864,f===this.length-1?this.words[f+1]=1:this.words[f+1]++;return this.length=Math.max(this.length,f+1),this},a.prototype.isubn=function(l){if(r(typeof l=="number"),r(l<67108864),l<0)return this.iaddn(-l);if(this.negative!==0)return this.negative=0,this.iaddn(l),this.negative=1,this;if(this.words[0]-=l,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var f=0;f<this.length&&this.words[f]<0;f++)this.words[f]+=67108864,this.words[f+1]-=1;return this._strip()},a.prototype.addn=function(l){return this.clone().iaddn(l)},a.prototype.subn=function(l){return this.clone().isubn(l)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(l,f,b){var g=l.length+b,v;this._expand(g);var M,x=0;for(v=0;v<l.length;v++){M=(this.words[v+b]|0)+x;var d=(l.words[v]|0)*f;M-=d&67108863,x=(M>>26)-(d/67108864|0),this.words[v+b]=M&67108863}for(;v<this.length-b;v++)M=(this.words[v+b]|0)+x,x=M>>26,this.words[v+b]=M&67108863;if(x===0)return this._strip();for(r(x===-1),x=0,v=0;v<this.length;v++)M=-(this.words[v]|0)+x,x=M>>26,this.words[v]=M&67108863;return this.negative=1,this._strip()},a.prototype._wordDiv=function(l,f){var b=this.length-l.length,g=this.clone(),v=l,M=v.words[v.length-1]|0,x=this._countBits(M);b=26-x,b!==0&&(v=v.ushln(b),g.iushln(b),M=v.words[v.length-1]|0);var d=g.length-v.length,m;if(f!=="mod"){m=new a(null),m.length=d+1,m.words=new Array(m.length);for(var V=0;V<m.length;V++)m.words[V]=0}var B=g.clone()._ishlnsubmul(v,1,d);B.negative===0&&(g=B,m&&(m.words[d]=1));for(var k=d-1;k>=0;k--){var Z=(g.words[v.length+k]|0)*67108864+(g.words[v.length+k-1]|0);for(Z=Math.min(Z/M|0,67108863),g._ishlnsubmul(v,Z,k);g.negative!==0;)Z--,g.negative=0,g._ishlnsubmul(v,1,k),g.isZero()||(g.negative^=1);m&&(m.words[k]=Z)}return m&&m._strip(),g._strip(),f!=="div"&&b!==0&&g.iushrn(b),{div:m||null,mod:g}},a.prototype.divmod=function(l,f,b){if(r(!l.isZero()),this.isZero())return{div:new a(0),mod:new a(0)};var g,v,M;return this.negative!==0&&l.negative===0?(M=this.neg().divmod(l,f),f!=="mod"&&(g=M.div.neg()),f!=="div"&&(v=M.mod.neg(),b&&v.negative!==0&&v.iadd(l)),{div:g,mod:v}):this.negative===0&&l.negative!==0?(M=this.divmod(l.neg(),f),f!=="mod"&&(g=M.div.neg()),{div:g,mod:M.mod}):this.negative&l.negative?(M=this.neg().divmod(l.neg(),f),f!=="div"&&(v=M.mod.neg(),b&&v.negative!==0&&v.isub(l)),{div:M.div,mod:v}):l.length>this.length||this.cmp(l)<0?{div:new a(0),mod:this}:l.length===1?f==="div"?{div:this.divn(l.words[0]),mod:null}:f==="mod"?{div:null,mod:new a(this.modrn(l.words[0]))}:{div:this.divn(l.words[0]),mod:new a(this.modrn(l.words[0]))}:this._wordDiv(l,f)},a.prototype.div=function(l){return this.divmod(l,"div",!1).div},a.prototype.mod=function(l){return this.divmod(l,"mod",!1).mod},a.prototype.umod=function(l){return this.divmod(l,"mod",!0).mod},a.prototype.divRound=function(l){var f=this.divmod(l);if(f.mod.isZero())return f.div;var b=f.div.negative!==0?f.mod.isub(l):f.mod,g=l.ushrn(1),v=l.andln(1),M=b.cmp(g);return M<0||v===1&&M===0?f.div:f.div.negative!==0?f.div.isubn(1):f.div.iaddn(1)},a.prototype.modrn=function(l){var f=l<0;f&&(l=-l),r(l<=67108863);for(var b=(1<<26)%l,g=0,v=this.length-1;v>=0;v--)g=(b*g+(this.words[v]|0))%l;return f?-g:g},a.prototype.modn=function(l){return this.modrn(l)},a.prototype.idivn=function(l){var f=l<0;f&&(l=-l),r(l<=67108863);for(var b=0,g=this.length-1;g>=0;g--){var v=(this.words[g]|0)+b*67108864;this.words[g]=v/l|0,b=v%l}return this._strip(),f?this.ineg():this},a.prototype.divn=function(l){return this.clone().idivn(l)},a.prototype.egcd=function(l){r(l.negative===0),r(!l.isZero());var f=this,b=l.clone();f.negative!==0?f=f.umod(l):f=f.clone();for(var g=new a(1),v=new a(0),M=new a(0),x=new a(1),d=0;f.isEven()&&b.isEven();)f.iushrn(1),b.iushrn(1),++d;for(var m=b.clone(),V=f.clone();!f.isZero();){for(var B=0,k=1;!(f.words[0]&k)&&B<26;++B,k<<=1);if(B>0)for(f.iushrn(B);B-- >0;)(g.isOdd()||v.isOdd())&&(g.iadd(m),v.isub(V)),g.iushrn(1),v.iushrn(1);for(var Z=0,q=1;!(b.words[0]&q)&&Z<26;++Z,q<<=1);if(Z>0)for(b.iushrn(Z);Z-- >0;)(M.isOdd()||x.isOdd())&&(M.iadd(m),x.isub(V)),M.iushrn(1),x.iushrn(1);f.cmp(b)>=0?(f.isub(b),g.isub(M),v.isub(x)):(b.isub(f),M.isub(g),x.isub(v))}return{a:M,b:x,gcd:b.iushln(d)}},a.prototype._invmp=function(l){r(l.negative===0),r(!l.isZero());var f=this,b=l.clone();f.negative!==0?f=f.umod(l):f=f.clone();for(var g=new a(1),v=new a(0),M=b.clone();f.cmpn(1)>0&&b.cmpn(1)>0;){for(var x=0,d=1;!(f.words[0]&d)&&x<26;++x,d<<=1);if(x>0)for(f.iushrn(x);x-- >0;)g.isOdd()&&g.iadd(M),g.iushrn(1);for(var m=0,V=1;!(b.words[0]&V)&&m<26;++m,V<<=1);if(m>0)for(b.iushrn(m);m-- >0;)v.isOdd()&&v.iadd(M),v.iushrn(1);f.cmp(b)>=0?(f.isub(b),g.isub(v)):(b.isub(f),v.isub(g))}var B;return f.cmpn(1)===0?B=g:B=v,B.cmpn(0)<0&&B.iadd(l),B},a.prototype.gcd=function(l){if(this.isZero())return l.abs();if(l.isZero())return this.abs();var f=this.clone(),b=l.clone();f.negative=0,b.negative=0;for(var g=0;f.isEven()&&b.isEven();g++)f.iushrn(1),b.iushrn(1);do{for(;f.isEven();)f.iushrn(1);for(;b.isEven();)b.iushrn(1);var v=f.cmp(b);if(v<0){var M=f;f=b,b=M}else if(v===0||b.cmpn(1)===0)break;f.isub(b)}while(!0);return b.iushln(g)},a.prototype.invm=function(l){return this.egcd(l).a.umod(l)},a.prototype.isEven=function(){return(this.words[0]&1)===0},a.prototype.isOdd=function(){return(this.words[0]&1)===1},a.prototype.andln=function(l){return this.words[0]&l},a.prototype.bincn=function(l){r(typeof l=="number");var f=l%26,b=(l-f)/26,g=1<<f;if(this.length<=b)return this._expand(b+1),this.words[b]|=g,this;for(var v=g,M=b;v!==0&&M<this.length;M++){var x=this.words[M]|0;x+=v,v=x>>>26,x&=67108863,this.words[M]=x}return v!==0&&(this.words[M]=v,this.length++),this},a.prototype.isZero=function(){return this.length===1&&this.words[0]===0},a.prototype.cmpn=function(l){var f=l<0;if(this.negative!==0&&!f)return-1;if(this.negative===0&&f)return 1;this._strip();var b;if(this.length>1)b=1;else{f&&(l=-l),r(l<=67108863,"Number is too big");var g=this.words[0]|0;b=g===l?0:g<l?-1:1}return this.negative!==0?-b|0:b},a.prototype.cmp=function(l){if(this.negative!==0&&l.negative===0)return-1;if(this.negative===0&&l.negative!==0)return 1;var f=this.ucmp(l);return this.negative!==0?-f|0:f},a.prototype.ucmp=function(l){if(this.length>l.length)return 1;if(this.length<l.length)return-1;for(var f=0,b=this.length-1;b>=0;b--){var g=this.words[b]|0,v=l.words[b]|0;if(g!==v){g<v?f=-1:g>v&&(f=1);break}}return f},a.prototype.gtn=function(l){return this.cmpn(l)===1},a.prototype.gt=function(l){return this.cmp(l)===1},a.prototype.gten=function(l){return this.cmpn(l)>=0},a.prototype.gte=function(l){return this.cmp(l)>=0},a.prototype.ltn=function(l){return this.cmpn(l)===-1},a.prototype.lt=function(l){return this.cmp(l)===-1},a.prototype.lten=function(l){return this.cmpn(l)<=0},a.prototype.lte=function(l){return this.cmp(l)<=0},a.prototype.eqn=function(l){return this.cmpn(l)===0},a.prototype.eq=function(l){return this.cmp(l)===0},a.red=function(l){return new E(l)},a.prototype.toRed=function(l){return r(!this.red,"Already a number in reduction context"),r(this.negative===0,"red works only with positives"),l.convertTo(this)._forceRed(l)},a.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(l){return this.red=l,this},a.prototype.forceRed=function(l){return r(!this.red,"Already a number in reduction context"),this._forceRed(l)},a.prototype.redAdd=function(l){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,l)},a.prototype.redIAdd=function(l){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,l)},a.prototype.redSub=function(l){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,l)},a.prototype.redISub=function(l){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,l)},a.prototype.redShl=function(l){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,l)},a.prototype.redMul=function(l){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,l),this.red.mul(this,l)},a.prototype.redIMul=function(l){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,l),this.red.imul(this,l)},a.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(l){return r(this.red&&!l.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,l)};var H={k256:null,p224:null,p192:null,p25519:null};function X(c,l){this.name=c,this.p=new a(l,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}X.prototype._tmp=function(){var l=new a(null);return l.words=new Array(Math.ceil(this.n/13)),l},X.prototype.ireduce=function(l){var f=l,b;do this.split(f,this.tmp),f=this.imulK(f),f=f.iadd(this.tmp),b=f.bitLength();while(b>this.n);var g=b<this.n?-1:f.ucmp(this.p);return g===0?(f.words[0]=0,f.length=1):g>0?f.isub(this.p):f.strip!==void 0?f.strip():f._strip(),f},X.prototype.split=function(l,f){l.iushrn(this.n,0,f)},X.prototype.imulK=function(l){return l.imul(this.k)};function C(){X.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}i(C,X),C.prototype.split=function(l,f){for(var b=4194303,g=Math.min(l.length,9),v=0;v<g;v++)f.words[v]=l.words[v];if(f.length=g,l.length<=9){l.words[0]=0,l.length=1;return}var M=l.words[9];for(f.words[f.length++]=M&b,v=10;v<l.length;v++){var x=l.words[v]|0;l.words[v-10]=(x&b)<<4|M>>>22,M=x}M>>>=22,l.words[v-10]=M,M===0&&l.length>10?l.length-=10:l.length-=9},C.prototype.imulK=function(l){l.words[l.length]=0,l.words[l.length+1]=0,l.length+=2;for(var f=0,b=0;b<l.length;b++){var g=l.words[b]|0;f+=g*977,l.words[b]=f&67108863,f=g*64+(f/67108864|0)}return l.words[l.length-1]===0&&(l.length--,l.words[l.length-1]===0&&l.length--),l};function F(){X.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}i(F,X);function S(){X.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}i(S,X);function R(){X.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}i(R,X),R.prototype.imulK=function(l){for(var f=0,b=0;b<l.length;b++){var g=(l.words[b]|0)*19+f,v=g&67108863;g>>>=26,l.words[b]=v,f=g}return f!==0&&(l.words[l.length++]=f),l},a._prime=function(l){if(H[l])return H[l];var f;if(l==="k256")f=new C;else if(l==="p224")f=new F;else if(l==="p192")f=new S;else if(l==="p25519")f=new R;else throw new Error("Unknown prime "+l);return H[l]=f,f};function E(c){if(typeof c=="string"){var l=a._prime(c);this.m=l.p,this.prime=l}else r(c.gtn(1),"modulus must be greater than 1"),this.m=c,this.prime=null}E.prototype._verify1=function(l){r(l.negative===0,"red works only with positives"),r(l.red,"red works only with red numbers")},E.prototype._verify2=function(l,f){r((l.negative|f.negative)===0,"red works only with positives"),r(l.red&&l.red===f.red,"red works only with red numbers")},E.prototype.imod=function(l){return this.prime?this.prime.ireduce(l)._forceRed(this):(p(l,l.umod(this.m)._forceRed(this)),l)},E.prototype.neg=function(l){return l.isZero()?l.clone():this.m.sub(l)._forceRed(this)},E.prototype.add=function(l,f){this._verify2(l,f);var b=l.add(f);return b.cmp(this.m)>=0&&b.isub(this.m),b._forceRed(this)},E.prototype.iadd=function(l,f){this._verify2(l,f);var b=l.iadd(f);return b.cmp(this.m)>=0&&b.isub(this.m),b},E.prototype.sub=function(l,f){this._verify2(l,f);var b=l.sub(f);return b.cmpn(0)<0&&b.iadd(this.m),b._forceRed(this)},E.prototype.isub=function(l,f){this._verify2(l,f);var b=l.isub(f);return b.cmpn(0)<0&&b.iadd(this.m),b},E.prototype.shl=function(l,f){return this._verify1(l),this.imod(l.ushln(f))},E.prototype.imul=function(l,f){return this._verify2(l,f),this.imod(l.imul(f))},E.prototype.mul=function(l,f){return this._verify2(l,f),this.imod(l.mul(f))},E.prototype.isqr=function(l){return this.imul(l,l.clone())},E.prototype.sqr=function(l){return this.mul(l,l)},E.prototype.sqrt=function(l){if(l.isZero())return l.clone();var f=this.m.andln(3);if(r(f%2===1),f===3){var b=this.m.add(new a(1)).iushrn(2);return this.pow(l,b)}for(var g=this.m.subn(1),v=0;!g.isZero()&&g.andln(1)===0;)v++,g.iushrn(1);r(!g.isZero());var M=new a(1).toRed(this),x=M.redNeg(),d=this.m.subn(1).iushrn(1),m=this.m.bitLength();for(m=new a(2*m*m).toRed(this);this.pow(m,d).cmp(x)!==0;)m.redIAdd(x);for(var V=this.pow(m,g),B=this.pow(l,g.addn(1).iushrn(1)),k=this.pow(l,g),Z=v;k.cmp(M)!==0;){for(var q=k,W=0;q.cmp(M)!==0;W++)q=q.redSqr();r(W<Z);var J=this.pow(V,new a(1).iushln(Z-W-1));B=B.redMul(J),V=J.redSqr(),k=k.redMul(V),Z=W}return B},E.prototype.invm=function(l){var f=l._invmp(this.m);return f.negative!==0?(f.negative=0,this.imod(f).redNeg()):this.imod(f)},E.prototype.pow=function(l,f){if(f.isZero())return new a(1).toRed(this);if(f.cmpn(1)===0)return l.clone();var b=4,g=new Array(1<<b);g[0]=new a(1).toRed(this),g[1]=l;for(var v=2;v<g.length;v++)g[v]=this.mul(g[v-1],l);var M=g[0],x=0,d=0,m=f.bitLength()%26;for(m===0&&(m=26),v=f.length-1;v>=0;v--){for(var V=f.words[v],B=m-1;B>=0;B--){var k=V>>B&1;if(M!==g[0]&&(M=this.sqr(M)),k===0&&x===0){d=0;continue}x<<=1,x|=k,d++,!(d!==b&&(v!==0||B!==0))&&(M=this.mul(M,g[x]),d=0,x=0)}m=26}return M},E.prototype.convertTo=function(l){var f=l.umod(this.m);return f===l?f.clone():f},E.prototype.convertFrom=function(l){var f=l.clone();return f.red=null,f},a.mont=function(l){return new L(l)};function L(c){E.call(this,c),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}i(L,E),L.prototype.convertTo=function(l){return this.imod(l.ushln(this.shift))},L.prototype.convertFrom=function(l){var f=this.imod(l.mul(this.rinv));return f.red=null,f},L.prototype.imul=function(l,f){if(l.isZero()||f.isZero())return l.words[0]=0,l.length=1,l;var b=l.imul(f),g=b.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),v=b.isub(g).iushrn(this.shift),M=v;return v.cmp(this.m)>=0?M=v.isub(this.m):v.cmpn(0)<0&&(M=v.iadd(this.m)),M._forceRed(this)},L.prototype.mul=function(l,f){if(l.isZero()||f.isZero())return new a(0)._forceRed(this);var b=l.mul(f),g=b.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),v=b.isub(g).iushrn(this.shift),M=v;return v.cmp(this.m)>=0?M=v.isub(this.m):v.cmpn(0)<0&&(M=v.iadd(this.m)),M._forceRed(this)},L.prototype.invm=function(l){var f=this.imod(l._invmp(this.m).mul(this.r2));return f._forceRed(this)}})(t,dV)})(Wm);var yV=Wm.exports;const Nt=fV(yV);function Px(t){return Nt.isBN(t)}const Mx=/^0x[\da-fA-F]+$/,gV=/^[\da-fA-F]+$/;function Ma(t,e=-1,n){return typeof t=="string"&&(t==="0x"||Mx.test(t))&&(e===-1?t.length%2===0:t.length===2+Math.ceil(e/4))}function xV(t){return!!t&&typeof t=="object"}function kx(...t){return e=>(xV(e)||h1(e))&&t.every(n=>h1(e[n]))}const Tx=kx("toBigInt"),Nx=kx("toBn");function vV(t){return typeof t=="bigint"?t:t?Ma(t)?lV(t.toString()):Px(t)?At(t.toString()):Tx(t)?t.toBigInt():Nx(t)?At(t.toBn().toString()):At(t):At(0)}const An=typeof At=="function"&&typeof At.asIntN=="function",wV=typeof vo.Buffer=="function"&&typeof vo.Buffer.isBuffer=="function";vo.process;function PV(t){return wV&&!!t&&h1(t.readDoubleLE)&&vo.Buffer.isBuffer(t)}function Ms(t){return(t&&t.constructor)===Uint8Array||t instanceof Uint8Array}const MV=new oV;function ii(t){return t?MV.encode(t.toString()):new Uint8Array}function ut(t,e=!1){if(e&&t==null)throw new Error("u8aToU8a: Expected non-null, non-undefined value");return Ms(t)?PV(t)?new Uint8Array(t):t:Ma(t)?yc(t):Array.isArray(t)?new Uint8Array(t):ii(t)}function Ln(...t){const e=t.length,n=new Array(e);let r=0;for(let i=0;i<e;i++)n[i]=ut(t[i]),r+=n[i].length;return Cl(n,r)}function Cl(t,e=0){const n=t.length;let r=0;if(!e)for(let a=0;a<n;a++)e+=t[a].length;const i=new Uint8Array(e);for(let a=0;a<n;a++)i.set(t[a],r),r+=t[a].length;return i}function Ox(t){const e=t.length|0;for(let n=0;n<e;n++)if(t[n]|0)return!1;return!0}function Ji(t,e){const n=ut(t),r=ut(e);if(n.length===r.length){const i=new DataView(n.buffer,n.byteOffset),a=new DataView(r.buffer,r.byteOffset),s=n.length%4|0,o=n.length-s|0;for(let u=0;u<o;u+=4)if(i.getUint32(u)!==a.getUint32(u))return!1;for(let u=o,h=n.length;u<h;u++)if(n[u]!==r[u])return!1;return!0}return!1}function kV(t,e=-1,n=!1){const r=Math.ceil(e/8);if(e===-1||t.length===r)return t;if(t.length>r)return t.subarray(0,r);const i=new Uint8Array(r);return i.set(t,n?0:r-t.length),i}function Uh(t,{isLe:e=!0,isNegative:n=!1}={}){e||(t=t.slice().reverse());const r=t.length;if(n&&r&&t[r-1]&128)switch(r){case 0:return new Nt(0);case 1:return new Nt((t[0]^255)*-1-1);case 2:return new Nt((t[0]+(t[1]<<8)^65535)*-1-1);case 3:return new Nt((t[0]+(t[1]<<8)+(t[2]<<16)^16777215)*-1-1);case 4:return new Nt((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)*-1-1);case 5:return new Nt(((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]^255)*4294967296)*-1-1);case 6:return new Nt(((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]+(t[5]<<8)^65535)*4294967296)*-1-1);default:return new Nt(t,"le").fromTwos(r*8)}switch(r){case 0:return new Nt(0);case 1:return new Nt(t[0]);case 2:return new Nt(t[0]+(t[1]<<8));case 3:return new Nt(t[0]+(t[1]<<8)+(t[2]<<16));case 4:return new Nt(t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216);case 5:return new Nt(t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8))*16777216);case 6:return new Nt(t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8)+(t[5]<<16))*16777216);default:return new Nt(t,"le")}}const t0=new Array(256),Vx=new Array(256*256);for(let t=0;t<256;t++)t0[t]=t.toString(16).padStart(2,"0");for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)Vx[e|n]=t0[t]+t0[n]}function Dh(t,e){const n=t.length%2|0,r=t.length-n|0;for(let i=0;i<r;i+=2)e+=Vx[t[i]<<8|t[i+1]];return n&&(e+=t0[t[r]|0]),e}function Pl(t,e=-1,n=!0){const r=n?"0x":"";if(t!=null&&t.length){if(e>0){const i=Math.ceil(e/8);if(t.length>i)return`${Dh(t.subarray(0,i/2),r)}…${Dh(t.subarray(t.length-i/2),"")}`}}else return r;return Dh(t,r)}const TV=new aV("utf-8");function w3(t){return t?TV.decode(t):""}const Fh=ut(`Ethereum Signed Message:
`),Ml=ut("<Bytes>"),kl=ut("</Bytes>"),NV=Ml.length+kl.length;function n0(t,e){return t.length>=NV&&Ji(t.subarray(0,Ml.length),Ml)&&Ji(t.slice(-kl.length),kl)||e&&t.length>=Fh.length&&Ji(t.subarray(0,Fh.length),Fh)}function OV(t){const e=ut(t);return n0(e,!1)?e.subarray(Ml.length,e.length-kl.length):e}function VV(t){const e=ut(t);return n0(e,!0)?e:Cl([Ml,e,kl])}const P3=At(256),SV=At(255);function EV(t,e,n){const r=[],i=n&&t<_f;for(i&&(t=(t+$f)*-$f);t!==_f;){const a=t%P3,s=Number(i?a^SV:a);e?r.push(s):r.unshift(s),t=(t-a)/P3}return Uint8Array.from(r)}function zV(t,{bitLength:e=-1,isLe:n=!0,isNegative:r=!1}={}){const i=vV(t);if(i===_f)return e===-1?new Uint8Array(1):new Uint8Array(Math.ceil((e||0)/8));const a=EV(i,n,r);if(e===-1)return a;const s=Math.ceil((e||0)/8),o=new Uint8Array(s);return r&&o.fill(255),o.set(a,n?0:s-a.length),o}function IV(t){if(!t||t==="0x")return"";if(Mx.test(t))return t.substring(2);if(gV.test(t))return t;throw new Error(`Expected hex value to convert, found '${t}'`)}function LV(t,{isLe:e=!1,isNegative:n=!1}={}){if(!t||t==="0x")return new Nt(0);const r=IV(t),i=new Nt(r,16,e?"le":"be");return n?i.fromTwos(r.length*4):i}const C0=new Nt(1),U0=new Nt(2),M3=new Nt(1e9);M3.mul(M3);function Sx(t){return typeof t=="bigint"}function Ex(t){return t?Nt.isBN(t)?t:Ma(t)?LV(t.toString()):Sx(t)?new Nt(t.toString()):Nx(t)?t.toBn():Tx(t)?new Nt(t.toBigInt().toString()):new Nt(t):new Nt(0)}const HV={bitLength:-1,isLe:!0,isNegative:!1};function Ar(t,{bitLength:e=-1,isLe:n=!0,isNegative:r=!1}=HV){const i=Ex(t),a=Math.ceil(e===-1?i.bitLength()/8:(e||0)/8);if(!t)return e===-1?new Uint8Array(1):new Uint8Array(a);const s=new Uint8Array(a),o=r?i.toTwos(a*8):i;return s.set(o.toArray(n?"le":"be",a),0),s}const AV=U0.pow(new Nt(6)).isub(C0),RV=U0.pow(new Nt(14)).isub(C0),BV=U0.pow(new Nt(30)).isub(C0),XV={bitLength:16},jV={bitLength:32};function CV(t){const e=Ex(t);if(e.lte(AV))return new Uint8Array([e.toNumber()<<2]);if(e.lte(RV))return Ar(e.shln(2).iadd(C0),XV);if(e.lte(BV))return Ar(e.shln(2).iadd(U0),jV);const n=Ar(e);let r=n.length;for(;n[r-1]===0;)r--;if(r<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return Cl([new Uint8Array([(r-4<<2)+3]),n.subarray(0,r)])}function Gm(t){return Cl([CV(t.length),t])}function UV(t){return typeof t=="string"||t instanceof String}function DV(t){return typeof t=="number"}function Ym(t,...e){const n=new Set(["__proto__","constructor","prototype"]);for(let r=0,i=e.length;r<i;r++){const a=e[r];if(a)if(typeof a.entries=="function")for(const[s,o]of a.entries())n.has(s)||(t[s]=o);else{const s=Object.create(null);for(const[o,u]of Object.entries(a))n.has(o)||(s[o]=u);Object.assign(t,s)}}return t}const FV=vo.crypto;function zx(t){return FV.getRandomValues(t)}const Rd={getRandomValues:zx},ZV={crypto:Rd};class qV{constructor(e){Dt(this,"__internal__bridge");Dt(this,"abort",()=>{throw new Error("abort")});Dt(this,"__wbindgen_is_undefined",e=>this.__internal__bridge.getObject(e)===void 0);Dt(this,"__wbindgen_throw",(e,n)=>{throw new Error(this.__internal__bridge.getString(e,n))});Dt(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(ZV));Dt(this,"__wbg_require_604837428532a733",(e,n)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(e,n)}`)});Dt(this,"__wbg_crypto_968f1772287e2df0",e=>this.__internal__bridge.addObject(Rd));Dt(this,"__wbg_getRandomValues_a3d34b4fee3c2869",e=>this.__internal__bridge.addObject(Rd.getRandomValues));Dt(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(e,n,r)=>{Rd.getRandomValues(this.__internal__bridge.getU8a(n,r))});Dt(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(e,n,r)=>{throw new Error("randomFillsync is not available")});Dt(this,"__wbindgen_object_drop_ref",e=>{this.__internal__bridge.takeObject(e)});this.__internal__bridge=e}}class WV{constructor(e){Dt(this,"__internal__createWasm");Dt(this,"__internal__heap");Dt(this,"__internal__wbg");Dt(this,"__internal__cachegetInt32");Dt(this,"__internal__cachegetUint8");Dt(this,"__internal__heapNext");Dt(this,"__internal__wasm");Dt(this,"__internal__wasmError");Dt(this,"__internal__wasmPromise");Dt(this,"__internal__type");this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new qV(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){(!this.__internal__wasmPromise||e)&&(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:n,type:r,wasm:i}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=i,this.__internal__wasmError=n,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const n=this.getObject(e);return this.dropObject(e),n}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const n=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[n],this.__internal__heap[n]=e,n}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,n){return this.getUint8().subarray(e/1,e/1+n)}getString(e,n){return w3(this.getU8a(e,n))}allocU8a(e){const n=this.__internal__wasm.__wbindgen_malloc(e.length*1);return this.getUint8().set(e,n/1),[n,e.length]}allocString(e){return this.allocU8a(ii(e))}resultU8a(){const e=this.getInt32()[2],n=this.getInt32()[8/4+1],r=this.getU8a(e,n).slice();return this.__internal__wasm.__wbindgen_free(e,n*1),r}resultString(){return w3(this.resultU8a())}}function GV(t,e,n){return async r=>{const i={error:null,type:"none",wasm:null};try{if(e!=null&&e.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const a=await WebAssembly.instantiate(e,{wbg:r});i.wasm=a.instance.exports,i.type="wasm"}catch(a){i.error=`FATAL: Unable to initialize @polkadot/wasm-${t}:: ${a.message}`,console.error(i.error)}return i}}const k3="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Ix=new Array(256);for(let t=0,e=k3.length;t<e;t++)Ix[k3.charCodeAt(t)]=t;function YV(t,e){let n=0,r=0,i=-1;for(let a=0,s=e.length-1;i!==s;a++)n=n<<6|Ix[t.charCodeAt(a)],(r+=6)>=8&&(e[++i]=n>>>(r-=8)&255);return e}const Gi=Uint8Array,uo=Uint16Array,m1=Uint32Array,KV=new Gi([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Lx=new Gi([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Hx=new Gi([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ax=(t,e)=>{const n=new uo(31);for(let i=0;i<31;++i)n[i]=e+=1<<t[i-1];const r=new m1(n[30]);for(let i=1;i<30;++i)for(let a=n[i];a<n[i+1];++a)r[a]=a-n[i]<<5|i;return[n,r]},[Rx,JV]=Ax(Lx,2);Rx[28]=258,JV[258]=28;const[QV]=Ax(Hx,0),Bx=new uo(32768);for(let t=0;t<32768;++t){let e=(t&43690)>>>1|(t&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,Bx[t]=((e&65280)>>>8|(e&255)<<8)>>>1}const rl=(t,e,n)=>{const r=t.length;let i=0;const a=new uo(e);for(;i<r;++i)t[i]&&++a[t[i]-1];const s=new uo(e);for(i=1;i<e;++i)s[i]=s[i-1]+a[i-1]<<1;let o;{o=new uo(1<<e);const u=15-e;for(i=0;i<r;++i)if(t[i]){const h=i<<4|t[i],p=e-t[i];let y=s[t[i]-1]++<<p;for(const w=y|(1<<p)-1;y<=w;++y)o[Bx[y]>>u]=h}}return o},Ul=new Gi(288);for(let t=0;t<144;++t)Ul[t]=8;for(let t=144;t<256;++t)Ul[t]=9;for(let t=256;t<280;++t)Ul[t]=7;for(let t=280;t<288;++t)Ul[t]=8;const Xx=new Gi(32);for(let t=0;t<32;++t)Xx[t]=5;const _V=rl(Ul,9),$V=rl(Xx,5),fi=(t,e,n)=>{const r=e>>>3;return(t[r]|t[r+1]<<8)>>>(e&7)&n},Zh=(t,e)=>{const n=e>>>3;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>>(e&7)},eS=t=>(t>>>3)+(t&7&&1),tS=(t,e,n)=>{(n==null||n>t.length)&&(n=t.length);const r=new(t instanceof uo?uo:t instanceof m1?m1:Gi)(n-e);return r.set(t.subarray(e,n)),r},qh=t=>{let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e},nS=(t,e,n)=>{const r=!n||n.i;n||(n={});const i=t.length,a=!e||!r;e||(e=new Gi(i*3));const s=O=>{let z=e.length;if(O>z){const j=new Gi(Math.max(z<<1,O));j.set(e),e=j}};let o=n.f||0,u=n.p||0,h=n.b||0,p=n.l,y=n.d,w=n.m,P=n.n;if(o&&!p)return e;const N=i<<3;do{if(!p){n.f=o=fi(t,u,1);const I=fi(t,u+1,3);if(u+=3,I)if(I==1)p=_V,y=$V,w=9,P=5;else if(I==2){const A=fi(t,u,31)+257,U=fi(t,u+10,15)+4,H=A+fi(t,u+5,31)+1;u+=14;const X=new Gi(H),C=new Gi(19);for(let c=0;c<U;++c)C[KV[c]]=fi(t,u+c*3,7);u+=U*3;const F=qh(C),S=(1<<F)-1;if(!r&&u+H*(F+7)>N)break;const R=rl(C,F);for(let c=0;c<H;){const l=R[fi(t,u,S)];u+=l&15;const f=l>>>4;if(f<16)X[c++]=f;else{let b=0,g=0;for(f==16?(g=3+fi(t,u,3),u+=2,b=X[c-1]):f==17?(g=3+fi(t,u,7),u+=3):f==18&&(g=11+fi(t,u,127),u+=7);g--;)X[c++]=b}}const E=X.subarray(0,A),L=X.subarray(A);w=qh(E),P=qh(L),p=rl(E,w),y=rl(L,P)}else throw"invalid block type";else{const A=eS(u)+4,U=t[A-4]|t[A-3]<<8,H=A+U;if(H>i){if(r)throw"unexpected EOF";break}a&&s(h+U),e.set(t.subarray(A,H),h),n.b=h+=U,n.p=u=H<<3;continue}if(u>N)throw"unexpected EOF"}a&&s(h+131072);const O=(1<<w)-1,z=(1<<P)-1,j=w+P+18;for(;r||u+j<N;){const I=p[Zh(t,u)&O],A=I>>>4;if(u+=I&15,u>N)throw"unexpected EOF";if(!I)throw"invalid length/literal";if(A<256)e[h++]=A;else if(A==256){p=void 0;break}else{let U=A-254;if(A>264){const S=A-257,R=Lx[S];U=fi(t,u,(1<<R)-1)+Rx[S],u+=R}const H=y[Zh(t,u)&z],X=H>>>4;if(!H)throw"invalid distance";u+=H&15;let C=QV[X];if(X>3){const S=Hx[X];C+=Zh(t,u)&(1<<S)-1,u+=S}if(u>N)throw"unexpected EOF";a&&s(h+131072);const F=h+U;for(;h<F;h+=4)e[h]=e[h-C],e[h+1]=e[h+1-C],e[h+2]=e[h+2-C],e[h+3]=e[h+3-C];h=F}}n.l=p,n.p=u,n.b=h,p&&(o=1,n.m=w,n.d=y,n.n=P)}while(!o);return h==e.length?e:tS(e,0,h)},rS=t=>{if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function iS(t,e){return nS((rS(t),t.subarray(2,-4)),e)}var aS=171008,sS=339468,oS="";const cS=iS(YV(oS,new Uint8Array(aS)),new Uint8Array(sS)),uS=GV("crypto",cS),ye=new WV(uS);function Xt(t){return(...e)=>{if(!ye.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return t(ye.wasm,...e)}}const lS=Xt((t,e)=>(t.ext_bip39_to_entropy(8,...ye.allocString(e)),ye.resultU8a())),dS=Xt((t,e,n)=>(t.ext_bip39_to_mini_secret(8,...ye.allocString(e),...ye.allocString(n)),ye.resultU8a())),fS=Xt((t,e,n)=>(t.ext_bip39_to_seed(8,...ye.allocString(e),...ye.allocString(n)),ye.resultU8a())),hS=Xt((t,e)=>t.ext_bip39_validate(...ye.allocString(e))!==0),pS=Xt((t,e)=>(t.ext_ed_from_seed(8,...ye.allocU8a(e)),ye.resultU8a())),mS=Xt((t,e,n,r)=>(t.ext_ed_sign(8,...ye.allocU8a(e),...ye.allocU8a(n),...ye.allocU8a(r)),ye.resultU8a())),bS=Xt((t,e,n,r)=>t.ext_ed_verify(...ye.allocU8a(e),...ye.allocU8a(n),...ye.allocU8a(r))!==0),yS=Xt((t,e)=>(t.ext_secp_from_seed(8,...ye.allocU8a(e)),ye.resultU8a())),gS=Xt((t,e)=>(t.ext_secp_pub_compress(8,...ye.allocU8a(e)),ye.resultU8a())),xS=Xt((t,e)=>(t.ext_secp_pub_expand(8,...ye.allocU8a(e)),ye.resultU8a())),vS=Xt((t,e,n,r)=>(t.ext_secp_recover(8,...ye.allocU8a(e),...ye.allocU8a(n),r),ye.resultU8a())),wS=Xt((t,e,n)=>(t.ext_secp_sign(8,...ye.allocU8a(e),...ye.allocU8a(n)),ye.resultU8a())),PS=Xt((t,e,n)=>(t.ext_sr_derive_keypair_hard(8,...ye.allocU8a(e),...ye.allocU8a(n)),ye.resultU8a())),MS=Xt((t,e,n)=>(t.ext_sr_derive_keypair_soft(8,...ye.allocU8a(e),...ye.allocU8a(n)),ye.resultU8a())),kS=Xt((t,e)=>(t.ext_sr_from_seed(8,...ye.allocU8a(e)),ye.resultU8a())),TS=Xt((t,e,n,r)=>(t.ext_sr_sign(8,...ye.allocU8a(e),...ye.allocU8a(n),...ye.allocU8a(r)),ye.resultU8a())),NS=Xt((t,e,n,r)=>t.ext_sr_verify(...ye.allocU8a(e),...ye.allocU8a(n),...ye.allocU8a(r))!==0),OS=Xt((t,e,n,r,i)=>(t.ext_vrf_sign(8,...ye.allocU8a(e),...ye.allocU8a(n),...ye.allocU8a(r),...ye.allocU8a(i)),ye.resultU8a())),VS=Xt((t,e,n,r,i,a)=>t.ext_vrf_verify(...ye.allocU8a(e),...ye.allocU8a(n),...ye.allocU8a(r),...ye.allocU8a(i),...ye.allocU8a(a))!==0),SS=Xt((t,e,n,r)=>(t.ext_blake2b(8,...ye.allocU8a(e),...ye.allocU8a(n),r),ye.resultU8a())),ES=Xt((t,e,n)=>(t.ext_hmac_sha256(8,...ye.allocU8a(e),...ye.allocU8a(n)),ye.resultU8a())),zS=Xt((t,e,n)=>(t.ext_hmac_sha512(8,...ye.allocU8a(e),...ye.allocU8a(n)),ye.resultU8a())),IS=Xt((t,e)=>(t.ext_keccak256(8,...ye.allocU8a(e)),ye.resultU8a())),LS=Xt((t,e)=>(t.ext_keccak512(8,...ye.allocU8a(e)),ye.resultU8a())),HS=Xt((t,e,n,r)=>(t.ext_pbkdf2(8,...ye.allocU8a(e),...ye.allocU8a(n),r),ye.resultU8a())),AS=Xt((t,e,n,r,i,a)=>(t.ext_scrypt(8,...ye.allocU8a(e),...ye.allocU8a(n),r,i,a),ye.resultU8a())),RS=Xt((t,e)=>(t.ext_sha256(8,...ye.allocU8a(e)),ye.resultU8a())),BS=Xt((t,e)=>(t.ext_sha512(8,...ye.allocU8a(e)),ye.resultU8a()));function Rn(){return!!ye.wasm}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Km(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function XS(t,...e){if(!Km(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function jx(t,e){return Array.isArray(e)?e.length===0?!0:t?e.every(n=>typeof n=="string"):e.every(n=>Number.isSafeInteger(n)):!1}function Tl(t,e){if(typeof e!="string")throw new Error(`${t}: string expected`);return!0}function Dl(t){if(!Number.isSafeInteger(t))throw new Error(`invalid integer: ${t}`)}function r0(t){if(!Array.isArray(t))throw new Error("array expected")}function i0(t,e){if(!jx(!0,e))throw new Error(`${t}: array of strings expected`)}function Cx(t,e){if(!jx(!1,e))throw new Error(`${t}: array of numbers expected`)}function Ux(...t){const e=a=>a,n=(a,s)=>o=>a(s(o)),r=t.map(a=>a.encode).reduceRight(n,e),i=t.map(a=>a.decode).reduce(n,e);return{encode:r,decode:i}}function Dx(t){const e=typeof t=="string"?t.split(""):t,n=e.length;i0("alphabet",e);const r=new Map(e.map((i,a)=>[i,a]));return{encode:i=>(r0(i),i.map(a=>{if(!Number.isSafeInteger(a)||a<0||a>=n)throw new Error(`alphabet.encode: digit index outside alphabet "${a}". Allowed: ${t}`);return e[a]})),decode:i=>(r0(i),i.map(a=>{Tl("alphabet.decode",a);const s=r.get(a);if(s===void 0)throw new Error(`Unknown letter: "${a}". Allowed: ${t}`);return s}))}}function Fx(t=""){return Tl("join",t),{encode:e=>(i0("join.decode",e),e.join(t)),decode:e=>(Tl("join.decode",e),e.split(t))}}function jS(t,e="="){return Dl(t),Tl("padding",e),{encode(n){for(i0("padding.encode",n);n.length*t%8;)n.push(e);return n},decode(n){i0("padding.decode",n);let r=n.length;if(r*t%8)throw new Error("padding: invalid, string should have whole number of bytes");for(;r>0&&n[r-1]===e;r--)if((r-1)*t%8===0)throw new Error("padding: invalid, string has too much padding");return n.slice(0,r)}}}function T3(t,e,n){if(e<2)throw new Error(`convertRadix: invalid from=${e}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: invalid to=${n}, base cannot be less than 2`);if(r0(t),!t.length)return[];let r=0;const i=[],a=Array.from(t,o=>{if(Dl(o),o<0||o>=e)throw new Error(`invalid integer: ${o}`);return o}),s=a.length;for(;;){let o=0,u=!0;for(let h=r;h<s;h++){const p=a[h],y=e*o,w=y+p;if(!Number.isSafeInteger(w)||y/e!==o||w-p!==y)throw new Error("convertRadix: carry overflow");const P=w/n;o=w%n;const N=Math.floor(P);if(a[h]=N,!Number.isSafeInteger(N)||N*n+o!==w)throw new Error("convertRadix: carry overflow");if(u)N?u=!1:r=h;else continue}if(i.push(o),u)break}for(let o=0;o<t.length-1&&t[o]===0;o++)i.push(0);return i.reverse()}const Zx=(t,e)=>e===0?t:Zx(e,t%e),a0=(t,e)=>t+(e-Zx(t,e)),Wh=(()=>{let t=[];for(let e=0;e<40;e++)t.push(2**e);return t})();function N3(t,e,n,r){if(r0(t),e<=0||e>32)throw new Error(`convertRadix2: wrong from=${e}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(a0(e,n)>32)throw new Error(`convertRadix2: carry overflow from=${e} to=${n} carryBits=${a0(e,n)}`);let i=0,a=0;const s=Wh[e],o=Wh[n]-1,u=[];for(const h of t){if(Dl(h),h>=s)throw new Error(`convertRadix2: invalid data word=${h} from=${e}`);if(i=i<<e|h,a+e>32)throw new Error(`convertRadix2: carry overflow pos=${a} from=${e}`);for(a+=e;a>=n;a-=n)u.push((i>>a-n&o)>>>0);const p=Wh[a];if(p===void 0)throw new Error("invalid carry");i&=p-1}if(i=i<<n-a&o,!r&&a>=e)throw new Error("Excess padding");if(!r&&i>0)throw new Error(`Non-zero padding: ${i}`);return r&&a>0&&u.push(i>>>0),u}function CS(t){Dl(t);const e=2**8;return{encode:n=>{if(!Km(n))throw new Error("radix.encode input should be Uint8Array");return T3(Array.from(n),e,t)},decode:n=>(Cx("radix.decode",n),Uint8Array.from(T3(n,t,e)))}}function US(t,e=!1){if(Dl(t),t<=0||t>32)throw new Error("radix2: bits should be in (0..32]");if(a0(8,t)>32||a0(t,8)>32)throw new Error("radix2: carry overflow");return{encode:n=>{if(!Km(n))throw new Error("radix2.encode input should be Uint8Array");return N3(Array.from(n),8,t,!e)},decode:n=>(Cx("radix2.decode",n),Uint8Array.from(N3(n,t,8,e)))}}const DS=typeof Uint8Array.from([]).toBase64=="function"&&typeof Uint8Array.fromBase64=="function",FS=(t,e)=>{Tl("base64",t);const n=/^[A-Za-z0-9=+/]+$/,r="base64";if(t.length>0&&!n.test(t))throw new Error("invalid base64");return Uint8Array.fromBase64(t,{alphabet:r,lastChunkHandling:"strict"})},ZS=DS?{encode(t){return XS(t),t.toBase64()},decode(t){return FS(t)}}:Ux(US(6),Dx("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),jS(6),Fx("")),qS=t=>Ux(CS(58),Dx(t),Fx("")),WS=qS("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function qx({coder:t,ipfs:e},n){return(r,i)=>(n(r,i),t.decode(e&&i?r.substring(1):r))}function Wx({coder:t,ipfs:e}){return(n,r)=>{const i=t.encode(ut(n));return e&&r?`${e}${i}`:i}}function Gx({chars:t,ipfs:e,type:n,withPadding:r}){return(i,a)=>{if(typeof i!="string")throw new Error(`Expected ${n} string input`);if(e&&a&&!i.startsWith(e))throw new Error(`Expected ipfs-compatible ${n} to start with '${e}'`);for(let s=a?1:0,o=i.length;s<o;s++)if(!t.includes(i[s]))if(r&&i[s]==="="){if(s!==o-1){if(i[s+1]!=="=")throw new Error(`Invalid ${n} padding sequence "${i[s]}${i[s+1]}" at index ${s}`)}}else throw new Error(`Invalid ${n} character "${i[s]}" (0x${i.charCodeAt(s).toString(16)}) at index ${s}`);return!0}}const Jm={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:WS,ipfs:"z",type:"base58"},GS=Gx(Jm),YS=qx(Jm,GS),KS=Wx(Jm),Ao=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Qm(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function En(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function fr(t,...e){if(!Qm(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function Yx(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");En(t.outputLen),En(t.blockLen)}function ks(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function _m(t,e){fr(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function bs(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function jr(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function Bd(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function Oi(t,e){return t<<32-e|t>>>e}function Lt(t,e){return t<<e|t>>>32-e>>>0}const Kx=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Jx(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const oa=Kx?t=>t:t=>Jx(t);function JS(t){for(let e=0;e<t.length;e++)t[e]=Jx(t[e]);return t}const Fi=Kx?t=>t:JS,Qx=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",QS=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function Oc(t){if(fr(t),Qx)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=QS[t[n]];return e}const na={_0:48,_9:57,A:65,F:70,a:97,f:102};function O3(t){if(t>=na._0&&t<=na._9)return t-na._0;if(t>=na.A&&t<=na.F)return t-(na.A-10);if(t>=na.a&&t<=na.f)return t-(na.a-10)}function $m(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(Qx)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let i=0,a=0;i<n;i++,a+=2){const s=O3(t.charCodeAt(a)),o=O3(t.charCodeAt(a+1));if(s===void 0||o===void 0){const u=t[a]+t[a+1];throw new Error('hex string expected, got non-hex character "'+u+'" at index '+a)}r[i]=s*16+o}return r}function _x(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function ka(t){return typeof t=="string"&&(t=_x(t)),fr(t),t}function V3(t){return typeof t=="string"&&(t=_x(t)),fr(t),t}function xa(...t){let e=0;for(let r=0;r<t.length;r++){const i=t[r];fr(i),e+=i.length}const n=new Uint8Array(e);for(let r=0,i=0;r<t.length;r++){const a=t[r];n.set(a,i),i+=a.length}return n}function $x(t,e){if(e!==void 0&&{}.toString.call(e)!=="[object Object]")throw new Error("options should be object or undefined");return Object.assign(t,e)}class D0{}function e2(t){const e=r=>t().update(ka(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function _S(t){const e=(r,i)=>t(i).update(ka(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function e4(t=32){if(Ao&&typeof Ao.getRandomValues=="function")return Ao.getRandomValues(new Uint8Array(t));if(Ao&&typeof Ao.randomBytes=="function")return Uint8Array.from(Ao.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}const $S=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]);function eE(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const i=BigInt(32),a=BigInt(4294967295),s=Number(n>>i&a),o=Number(n&a),u=r?4:0,h=r?0:4;t.setUint32(e+u,s,r),t.setUint32(e+h,o,r)}function tE(t,e,n){return t&e^~t&n}function nE(t,e,n){return t&e^t&n^e&n}class t4 extends D0{constructor(e,n,r,i){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=i,this.buffer=new Uint8Array(e),this.view=Bd(this.buffer)}update(e){ks(this),e=ka(e),fr(e);const{view:n,buffer:r,blockLen:i}=this,a=e.length;for(let s=0;s<a;){const o=Math.min(i-this.pos,a-s);if(o===i){const u=Bd(e);for(;i<=a-s;s+=i)this.process(u,s);continue}r.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===i&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){ks(this),_m(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:i,isLE:a}=this;let{pos:s}=this;n[s++]=128,jr(this.buffer.subarray(s)),this.padOffset>i-s&&(this.process(r,0),s=0);for(let y=s;y<i;y++)n[y]=0;eE(r,i-8,BigInt(this.length*8),a),this.process(r,0);const o=Bd(e),u=this.outputLen;if(u%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const h=u/4,p=this.get();if(h>p.length)throw new Error("_sha2: outputLen bigger than state");for(let y=0;y<h;y++)o.setUint32(4*y,p[y],a)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:i,finished:a,destroyed:s,pos:o}=this;return e.destroyed=s,e.finished=a,e.length=i,e.pos=o,i%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}}const qa=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),jn=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),cd=BigInt(2**32-1),S3=BigInt(32);function n4(t,e=!1){return e?{h:Number(t&cd),l:Number(t>>S3&cd)}:{h:Number(t>>S3&cd)|0,l:Number(t&cd)|0}}function r4(t,e=!1){const n=t.length;let r=new Uint32Array(n),i=new Uint32Array(n);for(let a=0;a<n;a++){const{h:s,l:o}=n4(t[a],e);[r[a],i[a]]=[s,o]}return[r,i]}const E3=(t,e,n)=>t>>>n,z3=(t,e,n)=>t<<32-n|e>>>n,us=(t,e,n)=>t>>>n|e<<32-n,ls=(t,e,n)=>t<<32-n|e>>>n,du=(t,e,n)=>t<<64-n|e>>>n-32,fu=(t,e,n)=>t>>>n-32|e<<64-n,rE=(t,e)=>e,iE=(t,e)=>t,aE=(t,e,n)=>t<<n|e>>>32-n,sE=(t,e,n)=>e<<n|t>>>32-n,oE=(t,e,n)=>e<<n-32|t>>>64-n,cE=(t,e,n)=>t<<n-32|e>>>64-n;function gi(t,e,n,r){const i=(e>>>0)+(r>>>0);return{h:t+n+(i/2**32|0)|0,l:i|0}}const t2=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),n2=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,uE=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),lE=(t,e,n,r,i)=>e+n+r+i+(t/2**32|0)|0,dE=(t,e,n,r,i)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(i>>>0),fE=(t,e,n,r,i,a)=>e+n+r+i+a+(t/2**32|0)|0,pn=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),ke=new Uint32Array(32);function Wa(t,e,n,r,i,a){const s=i[a],o=i[a+1];let u=ke[2*t],h=ke[2*t+1],p=ke[2*e],y=ke[2*e+1],w=ke[2*n],P=ke[2*n+1],N=ke[2*r],O=ke[2*r+1],z=t2(u,p,s);h=n2(z,h,y,o),u=z|0,{Dh:O,Dl:N}={Dh:O^h,Dl:N^u},{Dh:O,Dl:N}={Dh:rE(O,N),Dl:iE(O)},{h:P,l:w}=gi(P,w,O,N),{Bh:y,Bl:p}={Bh:y^P,Bl:p^w},{Bh:y,Bl:p}={Bh:us(y,p,24),Bl:ls(y,p,24)},ke[2*t]=u,ke[2*t+1]=h,ke[2*e]=p,ke[2*e+1]=y,ke[2*n]=w,ke[2*n+1]=P,ke[2*r]=N,ke[2*r+1]=O}function Ga(t,e,n,r,i,a){const s=i[a],o=i[a+1];let u=ke[2*t],h=ke[2*t+1],p=ke[2*e],y=ke[2*e+1],w=ke[2*n],P=ke[2*n+1],N=ke[2*r],O=ke[2*r+1],z=t2(u,p,s);h=n2(z,h,y,o),u=z|0,{Dh:O,Dl:N}={Dh:O^h,Dl:N^u},{Dh:O,Dl:N}={Dh:us(O,N,16),Dl:ls(O,N,16)},{h:P,l:w}=gi(P,w,O,N),{Bh:y,Bl:p}={Bh:y^P,Bl:p^w},{Bh:y,Bl:p}={Bh:du(y,p,63),Bl:fu(y,p,63)},ke[2*t]=u,ke[2*t+1]=h,ke[2*e]=p,ke[2*e+1]=y,ke[2*n]=w,ke[2*n+1]=P,ke[2*r]=N,ke[2*r+1]=O}function hE(t,e={},n,r,i){if(En(n),t<0||t>n)throw new Error("outputLen bigger than keyLen");const{key:a,salt:s,personalization:o}=e;if(a!==void 0&&(a.length<1||a.length>n))throw new Error("key length must be undefined or 1.."+n);if(s!==void 0&&s.length!==r)throw new Error("salt must be undefined or "+r);if(o!==void 0&&o.length!==i)throw new Error("personalization must be undefined or "+i)}class pE extends D0{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,En(e),En(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=bs(this.buffer)}update(e){ks(this),e=ka(e),fr(e);const{blockLen:n,buffer:r,buffer32:i}=this,a=e.length,s=e.byteOffset,o=e.buffer;for(let u=0;u<a;){this.pos===n&&(Fi(i),this.compress(i,0,!1),Fi(i),this.pos=0);const h=Math.min(n-this.pos,a-u),p=s+u;if(h===n&&!(p%4)&&u+h<a){const y=new Uint32Array(o,p,Math.floor((a-u)/4));Fi(y);for(let w=0;u+n<a;w+=i.length,u+=n)this.length+=n,this.compress(y,w,!1);Fi(y);continue}r.set(e.subarray(u,u+h),this.pos),this.pos+=h,this.length+=h,u+=h}return this}digestInto(e){ks(this),_m(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,jr(this.buffer.subarray(n)),Fi(r),this.compress(r,0,!0),Fi(r);const i=bs(e);this.get().forEach((a,s)=>i[s]=oa(a))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:i,destroyed:a,outputLen:s,pos:o}=this;return e||(e=new this.constructor({dkLen:s})),e.set(...this.get()),e.buffer.set(n),e.destroyed=a,e.finished=i,e.length=r,e.pos=o,e.outputLen=s,e}clone(){return this._cloneInto()}}class mE extends pE{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=pn[0]|0,this.v0h=pn[1]|0,this.v1l=pn[2]|0,this.v1h=pn[3]|0,this.v2l=pn[4]|0,this.v2h=pn[5]|0,this.v3l=pn[6]|0,this.v3h=pn[7]|0,this.v4l=pn[8]|0,this.v4h=pn[9]|0,this.v5l=pn[10]|0,this.v5h=pn[11]|0,this.v6l=pn[12]|0,this.v6h=pn[13]|0,this.v7l=pn[14]|0,this.v7h=pn[15]|0,hE(n,e,64,16,16);let{key:r,personalization:i,salt:a}=e,s=0;if(r!==void 0&&(r=ka(r),s=r.length),this.v0l^=this.outputLen|s<<8|65536|1<<24,a!==void 0){a=ka(a);const o=bs(a);this.v4l^=oa(o[0]),this.v4h^=oa(o[1]),this.v5l^=oa(o[2]),this.v5h^=oa(o[3])}if(i!==void 0){i=ka(i);const o=bs(i);this.v6l^=oa(o[0]),this.v6h^=oa(o[1]),this.v7l^=oa(o[2]),this.v7h^=oa(o[3])}if(r!==void 0){const o=new Uint8Array(this.blockLen);o.set(r),this.update(o)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:i,v2l:a,v2h:s,v3l:o,v3h:u,v4l:h,v4h:p,v5l:y,v5h:w,v6l:P,v6h:N,v7l:O,v7h:z}=this;return[e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z]}set(e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=i|0,this.v2l=a|0,this.v2h=s|0,this.v3l=o|0,this.v3h=u|0,this.v4l=h|0,this.v4h=p|0,this.v5l=y|0,this.v5h=w|0,this.v6l=P|0,this.v6h=N|0,this.v7l=O|0,this.v7h=z|0}compress(e,n,r){this.get().forEach((u,h)=>ke[h]=u),ke.set(pn,16);let{h:i,l:a}=n4(BigInt(this.length));ke[24]=pn[8]^a,ke[25]=pn[9]^i,r&&(ke[28]=~ke[28],ke[29]=~ke[29]);let s=0;const o=$S;for(let u=0;u<12;u++)Wa(0,4,8,12,e,n+2*o[s++]),Ga(0,4,8,12,e,n+2*o[s++]),Wa(1,5,9,13,e,n+2*o[s++]),Ga(1,5,9,13,e,n+2*o[s++]),Wa(2,6,10,14,e,n+2*o[s++]),Ga(2,6,10,14,e,n+2*o[s++]),Wa(3,7,11,15,e,n+2*o[s++]),Ga(3,7,11,15,e,n+2*o[s++]),Wa(0,5,10,15,e,n+2*o[s++]),Ga(0,5,10,15,e,n+2*o[s++]),Wa(1,6,11,12,e,n+2*o[s++]),Ga(1,6,11,12,e,n+2*o[s++]),Wa(2,7,8,13,e,n+2*o[s++]),Ga(2,7,8,13,e,n+2*o[s++]),Wa(3,4,9,14,e,n+2*o[s++]),Ga(3,4,9,14,e,n+2*o[s++]);this.v0l^=ke[0]^ke[16],this.v0h^=ke[1]^ke[17],this.v1l^=ke[2]^ke[18],this.v1h^=ke[3]^ke[19],this.v2l^=ke[4]^ke[20],this.v2h^=ke[5]^ke[21],this.v3l^=ke[6]^ke[22],this.v3h^=ke[7]^ke[23],this.v4l^=ke[8]^ke[24],this.v4h^=ke[9]^ke[25],this.v5l^=ke[10]^ke[26],this.v5h^=ke[11]^ke[27],this.v6l^=ke[12]^ke[28],this.v6h^=ke[13]^ke[29],this.v7l^=ke[14]^ke[30],this.v7h^=ke[15]^ke[31],jr(ke)}destroy(){this.destroyed=!0,jr(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const bE=_S(t=>new mE(t)),I3=bE;function yE(t,e){return(n,r)=>e(n,t,r)}function i4(t,e){return(n,r=256,i)=>{const a=ut(n);return!An||!i&&Rn()?t[r](a):e[r](a)}}function ko(t,e=256,n,r){const i=Math.ceil(e/8),a=ut(t);return!An||!r&&Rn()?SS(a,ut(n),i):n?I3(a,{dkLen:i,key:n}):I3(a,{dkLen:i})}const gE=ii("SS58PRE");function a4(t){return ko(Ln(gE,t),512)}function xE(t){const e=t[0]&64?2:1,n=e===1?t[0]:(t[0]&63)<<2|t[1]>>6|(t[1]&63)<<8,r=[34+e,35+e].includes(t.length),i=t.length-(r?2:1),a=a4(t.subarray(0,i));return[(t[0]&128)===0&&![46,47].includes(t[0])&&(r?t[t.length-2]===a[0]&&t[t.length-1]===a[1]:t[t.length-1]===a[0]),i,e,n]}const vE=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"autonomys",displayName:"Autonomys",symbols:["AI3"],decimals:[18],standardAccount:"*25519",website:"https://autonomys.xyz"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],wE={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],encointer:["0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],frequency:["0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],integritee:["0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da","0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],liberland:["0x6bd89e052d67a45bb60a9a23e8581053d5e0d619f15cb9865946937e690c42d6"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],peaq:["0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polimec:["0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vara:["0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},PE={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},ME={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,bittensor:354,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,encointer:434,enjin:1155,equilibrium:99999997,frequency:2091,genshiro:99999996,hydradx:354,integritee:2015,"interlay-parachain":354,karura:686,khala:434,kusama:434,liberland:767,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,peaq:3338,pendulum:354,phala:354,picasso:434,polimec:3344,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vara:4976,vtb:694,xxnetwork:1955,zeitgeist:354},kE={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},L3=[0,2,42],TE=["testnet"];function NE(t){var i,a;const e=t.network||"",n=e.replace(/_/g,"-").split("-"),r=t;return r.slip44=ME[e],r.hasLedgerSupport=!!r.slip44,r.genesisHash=wE[e]||[],r.icon=PE[e]||"substrate",r.isTestnet=!!kE[e]||TE.includes(n[n.length-1]),r.isIgnored=r.isTestnet||!(t.standardAccount&&((i=t.decimals)!=null&&i.length)&&((a=t.symbols)!=null&&a.length))&&t.prefix!==42,r}function OE({genesisHash:t,prefix:e}){return!!t.length||e===42}function VE(t){return!t.isIgnored&&!!t.network}function SE(t,e){const n=L3.includes(t.prefix),r=L3.includes(e.prefix);return n===r?n?0:t.displayName.localeCompare(e.displayName):n?-1:1}const EE=vE.map(NE),s4=EE.filter(VE).sort(SE);s4.filter(OE);const Xd={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:s4.map(({prefix:t})=>t),prefix:42};function gc(t,e,n=-1){if(!t)throw new Error("Invalid empty address passed");if(Ms(t)||Ma(t))return ut(t);try{const r=YS(t);if(!Xd.allowedEncodedLengths.includes(r.length))throw new Error("Invalid decoded address length");const[i,a,s,o]=xE(r);if(!i&&!e)throw new Error("Invalid decoded address checksum");if(n!==-1&&n!==o)throw new Error(`Expected ss58Format ${n}, received ${o}`);return r.slice(s,a)}catch(r){throw new Error(`Decoding ${t}: ${r.message}`)}}const H3={isLe:!1},Gh={isLe:!0},zE={bitLength:32,isLe:!1},Yh={bitLength:32,isLe:!0},Vc={bitLength:256,isLe:!1},IE={bitLength:256,isLe:!0},LE=/^\d+$/,HE=32;var Pc,so;const yb=class yb{constructor(){Ls(this,Pc,new Uint8Array(32));Ls(this,so,!1)}static from(e){const n=new yb,[r,i]=e.startsWith("/")?[e.substring(1),!0]:[e,!1];return n.soft(LE.test(r)?new Nt(r,10):r),i?n.harden():n}get chainCode(){return Tn(this,Pc)}get isHard(){return Tn(this,so)}get isSoft(){return!Tn(this,so)}hard(e){return this.soft(e).harden()}harden(){return Hs(this,so,!0),this}soft(e){return DV(e)||Px(e)||Sx(e)?this.soft(Ar(e,IE)):Ma(e)?this.soft(yc(e)):UV(e)?this.soft(Gm(ii(e))):e.length>HE?this.soft(ko(e)):(Tn(this,Pc).fill(0),Tn(this,Pc).set(e,0),this)}soften(){return Hs(this,so,!1),this}};Pc=new WeakMap,so=new WeakMap;let b1=yb;const AE=/\/(\/?)([^/]+)/g;function o4(t){const e=t.match(AE),n=[];let r="";if(e){r=e.join("");for(const i of e)n.push(b1.from(i.substring(1)))}if(r!==t)throw new Error(`Re-constructed path "${r}" does not match input`);return{parts:e,path:n}}const RE=/^((0x[a-fA-F0-9]+|[\p{L}\d]+(?: [\p{L}\d]+)*))((\/\/?[^/]+)*)(\/\/\/(.*))?$/u;function BE(t){const n=t.normalize("NFC").match(RE);if(n===null)throw new Error("Unable to match provided value to a secret URI");const[,r,,i,,,a]=n,{path:s}=o4(i);return{derivePath:i,password:a,path:s,phrase:r}}const XE=Gm(ii("Secp256k1HDKD"));function jE(t,e){if(!Ms(e)||e.length!==32)throw new Error("Invalid chainCode passed to derive");return ko(Ln(XE,t,e),256)}const CE=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Ya=new Uint32Array(64);class UE extends t4{constructor(e=32){super(64,e,8,!1),this.A=qa[0]|0,this.B=qa[1]|0,this.C=qa[2]|0,this.D=qa[3]|0,this.E=qa[4]|0,this.F=qa[5]|0,this.G=qa[6]|0,this.H=qa[7]|0}get(){const{A:e,B:n,C:r,D:i,E:a,F:s,G:o,H:u}=this;return[e,n,r,i,a,s,o,u]}set(e,n,r,i,a,s,o,u){this.A=e|0,this.B=n|0,this.C=r|0,this.D=i|0,this.E=a|0,this.F=s|0,this.G=o|0,this.H=u|0}process(e,n){for(let y=0;y<16;y++,n+=4)Ya[y]=e.getUint32(n,!1);for(let y=16;y<64;y++){const w=Ya[y-15],P=Ya[y-2],N=Oi(w,7)^Oi(w,18)^w>>>3,O=Oi(P,17)^Oi(P,19)^P>>>10;Ya[y]=O+Ya[y-7]+N+Ya[y-16]|0}let{A:r,B:i,C:a,D:s,E:o,F:u,G:h,H:p}=this;for(let y=0;y<64;y++){const w=Oi(o,6)^Oi(o,11)^Oi(o,25),P=p+w+tE(o,u,h)+CE[y]+Ya[y]|0,O=(Oi(r,2)^Oi(r,13)^Oi(r,22))+nE(r,i,a)|0;p=h,h=u,u=o,o=s+P|0,s=a,a=i,i=r,r=P+O|0}r=r+this.A|0,i=i+this.B|0,a=a+this.C|0,s=s+this.D|0,o=o+this.E|0,u=u+this.F|0,h=h+this.G|0,p=p+this.H|0,this.set(r,i,a,s,o,u,h,p)}roundClean(){jr(Ya)}destroy(){this.set(0,0,0,0,0,0,0,0),jr(this.buffer)}}const c4=r4(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(t=>BigInt(t))),DE=c4[0],FE=c4[1],Ka=new Uint32Array(80),Ja=new Uint32Array(80);class ZE extends t4{constructor(e=64){super(128,e,16,!1),this.Ah=jn[0]|0,this.Al=jn[1]|0,this.Bh=jn[2]|0,this.Bl=jn[3]|0,this.Ch=jn[4]|0,this.Cl=jn[5]|0,this.Dh=jn[6]|0,this.Dl=jn[7]|0,this.Eh=jn[8]|0,this.El=jn[9]|0,this.Fh=jn[10]|0,this.Fl=jn[11]|0,this.Gh=jn[12]|0,this.Gl=jn[13]|0,this.Hh=jn[14]|0,this.Hl=jn[15]|0}get(){const{Ah:e,Al:n,Bh:r,Bl:i,Ch:a,Cl:s,Dh:o,Dl:u,Eh:h,El:p,Fh:y,Fl:w,Gh:P,Gl:N,Hh:O,Hl:z}=this;return[e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z]}set(e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=i|0,this.Ch=a|0,this.Cl=s|0,this.Dh=o|0,this.Dl=u|0,this.Eh=h|0,this.El=p|0,this.Fh=y|0,this.Fl=w|0,this.Gh=P|0,this.Gl=N|0,this.Hh=O|0,this.Hl=z|0}process(e,n){for(let A=0;A<16;A++,n+=4)Ka[A]=e.getUint32(n),Ja[A]=e.getUint32(n+=4);for(let A=16;A<80;A++){const U=Ka[A-15]|0,H=Ja[A-15]|0,X=us(U,H,1)^us(U,H,8)^E3(U,H,7),C=ls(U,H,1)^ls(U,H,8)^z3(U,H,7),F=Ka[A-2]|0,S=Ja[A-2]|0,R=us(F,S,19)^du(F,S,61)^E3(F,S,6),E=ls(F,S,19)^fu(F,S,61)^z3(F,S,6),L=uE(C,E,Ja[A-7],Ja[A-16]),c=lE(L,X,R,Ka[A-7],Ka[A-16]);Ka[A]=c|0,Ja[A]=L|0}let{Ah:r,Al:i,Bh:a,Bl:s,Ch:o,Cl:u,Dh:h,Dl:p,Eh:y,El:w,Fh:P,Fl:N,Gh:O,Gl:z,Hh:j,Hl:I}=this;for(let A=0;A<80;A++){const U=us(y,w,14)^us(y,w,18)^du(y,w,41),H=ls(y,w,14)^ls(y,w,18)^fu(y,w,41),X=y&P^~y&O,C=w&N^~w&z,F=dE(I,H,C,FE[A],Ja[A]),S=fE(F,j,U,X,DE[A],Ka[A]),R=F|0,E=us(r,i,28)^du(r,i,34)^du(r,i,39),L=ls(r,i,28)^fu(r,i,34)^fu(r,i,39),c=r&a^r&o^a&o,l=i&s^i&u^s&u;j=O|0,I=z|0,O=P|0,z=N|0,P=y|0,N=w|0,{h:y,l:w}=gi(h|0,p|0,S|0,R|0),h=o|0,p=u|0,o=a|0,u=s|0,a=r|0,s=i|0;const f=t2(R,L,l);r=n2(f,S,E,c),i=f|0}({h:r,l:i}=gi(this.Ah|0,this.Al|0,r|0,i|0)),{h:a,l:s}=gi(this.Bh|0,this.Bl|0,a|0,s|0),{h:o,l:u}=gi(this.Ch|0,this.Cl|0,o|0,u|0),{h,l:p}=gi(this.Dh|0,this.Dl|0,h|0,p|0),{h:y,l:w}=gi(this.Eh|0,this.El|0,y|0,w|0),{h:P,l:N}=gi(this.Fh|0,this.Fl|0,P|0,N|0),{h:O,l:z}=gi(this.Gh|0,this.Gl|0,O|0,z|0),{h:j,l:I}=gi(this.Hh|0,this.Hl|0,j|0,I|0),this.set(r,i,a,s,o,u,h,p,y,w,P,N,O,z,j,I)}roundClean(){jr(Ka,Ja)}destroy(){jr(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const F0=e2(()=>new UE),u4=e2(()=>new ZE);class l4 extends D0{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,Yx(e);const r=ka(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,a=new Uint8Array(i);a.set(r.length>i?e.create().update(r).digest():r);for(let s=0;s<a.length;s++)a[s]^=54;this.iHash.update(a),this.oHash=e.create();for(let s=0;s<a.length;s++)a[s]^=106;this.oHash.update(a),jr(a)}update(e){return ks(this),this.iHash.update(e),this}digestInto(e){ks(this),fr(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:i,destroyed:a,blockLen:s,outputLen:o}=this;return e=e,e.finished=i,e.destroyed=a,e.blockLen=s,e.outputLen=o,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const Z0=(t,e,n)=>new l4(t,e).update(n).digest();Z0.create=(t,e)=>new l4(t,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const r2=BigInt(0),y1=BigInt(1);function wo(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}function ud(t){const e=t.toString(16);return e.length&1?"0"+e:e}function d4(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?r2:BigInt("0x"+t)}function q0(t){return d4(Oc(t))}function Nl(t){return fr(t),d4(Oc(Uint8Array.from(t).reverse()))}function i2(t,e){return $m(t.toString(16).padStart(e*2,"0"))}function W0(t,e){return i2(t,e).reverse()}function Qt(t,e,n){let r;if(typeof e=="string")try{r=$m(e)}catch(a){throw new Error(t+" must be hex string or Uint8Array, cause: "+a)}else if(Qm(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");const i=r.length;if(typeof n=="number"&&i!==n)throw new Error(t+" of length "+n+" expected, got "+i);return r}const Kh=t=>typeof t=="bigint"&&r2<=t;function qE(t,e,n){return Kh(t)&&Kh(e)&&Kh(n)&&e<=t&&t<n}function dc(t,e,n,r){if(!qE(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function WE(t){let e;for(e=0;t>r2;t>>=y1,e+=1);return e}const G0=t=>(y1<<BigInt(t))-y1;function GE(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");const r=P=>new Uint8Array(P),i=P=>Uint8Array.of(P);let a=r(t),s=r(t),o=0;const u=()=>{a.fill(1),s.fill(0),o=0},h=(...P)=>n(s,a,...P),p=(P=r(0))=>{s=h(i(0),P),a=h(),P.length!==0&&(s=h(i(1),P),a=h())},y=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let P=0;const N=[];for(;P<e;){a=h();const O=a.slice();N.push(O),P+=a.length}return xa(...N)};return(P,N)=>{u(),p(P);let O;for(;!(O=N(y()));)p();return u(),O}}function Fl(t,e,n={}){if(!t||typeof t!="object")throw new Error("expected valid options object");function r(i,a,s){const o=t[i];if(s&&o===void 0)return;const u=typeof o;if(u!==a||o===null)throw new Error(`param "${i}" is invalid: expected ${a}, got ${u}`)}Object.entries(e).forEach(([i,a])=>r(i,a,!1)),Object.entries(n).forEach(([i,a])=>r(i,a,!0))}function s0(t){const e=new WeakMap;return(n,...r)=>{const i=e.get(n);if(i!==void 0)return i;const a=t(n,...r);return e.set(n,a),a}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const ur=BigInt(0),Hn=BigInt(1),eo=BigInt(2),YE=BigInt(3),f4=BigInt(4),h4=BigInt(5),p4=BigInt(8);function $t(t,e){const n=t%e;return n>=ur?n:e+n}function Yt(t,e,n){let r=t;for(;e-- >ur;)r*=r,r%=n;return r}function A3(t,e){if(t===ur)throw new Error("invert: expected non-zero number");if(e<=ur)throw new Error("invert: expected positive modulus, got "+e);let n=$t(t,e),r=e,i=ur,a=Hn;for(;n!==ur;){const o=r/n,u=r%n,h=i-a*o;r=n,n=u,i=a,a=h}if(r!==Hn)throw new Error("invert: does not exist");return $t(i,e)}function m4(t,e){const n=(t.ORDER+Hn)/f4,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error("Cannot find square root");return r}function KE(t,e){const n=(t.ORDER-h4)/p4,r=t.mul(e,eo),i=t.pow(r,n),a=t.mul(e,i),s=t.mul(t.mul(a,eo),i),o=t.mul(a,t.sub(s,t.ONE));if(!t.eql(t.sqr(o),e))throw new Error("Cannot find square root");return o}function JE(t){if(t<BigInt(3))throw new Error("sqrt is not defined for small field");let e=t-Hn,n=0;for(;e%eo===ur;)e/=eo,n++;let r=eo;const i=Cc(t);for(;R3(i,r)===1;)if(r++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(n===1)return m4;let a=i.pow(r,e);const s=(e+Hn)/eo;return function(u,h){if(u.is0(h))return h;if(R3(u,h)!==1)throw new Error("Cannot find square root");let p=n,y=u.mul(u.ONE,a),w=u.pow(h,e),P=u.pow(h,s);for(;!u.eql(w,u.ONE);){if(u.is0(w))return u.ZERO;let N=1,O=u.sqr(w);for(;!u.eql(O,u.ONE);)if(N++,O=u.sqr(O),N===p)throw new Error("Cannot find square root");const z=Hn<<BigInt(p-N-1),j=u.pow(y,z);p=N,y=u.sqr(j),w=u.mul(w,y),P=u.mul(P,j)}return P}}function QE(t){return t%f4===YE?m4:t%p4===h4?KE:JE(t)}const _E=(t,e)=>($t(t,e)&Hn)===Hn,$E=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function ez(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"},n=$E.reduce((r,i)=>(r[i]="function",r),e);return Fl(t,n),t}function tz(t,e,n){if(n<ur)throw new Error("invalid exponent, negatives unsupported");if(n===ur)return t.ONE;if(n===Hn)return e;let r=t.ONE,i=e;for(;n>ur;)n&Hn&&(r=t.mul(r,i)),i=t.sqr(i),n>>=Hn;return r}function b4(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),i=e.reduce((s,o,u)=>t.is0(o)?s:(r[u]=s,t.mul(s,o)),t.ONE),a=t.inv(i);return e.reduceRight((s,o,u)=>t.is0(o)?s:(r[u]=t.mul(s,r[u]),t.mul(s,o)),a),r}function R3(t,e){const n=(t.ORDER-Hn)/eo,r=t.pow(e,n),i=t.eql(r,t.ONE),a=t.eql(r,t.ZERO),s=t.eql(r,t.neg(t.ONE));if(!i&&!a&&!s)throw new Error("invalid Legendre symbol result");return i?1:a?0:-1}function nz(t,e){e!==void 0&&En(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function Cc(t,e,n=!1,r={}){if(t<=ur)throw new Error("invalid field: expected ORDER > 0, got "+t);let i,a;if(typeof e=="object"&&e!=null){if(r.sqrt||n)throw new Error("cannot specify opts in two arguments");const p=e;p.BITS&&(i=p.BITS),p.sqrt&&(a=p.sqrt),typeof p.isLE=="boolean"&&(n=p.isLE)}else typeof e=="number"&&(i=e),r.sqrt&&(a=r.sqrt);const{nBitLength:s,nByteLength:o}=nz(t,i);if(o>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let u;const h=Object.freeze({ORDER:t,isLE:n,BITS:s,BYTES:o,MASK:G0(s),ZERO:ur,ONE:Hn,create:p=>$t(p,t),isValid:p=>{if(typeof p!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof p);return ur<=p&&p<t},is0:p=>p===ur,isValidNot0:p=>!h.is0(p)&&h.isValid(p),isOdd:p=>(p&Hn)===Hn,neg:p=>$t(-p,t),eql:(p,y)=>p===y,sqr:p=>$t(p*p,t),add:(p,y)=>$t(p+y,t),sub:(p,y)=>$t(p-y,t),mul:(p,y)=>$t(p*y,t),pow:(p,y)=>tz(h,p,y),div:(p,y)=>$t(p*A3(y,t),t),sqrN:p=>p*p,addN:(p,y)=>p+y,subN:(p,y)=>p-y,mulN:(p,y)=>p*y,inv:p=>A3(p,t),sqrt:a||(p=>(u||(u=QE(t)),u(h,p))),toBytes:p=>n?W0(p,o):i2(p,o),fromBytes:p=>{if(p.length!==o)throw new Error("Field.fromBytes: expected "+o+" bytes, got "+p.length);return n?Nl(p):q0(p)},invertBatch:p=>b4(h,p),cmov:(p,y,w)=>w?y:p});return Object.freeze(h)}function y4(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function g4(t){const e=y4(t);return e+Math.ceil(e/2)}function rz(t,e,n=!1){const r=t.length,i=y4(e),a=g4(e);if(r<16||r<a||r>1024)throw new Error("expected "+a+"-1024 bytes of input, got "+r);const s=n?Nl(t):q0(t),o=$t(s,e-Hn)+Hn;return n?W0(o,i):i2(o,i)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Sc=BigInt(0),to=BigInt(1);function il(t,e){const n=e.negate();return t?n:e}function x4(t,e,n){const r=e==="pz"?s=>s.pz:s=>s.ez,i=b4(t.Fp,n.map(r));return n.map((s,o)=>s.toAffine(i[o])).map(t.fromAffine)}function v4(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function Jh(t,e){v4(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),i=2**t,a=G0(t),s=BigInt(t);return{windows:n,windowSize:r,mask:a,maxNumber:i,shiftBy:s}}function B3(t,e,n){const{windowSize:r,mask:i,maxNumber:a,shiftBy:s}=n;let o=Number(t&i),u=t>>s;o>r&&(o-=a,u+=to);const h=e*r,p=h+Math.abs(o)-1,y=o===0,w=o<0,P=e%2!==0;return{nextN:u,offset:p,isZero:y,isNeg:w,isNegF:P,offsetF:h}}function iz(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error("invalid point at index "+r)})}function az(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error("invalid scalar at index "+r)})}const Qh=new WeakMap,w4=new WeakMap;function _h(t){return w4.get(t)||1}function X3(t){if(t!==Sc)throw new Error("invalid wNAF")}function P4(t,e){return{constTimeNegate:il,hasPrecomputes(n){return _h(n)!==1},unsafeLadder(n,r,i=t.ZERO){let a=n;for(;r>Sc;)r&to&&(i=i.add(a)),a=a.double(),r>>=to;return i},precomputeWindow(n,r){const{windows:i,windowSize:a}=Jh(r,e),s=[];let o=n,u=o;for(let h=0;h<i;h++){u=o,s.push(u);for(let p=1;p<a;p++)u=u.add(o),s.push(u);o=u.double()}return s},wNAF(n,r,i){let a=t.ZERO,s=t.BASE;const o=Jh(n,e);for(let u=0;u<o.windows;u++){const{nextN:h,offset:p,isZero:y,isNeg:w,isNegF:P,offsetF:N}=B3(i,u,o);i=h,y?s=s.add(il(P,r[N])):a=a.add(il(w,r[p]))}return X3(i),{p:a,f:s}},wNAFUnsafe(n,r,i,a=t.ZERO){const s=Jh(n,e);for(let o=0;o<s.windows&&i!==Sc;o++){const{nextN:u,offset:h,isZero:p,isNeg:y}=B3(i,o,s);if(i=u,!p){const w=r[h];a=a.add(y?w.negate():w)}}return X3(i),a},getPrecomputes(n,r,i){let a=Qh.get(r);return a||(a=this.precomputeWindow(r,n),n!==1&&(typeof i=="function"&&(a=i(a)),Qh.set(r,a))),a},wNAFCached(n,r,i){const a=_h(n);return this.wNAF(a,this.getPrecomputes(a,n,i),r)},wNAFCachedUnsafe(n,r,i,a){const s=_h(n);return s===1?this.unsafeLadder(n,r,a):this.wNAFUnsafe(s,this.getPrecomputes(s,n,i),r,a)},setWindowSize(n,r){v4(r,e),w4.set(n,r),Qh.delete(n)}}}function sz(t,e,n,r){let i=e,a=t.ZERO,s=t.ZERO;for(;n>Sc||r>Sc;)n&to&&(a=a.add(i)),r&to&&(s=s.add(i)),i=i.double(),n>>=to,r>>=to;return{p1:a,p2:s}}function M4(t,e,n,r){iz(n,t),az(r,e);const i=n.length,a=r.length;if(i!==a)throw new Error("arrays of points and scalars must have equal length");const s=t.ZERO,o=WE(BigInt(i));let u=1;o>12?u=o-3:o>4?u=o-2:o>0&&(u=2);const h=G0(u),p=new Array(Number(h)+1).fill(s),y=Math.floor((e.BITS-1)/u)*u;let w=s;for(let P=y;P>=0;P-=u){p.fill(s);for(let O=0;O<a;O++){const z=r[O],j=Number(z>>BigInt(P)&h);p[j]=p[j].add(n[O])}let N=s;for(let O=p.length-1,z=s;O>0;O--)z=z.add(p[O]),N=N.add(z);if(w=w.add(N),P!==0)for(let O=0;O<u;O++)w=w.double()}return w}function j3(t,e){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return ez(e),e}else return Cc(t)}function k4(t,e,n={}){if(!e||typeof e!="object")throw new Error(`expected valid ${t} CURVE object`);for(const o of["p","n","h"]){const u=e[o];if(!(typeof u=="bigint"&&u>Sc))throw new Error(`CURVE.${o} must be positive bigint`)}const r=j3(e.p,n.Fp),i=j3(e.n,n.Fn),s=["Gx","Gy","a",t==="weierstrass"?"b":"d"];for(const o of s)if(!r.isValid(e[o]))throw new Error(`CURVE.${o} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:i}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function C3(t){t.lowS!==void 0&&wo("lowS",t.lowS),t.prehash!==void 0&&wo("prehash",t.prehash)}class oz extends Error{constructor(e=""){super(e)}}const ma={Err:oz,_tlv:{encode:(t,e)=>{const{Err:n}=ma;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length&1)throw new n("tlv.encode: unpadded data");const r=e.length/2,i=ud(r);if(i.length/2&128)throw new n("tlv.encode: long form length too big");const a=r>127?ud(i.length/2|128):"";return ud(t)+a+i+e},decode(t,e){const{Err:n}=ma;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const i=e[r++],a=!!(i&128);let s=0;if(!a)s=i;else{const u=i&127;if(!u)throw new n("tlv.decode(long): indefinite length not supported");if(u>4)throw new n("tlv.decode(long): byte length is too big");const h=e.subarray(r,r+u);if(h.length!==u)throw new n("tlv.decode: length bytes not complete");if(h[0]===0)throw new n("tlv.decode(long): zero leftmost byte");for(const p of h)s=s<<8|p;if(r+=u,s<128)throw new n("tlv.decode(long): not minimal encoding")}const o=e.subarray(r,r+s);if(o.length!==s)throw new n("tlv.decode: wrong value length");return{v:o,l:e.subarray(r+s)}}},_int:{encode(t){const{Err:e}=ma;if(t<al)throw new e("integer: negative integers are not allowed");let n=ud(t);if(Number.parseInt(n[0],16)&8&&(n="00"+n),n.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return n},decode(t){const{Err:e}=ma;if(t[0]&128)throw new e("invalid signature integer: negative");if(t[0]===0&&!(t[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return q0(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=ma,i=Qt("signature",t),{v:a,l:s}=r.decode(48,i);if(s.length)throw new e("invalid signature: left bytes after parsing");const{v:o,l:u}=r.decode(2,a),{v:h,l:p}=r.decode(2,u);if(p.length)throw new e("invalid signature: left bytes after parsing");return{r:n.decode(o),s:n.decode(h)}},hexFromSig(t){const{_tlv:e,_int:n}=ma,r=e.encode(2,n.encode(t.r)),i=e.encode(2,n.encode(t.s)),a=r+i;return e.encode(48,a)}},al=BigInt(0),sl=BigInt(1),cz=BigInt(2),ld=BigInt(3),uz=BigInt(4);function lz(t,e,n){function r(i){const a=t.sqr(i),s=t.mul(a,i);return t.add(t.add(s,t.mul(i,e)),n)}return r}function T4(t,e,n){const{BYTES:r}=t;function i(a){let s;if(typeof a=="bigint")s=a;else{let o=Qt("private key",a);if(e){if(!e.includes(o.length*2))throw new Error("invalid private key");const u=new Uint8Array(r);u.set(o,u.length-o.length),o=u}try{s=t.fromBytes(o)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof a}`)}}if(n&&(s=t.create(s)),!t.isValidNot0(s))throw new Error("invalid private key: out of range [1..N-1]");return s}return i}function dz(t,e={}){const{Fp:n,Fn:r}=k4("weierstrass",t,e),{h:i,n:a}=t;Fl(e,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:s}=e;if(s&&(!n.is0(t.a)||typeof s.beta!="bigint"||typeof s.splitScalar!="function"))throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');function o(){if(!n.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}function u(F,S,R){const{x:E,y:L}=S.toAffine(),c=n.toBytes(E);if(wo("isCompressed",R),R){o();const l=!n.isOdd(L);return xa(N4(l),c)}else return xa(Uint8Array.of(4),c,n.toBytes(L))}function h(F){fr(F);const S=n.BYTES,R=S+1,E=2*S+1,L=F.length,c=F[0],l=F.subarray(1);if(L===R&&(c===2||c===3)){const f=n.fromBytes(l);if(!n.isValid(f))throw new Error("bad point: is not on curve, wrong x");const b=w(f);let g;try{g=n.sqrt(b)}catch(x){const d=x instanceof Error?": "+x.message:"";throw new Error("bad point: is not on curve, sqrt error"+d)}o();const v=n.isOdd(g);return(c&1)===1!==v&&(g=n.neg(g)),{x:f,y:g}}else if(L===E&&c===4){const f=n.fromBytes(l.subarray(S*0,S*1)),b=n.fromBytes(l.subarray(S*1,S*2));if(!P(f,b))throw new Error("bad point: is not on curve");return{x:f,y:b}}else throw new Error(`bad point: got length ${L}, expected compressed=${R} or uncompressed=${E}`)}const p=e.toBytes||u,y=e.fromBytes||h,w=lz(n,t.a,t.b);function P(F,S){const R=n.sqr(S),E=w(F);return n.eql(R,E)}if(!P(t.Gx,t.Gy))throw new Error("bad curve params: generator point");const N=n.mul(n.pow(t.a,ld),uz),O=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(N,O)))throw new Error("bad curve params: a or b");function z(F,S,R=!1){if(!n.isValid(S)||R&&n.is0(S))throw new Error(`bad point coordinate ${F}`);return S}function j(F){if(!(F instanceof H))throw new Error("ProjectivePoint expected")}const I=s0((F,S)=>{const{px:R,py:E,pz:L}=F;if(n.eql(L,n.ONE))return{x:R,y:E};const c=F.is0();S==null&&(S=c?n.ONE:n.inv(L));const l=n.mul(R,S),f=n.mul(E,S),b=n.mul(L,S);if(c)return{x:n.ZERO,y:n.ZERO};if(!n.eql(b,n.ONE))throw new Error("invZ was invalid");return{x:l,y:f}}),A=s0(F=>{if(F.is0()){if(e.allowInfinityPoint&&!n.is0(F.py))return;throw new Error("bad point: ZERO")}const{x:S,y:R}=F.toAffine();if(!n.isValid(S)||!n.isValid(R))throw new Error("bad point: x or y not field elements");if(!P(S,R))throw new Error("bad point: equation left != right");if(!F.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function U(F,S,R,E,L){return R=new H(n.mul(R.px,F),R.py,R.pz),S=il(E,S),R=il(L,R),S.add(R)}class H{constructor(S,R,E){this.px=z("x",S),this.py=z("y",R,!0),this.pz=z("z",E),Object.freeze(this)}static fromAffine(S){const{x:R,y:E}=S||{};if(!S||!n.isValid(R)||!n.isValid(E))throw new Error("invalid affine point");if(S instanceof H)throw new Error("projective point not allowed");return n.is0(R)&&n.is0(E)?H.ZERO:new H(R,E,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(S){return x4(H,"pz",S)}static fromBytes(S){return fr(S),H.fromHex(S)}static fromHex(S){const R=H.fromAffine(y(Qt("pointHex",S)));return R.assertValidity(),R}static fromPrivateKey(S){const R=T4(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return H.BASE.multiply(R(S))}static msm(S,R){return M4(H,r,S,R)}precompute(S=8,R=!0){return C.setWindowSize(this,S),R||this.multiply(ld),this}_setWindowSize(S){this.precompute(S)}assertValidity(){A(this)}hasEvenY(){const{y:S}=this.toAffine();if(!n.isOdd)throw new Error("Field doesn't support isOdd");return!n.isOdd(S)}equals(S){j(S);const{px:R,py:E,pz:L}=this,{px:c,py:l,pz:f}=S,b=n.eql(n.mul(R,f),n.mul(c,L)),g=n.eql(n.mul(E,f),n.mul(l,L));return b&&g}negate(){return new H(this.px,n.neg(this.py),this.pz)}double(){const{a:S,b:R}=t,E=n.mul(R,ld),{px:L,py:c,pz:l}=this;let f=n.ZERO,b=n.ZERO,g=n.ZERO,v=n.mul(L,L),M=n.mul(c,c),x=n.mul(l,l),d=n.mul(L,c);return d=n.add(d,d),g=n.mul(L,l),g=n.add(g,g),f=n.mul(S,g),b=n.mul(E,x),b=n.add(f,b),f=n.sub(M,b),b=n.add(M,b),b=n.mul(f,b),f=n.mul(d,f),g=n.mul(E,g),x=n.mul(S,x),d=n.sub(v,x),d=n.mul(S,d),d=n.add(d,g),g=n.add(v,v),v=n.add(g,v),v=n.add(v,x),v=n.mul(v,d),b=n.add(b,v),x=n.mul(c,l),x=n.add(x,x),v=n.mul(x,d),f=n.sub(f,v),g=n.mul(x,M),g=n.add(g,g),g=n.add(g,g),new H(f,b,g)}add(S){j(S);const{px:R,py:E,pz:L}=this,{px:c,py:l,pz:f}=S;let b=n.ZERO,g=n.ZERO,v=n.ZERO;const M=t.a,x=n.mul(t.b,ld);let d=n.mul(R,c),m=n.mul(E,l),V=n.mul(L,f),B=n.add(R,E),k=n.add(c,l);B=n.mul(B,k),k=n.add(d,m),B=n.sub(B,k),k=n.add(R,L);let Z=n.add(c,f);return k=n.mul(k,Z),Z=n.add(d,V),k=n.sub(k,Z),Z=n.add(E,L),b=n.add(l,f),Z=n.mul(Z,b),b=n.add(m,V),Z=n.sub(Z,b),v=n.mul(M,k),b=n.mul(x,V),v=n.add(b,v),b=n.sub(m,v),v=n.add(m,v),g=n.mul(b,v),m=n.add(d,d),m=n.add(m,d),V=n.mul(M,V),k=n.mul(x,k),m=n.add(m,V),V=n.sub(d,V),V=n.mul(M,V),k=n.add(k,V),d=n.mul(m,k),g=n.add(g,d),d=n.mul(Z,k),b=n.mul(B,b),b=n.sub(b,d),d=n.mul(B,m),v=n.mul(Z,v),v=n.add(v,d),new H(b,g,v)}subtract(S){return this.add(S.negate())}is0(){return this.equals(H.ZERO)}multiply(S){const{endo:R}=e;if(!r.isValidNot0(S))throw new Error("invalid scalar: out of range");let E,L;const c=l=>C.wNAFCached(this,l,H.normalizeZ);if(R){const{k1neg:l,k1:f,k2neg:b,k2:g}=R.splitScalar(S),{p:v,f:M}=c(f),{p:x,f:d}=c(g);L=M.add(d),E=U(R.beta,v,x,l,b)}else{const{p:l,f}=c(S);E=l,L=f}return H.normalizeZ([E,L])[0]}multiplyUnsafe(S){const{endo:R}=e,E=this;if(!r.isValid(S))throw new Error("invalid scalar: out of range");if(S===al||E.is0())return H.ZERO;if(S===sl)return E;if(C.hasPrecomputes(this))return this.multiply(S);if(R){const{k1neg:L,k1:c,k2neg:l,k2:f}=R.splitScalar(S),{p1:b,p2:g}=sz(H,E,c,f);return U(R.beta,b,g,L,l)}else return C.wNAFCachedUnsafe(E,S)}multiplyAndAddUnsafe(S,R,E){const L=this.multiplyUnsafe(R).add(S.multiplyUnsafe(E));return L.is0()?void 0:L}toAffine(S){return I(this,S)}isTorsionFree(){const{isTorsionFree:S}=e;return i===sl?!0:S?S(H,this):C.wNAFCachedUnsafe(this,a).is0()}clearCofactor(){const{clearCofactor:S}=e;return i===sl?this:S?S(H,this):this.multiplyUnsafe(i)}toBytes(S=!0){return wo("isCompressed",S),this.assertValidity(),p(H,this,S)}toRawBytes(S=!0){return this.toBytes(S)}toHex(S=!0){return Oc(this.toBytes(S))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}H.BASE=new H(t.Gx,t.Gy,n.ONE),H.ZERO=new H(n.ZERO,n.ONE,n.ZERO),H.Fp=n,H.Fn=r;const X=r.BITS,C=P4(H,e.endo?Math.ceil(X/2):X);return H}function N4(t){return Uint8Array.of(t?2:3)}function fz(t,e,n={}){Fl(e,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const r=e.randomBytes||e4,i=e.hmac||((E,...L)=>Z0(e.hash,E,xa(...L))),{Fp:a,Fn:s}=t,{ORDER:o,BITS:u}=s;function h(E){const L=o>>sl;return E>L}function p(E){return h(E)?s.neg(E):E}function y(E,L){if(!s.isValidNot0(L))throw new Error(`invalid signature ${E}: out of range 1..CURVE.n`)}class w{constructor(L,c,l){y("r",L),y("s",c),this.r=L,this.s=c,l!=null&&(this.recovery=l),Object.freeze(this)}static fromCompact(L){const c=s.BYTES,l=Qt("compactSignature",L,c*2);return new w(s.fromBytes(l.subarray(0,c)),s.fromBytes(l.subarray(c,c*2)))}static fromDER(L){const{r:c,s:l}=ma.toSig(Qt("DER",L));return new w(c,l)}assertValidity(){}addRecoveryBit(L){return new w(this.r,this.s,L)}recoverPublicKey(L){const c=a.ORDER,{r:l,s:f,recovery:b}=this;if(b==null||![0,1,2,3].includes(b))throw new Error("recovery id invalid");if(o*cz<c&&b>1)throw new Error("recovery id is ambiguous for h>1 curve");const v=b===2||b===3?l+o:l;if(!a.isValid(v))throw new Error("recovery id 2 or 3 invalid");const M=a.toBytes(v),x=t.fromHex(xa(N4((b&1)===0),M)),d=s.inv(v),m=A(Qt("msgHash",L)),V=s.create(-m*d),B=s.create(f*d),k=t.BASE.multiplyUnsafe(V).add(x.multiplyUnsafe(B));if(k.is0())throw new Error("point at infinify");return k.assertValidity(),k}hasHighS(){return h(this.s)}normalizeS(){return this.hasHighS()?new w(this.r,s.neg(this.s),this.recovery):this}toBytes(L){if(L==="compact")return xa(s.toBytes(this.r),s.toBytes(this.s));if(L==="der")return $m(ma.hexFromSig(this));throw new Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return Oc(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return Oc(this.toBytes("compact"))}}const P=T4(s,n.allowedPrivateKeyLengths,n.wrapPrivateKey),N={isValidPrivateKey(E){try{return P(E),!0}catch{return!1}},normPrivateKeyToScalar:P,randomPrivateKey:()=>{const E=o;return rz(r(g4(E)),E)},precompute(E=8,L=t.BASE){return L.precompute(E,!1)}};function O(E,L=!0){return t.fromPrivateKey(E).toBytes(L)}function z(E){if(typeof E=="bigint")return!1;if(E instanceof t)return!0;const c=Qt("key",E).length,l=a.BYTES,f=l+1,b=2*l+1;if(!(n.allowedPrivateKeyLengths||s.BYTES===f))return c===f||c===b}function j(E,L,c=!0){if(z(E)===!0)throw new Error("first arg must be private key");if(z(L)===!1)throw new Error("second arg must be public key");return t.fromHex(L).multiply(P(E)).toBytes(c)}const I=e.bits2int||function(E){if(E.length>8192)throw new Error("input is too large");const L=q0(E),c=E.length*8-u;return c>0?L>>BigInt(c):L},A=e.bits2int_modN||function(E){return s.create(I(E))},U=G0(u);function H(E){return dc("num < 2^"+u,E,al,U),s.toBytes(E)}function X(E,L,c=C){if(["recovered","canonical"].some(B=>B in c))throw new Error("sign() legacy options not supported");const{hash:l}=e;let{lowS:f,prehash:b,extraEntropy:g}=c;f==null&&(f=!0),E=Qt("msgHash",E),C3(c),b&&(E=Qt("prehashed msgHash",l(E)));const v=A(E),M=P(L),x=[H(M),H(v)];if(g!=null&&g!==!1){const B=g===!0?r(a.BYTES):g;x.push(Qt("extraEntropy",B))}const d=xa(...x),m=v;function V(B){const k=I(B);if(!s.isValidNot0(k))return;const Z=s.inv(k),q=t.BASE.multiply(k).toAffine(),W=s.create(q.x);if(W===al)return;const J=s.create(Z*s.create(m+W*M));if(J===al)return;let _=(q.x===W?0:2)|Number(q.y&sl),K=J;return f&&h(J)&&(K=p(J),_^=1),new w(W,K,_)}return{seed:d,k2sig:V}}const C={lowS:e.lowS,prehash:!1},F={lowS:e.lowS,prehash:!1};function S(E,L,c=C){const{seed:l,k2sig:f}=X(E,L,c);return GE(e.hash.outputLen,s.BYTES,i)(l,f)}t.BASE.precompute(8);function R(E,L,c,l=F){const f=E;L=Qt("msgHash",L),c=Qt("publicKey",c),C3(l);const{lowS:b,prehash:g,format:v}=l;if("strict"in l)throw new Error("options.strict was renamed to lowS");if(v!==void 0&&!["compact","der","js"].includes(v))throw new Error('format must be "compact", "der" or "js"');const M=typeof f=="string"||Qm(f),x=!M&&!v&&typeof f=="object"&&f!==null&&typeof f.r=="bigint"&&typeof f.s=="bigint";if(!M&&!x)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let d,m;try{if(x)if(v===void 0||v==="js")d=new w(f.r,f.s);else throw new Error("invalid format");if(M){try{v!=="compact"&&(d=w.fromDER(f))}catch(K){if(!(K instanceof ma.Err))throw K}!d&&v!=="der"&&(d=w.fromCompact(f))}m=t.fromHex(c)}catch{return!1}if(!d||b&&d.hasHighS())return!1;g&&(L=e.hash(L));const{r:V,s:B}=d,k=A(L),Z=s.inv(B),q=s.create(k*Z),W=s.create(V*Z),J=t.BASE.multiplyUnsafe(q).add(m.multiplyUnsafe(W));return J.is0()?!1:s.create(J.x)===V}return Object.freeze({getPublicKey:O,getSharedSecret:j,sign:S,verify:R,utils:N,Point:t,Signature:w})}function hz(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=Cc(e.n,t.nBitLength),i={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:i}}function pz(t){const{CURVE:e,curveOpts:n}=hz(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function mz(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function bz(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=pz(t),i=dz(e,n),a=fz(i,r,n);return mz(t,a)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function yz(t,e){const n=r=>bz({...t,hash:r});return{...n(e),create:n}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const o0={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")};BigInt(0);const gz=BigInt(1),g1=BigInt(2),U3=(t,e)=>(t+e/g1)/e;function xz(t){const e=o0.p,n=BigInt(3),r=BigInt(6),i=BigInt(11),a=BigInt(22),s=BigInt(23),o=BigInt(44),u=BigInt(88),h=t*t*t%e,p=h*h*t%e,y=Yt(p,n,e)*p%e,w=Yt(y,n,e)*p%e,P=Yt(w,g1,e)*h%e,N=Yt(P,i,e)*P%e,O=Yt(N,a,e)*N%e,z=Yt(O,o,e)*O%e,j=Yt(z,u,e)*z%e,I=Yt(j,o,e)*O%e,A=Yt(I,n,e)*p%e,U=Yt(A,s,e)*N%e,H=Yt(U,r,e)*h%e,X=Yt(H,g1,e);if(!x1.eql(x1.sqr(X),t))throw new Error("Cannot find square root");return X}const x1=Cc(o0.p,void 0,void 0,{sqrt:xz}),Zl=yz({...o0,Fp:x1,lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=o0.n,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-gz*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),a=n,s=BigInt("0x100000000000000000000000000000000"),o=U3(a*t,e),u=U3(-r*t,e);let h=$t(t-o*n-u*i,e),p=$t(-o*r-u*a,e);const y=h>s,w=p>s;if(y&&(h=e-h),w&&(p=e-p),h>s||p>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:y,k1:h,k2neg:w,k2:p}}}},F0);function Ec(t,e){if(t.length!==32)throw new Error("Expected valid 32-byte private key as a seed");if(!An||!e&&Rn()){const n=yS(t),r=n.slice(32);if(Ox(r))throw new Error("Invalid publicKey generated from WASM interface");return{publicKey:r,secretKey:n.slice(0,32)}}return{publicKey:Zl.getPublicKey(t,!0),secretKey:t}}function O4(t,e){return(n,{chainCode:r,isHard:i})=>{if(!i)throw new Error("A soft key was found in the path and is not supported");return t(e(n.secretKey.subarray(0,32),r))}}const D3=O4(Ec,jE),vz=Gm(ii("Ed25519HDKD"));function wz(t,e){if(!Ms(e)||e.length!==32)throw new Error("Invalid chainCode passed to derive");return ko(Ln(vz,t,e))}function a2(t=32){return zx(new Uint8Array(t))}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Hi=BigInt(0),Yn=BigInt(1),$h=BigInt(2),Pz=BigInt(8),Mz={zip215:!0};function kz(t,e,n,r){const i=t.sqr(n),a=t.sqr(r),s=t.add(t.mul(e.a,i),a),o=t.add(t.ONE,t.mul(e.d,t.mul(i,a)));return t.eql(s,o)}function Tz(t,e={}){const{Fp:n,Fn:r}=k4("edwards",t,e),{h:i,n:a}=t;Fl(e,{},{uvRatio:"function"});const s=$h<<BigInt(r.BYTES*8)-Yn,o=O=>n.create(O),u=e.uvRatio||((O,z)=>{try{return{isValid:!0,value:n.sqrt(n.div(O,z))}}catch{return{isValid:!1,value:Hi}}});if(!kz(n,t,t.Gx,t.Gy))throw new Error("bad curve params: generator point");function h(O,z,j=!1){const I=j?Yn:Hi;return dc("coordinate "+O,z,I,s),z}function p(O){if(!(O instanceof P))throw new Error("ExtendedPoint expected")}const y=s0((O,z)=>{const{ex:j,ey:I,ez:A}=O,U=O.is0();z==null&&(z=U?Pz:n.inv(A));const H=o(j*z),X=o(I*z),C=o(A*z);if(U)return{x:Hi,y:Yn};if(C!==Yn)throw new Error("invZ was invalid");return{x:H,y:X}}),w=s0(O=>{const{a:z,d:j}=t;if(O.is0())throw new Error("bad point: ZERO");const{ex:I,ey:A,ez:U,et:H}=O,X=o(I*I),C=o(A*A),F=o(U*U),S=o(F*F),R=o(X*z),E=o(F*o(R+C)),L=o(S+o(j*o(X*C)));if(E!==L)throw new Error("bad point: equation left != right (1)");const c=o(I*A),l=o(U*H);if(c!==l)throw new Error("bad point: equation left != right (2)");return!0});class P{constructor(z,j,I,A){this.ex=h("x",z),this.ey=h("y",j),this.ez=h("z",I,!0),this.et=h("t",A),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(z){if(z instanceof P)throw new Error("extended point not allowed");const{x:j,y:I}=z||{};return h("x",j),h("y",I),new P(j,I,Yn,o(j*I))}static normalizeZ(z){return x4(P,"ez",z)}static msm(z,j){return M4(P,r,z,j)}_setWindowSize(z){this.precompute(z)}precompute(z=8,j=!0){return N.setWindowSize(this,z),j||this.multiply($h),this}assertValidity(){w(this)}equals(z){p(z);const{ex:j,ey:I,ez:A}=this,{ex:U,ey:H,ez:X}=z,C=o(j*X),F=o(U*A),S=o(I*X),R=o(H*A);return C===F&&S===R}is0(){return this.equals(P.ZERO)}negate(){return new P(o(-this.ex),this.ey,this.ez,o(-this.et))}double(){const{a:z}=t,{ex:j,ey:I,ez:A}=this,U=o(j*j),H=o(I*I),X=o($h*o(A*A)),C=o(z*U),F=j+I,S=o(o(F*F)-U-H),R=C+H,E=R-X,L=C-H,c=o(S*E),l=o(R*L),f=o(S*L),b=o(E*R);return new P(c,l,b,f)}add(z){p(z);const{a:j,d:I}=t,{ex:A,ey:U,ez:H,et:X}=this,{ex:C,ey:F,ez:S,et:R}=z,E=o(A*C),L=o(U*F),c=o(X*I*R),l=o(H*S),f=o((A+U)*(C+F)-E-L),b=l-c,g=l+c,v=o(L-j*E),M=o(f*b),x=o(g*v),d=o(f*v),m=o(b*g);return new P(M,x,m,d)}subtract(z){return this.add(z.negate())}multiply(z){const j=z;dc("scalar",j,Yn,a);const{p:I,f:A}=N.wNAFCached(this,j,P.normalizeZ);return P.normalizeZ([I,A])[0]}multiplyUnsafe(z,j=P.ZERO){const I=z;return dc("scalar",I,Hi,a),I===Hi?P.ZERO:this.is0()||I===Yn?this:N.wNAFCachedUnsafe(this,I,P.normalizeZ,j)}isSmallOrder(){return this.multiplyUnsafe(i).is0()}isTorsionFree(){return N.wNAFCachedUnsafe(this,a).is0()}toAffine(z){return y(this,z)}clearCofactor(){return i===Yn?this:this.multiplyUnsafe(i)}static fromBytes(z,j=!1){return fr(z),this.fromHex(z,j)}static fromHex(z,j=!1){const{d:I,a:A}=t,U=n.BYTES;z=Qt("pointHex",z,U),wo("zip215",j);const H=z.slice(),X=z[U-1];H[U-1]=X&-129;const C=Nl(H),F=j?s:n.ORDER;dc("pointHex.y",C,Hi,F);const S=o(C*C),R=o(S-Yn),E=o(I*S-A);let{isValid:L,value:c}=u(R,E);if(!L)throw new Error("Point.fromHex: invalid y coordinate");const l=(c&Yn)===Yn,f=(X&128)!==0;if(!j&&c===Hi&&f)throw new Error("Point.fromHex: x=0 and x_0=1");return f!==l&&(c=o(-c)),P.fromAffine({x:c,y:C})}static fromPrivateScalar(z){return P.BASE.multiply(z)}toBytes(){const{x:z,y:j}=this.toAffine(),I=W0(j,n.BYTES);return I[I.length-1]|=z&Yn?128:0,I}toRawBytes(){return this.toBytes()}toHex(){return Oc(this.toBytes())}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}P.BASE=new P(t.Gx,t.Gy,Yn,o(t.Gx*t.Gy)),P.ZERO=new P(Hi,Yn,Yn,Hi),P.Fp=n,P.Fn=r;const N=P4(P,r.BYTES*8);return P}function Nz(t,e){Fl(e,{hash:"function"},{adjustScalarBytes:"function",randomBytes:"function",domain:"function",prehash:"function",mapToCurve:"function"});const{prehash:n,hash:r}=e,{BASE:i,Fp:a,Fn:s}=t,o=s.ORDER,u=e.randomBytes||e4,h=e.adjustScalarBytes||(H=>H),p=e.domain||((H,X,C)=>{if(wo("phflag",C),X.length||C)throw new Error("Contexts/pre-hash are not supported");return H});function y(H){return s.create(H)}function w(H){return y(Nl(H))}function P(H){const X=a.BYTES;H=Qt("private key",H,X);const C=Qt("hashed private key",r(H),2*X),F=h(C.slice(0,X)),S=C.slice(X,2*X),R=w(F);return{head:F,prefix:S,scalar:R}}function N(H){const{head:X,prefix:C,scalar:F}=P(H),S=i.multiply(F),R=S.toBytes();return{head:X,prefix:C,scalar:F,point:S,pointBytes:R}}function O(H){return N(H).pointBytes}function z(H=Uint8Array.of(),...X){const C=xa(...X);return w(r(p(C,Qt("context",H),!!n)))}function j(H,X,C={}){H=Qt("message",H),n&&(H=n(H));const{prefix:F,scalar:S,pointBytes:R}=N(X),E=z(C.context,F,H),L=i.multiply(E).toBytes(),c=z(C.context,L,R,H),l=y(E+c*S);dc("signature.s",l,Hi,o);const f=a.BYTES,b=xa(L,W0(l,f));return Qt("result",b,f*2)}const I=Mz;function A(H,X,C,F=I){const{context:S,zip215:R}=F,E=a.BYTES;H=Qt("signature",H,2*E),X=Qt("message",X),C=Qt("publicKey",C,E),R!==void 0&&wo("zip215",R),n&&(X=n(X));const L=Nl(H.slice(E,2*E));let c,l,f;try{c=t.fromHex(C,R),l=t.fromHex(H.slice(0,E),R),f=i.multiplyUnsafe(L)}catch{return!1}if(!R&&c.isSmallOrder())return!1;const b=z(S,l.toBytes(),c.toBytes(),X);return l.add(c.multiplyUnsafe(b)).subtract(f).clearCofactor().is0()}return i.precompute(8),{getPublicKey:O,sign:j,verify:A,utils:{getExtendedPublicKey:N,randomPrivateKey:()=>u(a.BYTES),precompute(H=8,X=t.BASE){return X.precompute(H,!1)}},Point:t}}function Oz(t){const e={a:t.a,d:t.d,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=Cc(e.n,t.nBitLength,!0),i={Fp:n,Fn:r,uvRatio:t.uvRatio},a={hash:t.hash,randomBytes:t.randomBytes,adjustScalarBytes:t.adjustScalarBytes,domain:t.domain,prehash:t.prehash,mapToCurve:t.mapToCurve};return{CURVE:e,curveOpts:i,eddsaOpts:a}}function Vz(t,e){return Object.assign({},e,{ExtendedPoint:e.Point,CURVE:t})}function Sz(t){const{CURVE:e,curveOpts:n,eddsaOpts:r}=Oz(t),i=Tz(e,n),a=Nz(i,r);return Vz(t,a)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */BigInt(0);const Ez=BigInt(1),F3=BigInt(2);BigInt(3);const zz=BigInt(5),Iz=BigInt(8),Y0={p:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:Iz,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")};function Lz(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),i=BigInt(80),a=Y0.p,o=t*t%a*t%a,u=Yt(o,F3,a)*o%a,h=Yt(u,Ez,a)*t%a,p=Yt(h,zz,a)*h%a,y=Yt(p,e,a)*p%a,w=Yt(y,n,a)*y%a,P=Yt(w,r,a)*w%a,N=Yt(P,i,a)*P%a,O=Yt(N,i,a)*P%a,z=Yt(O,e,a)*p%a;return{pow_p_5_8:Yt(z,F3,a)*t%a,b2:o}}function Hz(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}const Z3=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");function Az(t,e){const n=Y0.p,r=$t(e*e*e,n),i=$t(r*r*e,n),a=Lz(t*i).pow_p_5_8;let s=$t(t*r*a,n);const o=$t(e*s*s,n),u=s,h=$t(s*Z3,n),p=o===t,y=o===$t(-t,n),w=o===$t(-t*Z3,n);return p&&(s=u),(y||w)&&(s=h),_E(s,n)&&(s=$t(-s,n)),{isValid:p||y,value:s}}const Rz=Cc(Y0.p,void 0,!0),Bz={...Y0,Fp:Rz,hash:u4,adjustScalarBytes:Hz,uvRatio:Az},s2=Sz(Bz);function o2(t,e){if(!An||!e&&Rn()){const r=pS(t);return{publicKey:r.slice(32),secretKey:r.slice(0,64)}}const n=s2.getPublicKey(t);return{publicKey:n,secretKey:Cl([t,n])}}function Xz(t,{publicKey:e,secretKey:n},r){if(n){if(!e)throw new Error("Expected a valid publicKey")}else throw new Error("Expected a valid secretKey");const i=ut(t),a=n.subarray(0,32);return!An||!r&&Rn()?mS(e,a,i):s2.sign(i,a)}function jz(t,e,n,r){const i=ut(t),a=ut(n),s=ut(e);if(a.length!==32)throw new Error(`Invalid publicKey, received ${a.length}, expected 32`);if(s.length!==64)throw new Error(`Invalid signature, received ${s.length} bytes, expected 64`);try{return!An||!r&&Rn()?bS(s,i,a):s2.verify(s,i,a)}catch{return!1}}const Cz=O4(o2,wz),v1=64,Uz=32,ep=v1+Uz;function V4(t){const e=ut(t);if(e.length!==ep)throw new Error(`Expected keypair with ${ep} bytes, found ${e.length}`);return{publicKey:e.slice(v1,ep),secretKey:e.slice(0,v1)}}function Dz({publicKey:t,secretKey:e}){return Ln(e,t).slice()}function S4(t){return(e,n)=>{if(!Ms(n)||n.length!==32)throw new Error("Invalid chainCode passed to derive");return V4(t(Dz(e),n))}}const Fz=S4(PS),Zz=S4(MS);function qz(t,{chainCode:e,isSoft:n}){return n?Zz(t,e):Fz(t,e)}const Wz={ecdsa:D3,ed25519:Cz,ethereum:D3,sr25519:qz};function E4(t,e,n){const r=Wz[n];let i=t;for(const a of e)i=r(i,a);return i}function z4(t){const e=ut(t);if(e.length!==32)throw new Error(`Expected a seed matching 32 bytes, found ${e.length}`);return V4(kS(e))}function Gz(t,{publicKey:e,secretKey:n}){if((e==null?void 0:e.length)!==32)throw new Error("Expected a valid publicKey, 32-bytes");if((n==null?void 0:n.length)!==64)throw new Error("Expected a valid secretKey, 64-bytes");return TS(e,n,ut(t))}function Yz(t,e,n){const r=ut(n),i=ut(e);if(r.length!==32)throw new Error(`Invalid publicKey, received ${r.length} bytes, expected 32`);if(i.length!==64)throw new Error(`Invalid signature, received ${i.length} bytes, expected 64`);return NS(i,ut(t),r)}const q3=new Uint8Array;function Kz(t,{secretKey:e},n=q3,r=q3){if((e==null?void 0:e.length)!==64)throw new Error("Invalid secretKey, expected 64-bytes");return OS(e,ut(n),ut(t),ut(r))}const W3=new Uint8Array;function Jz(t,e,n,r=W3,i=W3){const a=ut(n),s=ut(e);if(a.length!==32)throw new Error("Invalid publicKey, expected 32-bytes");if(s.length!==96)throw new Error("Invalid vrfSign output, expected 96 bytes");return VS(a,ut(r),ut(t),ut(i),s)}function Qz(t,e=Xd.prefix){const n=gc(t);if(e<0||e>16383||[46,47].includes(e))throw new Error("Out of range ss58Format specified");if(!Xd.allowedDecodedLengths.includes(n.length))throw new Error(`Expected a valid key to convert, with length ${Xd.allowedDecodedLengths.join(", ")}`);const r=Ln(e<64?[e]:[(e&252)>>2|64,e>>8|(e&3)<<6],n);return KS(Ln(r,a4(r).subarray(0,[32,33].includes(n.length)?2:1)))}const _z=BigInt(0),Kc=BigInt(1),$z=BigInt(2),eI=BigInt(7),tI=BigInt(256),nI=BigInt(113),I4=[],L4=[],H4=[];for(let t=0,e=Kc,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],I4.push(2*(5*r+n)),L4.push((t+1)*(t+2)/2%64);let i=_z;for(let a=0;a<7;a++)e=(e<<Kc^(e>>eI)*nI)%tI,e&$z&&(i^=Kc<<(Kc<<BigInt(a))-Kc);H4.push(i)}const A4=r4(H4,!0),rI=A4[0],iI=A4[1],G3=(t,e,n)=>n>32?oE(t,e,n):aE(t,e,n),Y3=(t,e,n)=>n>32?cE(t,e,n):sE(t,e,n);function aI(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let s=0;s<10;s++)n[s]=t[s]^t[s+10]^t[s+20]^t[s+30]^t[s+40];for(let s=0;s<10;s+=2){const o=(s+8)%10,u=(s+2)%10,h=n[u],p=n[u+1],y=G3(h,p,1)^n[o],w=Y3(h,p,1)^n[o+1];for(let P=0;P<50;P+=10)t[s+P]^=y,t[s+P+1]^=w}let i=t[2],a=t[3];for(let s=0;s<24;s++){const o=L4[s],u=G3(i,a,o),h=Y3(i,a,o),p=I4[s];i=t[p],a=t[p+1],t[p]=u,t[p+1]=h}for(let s=0;s<50;s+=10){for(let o=0;o<10;o++)n[o]=t[s+o];for(let o=0;o<10;o++)t[s+o]^=~n[(o+2)%10]&n[(o+4)%10]}t[0]^=rI[r],t[1]^=iI[r]}jr(n)}class c2 extends D0{constructor(e,n,r,i=!1,a=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=i,this.rounds=a,En(r),!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=bs(this.state)}clone(){return this._cloneInto()}keccak(){Fi(this.state32),aI(this.state32,this.rounds),Fi(this.state32),this.posOut=0,this.pos=0}update(e){ks(this),e=ka(e),fr(e);const{blockLen:n,state:r}=this,i=e.length;for(let a=0;a<i;){const s=Math.min(n-this.pos,i-a);for(let o=0;o<s;o++)r[this.pos++]^=e[a++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:i}=this;e[r]^=n,n&128&&r===i-1&&this.keccak(),e[i-1]^=128,this.keccak()}writeInto(e){ks(this,!1),fr(e),this.finish();const n=this.state,{blockLen:r}=this;for(let i=0,a=e.length;i<a;){this.posOut>=r&&this.keccak();const s=Math.min(r-this.posOut,a-i);e.set(n.subarray(this.posOut,this.posOut+s),i),this.posOut+=s,i+=s}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return En(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(_m(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,jr(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:i,rounds:a,enableXOF:s}=this;return e||(e=new c2(n,r,i,s,a)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=a,e.suffix=r,e.outputLen=i,e.enableXOF=s,e.destroyed=this.destroyed,e}}const R4=(t,e,n)=>e2(()=>new c2(e,t,n)),sI=R4(1,136,256/8),oI=R4(1,72,512/8),K0=i4({256:IS,512:LS},{256:sI,512:oI});function w1(t,e,n){return t==="keccak"?K0(e,void 0,n):ko(e,void 0,void 0,n)}const u2={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:ZS,type:"base64",withPadding:!0},cI=Gx(u2),uI=qx(u2,cI),lI=Wx(u2);function B4(t,e){if(![33,65].includes(t.length))throw new Error(`Invalid publicKey provided, received ${t.length} bytes input`);return t.length===33?t:!An||Rn()?gS(t):Zl.ProjectivePoint.fromHex(t).toRawBytes(!0)}function l2(t,e){if(![33,65].includes(t.length))throw new Error(`Invalid publicKey provided, received ${t.length} bytes input`);if(t.length===65)return t.subarray(1);if(!An||Rn())return xS(t).subarray(1);const{px:n,py:r}=Zl.ProjectivePoint.fromHex(t);return Ln(Ar(n,Vc),Ar(r,Vc))}function dI(t,e,n,r="blake2",i){const a=ut(e).subarray(0,64),s=ut(t),o=!An||Rn()?vS(s,a,n):Zl.Signature.fromCompact(a).addRecoveryBit(n).recoverPublicKey(s).toRawBytes();if(!o)throw new Error("Unable to recover publicKey from signature");return r==="keccak"?l2(o):B4(o)}function K3(t,{secretKey:e},n="blake2",r){if((e==null?void 0:e.length)!==32)throw new Error("Expected valid secp256k1 secretKey, 32-bytes");const i=w1(n,t,r);if(!An||Rn())return wS(i,e);const a=Zl.sign(i,e,{lowS:!0});return Ln(Ar(a.r,Vc),Ar(a.s,Vc),new Uint8Array([a.recovery||0]))}const X4="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),tp=At(`0x${X4}`),np=new Nt(X4,"hex");function fI(t,e){let n=p1(e,H3);if(n>=tp)throw new Error("Tweak parameter is out of range");if(n+=p1(t,H3),n>=tp&&(n-=tp),n===_f)throw new Error("Invalid resulting private key");return zV(n,Vc)}function hI(t,e){const n=new Nt(e);if(n.cmp(np)>=0)throw new Error("Tweak parameter is out of range");if(n.iadd(new Nt(t)),n.cmp(np)>=0&&n.isub(np),n.isZero())throw new Error("Invalid resulting private key");return Ar(n,Vc)}function pI(t,e,n){if(!Ms(t)||t.length!==32)throw new Error("Expected seckey to be an Uint8Array with length 32");if(!Ms(e)||e.length!==32)throw new Error("Expected tweak to be an Uint8Array with length 32");return!An||n?hI(t,e):fI(t,e)}function mI(t,e,n,r="blake2",i){const a=ut(e);if(a.length!==65)throw new Error(`Expected signature with 65 bytes, ${a.length} found instead`);const s=dI(w1(r,t),a,a[64],r),o=w1(r,s,i),u=ut(n);return Ji(s,u)||(r==="keccak"?Ji(o.slice(-20),u.slice(-20)):Ji(o,u))}function bI(t){return[33,65].includes(t.length)&&(t=K0(l2(t))),t.slice(-20)}function j4(t){if(!t)return"0x";const e=ut(t);if(![20,32,33,65].includes(e.length))throw new Error(`Invalid address or publicKey provided, received ${e.length} bytes input`);const n=Pl(bI(e),-1,!1),r=Pl(K0(n),-1,!1);let i="";for(let a=0;a<40;a++)i=`${i}${parseInt(r[a],16)>7?n[a].toUpperCase():n[a]}`;return`0x${i}`}const C4=F0,d2=u4,yI={256:C4,512:d2},gI={256:ES,512:zS};function U4(t,e,n=256,r){const i=ut(t);return!An||Rn()?gI[n](i,e):Z0(yI[n],i,e)}const f2=2147483648;function xI(t){if(!t.startsWith("m/"))return!1;const e=t.split("/").slice(1);for(const n of e){const r=/^\d+'?$/.test(n)?parseInt(n.replace(/'$/,""),10):Number.NaN;if(isNaN(r)||r>=f2||r<0)return!1}return!0}const vI=ii("Bitcoin seed");function D4(t,e){return{chainCode:e,publicKey:Ec(t).publicKey,secretKey:t}}function F4(t,e){const n=Ar(e,zE),r=e>=f2?Ln(new Uint8Array(1),t.secretKey,n):Ln(t.publicKey,n);try{const i=U4(t.chainCode,r,512);return D4(pI(t.secretKey,i.slice(0,32)),i.slice(32))}catch{return F4(t,e+1)}}function wI(t,e=""){const n=U4(vI,t,512);let r=D4(n.slice(0,32),n.slice(32));if(!e||e==="m"||e==="M"||e==="m'"||e==="M'")return r;if(!xI(e))throw new Error("Invalid derivation path");const i=e.split("/").slice(1);for(const a of i)r=F4(r,parseInt(a,10)+(a.length>1&&a.endsWith("'")?f2:0));return r}function PI(t,e,n,r){Yx(t);const i=$x({dkLen:32,asyncTick:10},r),{c:a,dkLen:s,asyncTick:o}=i;if(En(a),En(s),En(o),a<1)throw new Error("iterations (c) should be >= 1");const u=V3(e),h=V3(n),p=new Uint8Array(s),y=Z0.create(t,u),w=y._cloneInto().update(h);return{c:a,dkLen:s,asyncTick:o,DK:p,PRF:y,PRFSalt:w}}function MI(t,e,n,r,i){return t.destroy(),e.destroy(),r&&r.destroy(),jr(i),n}function h2(t,e,n,r){const{c:i,dkLen:a,DK:s,PRF:o,PRFSalt:u}=PI(t,e,n,r);let h;const p=new Uint8Array(4),y=Bd(p),w=new Uint8Array(o.outputLen);for(let P=1,N=0;N<a;P++,N+=o.outputLen){const O=s.subarray(N,N+o.outputLen);y.setInt32(0,P,!1),(h=u._cloneInto(h)).update(p).digestInto(w),O.set(w.subarray(0,O.length));for(let z=1;z<i;z++){o._cloneInto(h).update(w).digestInto(w);for(let j=0;j<O.length;j++)O[j]^=w[j]}}return MI(o,u,s,h,w)}function Z4(t,e=a2(),n=2048,r){const i=ut(t),a=ut(e);return{password:!An||Rn()?HS(i,a,n):h2(d2,i,a,{c:n,dkLen:64}),rounds:n,salt:e}}const kI=i4({256:RS,512:BS},{256:C4,512:d2}),TI=yE(256,kI),NI="abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|"),J3="Invalid mnemonic",OI="Invalid entropy",VI="Invalid mnemonic checksum";function P1(t){return(t||"").normalize("NFKD")}function SI(t){return parseInt(t,2)}function EI(t){return t.map(e=>e.toString(2).padStart(8,"0")).join("")}function zI(t){return EI(Array.from(TI(t))).slice(0,t.length*8/32)}function Q3(t,e){return Z4(ii(P1(t)),ii(`mnemonic${P1(e)}`)).password}function q4(t,e=NI){const n=P1(t).split(" ");if(n.length%3!==0)throw new Error(J3);const r=n.map(p=>{const y=e.indexOf(p);if(y===-1)throw new Error(J3);return y.toString(2).padStart(11,"0")}).join(""),i=Math.floor(r.length/33)*32,a=r.slice(0,i),s=r.slice(i),o=a.match(/(.{1,8})/g),u=o==null?void 0:o.map(SI);if(!u||u.length%4!==0||u.length<16||u.length>32)throw new Error(OI);const h=ut(u);if(zI(h)!==s)throw new Error(VI);return h}function II(t,e){try{q4(t,e)}catch{return!1}return!0}function LI(t,e,n){return!An||!e&&Rn()?lS(t):q4(t,e)}function W4(t,e,n){return!An||!e&&Rn()?hS(t):II(t,e)}function HI(t,e="",n,r=32){if(W4(t)){if(![32,64].includes(r))throw new Error(`Invalid seed length ${r}, expected 32 or 64`)}else throw new Error("Invalid bip39 mnemonic specified");return r===32?!An||Rn()?fS(t,e):Q3(t,e).subarray(0,32):Q3(t,e)}function AI(t,e="",n,r){if(W4(t,n)){if(!n&&Rn())return dS(t,e)}else throw new Error("Invalid bip39 mnemonic specified");const i=LI(t,n),a=ii(`mnemonic${e}`);return Z4(i,a).password.slice(0,32)}function dd(t,e){return t<<e|t>>>32-e}function Ro(t,e){let n=t[e+3]&255;return n=n<<8|t[e+2]&255,n=n<<8|t[e+1]&255,n<<8|t[e+0]&255}function rp(t,e,n){for(let r=0;r<4;r++)t[e+r]=n&255,n>>>=8}function RI(t,e,n,r,i){let a=0;for(let s=0;s<i;s++)a|=t[e+s]^n[r+s];return(1&a-1>>>8)-1}function M1(t,e,n,r,i){const a=new Uint32Array(16),s=new Uint32Array(16),o=new Uint32Array(16),u=new Uint32Array(4);let h,p,y;for(h=0;h<4;h++)s[5*h]=Ro(r,4*h),s[1+h]=Ro(n,4*h),s[6+h]=Ro(e,4*h),s[11+h]=Ro(n,16+4*h);for(h=0;h<16;h++)o[h]=s[h];for(h=0;h<20;h++){for(p=0;p<4;p++){for(y=0;y<4;y++)u[y]=s[(5*p+4*y)%16];for(u[1]^=dd(u[0]+u[3]|0,7),u[2]^=dd(u[1]+u[0]|0,9),u[3]^=dd(u[2]+u[1]|0,13),u[0]^=dd(u[3]+u[2]|0,18),y=0;y<4;y++)a[4*p+(p+y)%4]=u[y]}for(y=0;y<16;y++)s[y]=a[y]}if(i){for(h=0;h<16;h++)s[h]=s[h]+o[h]|0;for(h=0;h<4;h++)s[5*h]=s[5*h]-Ro(r,4*h)|0,s[6+h]=s[6+h]-Ro(e,4*h)|0;for(h=0;h<4;h++)rp(t,4*h,s[5*h]),rp(t,16+4*h,s[6+h])}else for(h=0;h<16;h++)rp(t,4*h,s[h]+o[h]|0)}const k1=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function BI(t,e,n,r,i,a,s){const o=new Uint8Array(16),u=new Uint8Array(64);let h,p;if(!i)return 0;for(p=0;p<16;p++)o[p]=0;for(p=0;p<8;p++)o[p]=a[p];for(;i>=64;){for(M1(u,o,s,k1,!1),p=0;p<64;p++)t[e+p]=(n?n[r+p]:0)^u[p];for(h=1,p=8;p<16;p++)h=h+(o[p]&255)|0,o[p]=h&255,h>>>=8;i-=64,e+=64,n&&(r+=64)}if(i>0)for(M1(u,o,s,k1,!1),p=0;p<i;p++)t[e+p]=(n?n[r+p]:0)^u[p];return 0}function T1(t,e,n,r,i,a,s){const o=new Uint8Array(32);return M1(o,a,s,k1,!0),BI(t,e,n,r,i,a.subarray(16),o)}function ip(t,e){let n=0;for(let r=0;r<17;r++)n=n+(t[r]+e[r]|0)|0,t[r]=n&255,n>>>=8}const XI=new Uint32Array([5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252]);function G4(t,e,n,r,i,a){let s,o,u;const h=new Uint32Array(17),p=new Uint32Array(17),y=new Uint32Array(17),w=new Uint32Array(17),P=new Uint32Array(17);for(o=0;o<17;o++)p[o]=y[o]=0;for(o=0;o<16;o++)p[o]=a[o];for(p[3]&=15,p[4]&=252,p[7]&=15,p[8]&=252,p[11]&=15,p[12]&=252,p[15]&=15;i>0;){for(o=0;o<17;o++)w[o]=0;for(o=0;o<16&&o<i;++o)w[o]=n[r+o];for(w[o]=1,r+=o,i-=o,ip(y,w),s=0;s<17;s++)for(h[s]=0,o=0;o<17;o++)h[s]=h[s]+y[o]*(o<=s?p[s-o]:320*p[s+17-o]|0)|0|0;for(s=0;s<17;s++)y[s]=h[s];for(u=0,o=0;o<16;o++)u=u+y[o]|0,y[o]=u&255,u>>>=8;for(u=u+y[16]|0,y[16]=u&3,u=5*(u>>>2)|0,o=0;o<16;o++)u=u+y[o]|0,y[o]=u&255,u>>>=8;u=u+y[16]|0,y[16]=u}for(o=0;o<17;o++)P[o]=y[o];ip(y,XI);const N=-(y[16]>>>7)|0;for(o=0;o<17;o++)y[o]^=N&(P[o]^y[o]);for(o=0;o<16;o++)w[o]=a[o+16];for(w[16]=0,ip(y,w),o=0;o<16;o++)t[e+o]=y[o];return 0}function jI(t,e,n,r,i,a){const s=new Uint8Array(16);return G4(s,0,n,r,i,a),RI(t,e,s,0,16)}function CI(t,e,n,r,i){if(n<32)return-1;T1(t,0,e,0,n,r,i),G4(t,16,t,32,n-32,t);for(let a=0;a<16;a++)t[a]=0;return 0}function UI(t,e,n,r,i){const a=new Uint8Array(32);if(n<32||(T1(a,0,null,0,32,r,i),jI(e,16,e,32,n-32,a)!==0))return-1;T1(t,0,e,0,n,r,i);for(let s=0;s<32;s++)t[s]=0;return 0}const DI=32,FI=24,N1=32,O1=16;function Y4(t,e){if(t.length!==DI)throw new Error("bad key size");if(e.length!==FI)throw new Error("bad nonce size")}function K4(...t){for(let e=0,n=t.length;e<n;e++)if(!(t[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function ZI(t,e,n){K4(t,e,n),Y4(n,e);const r=new Uint8Array(N1+t.length),i=new Uint8Array(r.length);for(let a=0;a<t.length;a++)r[a+N1]=t[a];return CI(i,r,r.length,e,n),i.subarray(O1)}function qI(t,e,n){K4(t,e,n),Y4(n,e);const r=new Uint8Array(O1+t.length),i=new Uint8Array(r.length);for(let a=0;a<t.length;a++)r[a+O1]=t[a];return r.length<32||UI(i,r,r.length,e,n)!==0?null:i.subarray(N1)}function WI(t,e,n){return qI(t,e,n)}function GI(t,e,n=a2(24)){return{encrypted:ZI(t,n,e),nonce:n}}function _3(t,e,n,r,i,a){let s=t[e++]^n[r++],o=t[e++]^n[r++],u=t[e++]^n[r++],h=t[e++]^n[r++],p=t[e++]^n[r++],y=t[e++]^n[r++],w=t[e++]^n[r++],P=t[e++]^n[r++],N=t[e++]^n[r++],O=t[e++]^n[r++],z=t[e++]^n[r++],j=t[e++]^n[r++],I=t[e++]^n[r++],A=t[e++]^n[r++],U=t[e++]^n[r++],H=t[e++]^n[r++],X=s,C=o,F=u,S=h,R=p,E=y,L=w,c=P,l=N,f=O,b=z,g=j,v=I,M=A,x=U,d=H;for(let m=0;m<8;m+=2)R^=Lt(X+v|0,7),l^=Lt(R+X|0,9),v^=Lt(l+R|0,13),X^=Lt(v+l|0,18),f^=Lt(E+C|0,7),M^=Lt(f+E|0,9),C^=Lt(M+f|0,13),E^=Lt(C+M|0,18),x^=Lt(b+L|0,7),F^=Lt(x+b|0,9),L^=Lt(F+x|0,13),b^=Lt(L+F|0,18),S^=Lt(d+g|0,7),c^=Lt(S+d|0,9),g^=Lt(c+S|0,13),d^=Lt(g+c|0,18),C^=Lt(X+S|0,7),F^=Lt(C+X|0,9),S^=Lt(F+C|0,13),X^=Lt(S+F|0,18),L^=Lt(E+R|0,7),c^=Lt(L+E|0,9),R^=Lt(c+L|0,13),E^=Lt(R+c|0,18),g^=Lt(b+f|0,7),l^=Lt(g+b|0,9),f^=Lt(l+g|0,13),b^=Lt(f+l|0,18),v^=Lt(d+x|0,7),M^=Lt(v+d|0,9),x^=Lt(M+v|0,13),d^=Lt(x+M|0,18);i[a++]=s+X|0,i[a++]=o+C|0,i[a++]=u+F|0,i[a++]=h+S|0,i[a++]=p+R|0,i[a++]=y+E|0,i[a++]=w+L|0,i[a++]=P+c|0,i[a++]=N+l|0,i[a++]=O+f|0,i[a++]=z+b|0,i[a++]=j+g|0,i[a++]=I+v|0,i[a++]=A+M|0,i[a++]=U+x|0,i[a++]=H+d|0}function ap(t,e,n,r,i){let a=r+0,s=r+16*i;for(let o=0;o<16;o++)n[s+o]=t[e+(2*i-1)*16+o];for(let o=0;o<i;o++,a+=16,e+=16)_3(n,s,t,e,n,a),o>0&&(s+=16),_3(n,a,t,e+=16,n,s)}function YI(t,e,n){const r=$x({dkLen:32,asyncTick:10,maxmem:1073742848},n),{N:i,r:a,p:s,dkLen:o,asyncTick:u,maxmem:h,onProgress:p}=r;if(En(i),En(a),En(s),En(o),En(u),En(h),p!==void 0&&typeof p!="function")throw new Error("progressCb should be function");const y=128*a,w=y/4,P=Math.pow(2,32);if(i<=1||i&i-1||i>P)throw new Error("Scrypt: N must be larger than 1, a power of 2, and less than 2^32");if(s<0||s>(P-1)*32/y)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(o<0||o>(P-1)*32)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");if(y*(i+s)>h)throw new Error("Scrypt: memused is bigger than maxMem. Expected 128 * r * (N + p) > maxmem of "+h);const O=h2(F0,t,e,{c:1,dkLen:y*s}),z=bs(O),j=bs(new Uint8Array(y*i)),I=bs(new Uint8Array(y));let A=()=>{};if(p){const U=2*i*s,H=Math.max(Math.floor(U/1e4),1);let X=0;A=()=>{X++,p&&(!(X%H)||X===U)&&p(X/U)}}return{N:i,r:a,p:s,dkLen:o,blockSize32:w,V:j,B32:z,B:O,tmp:I,blockMixCb:A,asyncTick:u}}function KI(t,e,n,r,i){const a=h2(F0,t,n,{c:1,dkLen:e});return jr(n,r,i),a}function JI(t,e,n){const{N:r,r:i,p:a,dkLen:s,blockSize32:o,V:u,B32:h,B:p,tmp:y,blockMixCb:w}=YI(t,e,n);Fi(h);for(let P=0;P<a;P++){const N=o*P;for(let O=0;O<o;O++)u[O]=h[N+O];for(let O=0,z=0;O<r-1;O++)ap(u,z,u,z+=o,i),w();ap(u,(r-1)*o,h,N,i),w();for(let O=0;O<r;O++){const z=h[N+o-16]%r;for(let j=0;j<o;j++)y[j]=h[N+j]^u[z*o+j];ap(y,0,h,N,i),w()}}return Fi(h),KI(t,s,p,u,y)}const QI=[{N:8192,p:10,r:8},{N:16384,p:5,r:8},{N:32768,p:3,r:8},{N:32768,p:1,r:8},{N:65536,p:2,r:8},{N:1<<17,p:1,r:8}],_I={N:1<<17,p:1,r:8};function J4(t,e=a2(),n=_I,r){const i=ut(t);return{params:n,password:!An||Rn()?AS(i,e,Math.log2(n.N),n.r,n.p):JI(i,e,Ym({dkLen:64},n)),salt:e}}function $I(t){if(!(t instanceof Uint8Array))throw new Error("Expected input to be a Uint8Array");if(t.length<44)throw new Error(`Invalid input length: expected 44 bytes, found ${t.length}`);const e=t.subarray(0,32),n=Uh(t.subarray(32,36),Gh).toNumber(),r=Uh(t.subarray(36,40),Gh).toNumber(),i=Uh(t.subarray(40,44),Gh).toNumber();if(n>1<<20||r>4||i>16)throw new Error("Scrypt parameters exceed safe limits");if(!QI.some(s=>s.N===n&&s.p===r&&s.r===i))throw new Error("Invalid injected scrypt params found");return{params:{N:n,p:r,r:i},salt:e}}function eL(t,{N:e,p:n,r}){return Ln(t,Ar(e,Yh),Ar(n,Yh),Ar(r,Yh))}const Q4=["scrypt","xsalsa20-poly1305"],tL=["none"],nL="3",$3=24,rL=32+3*4;function iL(t,e,n=Q4){if(t){if(n.includes("xsalsa20-poly1305")&&!e)throw new Error("Password required to decode encrypted data")}else throw new Error("No encrypted data available to decode");let r=t;if(e){let i;if(n.includes("scrypt")){const{params:a,salt:s}=$I(t);i=J4(e,s,a).password,t=t.subarray(rL)}else i=ii(e);r=WI(t.subarray($3),t.subarray(0,$3),kV(i,256,!0))}if(!r)throw new Error("Unable to decode using the supplied passphrase");return r}function aL(t,e,n){return{encoded:lI(t),encoding:{content:e,type:n?Q4:tL,version:nL}}}const ey=t=>(e,n,r)=>mI(e,n,r,t),V1=[["ecdsa",ey("blake2")],["ethereum",ey("keccak")]],_4=[["ed25519",jz],["sr25519",Yz]];function jd(t,{message:e,publicKey:n,signature:r},i=[..._4,...V1]){return t.isValid=i.some(([a,s])=>{try{if(s(e,r,n))return t.crypto=a,!0}catch{}return!1}),t}function sL(t,{message:e,publicKey:n,signature:r}){if(![0,1,2].includes(r[0])||![65,66].includes(r.length))throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${r[0]}`);return r.length===66?t=jd(t,{message:e,publicKey:n,signature:r.subarray(1)},V1):(t=jd(t,{message:e,publicKey:n,signature:r.subarray(1)},_4),t.isValid||(t=jd(t,{message:e,publicKey:n,signature:r},V1)),t.isValid||(t.crypto="none")),t}function oL(t){return[0,1,2].includes(t[0])&&[65,66].includes(t.length)?sL:jd}function ty(t,e,n){const r=ut(e);if(![64,65,66].includes(r.length))throw new Error(`Invalid signature length, expected [64..66] bytes, found ${r.length}`);const i=gc(n),a={message:ut(t),publicKey:i,signature:r},s={crypto:"none",isValid:!1,isWrapped:n0(a.message,!0),publicKey:i},o=n0(a.message,!1),u=oL(r);return u(s,a),s.crypto!=="none"||s.isWrapped&&!o?s:(a.message=o?OV(a.message):VV(a.message),u(s,a))}const jo=new Uint8Array([161,35,3,33,0]),c0=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]),cL=32,ny=64,uL=32,Jc=c0.length;function lL(t,e,n){const r=Array.isArray(n)||n===void 0?n:[n],i=iL(e,t,r),a=i.subarray(0,c0.length);if(!Ji(a,c0))throw new Error("Invalid encoding header found in body");let s=i.subarray(Jc,Jc+ny),o=Jc+ny,u=i.subarray(o,o+jo.length);if(!Ji(u,jo)&&(o=Jc+uL,s=i.subarray(Jc,o),u=i.subarray(o,o+jo.length),!Ji(u,jo)))throw new Error("Invalid encoding divider found in body");const h=o+jo.length;return{publicKey:i.subarray(h,h+cL),secretKey:s}}function dL({publicKey:t,secretKey:e},n){if(!e)throw new Error("Expected a valid secretKey to be passed to encode");const r=Ln(c0,e,jo,t);if(!n)return r;const{params:i,password:a,salt:s}=J4(n),{encrypted:o,nonce:u}=GI(r,a.subarray(0,32));return Ln(eL(s,i),u,o)}function fL(t,{address:e,meta:n},r,i){return Ym(aL(r,["pkcs8",t],i),{address:e,meta:n})}const hL=new Uint8Array,pL={ecdsa:Ec,ed25519:o2,ethereum:Ec,sr25519:z4},ry={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},iy={ecdsa:(t,e)=>K3(t,e,"blake2"),ed25519:Xz,ethereum:(t,e)=>K3(t,e,"keccak"),sr25519:Gz},fd={ecdsa:t=>t.length>32?ko(t):t,ed25519:t=>t,ethereum:t=>t.length===20?t:K0(l2(t)),sr25519:t=>t};function Qc(t){return!t||Ox(t)}function ay(t,e,n){return ko(Ln(e||"",n||"",t))}function Co({toSS58:t,type:e},{publicKey:n,secretKey:r},i={},a=null,s){const o=(p,y)=>{const w=lL(p,y||a,s);if(w.secretKey.length===64)n=w.publicKey,r=w.secretKey;else{const P=pL[e](w.secretKey);n=P.publicKey,r=P.secretKey}},u=p=>(Qc(r)&&a&&o(p,a),a=dL({publicKey:n,secretKey:r},p),s=void 0,a),h=()=>{const p=fd[e](n);return e==="ethereum"?j4(p):t(p)};return{get address(){return h()},get addressRaw(){const p=fd[e](n);return e==="ethereum"?p.slice(-20):p},get isLocked(){return Qc(r)},get meta(){return i},get publicKey(){return n},get type(){return e},decodePkcs8:o,derive:(p,y)=>{if(e==="ethereum")throw new Error("Unable to derive on this keypair");if(Qc(r))throw new Error("Cannot derive on a locked keypair");const{path:w}=o4(p),P=E4({publicKey:n,secretKey:r},w,e);return Co({toSS58:t,type:e},P,y,null)},encodePkcs8:p=>u(p),lock:()=>{r=new Uint8Array},setMeta:p=>{i=Ym({},i,p)},sign:(p,y={})=>{if(Qc(r))throw new Error("Cannot sign with a locked key pair");return Ln(y.withType?ry[e]:hL,iy[e](ut(p),{publicKey:n,secretKey:r}))},toJson:p=>{const y=["ecdsa","ethereum"].includes(e)?n.length===20?Pl(n):Pl(B4(n)):h();return fL(e,{address:y,meta:i},u(p),!!p)},unlock:p=>o(p),verify:(p,y,w)=>ty(p,y,fd[e](ut(w))).isValid,vrfSign:(p,y,w)=>{if(Qc(r))throw new Error("Cannot sign with a locked key pair");if(e==="sr25519")return Kz(p,{secretKey:r},y,w);const P=iy[e](ut(p),{publicKey:n,secretKey:r});return Ln(ay(P,y,w),P)},vrfVerify:(p,y,w,P,N)=>e==="sr25519"?Jz(p,y,n,P,N):ty(p,Ln(ry[e],y.subarray(32)),fd[e](ut(w))).isValid&&Ji(y.subarray(0,32),ay(y.subarray(32),P,N))}}const mL="bottom drive obey lake curtain smoke basket hold race lonely fit walk";var oo;class bL{constructor(){Ls(this,oo,{})}add(e){return Tn(this,oo)[gc(e.address).toString()]=e,e}all(){return Object.values(Tn(this,oo))}get(e){const n=Tn(this,oo)[gc(e).toString()];if(!n)throw new Error(`Unable to retrieve keypair '${Ms(e)||Ma(e)?Pl(ut(e)):e}'`);return n}remove(e){delete Tn(this,oo)[gc(e).toString()]}}oo=new WeakMap;const sp={ecdsa:t=>Ec(t),ed25519:t=>o2(t),ethereum:t=>Ec(t),sr25519:t=>z4(t)};function yL({publicKey:t}){return t}var Di,Al,Mc;class gL{constructor(e={}){Ls(this,Di);Ls(this,Al);Ls(this,Mc);Dt(this,"decodeAddress",gc);Dt(this,"encodeAddress",(e,n)=>this.type==="ethereum"?j4(e):Qz(e,n??Tn(this,Mc)));if(e.type=e.type||"ed25519",!["ecdsa","ethereum","ed25519","sr25519"].includes(e.type||"undefined"))throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${e.type||"unknown"}`);Hs(this,Di,new bL),Hs(this,Mc,e.ss58Format),Hs(this,Al,e.type)}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return Tn(this,Al)}addPair(e){return Tn(this,Di).add(e)}addFromAddress(e,n={},r=null,i=this.type,a,s){const o=this.decodeAddress(e,a);return this.addPair(Co({toSS58:this.encodeAddress,type:i},{publicKey:o,secretKey:new Uint8Array},n,r,s))}addFromJson(e,n){return this.addPair(this.createFromJson(e,n))}addFromMnemonic(e,n={},r=this.type,i){return this.addFromUri(e,n,r,i)}addFromPair(e,n={},r=this.type){return this.addPair(this.createFromPair(e,n,r))}addFromSeed(e,n={},r=this.type){return this.addPair(Co({toSS58:this.encodeAddress,type:r},sp[r](e),n,null))}addFromUri(e,n={},r=this.type,i){return this.addPair(this.createFromUri(e,n,r,i))}createFromJson({address:e,encoded:n,encoding:{content:r,type:i,version:a},meta:s},o){if(a==="3"&&r[0]!=="pkcs8")throw new Error(`Unable to decode non-pkcs8 type, [${r.join(",")}] found}`);const u=a==="0"||!Array.isArray(r)?this.type:r[1],h=Array.isArray(i)?i:[i];if(!["ed25519","sr25519","ecdsa","ethereum"].includes(u))throw new Error(`Unknown crypto type ${u}`);const p=Ma(e)?yc(e):this.decodeAddress(e,o),y=Ma(n)?yc(n):uI(n);return Co({toSS58:this.encodeAddress,type:u},{publicKey:p,secretKey:new Uint8Array},s,y,h)}createFromPair(e,n={},r=this.type){return Co({toSS58:this.encodeAddress,type:r},e,n,null)}createFromUri(e,n={},r=this.type,i){const a=e.startsWith("//")?`${mL}${e}`:e,{derivePath:s,password:o,path:u,phrase:h}=BE(a);let p;const y=Ma(h,256);if(y)p=yc(h);else{const P=h.split(" ");if([12,15,18,21,24].includes(P.length))p=r==="ethereum"?HI(h,"",!1,64):AI(h,o,i);else{if(h.length>32)throw new Error("specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes");p=ii(h.padEnd(32))}}const w=r==="ethereum"?y?sp[r](p):wI(p,s.substring(1)):E4(sp[r](p),u,r);return Co({toSS58:this.encodeAddress,type:r},w,n,null)}getPair(e){return Tn(this,Di).get(e)}getPairs(){return Tn(this,Di).all()}getPublicKeys(){return Tn(this,Di).all().map(yL)}removePair(e){Tn(this,Di).remove(e)}setSS58Format(e){Hs(this,Mc,e)}toJson(e,n){return Tn(this,Di).get(e).toJson(n)}}Di=new WeakMap,Al=new WeakMap,Mc=new WeakMap;function xL(t){let e,n='<svg class="spinner svelte-1vne79e" xmlns="http://www.w3.org/2000/svg" width="80" height="80" viewBox="0 0 45 47"><path fill="currentColor" d="M11.87.12a4.238 4.238 0 0 0-2.226 1.454l-.007.009a4.071 4.071 0 0 0-.863 2.515c0 1.101.434 2.101 1.141 2.837l-.001-.001c.306.238.512.591.553.993v.006a7.743 7.743 0 0 1-.007 2.677l.007-.047a6.43 6.43 0 0 1-4.048 4.717l-.044.014l-.632.24l-.48-.133a3.916 3.916 0 0 0-1.134-.164c-.667 0-1.295.163-1.848.451l.022-.011a4.118 4.118 0 0 0-2.3 3.69a4.11 4.11 0 0 0 2.205 3.643l.023.011a4.114 4.114 0 0 0 5.856-2.62l.006-.029c.12-.494.222-.626.897-1.131c.62-.45 1.34-.813 2.115-1.052l.052-.014a6.53 6.53 0 0 1 1.72-.225c1.734 0 3.314.659 4.503 1.74l-.005-.005a.975.975 0 0 1 .372.676v.004a3.658 3.658 0 0 0 1.081 1.846l.003.002c.284.318.626.577 1.01.762l.019.008a3.588 3.588 0 0 0 2.055.409l-.015.001c.404 0 .793-.066 1.157-.188l-.026.007a4.197 4.197 0 0 0 2.691-2.951l.006-.029a5.1 5.1 0 0 0-.012-1.94l.005.032a4.224 4.224 0 0 0-2.757-2.899l-.03-.008a4.59 4.59 0 0 0-2.271-.042l.031-.006a1.494 1.494 0 0 1-1.307-.1l.007.004c-2.477-.935-4.206-3.286-4.206-6.041c0-.435.043-.86.125-1.271l-.007.041l.108-.566l.4-.427a3.993 3.993 0 0 0 1.192-2.676v-.008a4.103 4.103 0 0 0-3.06-4.201l-.029-.006a4.559 4.559 0 0 0-2.081.007l.031-.006zm1.76 2.546a1.613 1.613 0 0 1 .41 2.583a1.325 1.325 0 0 1-1.151.439l.006.001a1.325 1.325 0 0 1-1.142-.437l-.001-.001a1.517 1.517 0 0 1-.449-1.436l-.002.01a1.625 1.625 0 0 1 2.343-1.155l-.009-.004zm.337 9.39c.514.251.92.658 1.162 1.159l.006.015a1.716 1.716 0 0 1 .168 1.014l.001-.009a1.813 1.813 0 0 1-.197 1.081l.005-.01a2.466 2.466 0 0 1-1.803 1.364l-.015.002a2.48 2.48 0 0 1-2.612-1.369l-.006-.015a1.746 1.746 0 0 1-.185-1.063l-.001.009a1.74 1.74 0 0 1 .165-1.003l-.005.01a2.54 2.54 0 0 1 1.451-1.319l.018-.005a1.984 1.984 0 0 1 .889-.101l-.009-.001l.067-.001c.333 0 .646.089.915.244l-.009-.005zm-9.394 5.698c.443.137.8.441 1.004.837l.004.009a1.127 1.127 0 0 1 .173.819l.001-.007a1.58 1.58 0 0 1-.994 1.423l-.011.004a1.786 1.786 0 0 1-1.419-.101l.01.005a1.604 1.604 0 0 1-.806-1.554l-.001.007a1.45 1.45 0 0 1 .457-.98l.001-.001a1.54 1.54 0 0 1 1.591-.459l-.011-.003zm17.696.06c.398.175.718.467.922.833l.005.01c.076.195.12.421.12.657c0 .27-.057.526-.161.757l.005-.012a1.56 1.56 0 0 1-1.405.885l-.042-.001h.002a1.56 1.56 0 0 1-1.612-1.527v-.002a1.123 1.123 0 0 1 .183-.822l-.003.004a1.558 1.558 0 0 1 1.999-.779l-.01-.004zM5.062 6.082a10.763 10.763 0 0 0-2.195 3.944l-.02.076c-.217.789-.234 1.006-.03.4c.319-.864.67-1.598 1.077-2.295l-.037.068c.399-.627.823-1.172 1.294-1.673l-.006.006a3.02 3.02 0 0 0 .432-.513l.007-.011a.406.406 0 0 0-.237-.246l-.003-.001c-.11.066-.203.147-.28.243zm15.68.416a10.149 10.149 0 0 1 2.014 4.023l.015.07c.205.88.24.96.386.96c.234 0 .259-.193.09-.765a10.599 10.599 0 0 0-2.466-4.325l.005.005l-.4-.422zm-15.293.795a9.066 9.066 0 0 0-1.378 2.596l-.019.064c-.259.789-.325 1.168-.096.572c.426-1.086 1-2.02 1.708-2.835l-.01.012c.301-.349.349-.463.222-.59s-.21-.085-.427.18z"></path><path fill="currentColor" d="M20.273 7.642a9.716 9.716 0 0 1 1.455 3.25l.014.067c.036.169.16.253.301.198c.15-.06.16-.193.012-.608a9.337 9.337 0 0 0-1.961-3.213l.005.005c-.102-.114-.024.018.174.301zm-14.62.956a7.921 7.921 0 0 0-.775 1.869l-.013.057a3.14 3.14 0 0 0 .237-.382l.009-.018c.212-.368.424-.682.654-.979l-.014.019c.295-.4.379-.548.337-.62c-.11-.163-.296-.139-.434.054zm14.349.332c.146.285.293.631.416.988l.018.059c.193.584.331.72.512.494c.108-.133.108-.145-.08-.475a11.87 11.87 0 0 0-.978-1.413l.018.023c-.158-.193-.152-.162.094.325zm-8.516 12.79a.16.16 0 0 0 .042.222h.001c.09.09.198.096.981.06c.48-.018.969-.054 1.083-.08c.198-.036.205-.042.06-.084a2.704 2.704 0 0 0-.478-.048h-.002a8.885 8.885 0 0 1-.873-.096c-.703-.113-.735-.113-.814.026zm-1.066.644c-.102.042-.102.234 0 .313a6.857 6.857 0 0 0 1.858.251c.176 0 .351-.007.524-.019l-.023.001a8.262 8.262 0 0 0 2.001-.265l-.057.013h-.045c-.224 0-.444.013-.661.039l.026-.003a9.86 9.86 0 0 1-2.755-.204l.065.012c-.686-.15-.837-.178-.933-.136zm-1.017.897c-.072.181.06.295.463.4c.803.214 1.726.337 2.677.337c.751 0 1.485-.077 2.193-.223l-.07.012c.62-.12.602-.174-.03-.08a10.992 10.992 0 0 1-4.34-.356l.078.019c-.741-.218-.923-.242-.971-.11z"></path></svg>';return{c(){e=Oe("div"),e.innerHTML=n,this.h()},l(r){e=Ne(r,"DIV",{class:!0,"data-svelte-h":!0}),Kt(e)!=="svelte-1727841"&&(e.innerHTML=n),this.h()},h(){ie(e,"class","mt-8")},m(r,i){_e(r,e,i)},p:Bt,i:Bt,o:Bt,d(r){r&&oe(e)}}}class $4 extends oi{constructor(e){super(),ci(this,e,null,xL,ui,{})}}function sy(t,e,n){const r=t.slice();return r[8]=e[n],r}function oy(t){let e,n;return{c(){e=Oe("div"),n=nr(t[2]),this.h()},l(r){e=Ne(r,"DIV",{class:!0});var i=ot(e);n=tr(i,t[2]),i.forEach(oe),this.h()},h(){ie(e,"class","flex pb-3 font-bold")},m(r,i){_e(r,e,i),de(e,n)},p(r,i){i&4&&$r(n,r[2])},d(r){r&&oe(e)}}}function cy(t){let e,n,r,i=(t[8].event.method||"")+"",a,s,o,u,h=JSON.stringify(t[8].event.data,ly,3)+"",p;return{c(){e=Oe("div"),n=Oe("div"),r=Oe("span"),a=nr(i),s=pt(),o=Oe("div"),u=Oe("pre"),p=nr(h),this.h()},l(y){e=Ne(y,"DIV",{class:!0});var w=ot(e);n=Ne(w,"DIV",{class:!0});var P=ot(n);r=Ne(P,"SPAN",{class:!0});var N=ot(r);a=tr(N,i),N.forEach(oe),P.forEach(oe),s=ht(w),o=Ne(w,"DIV",{class:!0});var O=ot(o);u=Ne(O,"PRE",{});var z=ot(u);p=tr(z,h),z.forEach(oe),O.forEach(oe),w.forEach(oe),this.h()},h(){ie(r,"class","font-semibold"),ie(n,"class","flex"),ie(o,"class","flex"),ie(e,"class","flex flex-col pb-3")},m(y,w){_e(y,e,w),de(e,n),de(n,r),de(r,a),de(e,s),de(e,o),de(o,u),de(u,p)},p(y,w){w&2&&i!==(i=(y[8].event.method||"")+"")&&$r(a,i),w&2&&h!==(h=JSON.stringify(y[8].event.data,ly,3)+"")&&$r(p,h)},d(y){y&&oe(e)}}}function uy(t){let e,n;return e=new $4({}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function vL(t){let e,n="Creating account",r,i,a,s,o,u=t[2]&&oy(t),h=qi(t[1]),p=[];for(let w=0;w<h.length;w+=1)p[w]=cy(sy(t,h,w));let y=t[0]&&uy();return{c(){e=Oe("div"),e.textContent=n,r=pt(),u&&u.c(),i=pt();for(let w=0;w<p.length;w+=1)p[w].c();a=pt(),y&&y.c(),s=fn(),this.h()},l(w){e=Ne(w,"DIV",{class:!0,"data-svelte-h":!0}),Kt(e)!=="svelte-izr536"&&(e.textContent=n),r=ht(w),u&&u.l(w),i=ht(w);for(let P=0;P<p.length;P+=1)p[P].l(w);a=ht(w),y&&y.l(w),s=fn(),this.h()},h(){ie(e,"class","flex text-2xl")},m(w,P){_e(w,e,P),_e(w,r,P),u&&u.m(w,P),_e(w,i,P);for(let N=0;N<p.length;N+=1)p[N]&&p[N].m(w,P);_e(w,a,P),y&&y.m(w,P),_e(w,s,P),o=!0},p(w,[P]){if(w[2]?u?u.p(w,P):(u=oy(w),u.c(),u.m(i.parentNode,i)):u&&(u.d(1),u=null),P&2){h=qi(w[1]);let N;for(N=0;N<h.length;N+=1){const O=sy(w,h,N);p[N]?p[N].p(O,P):(p[N]=cy(O),p[N].c(),p[N].m(a.parentNode,a))}for(;N<p.length;N+=1)p[N].d(1);p.length=h.length}w[0]?y?P&1&&fe(y,1):(y=uy(),y.c(),fe(y,1),y.m(s.parentNode,s)):y&&(en(),we(y,1,1,()=>{y=null}),tn())},i(w){o||(fe(y),o=!0)},o(w){we(y),o=!1},d(w){w&&(oe(e),oe(r),oe(i),oe(a),oe(s)),u&&u.d(w),jf(p,w),y&&y.d(w)}}}const wL="lounge monster rotate olympic grass correct potato pumpkin inside scissors lucky vote",ly=(t,e)=>e;function PL(t,e,n){let{providerId:r}=e,{response:i}=e,{api:a}=e,s=!0,o=[],u;const p=new gL({type:"sr25519"}).addFromMnemonic(wL);return km(async()=>{console.log("response",i),console.log("providerID",r);const y=await tN(a,i,r);console.log("validatedPaylod",y);const w=y.calls.map(P=>P.encodedExtrinsic);if(w!=null&&w.length){const P=w==null?void 0:w.map(z=>a.tx(z)),N=a.registry.createType("Vec<Call>",P),O=a.tx.frequencyTxPayment.payWithCapacityBatchAll(N);try{const z=await O.signAndSend(p,j=>{if(console.dir(j),j.dispatchError){let I;j.dispatchError.isModule?I=j.dispatchError.registry.findMetaError(j.dispatchError.asModule).docs.join(" "):I=j.dispatchError.type,n(2,u=new Error(I)),n(0,s=!1)}j.status.isFinalized&&(n(1,o=j.events),n(0,s=!1),z())})}catch(z){n(2,u=z),n(0,s=!1)}}}),t.$$set=y=>{"providerId"in y&&n(3,r=y.providerId),"response"in y&&n(4,i=y.response),"api"in y&&n(5,a=y.api)},[s,o,u,r,i,a]}class ML extends oi{constructor(e){super(),ci(this,e,PL,vL,ui,{providerId:3,response:4,api:5})}}function kL(t){let e,n=`${t[0]} transparent ${t[0]}
  ${t[0]}`;return{c(){e=Oe("div"),this.h()},l(r){e=Ne(r,"DIV",{style:!0,class:!0}),ot(e).forEach(oe),this.h()},h(){Yr(e,"--duration",t[1]),ie(e,"class","svelte-66wdl1"),Yr(e,"border-color",n),Yr(e,"width",t[2]),Yr(e,"height",t[2])},m(r,i){_e(r,e,i)},p(r,[i]){i&2&&Yr(e,"--duration",r[1]);const a=i&2;(i&3&&n!==(n=`${r[0]} transparent ${r[0]}
  ${r[0]}`)||a)&&Yr(e,"border-color",n),(i&6||a)&&Yr(e,"width",r[2]),(i&6||a)&&Yr(e,"height",r[2])},i:Bt,o:Bt,d(r){r&&oe(e)}}}function TL(t,e,n){let{color:r="cornflowerblue"}=e,{duration:i="1.5s"}=e,{size:a="1em"}=e;return t.$$set=s=>{"color"in s&&n(0,r=s.color),"duration"in s&&n(1,i=s.duration),"size"in s&&n(2,a=s.size)},[r,i,a]}class NL extends oi{constructor(e){super(),ci(this,e,TL,kL,ui,{color:0,duration:1,size:2})}}function OL(t){const e=t-1;return e*e*e+1}function VL(t,{from:e,to:n},r={}){const i=getComputedStyle(t),a=i.transform==="none"?"":i.transform,[s,o]=i.transformOrigin.split(" ").map(parseFloat),u=e.left+e.width*s/n.width-(n.left+s),h=e.top+e.height*o/n.height-(n.top+o),{delay:p=0,duration:y=P=>Math.sqrt(P)*120,easing:w=OL}=r;return{delay:p,duration:Cf(y)?y(Math.sqrt(u*u+h*h)):y,easing:w,css:(P,N)=>{const O=N*u,z=N*h,j=P+N*e.width/n.width,I=P+N*e.height/n.height;return`transform: ${a} translate(${O}px, ${z}px) scale(${j}, ${I});`}}}function dy(t){return Object.prototype.toString.call(t)==="[object Date]"}function S1(t,e,n,r){if(typeof n=="number"||dy(n)){const i=r-n,a=(n-e)/(t.dt||1/60),s=t.opts.stiffness*i,o=t.opts.damping*a,u=(s-o)*t.inv_mass,h=(a+u)*t.dt;return Math.abs(h)<t.opts.precision&&Math.abs(i)<t.opts.precision?r:(t.settled=!1,dy(n)?new Date(n.getTime()+h):n+h)}else{if(Array.isArray(n))return n.map((i,a)=>S1(t,e[a],n[a],r[a]));if(typeof n=="object"){const i={};for(const a in n)i[a]=S1(t,e[a],n[a],r[a]);return i}else throw new Error(`Cannot spring ${typeof n} values`)}}function SL(t,e={}){const n=Qw(t),{stiffness:r=.15,damping:i=.8,precision:a=.01}=e;let s,o,u,h=t,p=t,y=1,w=0,P=!1;function N(z,j={}){p=z;const I=u={};return t==null||j.hard||O.stiffness>=1&&O.damping>=1?(P=!0,s=Jp(),h=z,n.set(t=p),Promise.resolve()):(j.soft&&(w=1/((j.soft===!0?.5:+j.soft)*60),y=0),o||(s=Jp(),P=!1,o=F8(A=>{if(P)return P=!1,o=null,!1;y=Math.min(y+w,1);const U={inv_mass:y,opts:O,settled:!0,dt:(A-s)*60/1e3},H=S1(U,h,t,p);return s=A,h=t,n.set(t=H),U.settled&&(o=null),!U.settled})),new Promise(A=>{o.promise.then(()=>{I===u&&A()})}))}const O={set:N,update:(z,j)=>N(z(p,t),j),subscribe:n.subscribe,stiffness:r,damping:i,precision:a};return O}function EL(t){let e,n=`rotate(${t[0].angle}deg) scale(${t[0].scale}) translate(${t[0].dx}px,
  ${t[0].dy}px)`,r;const i=t[11].default,a=ei(i,t,t[10],null);return{c(){e=Oe("span"),a&&a.c(),this.h()},l(s){e=Ne(s,"SPAN",{});var o=ot(e);a&&a.l(o),o.forEach(oe),this.h()},h(){Yr(e,"transform",n)},m(s,o){_e(s,e,o),a&&a.m(e,null),r=!0},p(s,[o]){a&&a.p&&(!r||o&1024)&&ti(a,i,s,s[10],r?ri(i,s[10],o,null):ni(s[10]),null),o&1&&n!==(n=`rotate(${s[0].angle}deg) scale(${s[0].scale}) translate(${s[0].dx}px,
  ${s[0].dy}px)`)&&Yr(e,"transform",n)},i(s){r||(fe(a,s),r=!0)},o(s){we(a,s),r=!1},d(s){s&&oe(e),a&&a.d(s)}}}function zL(t,e,n){let r,{$$slots:i={},$$scope:a}=e,{wiggle:s=!1}=e,{angle:o=0}=e,{scale:u=1}=e,{dx:h=0}=e,{dy:p=0}=e,{duration:y=200}=e,{stiffness:w=.05}=e,{damping:P=.1}=e,N={angle:0,scale:1,dx:0,dy:0},O=SL(N,{stiffness:w,damping:P});return Gw(t,O,z=>n(0,r=z)),t.$$set=z=>{"wiggle"in z&&n(2,s=z.wiggle),"angle"in z&&n(3,o=z.angle),"scale"in z&&n(4,u=z.scale),"dx"in z&&n(5,h=z.dx),"dy"in z&&n(6,p=z.dy),"duration"in z&&n(7,y=z.duration),"stiffness"in z&&n(8,w=z.stiffness),"damping"in z&&n(9,P=z.damping),"$$scope"in z&&n(10,a=z.$$scope)},t.$$.update=()=>{t.$$.dirty&132&&s&&setTimeout(()=>n(2,s=!1),y),t.$$.dirty&124&&O.set(s?{scale:u,angle:o,dx:h,dy:p}:N)},[r,O,s,o,u,h,p,y,w,P,a,i]}class IL extends oi{constructor(e){super(),ci(this,e,zL,EL,ui,{wiggle:2,angle:3,scale:4,dx:5,dy:6,duration:7,stiffness:8,damping:9})}}function LL(t){let e,n,r=[t[0],{fill:"currentColor"},{viewBox:"0 0 16 16"}],i={};for(let a=0;a<r.length;a+=1)i=Rr(i,r[a]);return{c(){e=bo("svg"),n=bo("path"),this.h()},l(a){e=mo(a,"svg",{fill:!0,viewBox:!0});var s=ot(e);n=mo(s,"path",{d:!0}),ot(n).forEach(oe),s.forEach(oe),this.h()},h(){ie(n,"d","M3.646 9.146a.5.5 0 0 1 .708 0L8 12.793l3.646-3.647a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 0-.708zm0-2.292a.5.5 0 0 0 .708 0L8 3.207l3.646 3.647a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 0 0 0 .708z"),vs(e,i)},m(a,s){_e(a,e,s),de(e,n)},p(a,[s]){vs(e,i=Rl(r,[s&1&&a[0],{fill:"currentColor"},{viewBox:"0 0 16 16"}]))},i:Bt,o:Bt,d(a){a&&oe(e)}}}function HL(t,e,n){return t.$$set=r=>{n(0,e=Rr(Rr({},e),xs(r)))},e=xs(e),[e]}class AL extends oi{constructor(e){super(),ci(this,e,HL,LL,ui,{})}}function RL(t){let e,n,r=[t[0],{viewBox:"0 0 24 24"},{fill:"currentColor"}],i={};for(let a=0;a<r.length;a+=1)i=Rr(i,r[a]);return{c(){e=bo("svg"),n=bo("path"),this.h()},l(a){e=mo(a,"svg",{viewBox:!0,fill:!0});var s=ot(e);n=mo(s,"path",{d:!0}),ot(n).forEach(oe),s.forEach(oe),this.h()},h(){ie(n,"d","M18.3 5.71a.996.996 0 0 0-1.41 0L12 10.59L7.11 5.7A.996.996 0 1 0 5.7 7.11L10.59 12L5.7 16.89a.996.996 0 1 0 1.41 1.41L12 13.41l4.89 4.89a.996.996 0 1 0 1.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z"),vs(e,i)},m(a,s){_e(a,e,s),de(e,n)},p(a,[s]){vs(e,i=Rl(r,[s&1&&a[0],{viewBox:"0 0 24 24"},{fill:"currentColor"}]))},i:Bt,o:Bt,d(a){a&&oe(e)}}}function BL(t,e,n){return t.$$set=r=>{n(0,e=Rr(Rr({},e),xs(r)))},e=xs(e),[e]}class e7 extends oi{constructor(e){super(),ci(this,e,BL,RL,ui,{})}}function XL(t){let e,n,r=[t[0],{viewBox:"0 0 24 24"},{fill:"currentColor"}],i={};for(let a=0;a<r.length;a+=1)i=Rr(i,r[a]);return{c(){e=bo("svg"),n=bo("path"),this.h()},l(a){e=mo(a,"svg",{viewBox:!0,fill:!0});var s=ot(e);n=mo(s,"path",{d:!0}),ot(n).forEach(oe),s.forEach(oe),this.h()},h(){ie(n,"d","M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2S2 6.477 2 12s4.477 10 10 10Zm-4.906-3.68L18.32 7.094A8 8 0 0 1 7.094 18.32ZM5.68 16.906A8 8 0 0 1 16.906 5.68L5.68 16.906Z"),vs(e,i)},m(a,s){_e(a,e,s),de(e,n)},p(a,[s]){vs(e,i=Rl(r,[s&1&&a[0],{viewBox:"0 0 24 24"},{fill:"currentColor"}]))},i:Bt,o:Bt,d(a){a&&oe(e)}}}function jL(t,e,n){return t.$$set=r=>{n(0,e=Rr(Rr({},e),xs(r)))},e=xs(e),[e]}class CL extends oi{constructor(e){super(),ci(this,e,jL,XL,ui,{})}}const zn=t=>t instanceof Object?(t.label===void 0&&console.error(`MultiSelect option ${JSON.stringify(t)} is an object but has no label key`),t.label):`${t}`;function u0(t,e=null){let n="";if(["selected","option",null].includes(e)||console.error(`MultiSelect: Invalid key=${e} for get_style`),typeof t=="object"&&t.style&&(typeof t.style=="string"&&(n=t.style),typeof t.style=="object")){if(e&&e in t.style)return t.style[e]??"";console.error(`Invalid style object for option=${JSON.stringify(t)}`)}return n.trim()&&!n.trim().endsWith(";")&&(n+=";"),n}const{Boolean:UL}=_w,DL=t=>({searchText:t[0]&16,msgType:t[0]&68660|t[1]&16,msg:t[0]&101428|t[1]&16}),fy=t=>({searchText:t[4],msgType:t[124],msg:t[125]});function op(t){const e=t.slice(),n={dupe:e[15],create:e[10],"no-match":e[35]}[e[124]];return e[125]=n,e}function cp(t){var o;const e=t.slice(),n=e[5].map(zn).includes(e[4]);e[120]=n;const r=!e[16]&&e[120]&&"dupe";e[121]=r;const i=!!(e[11]&&e[10])&&"create";e[122]=i;const a=!!(((o=e[2])==null?void 0:o.length)==0&&e[35])&&"no-match";e[123]=a;const s=e[121]||e[122]||e[123];return e[124]=s,e}function hy(t,e,n){const r=t.slice();r[126]=e[n],r[133]=n;const i=r[126]instanceof Object?r[126]:{label:r[126]};r[127]=i.label,r[50]=i.disabled!==void 0?i.disabled:null,r[128]=i.title!==void 0?i.title:null,r[129]=i.selectedTitle!==void 0?i.selectedTitle:null,r[130]=i.disabledTitle!==void 0?i.disabledTitle:r[13];const a=r[0]===r[133];return r[131]=a,r}const FL=t=>({option:t[0]&1073741828}),py=t=>({option:t[126],idx:t[133]}),ZL=t=>({option:t[0]&1073741828}),my=t=>({option:t[126],idx:t[133]}),qL=t=>({}),by=t=>({}),WL=t=>({}),yy=t=>({}),GL=t=>({}),gy=t=>({}),YL=t=>({selected:t[0]&32,disabled:t[1]&524288,invalid:t[0]&128,id:t[0]&262144,placeholder:t[1]&256,open:t[0]&256,required:t[1]&4096}),xy=t=>({selected:t[5],disabled:t[50],invalid:t[7],id:t[18],placeholder:t[39],open:t[8],required:t[43]});function vy(t,e,n){const r=t.slice();return r[126]=e[n],r[133]=n,r}const KL=t=>({}),wy=t=>({}),JL=t=>({option:t[0]&32,idx:t[0]&32}),Py=t=>({option:t[126],idx:t[133]}),QL=t=>({option:t[0]&32,idx:t[0]&32}),My=t=>({option:t[126],idx:t[133]}),_L=t=>({open:t[0]&256}),ky=t=>({open:t[8]});function $L(t){let e,n;return e=new AL({props:{width:"15px",style:"min-width: 1em; padding: 0 1pt; cursor: pointer;"}}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},p:Bt,i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function eH(t){let e=zn(t[126])+"",n;return{c(){n=nr(e)},l(r){n=tr(r,e)},m(r,i){_e(r,n,i)},p(r,i){i[0]&32&&e!==(e=zn(r[126])+"")&&$r(n,e)},d(r){r&&oe(n)}}}function tH(t){let e,n=zn(t[126])+"",r;return{c(){e=new Nm(!1),r=fn(),this.h()},l(i){e=Tm(i,!1),r=fn(),this.h()},h(){e.a=r},m(i,a){e.m(n,i,a),_e(i,r,a)},p(i,a){a[0]&32&&n!==(n=zn(i[126])+"")&&e.p(n)},d(i){i&&(oe(r),e.d())}}}function nH(t){let e;function n(a,s){return a[37]?tH:eH}let r=n(t),i=r(t);return{c(){i.c(),e=fn()},l(a){i.l(a),e=fn()},m(a,s){i.m(a,s),_e(a,e,s)},p(a,s){r===(r=n(a))&&i?i.p(a,s):(i.d(1),i=r(a),i&&(i.c(),i.m(e.parentNode,e)))},d(a){a&&oe(e),i.d(a)}}}function rH(t){let e;const n=t[77].default,r=ei(n,t,t[115],Py),i=r||nH(t);return{c(){i&&i.c()},l(a){i&&i.l(a)},m(a,s){i&&i.m(a,s),e=!0},p(a,s){r?r.p&&(!e||s[0]&32|s[3]&4194304)&&ti(r,n,a,a[115],e?ri(n,a[115],s,JL):ni(a[115]),Py):i&&i.p&&(!e||s[0]&32|s[1]&64)&&i.p(a,e?s:[-1,-1,-1,-1,-1])},i(a){e||(fe(i,a),e=!0)},o(a){we(i,a),e=!1},d(a){i&&i.d(a)}}}function Ty(t){let e,n,r,i,a;const s=t[77]["remove-icon"],o=ei(s,t,t[115],wy),u=o||iH();function h(){return t[97](t[126])}function p(){return t[98](t[126])}return{c(){e=Oe("button"),u&&u.c(),this.h()},l(y){e=Ne(y,"BUTTON",{type:!0,title:!0,class:!0});var w=ot(e);u&&u.l(w),w.forEach(oe),this.h()},h(){ie(e,"type","button"),ie(e,"title",n=t[41]+" "+zn(t[126])),ie(e,"class","remove svelte-1v0qqru")},m(y,w){_e(y,e,w),u&&u.m(e,null),r=!0,i||(a=[ct(e,"mouseup",wa(h)),ct(e,"keydown",function(){Cf(t[62](p))&&t[62](p).apply(this,arguments)})],i=!0)},p(y,w){t=y,o&&o.p&&(!r||w[3]&4194304)&&ti(o,s,t,t[115],r?ri(s,t[115],w,KL):ni(t[115]),wy),(!r||w[0]&32|w[1]&1024&&n!==(n=t[41]+" "+zn(t[126])))&&ie(e,"title",n)},i(y){r||(fe(u,y),r=!0)},o(y){we(u,y),r=!1},d(y){y&&oe(e),u&&u.d(y),i=!1,Ss(a)}}}function iH(t){let e,n;return e=new e7({props:{width:"15px"}}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},p:Bt,i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function Ny(t,e){let n,r,i,a,s,o,u=Bt,h,p,y;const w=e[77].selected,P=ei(w,e,e[115],My),N=P||rH(e);let O=!e[50]&&(e[42]===null||e[5].length>e[42])&&Ty(e);function z(){return e[99](e[133])}return{key:t,first:null,c(){n=Oe("li"),N&&N.c(),r=pt(),O&&O.c(),this.h()},l(j){n=Ne(j,"LI",{class:!0,role:!0,"aria-selected":!0,draggable:!0,style:!0});var I=ot(n);N&&N.l(I),r=ht(I),O&&O.l(I),I.forEach(oe),this.h()},h(){ie(n,"class",i=Uf(e[26])+" svelte-1v0qqru"),ie(n,"role","option"),ie(n,"aria-selected","true"),ie(n,"draggable",a=e[44]&&!e[50]&&e[5].length>1),ie(n,"style",s=u0(e[126],"selected")+" "+e[27]),ln(n,"active",e[54]===e[133]),this.first=n},m(j,I){_e(j,n,I),N&&N.m(n,null),de(n,r),O&&O.m(n,null),h=!0,p||(y=[ct(n,"dragstart",function(){Cf(e[65](e[133]))&&e[65](e[133]).apply(this,arguments)}),ct(n,"drop",Kp(function(){Cf(e[64](e[133]))&&e[64](e[133]).apply(this,arguments)})),ct(n,"dragenter",z),ct(n,"dragover",Kp(e[93]))],p=!0)},p(j,I){e=j,P?P.p&&(!h||I[0]&32|I[3]&4194304)&&ti(P,w,e,e[115],h?ri(w,e[115],I,QL):ni(e[115]),My):N&&N.p&&(!h||I[0]&32|I[1]&64|I[3]&4194304)&&N.p(e,h?I:[-1,-1,-1,-1,-1]),!e[50]&&(e[42]===null||e[5].length>e[42])?O?(O.p(e,I),I[0]&32|I[1]&526336&&fe(O,1)):(O=Ty(e),O.c(),fe(O,1),O.m(n,null)):O&&(en(),we(O,1,1,()=>{O=null}),tn()),(!h||I[0]&67108864&&i!==(i=Uf(e[26])+" svelte-1v0qqru"))&&ie(n,"class",i),(!h||I[0]&32|I[1]&532480&&a!==(a=e[44]&&!e[50]&&e[5].length>1))&&ie(n,"draggable",a),(!h||I[0]&134217760&&s!==(s=u0(e[126],"selected")+" "+e[27]))&&ie(n,"style",s),(!h||I[0]&67108896|I[1]&8388608)&&ln(n,"active",e[54]===e[133])},r(){o=n.getBoundingClientRect()},f(){aP(n),u()},a(){u(),u=iP(n,o,VL,{duration:100})},i(j){h||(fe(N,j),fe(O),h=!0)},o(j){we(N,j),we(O),h=!1},d(j){j&&oe(n),N&&N.d(j),O&&O.d(),p=!1,Ss(y)}}}function Oy(t){let e;const n=t[77].spinner,r=ei(n,t,t[115],gy),i=r||aH();return{c(){i&&i.c()},l(a){i&&i.l(a)},m(a,s){i&&i.m(a,s),e=!0},p(a,s){r&&r.p&&(!e||s[3]&4194304)&&ti(r,n,a,a[115],e?ri(n,a[115],s,GL):ni(a[115]),gy)},i(a){e||(fe(i,a),e=!0)},o(a){we(i,a),e=!1},d(a){i&&i.d(a)}}}function aH(t){let e,n;return e=new NL({}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function sH(t){let e,n,r,i=t[31]&&(t[31]>1||t[32])&&Vy(t),a=t[31]!==1&&t[5].length>1&&Sy(t);return{c(){i&&i.c(),e=pt(),a&&a.c(),n=fn()},l(s){i&&i.l(s),e=ht(s),a&&a.l(s),n=fn()},m(s,o){i&&i.m(s,o),_e(s,e,o),a&&a.m(s,o),_e(s,n,o),r=!0},p(s,o){s[31]&&(s[31]>1||s[32])?i?(i.p(s,o),o[1]&3&&fe(i,1)):(i=Vy(s),i.c(),fe(i,1),i.m(e.parentNode,e)):i&&(en(),we(i,1,1,()=>{i=null}),tn()),s[31]!==1&&s[5].length>1?a?(a.p(s,o),o[0]&32|o[1]&1&&fe(a,1)):(a=Sy(s),a.c(),fe(a,1),a.m(n.parentNode,n)):a&&(en(),we(a,1,1,()=>{a=null}),tn())},i(s){r||(fe(i),fe(a),r=!0)},o(s){we(i),we(a),r=!1},d(s){s&&(oe(e),oe(n)),i&&i.d(s),a&&a.d(s)}}}function oH(t){let e;const n=t[77]["disabled-icon"],r=ei(n,t,t[115],yy),i=r||lH();return{c(){i&&i.c()},l(a){i&&i.l(a)},m(a,s){i&&i.m(a,s),e=!0},p(a,s){r&&r.p&&(!e||s[3]&4194304)&&ti(r,n,a,a[115],e?ri(n,a[115],s,WL):ni(a[115]),yy)},i(a){e||(fe(i,a),e=!0)},o(a){we(i,a),e=!1},d(a){i&&i.d(a)}}}function Vy(t){let e,n,r;function i(s){t[102](s)}let a={angle:20,$$slots:{default:[cH]},$$scope:{ctx:t}};return t[51]!==void 0&&(a.wiggle=t[51]),e=new IL({props:a}),uc.push(()=>X8(e,"wiggle",i)),{c(){on(e.$$.fragment)},l(s){sn(e.$$.fragment,s)},m(s,o){an(e,s,o),r=!0},p(s,o){const u={};o[0]&32|o[1]&7|o[3]&4194304&&(u.$$scope={dirty:o,ctx:s}),!n&&o[1]&1048576&&(n=!0,u.wiggle=s[51],j8(()=>n=!1)),e.$set(u)},i(s){r||(fe(e.$$.fragment,s),r=!0)},o(s){we(e.$$.fragment,s),r=!1},d(s){rn(e,s)}}}function cH(t){var a;let e,n=((a=t[32])==null?void 0:a.call(t,t[5].length,t[31]))+"",r,i;return{c(){e=Oe("span"),r=nr(n),this.h()},l(s){e=Ne(s,"SPAN",{class:!0});var o=ot(e);r=tr(o,n),o.forEach(oe),this.h()},h(){ie(e,"class",i="max-select-msg "+t[33]+" svelte-1v0qqru")},m(s,o){_e(s,e,o),de(e,r)},p(s,o){var u;o[0]&32|o[1]&3&&n!==(n=((u=s[32])==null?void 0:u.call(s,s[5].length,s[31]))+"")&&$r(r,n),o[1]&4&&i!==(i="max-select-msg "+s[33]+" svelte-1v0qqru")&&ie(e,"class",i)},d(s){s&&oe(e)}}}function Sy(t){let e,n,r,i;const a=t[77]["remove-icon"],s=ei(a,t,t[115],by),o=s||uH();return{c(){e=Oe("button"),o&&o.c(),this.h()},l(u){e=Ne(u,"BUTTON",{type:!0,class:!0,title:!0});var h=ot(e);o&&o.l(h),h.forEach(oe),this.h()},h(){ie(e,"type","button"),ie(e,"class","remove remove-all svelte-1v0qqru"),ie(e,"title",t[40])},m(u,h){_e(u,e,h),o&&o.m(e,null),n=!0,r||(i=[ct(e,"mouseup",wa(t[61])),ct(e,"keydown",t[62](t[61]))],r=!0)},p(u,h){s&&s.p&&(!n||h[3]&4194304)&&ti(s,a,u,u[115],n?ri(a,u[115],h,qL):ni(u[115]),by),(!n||h[1]&512)&&ie(e,"title",u[40])},i(u){n||(fe(o,u),n=!0)},o(u){we(o,u),n=!1},d(u){u&&oe(e),o&&o.d(u),r=!1,Ss(i)}}}function uH(t){let e,n;return e=new e7({props:{width:"15px"}}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},p:Bt,i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function lH(t){let e,n;return e=new CL({props:{width:"14pt",style:"margin: 0 2pt;","data-name":"disabled-icon"}}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},p:Bt,i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function Ey(t){let e,n,r,i,a,s,o=qi(t[2].slice(0,Math.max(0,t[30]??0)||1/0)),u=[];for(let y=0;y<o.length;y+=1)u[y]=zy(hy(t,o,y));const h=y=>we(u[y],1,1,()=>{u[y]=null});let p=t[4]&&Iy(cp(t));return{c(){e=Oe("ul");for(let y=0;y<u.length;y+=1)u[y].c();n=pt(),p&&p.c(),this.h()},l(y){e=Ne(y,"UL",{class:!0,role:!0,"aria-multiselectable":!0,"aria-expanded":!0,"aria-disabled":!0,style:!0});var w=ot(e);for(let P=0;P<u.length;P+=1)u[P].l(w);n=ht(w),p&&p.l(w),w.forEach(oe),this.h()},h(){ie(e,"class",r="options "+t[46]+" svelte-1v0qqru"),ie(e,"role","listbox"),ie(e,"aria-multiselectable",i=t[31]===null||t[31]>1),ie(e,"aria-expanded",t[8]),ie(e,"aria-disabled",a=t[50]?"true":null),ie(e,"style",t[49]),ln(e,"hidden",!t[8])},m(y,w){_e(y,e,w);for(let P=0;P<u.length;P+=1)u[P]&&u[P].m(e,null);de(e,n),p&&p.m(e,null),t[113](e),s=!0},p(y,w){if(w[0]&1128267781|w[1]&100663360|w[3]&4194304){o=qi(y[2].slice(0,Math.max(0,y[30]??0)||1/0));let P;for(P=0;P<o.length;P+=1){const N=hy(y,o,P);u[P]?(u[P].p(N,w),fe(u[P],1)):(u[P]=zy(N),u[P].c(),fe(u[P],1),u[P].m(e,n))}for(en(),P=o.length;P<u.length;P+=1)h(P);tn()}y[4]?p?(p.p(cp(y),w),w[0]&16&&fe(p,1)):(p=Iy(cp(y)),p.c(),fe(p,1),p.m(e,null)):p&&(en(),we(p,1,1,()=>{p=null}),tn()),(!s||w[1]&32768&&r!==(r="options "+y[46]+" svelte-1v0qqru"))&&ie(e,"class",r),(!s||w[1]&1&&i!==(i=y[31]===null||y[31]>1))&&ie(e,"aria-multiselectable",i),(!s||w[0]&256)&&ie(e,"aria-expanded",y[8]),(!s||w[1]&524288&&a!==(a=y[50]?"true":null))&&ie(e,"aria-disabled",a),(!s||w[1]&262144)&&ie(e,"style",y[49]),(!s||w[0]&256|w[1]&32768)&&ln(e,"hidden",!y[8])},i(y){if(!s){for(let w=0;w<o.length;w+=1)fe(u[w]);fe(p),s=!0}},o(y){u=u.filter(UL);for(let w=0;w<u.length;w+=1)we(u[w]);we(p),s=!1},d(y){y&&oe(e),jf(u,y),p&&p.d(),t[113](null)}}}function dH(t){let e=zn(t[126])+"",n;return{c(){n=nr(e)},l(r){n=tr(r,e)},m(r,i){_e(r,n,i)},p(r,i){i[0]&1073741828&&e!==(e=zn(r[126])+"")&&$r(n,e)},d(r){r&&oe(n)}}}function fH(t){let e,n=zn(t[126])+"",r;return{c(){e=new Nm(!1),r=fn(),this.h()},l(i){e=Tm(i,!1),r=fn(),this.h()},h(){e.a=r},m(i,a){e.m(n,i,a),_e(i,r,a)},p(i,a){a[0]&1073741828&&n!==(n=zn(i[126])+"")&&e.p(n)},d(i){i&&(oe(r),e.d())}}}function hH(t){let e;function n(a,s){return a[37]?fH:dH}let r=n(t),i=r(t);return{c(){i.c(),e=fn()},l(a){i.l(a),e=fn()},m(a,s){i.m(a,s),_e(a,e,s)},p(a,s){r===(r=n(a))&&i?i.p(a,s):(i.d(1),i=r(a),i&&(i.c(),i.m(e.parentNode,e)))},d(a){a&&oe(e),i.d(a)}}}function pH(t){let e;const n=t[77].default,r=ei(n,t,t[115],py),i=r||hH(t);return{c(){i&&i.c()},l(a){i&&i.l(a)},m(a,s){i&&i.m(a,s),e=!0},p(a,s){r?r.p&&(!e||s[0]&1073741828|s[3]&4194304)&&ti(r,n,a,a[115],e?ri(n,a[115],s,FL):ni(a[115]),py):i&&i.p&&(!e||s[0]&1073741828|s[1]&64)&&i.p(a,e?s:[-1,-1,-1,-1,-1])},i(a){e||(fe(i,a),e=!0)},o(a){we(i,a),e=!1},d(a){i&&i.d(a)}}}function zy(t){let e,n,r,i,a,s,o;const u=t[77].option,h=ei(u,t,t[115],my),p=h||pH(t);function y(...N){return t[103](t[50],t[126],...N)}function w(){return t[104](t[50],t[133])}function P(){return t[105](t[50],t[133])}return{c(){e=Oe("li"),p&&p.c(),this.h()},l(N){e=Ne(N,"LI",{title:!0,class:!0,role:!0,"aria-selected":!0,style:!0});var O=ot(e);p&&p.l(O),O.forEach(oe),this.h()},h(){ie(e,"title",n=t[50]?t[130]:t[56](t[127])&&t[129]||t[128]),ie(e,"class",r=t[24]+" "+(t[131]?t[22]:"")+" svelte-1v0qqru"),ie(e,"role","option"),ie(e,"aria-selected","false"),ie(e,"style",i=u0(t[126],"option")+" "+t[25]),ln(e,"selected",t[56](t[127])),ln(e,"active",t[131]),ln(e,"disabled",t[50])},m(N,O){_e(N,e,O),p&&p.m(e,null),a=!0,s||(o=[ct(e,"mousedown",wa(t[79])),ct(e,"mouseup",wa(y)),ct(e,"mouseover",w),ct(e,"focus",P),ct(e,"mouseout",t[106]),ct(e,"blur",t[107])],s=!0)},p(N,O){t=N,h?h.p&&(!a||O[0]&1073741828|O[3]&4194304)&&ti(h,u,t,t[115],a?ri(u,t[115],O,ZL):ni(t[115]),my):p&&p.p&&(!a||O[0]&1073741828|O[1]&64|O[3]&4194304)&&p.p(t,a?O:[-1,-1,-1,-1,-1]),(!a||O[0]&1073741828|O[1]&33554432&&n!==(n=t[50]?t[130]:t[56](t[127])&&t[129]||t[128]))&&ie(e,"title",n),(!a||O[0]&20971521&&r!==(r=t[24]+" "+(t[131]?t[22]:"")+" svelte-1v0qqru"))&&ie(e,"class",r),(!a||O[0]&1107296260&&i!==(i=u0(t[126],"option")+" "+t[25]))&&ie(e,"style",i),(!a||O[0]&1094713349|O[1]&33554432)&&ln(e,"selected",t[56](t[127])),(!a||O[0]&20971521)&&ln(e,"active",t[131]),(!a||O[0]&1094713349)&&ln(e,"disabled",t[50])},i(N){a||(fe(p,N),a=!0)},o(N){we(p,N),a=!1},d(N){N&&oe(e),p&&p.d(N),s=!1,Ss(o)}}}function Iy(t){let e,n,r=t[124]&&Ly(op(t));return{c(){r&&r.c(),e=fn()},l(i){r&&r.l(i),e=fn()},m(i,a){r&&r.m(i,a),_e(i,e,a),n=!0},p(i,a){i[124]?r?(r.p(op(i),a),a[0]&68660|a[1]&16&&fe(r,1)):(r=Ly(op(i)),r.c(),fe(r,1),r.m(e.parentNode,e)):r&&(en(),we(r,1,1,()=>{r=null}),tn())},i(i){n||(fe(r),n=!0)},o(i){we(r),n=!1},d(i){i&&oe(e),r&&r.d(i)}}}function Ly(t){let e,n,r,i,a;const s=t[77]["user-msg"],o=ei(s,t,t[115],fy),u=o||mH(t);return{c(){e=Oe("li"),u&&u.c(),this.h()},l(h){e=Ne(h,"LI",{title:!0,role:!0,"aria-selected":!0,class:!0});var p=ot(e);u&&u.l(p),p.forEach(oe),this.h()},h(){ie(e,"title",t[10]),ie(e,"role","option"),ie(e,"aria-selected","false"),ie(e,"class",n="user-msg "+t[28]+" "+(t[52]?t[23]:"")+" svelte-1v0qqru"),ln(e,"active",t[52]),Yr(e,"cursor",{dupe:"not-allowed",create:"pointer","no-match":"default"}[t[124]])},m(h,p){_e(h,e,p),u&&u.m(e,null),r=!0,i||(a=[ct(e,"mousedown",wa(t[78])),ct(e,"mouseup",wa(t[108])),ct(e,"mouseover",t[109]),ct(e,"focus",t[110]),ct(e,"mouseout",t[111]),ct(e,"blur",t[112])],i=!0)},p(h,p){o?o.p&&(!r||p[0]&101428|p[1]&16|p[3]&4194304)&&ti(o,s,h,h[115],r?ri(s,h[115],p,DL):ni(h[115]),fy):u&&u.p&&(!r||p[0]&101428|p[1]&16)&&u.p(h,r?p:[-1,-1,-1,-1,-1]),(!r||p[0]&1024)&&ie(e,"title",h[10]),(!r||p[0]&276824064|p[1]&2097152&&n!==(n="user-msg "+h[28]+" "+(h[52]?h[23]:"")+" svelte-1v0qqru"))&&ie(e,"class",n),(!r||p[0]&276824064|p[1]&2097152)&&ln(e,"active",h[52]),p[0]&68660|p[1]&16&&Yr(e,"cursor",{dupe:"not-allowed",create:"pointer","no-match":"default"}[h[124]])},i(h){r||(fe(u,h),r=!0)},o(h){we(u,h),r=!1},d(h){h&&oe(e),u&&u.d(h),i=!1,Ss(a)}}}function mH(t){let e=t[125]+"",n;return{c(){n=nr(e)},l(r){n=tr(r,e)},m(r,i){_e(r,n,i)},p(r,i){i[0]&101428|i[1]&16&&e!==(e=r[125]+"")&&$r(n,e)},d(r){r&&oe(n)}}}function bH(t){var m;let e,n,r,i,a,s,o=[],u=new Map,h,p,y,w,P,N,O,z,j,I,A,U,H,X,C,F,S;Yp(t[94]);const R=t[77]["expand-icon"],E=ei(R,t,t[115],ky),L=E||$L();let c=qi(t[5]);const l=V=>V[16]?[V[17](V[126]),V[133]]:V[17](V[126]);for(let V=0;V<c.length;V+=1){let B=vy(t,c,V),k=l(B);u.set(k,o[V]=Ny(k,B))}const f=t[77]["after-input"],b=ei(f,t,t[115],xy);let g=t[29]&&Oy(t);const v=[oH,sH],M=[];function x(V,B){return V[50]?0:V[5].length>0?1:-1}~(I=x(t))&&(A=M[I]=v[I](t));let d=(t[4]&&t[35]||((m=t[3])==null?void 0:m.length)>0)&&Ey(t);return{c(){e=Oe("div"),n=Oe("input"),i=pt(),L&&L.c(),a=pt(),s=Oe("ul");for(let V=0;V<o.length;V+=1)o[V].c();h=pt(),p=Oe("input"),N=pt(),b&&b.c(),z=pt(),g&&g.c(),j=pt(),A&&A.c(),U=pt(),d&&d.c(),this.h()},l(V){e=Ne(V,"DIV",{class:!0,title:!0,"data-id":!0,role:!0,tabindex:!0,style:!0});var B=ot(e);n=Ne(B,"INPUT",{name:!0,tabindex:!0,"aria-hidden":!0,"aria-label":!0,class:!0}),i=ht(B),L&&L.l(B),a=ht(B),s=Ne(B,"UL",{class:!0,"aria-label":!0,style:!0});var k=ot(s);for(let Z=0;Z<o.length;Z+=1)o[Z].l(k);h=ht(k),p=Ne(k,"INPUT",{class:!0,style:!0,id:!0,autocomplete:!0,inputmode:!0,pattern:!0,placeholder:!0,"aria-invalid":!0,ondrop:!0}),N=ht(k),b&&b.l(k),k.forEach(oe),z=ht(B),g&&g.l(B),j=ht(B),A&&A.l(B),U=ht(B),d&&d.l(B),B.forEach(oe),this.h()},h(){ie(n,"name",t[34]),n.required=t[43],n.value=r=t[5].length>=Number(t[43])?JSON.stringify(t[5]):null,ie(n,"tabindex","-1"),ie(n,"aria-hidden","true"),ie(n,"aria-label","ignore this, used only to prevent form submission if select is required but empty"),ie(n,"class","form-control svelte-1v0qqru"),ie(p,"class",y=Uf(t[19])+" svelte-1v0qqru"),ie(p,"style",t[20]),ie(p,"id",t[18]),p.disabled=t[50],ie(p,"autocomplete",t[12]),ie(p,"inputmode",t[21]),ie(p,"pattern",t[38]),ie(p,"placeholder",w=t[5].length==0?t[39]:null),ie(p,"aria-invalid",P=t[7]?"true":null),ie(p,"ondrop","return false"),ie(s,"class",O="selected "+t[47]+" svelte-1v0qqru"),ie(s,"aria-label","selected options"),ie(s,"style",t[48]),ie(e,"class",H="multiselect "+t[36]+" svelte-1v0qqru"),ie(e,"title",X=t[50]?t[14]:null),ie(e,"data-id",t[18]),ie(e,"role","searchbox"),ie(e,"tabindex","-1"),ie(e,"style",t[45]),ln(e,"disabled",t[50]),ln(e,"single",t[31]===1),ln(e,"open",t[8]),ln(e,"invalid",t[7])},m(V,B){_e(V,e,B),de(e,n),t[95](n),de(e,i),L&&L.m(e,null),de(e,a),de(e,s);for(let k=0;k<o.length;k+=1)o[k]&&o[k].m(s,null);de(s,h),de(s,p),t[100](p),ms(p,t[4]),de(s,N),b&&b.m(s,null),de(e,z),g&&g.m(e,null),de(e,j),~I&&M[I].m(e,null),de(e,U),d&&d.m(e,null),t[114](e),C=!0,F||(S=[ct(window,"click",t[63]),ct(window,"touchstart",t[63]),ct(window,"resize",t[94]),ct(n,"invalid",t[96]),ct(p,"input",t[101]),ct(p,"mouseup",Yw(wa(t[59]))),ct(p,"keydown",wa(t[60])),ct(p,"focus",t[80]),ct(p,"focus",t[59]),ct(p,"input",t[66]),ct(p,"blur",t[81]),ct(p,"change",t[82]),ct(p,"click",t[83]),ct(p,"keydown",t[84]),ct(p,"keyup",t[85]),ct(p,"mousedown",t[86]),ct(p,"mouseenter",t[87]),ct(p,"mouseleave",t[88]),ct(p,"touchcancel",t[89]),ct(p,"touchend",t[90]),ct(p,"touchmove",t[91]),ct(p,"touchstart",t[92]),ct(e,"mouseup",wa(t[59]))],F=!0)},p(V,B){var Z;if((!C||B[1]&8)&&ie(n,"name",V[34]),(!C||B[1]&4096)&&(n.required=V[43]),(!C||B[0]&32|B[1]&4096&&r!==(r=V[5].length>=Number(V[43])?JSON.stringify(V[5]):null)&&n.value!==r)&&(n.value=r),E&&E.p&&(!C||B[0]&256|B[3]&4194304)&&ti(E,R,V,V[115],C?ri(R,V[115],B,_L):ni(V[115]),ky),B[0]&201523232|B[1]&143141952|B[2]&13|B[3]&4194304){c=qi(V[5]),en();for(let q=0;q<o.length;q+=1)o[q].r();o=uP(o,B,l,1,V,c,u,s,cP,Ny,h,vy);for(let q=0;q<o.length;q+=1)o[q].a();tn()}(!C||B[0]&524288&&y!==(y=Uf(V[19])+" svelte-1v0qqru"))&&ie(p,"class",y),(!C||B[0]&1048576)&&ie(p,"style",V[20]),(!C||B[0]&262144)&&ie(p,"id",V[18]),(!C||B[1]&524288)&&(p.disabled=V[50]),(!C||B[0]&4096)&&ie(p,"autocomplete",V[12]),(!C||B[0]&2097152)&&ie(p,"inputmode",V[21]),(!C||B[1]&128)&&ie(p,"pattern",V[38]),(!C||B[0]&32|B[1]&256&&w!==(w=V[5].length==0?V[39]:null))&&ie(p,"placeholder",w),(!C||B[0]&128&&P!==(P=V[7]?"true":null))&&ie(p,"aria-invalid",P),B[0]&16&&p.value!==V[4]&&ms(p,V[4]),b&&b.p&&(!C||B[0]&262560|B[1]&528640|B[3]&4194304)&&ti(b,f,V,V[115],C?ri(f,V[115],B,YL):ni(V[115]),xy),(!C||B[1]&65536&&O!==(O="selected "+V[47]+" svelte-1v0qqru"))&&ie(s,"class",O),(!C||B[1]&131072)&&ie(s,"style",V[48]),V[29]?g?(g.p(V,B),B[0]&536870912&&fe(g,1)):(g=Oy(V),g.c(),fe(g,1),g.m(e,j)):g&&(en(),we(g,1,1,()=>{g=null}),tn());let k=I;I=x(V),I===k?~I&&M[I].p(V,B):(A&&(en(),we(M[k],1,1,()=>{M[k]=null}),tn()),~I?(A=M[I],A?A.p(V,B):(A=M[I]=v[I](V),A.c()),fe(A,1),A.m(e,U)):A=null),V[4]&&V[35]||((Z=V[3])==null?void 0:Z.length)>0?d?(d.p(V,B),B[0]&24|B[1]&16&&fe(d,1)):(d=Ey(V),d.c(),fe(d,1),d.m(e,null)):d&&(en(),we(d,1,1,()=>{d=null}),tn()),(!C||B[1]&32&&H!==(H="multiselect "+V[36]+" svelte-1v0qqru"))&&ie(e,"class",H),(!C||B[0]&16384|B[1]&524288&&X!==(X=V[50]?V[14]:null))&&ie(e,"title",X),(!C||B[0]&262144)&&ie(e,"data-id",V[18]),(!C||B[1]&16384)&&ie(e,"style",V[45]),(!C||B[1]&524320)&&ln(e,"disabled",V[50]),(!C||B[1]&33)&&ln(e,"single",V[31]===1),(!C||B[0]&256|B[1]&32)&&ln(e,"open",V[8]),(!C||B[0]&128|B[1]&32)&&ln(e,"invalid",V[7])},i(V){if(!C){fe(L,V);for(let B=0;B<c.length;B+=1)fe(o[B]);fe(b,V),fe(g),fe(A),fe(d),C=!0}},o(V){we(L,V);for(let B=0;B<o.length;B+=1)we(o[B]);we(b,V),we(g),we(A),we(d),C=!1},d(V){V&&oe(e),t[95](null),L&&L.d(V);for(let B=0;B<o.length;B+=1)o[B].d();t[100](null),b&&b.d(V),g&&g.d(),~I&&M[I].d(),d&&d.d(),t[114](null),F=!1,Ss(S)}}}function yH(t,e,n){let r,{$$slots:i={},$$scope:a}=e,{activeIndex:s=null}=e,{activeOption:o=null}=e,{createOptionMsg:u="Create this option..."}=e,{allowUserOptions:h=!1}=e,{allowEmpty:p=!1}=e,{autocomplete:y="off"}=e,{autoScroll:w=!0}=e,{breakpoint:P=800}=e,{defaultDisabledTitle:N="This option is disabled"}=e,{disabled:O=!1}=e,{disabledInputTitle:z="This input is disabled"}=e,{duplicateOptionMsg:j="This option is already selected"}=e,{duplicates:I=!1}=e,{key:A=D=>`${zn(D)}`.toLowerCase()}=e,{filterFunc:U=(D,Mt)=>Mt?`${zn(D)}`.toLowerCase().includes(Mt.toLowerCase()):!0}=e,{closeDropdownOnSelect:H="desktop"}=e,{form_input:X=null}=e,{highlightMatches:C=!0}=e,{id:F=null}=e,{input:S=null}=e,{inputClass:R=""}=e,{inputStyle:E=null}=e,{inputmode:L=null}=e,{invalid:c=!1}=e,{liActiveOptionClass:l=""}=e,{liActiveUserMsgClass:f=""}=e,{liOptionClass:b=""}=e,{liOptionStyle:g=null}=e,{liSelectedClass:v=""}=e,{liSelectedStyle:M=null}=e,{liUserMsgClass:x=""}=e,{loading:d=!1}=e,{matchingOptions:m=[]}=e,{maxOptions:V=void 0}=e,{maxSelect:B=null}=e,{maxSelectMsg:k=(D,Mt)=>Mt>1?`${D}/${Mt}`:""}=e,{maxSelectMsgClass:Z=""}=e,{name:q=null}=e,{noMatchingOptionsMsg:W="No matching options"}=e,{open:J=!1}=e,{options:_}=e,{outerDiv:K=null}=e,{outerDivClass:se=""}=e,{parseLabelsAsHtml:pe=!1}=e,{pattern:re=null}=e,{placeholder:Fe=null}=e,{removeAllTitle:Ce="Remove all"}=e,{removeBtnTitle:le="Remove"}=e,{minSelect:Ye=null}=e,{required:je=!1}=e,{resetFilterOnAdd:ge=!0}=e,{searchText:Ke=""}=e,{selected:te=(_==null?void 0:_.filter(D=>D instanceof Object&&(D==null?void 0:D.preselected)).slice(0,B??void 0))??[]}=e,{sortSelected:ce=!1}=e,{selectedOptionsDraggable:Ve=!ce}=e,{style:Ue=null}=e,{ulOptionsClass:ue=""}=e,{ulSelectedClass:lt=""}=e,{ulSelectedStyle:We=null}=e,{ulOptionsStyle:xe=null}=e,{value:yt=null}=e;const $e=D=>{n(67,yt=B===1?D[0]??null:D)},Se=D=>{B===1?n(5,te=D?[D]:[]):n(5,te=D??[])};let gt=!1;(_==null?void 0:_.length)>0||(h||d||O||p?_=[]:console.error("MultiSelect received no options")),B!==null&&B<1&&console.error(`MultiSelect's maxSelect must be null or positive integer, got ${B}`),Array.isArray(te)||console.error(`MultiSelect's selected prop should always be an array, got ${te}`),B&&typeof je=="number"&&je>B&&console.error(`MultiSelect maxSelect=${B} < required=${je}, makes it impossible for users to submit a valid form`),pe&&h&&console.warn("Don't combine parseLabelsAsHtml and allowUserOptions. It's susceptible to XSS attacks!"),ce&&Ve&&console.warn("MultiSelect's sortSelected and selectedOptionsDraggable should not be combined as any user re-orderings of selected options will be undone by sortSelected on component re-renders."),h&&!u&&u!==null&&console.error(`MultiSelect has allowUserOptions=${h} but createOptionMsg=${u} is falsy. This prevents the "Add option" <span> from showing up, resulting in a confusing user experience.`),V&&(typeof V!="number"||V<0||V%1!=0)&&console.error(`MultiSelect's maxOptions must be undefined or a positive integer, got ${V}`);const De=B8();let ve=!1,vt;if(s!==null&&!m[s])throw`Run time error, activeIndex=${s} is out of bounds, matchingOptions.length=${m.length}`;function Ge(D,Mt){B&&B>1&&te.length>=B&&n(51,gt=!0),!isNaN(Number(D))&&typeof te.map(zn)[0]=="number"&&(D=Number(D));const cn=te.map(A).includes(A(D));if((B===null||B===1||te.length<B)&&(I||!cn)){if(!_.includes(D)&&[!0,"append"].includes(h)&&Ke.length>0&&(typeof _[0]=="object"?D={label:Ke}:(["number","undefined"].includes(typeof _[0])&&!isNaN(Number(Ke))?D=Number(Ke):D=Ke,De("create",{option:D})),h==="append"&&n(3,_=[..._,D])),ge&&n(4,Ke=""),["",void 0,null].includes(D)){console.error(`MultiSelect: encountered falsy option ${D}`);return}B===1?n(5,te=[D]):(n(5,te=[...te,D]),ce===!0?n(5,te=te.sort((Ph,rd)=>{const[ea,qc]=[zn(Ph),zn(rd)];return`${ea}`.localeCompare(`${qc}`)})):typeof ce=="function"&&n(5,te=te.sort(ce)));const un=te.length===B,Io=H===!0||H==="desktop"&&vt<P;un||Io?Je(Mt):Io||S==null||S.focus(),De("add",{option:D}),De("change",{option:D,type:"add"}),n(7,c=!1),X==null||X.setCustomValidity("")}}function Pe(D){if(te.length===0)return;const Mt=te.findIndex(un=>A(un)===A(D));let[cn]=te.splice(Mt,1);if(cn===void 0&&h&&(cn=typeof _[0]?{label:D}:D),cn===void 0)return console.error(`Multiselect can't remove selected option ${JSON.stringify(D)}, not found in selected list`);n(5,te=[...te]),n(7,c=!1),X==null||X.setCustomValidity(""),De("remove",{option:cn}),De("change",{option:cn,type:"remove"})}function Tt(D){O||(n(8,J=!0),D instanceof FocusEvent||S==null||S.focus(),De("open",{event:D}))}function Je(D){n(8,J=!1),S==null||S.blur(),n(0,s=null),De("close",{event:D})}async function Ee(D){var Mt;if(D.key==="Escape"||D.key==="Tab")Je(D),n(4,Ke="");else if(D.key==="Enter")D.preventDefault(),o?(te.includes(o)?Pe(o):Ge(o,D),n(4,Ke="")):h&&Ke.length>0?Ge(Ke,D):Tt(D);else if(["ArrowDown","ArrowUp"].includes(D.key)){if(s===null&&m.length>0){n(0,s=0);return}else if(h&&!m.length&&Ke.length>0){n(52,ve=!ve);return}else if(s===null)return;D.preventDefault();const cn=D.key==="ArrowUp"?-1:1;if(n(0,s=(s+cn)%m.length),s<0&&n(0,s=m.length-1),w){await Kw();const un=document.querySelector("ul.options > li.active");un&&((Mt=un.scrollIntoViewIfNeeded)==null||Mt.call(un))}}else D.key==="Backspace"&&te.length>0&&!Ke?Pe(te.at(-1)):m.length>0&&n(0,s=0)}function Ot(){De("removeAll",{options:te}),De("change",{options:te,type:"removeAll"}),n(5,te=[]),n(4,Ke="")}const et=D=>Mt=>{["Enter","Space"].includes(Mt.code)&&(Mt.preventDefault(),D())};function ze(D){K&&!K.contains(D.target)&&Je(D)}let wt=null;const tt=D=>Mt=>{if(!Mt.dataTransfer)return;Mt.dataTransfer.dropEffect="move";const cn=parseInt(Mt.dataTransfer.getData("text/plain")),un=[...te];cn<D?(un.splice(D+1,0,un[cn]),un.splice(cn,1)):(un.splice(D,0,un[cn]),un.splice(cn+1,1)),n(5,te=un),n(54,wt=null)},Ie=D=>Mt=>{Mt.dataTransfer&&(Mt.dataTransfer.effectAllowed="move",Mt.dataTransfer.dropEffect="move",Mt.dataTransfer.setData("text/plain",`${D}`))};let xt;function nt(D){var rd;if(!C||typeof CSS>"u"||!CSS.highlights)return;CSS.highlights.clear();const Mt=(rd=D==null?void 0:D.target)==null?void 0:rd.value.trim().toLowerCase();if(!Mt)return;const cn=document.createTreeWalker(xt,NodeFilter.SHOW_TEXT,{acceptNode:ea=>(ea==null?void 0:ea.textContent)===W?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}),un=[];let Io=cn.nextNode();for(;Io;)un.push(Io),Io=cn.nextNode();const Ph=un.map(ea=>{var xb;const qc=(xb=ea.textContent)==null?void 0:xb.toLowerCase(),gb=[];let Mh=0;for(;qc&&Mh<qc.length;){const Lo=qc.indexOf(Mt,Mh);if(Lo===-1)break;gb.push(Lo),Mh=Lo+Mt.length}return gb.map(Lo=>{const kh=new Range;return kh.setStart(ea,Lo),kh.setEnd(ea,Lo+Mt.length),kh})});CSS.highlights.set("sms-search-matches",new Highlight(...Ph.flat()))}function Le(D){Bn.call(this,t,D)}function Vt(D){Bn.call(this,t,D)}function rt(D){Bn.call(this,t,D)}function He(D){Bn.call(this,t,D)}function St(D){Bn.call(this,t,D)}function it(D){Bn.call(this,t,D)}function Ae(D){Bn.call(this,t,D)}function Et(D){Bn.call(this,t,D)}function at(D){Bn.call(this,t,D)}function Re(D){Bn.call(this,t,D)}function zt(D){Bn.call(this,t,D)}function st(D){Bn.call(this,t,D)}function Be(D){Bn.call(this,t,D)}function Pt(D){Bn.call(this,t,D)}function vn(D){Bn.call(this,t,D)}function wn(D){Bn.call(this,t,D)}function Pn(){n(53,vt=window.innerWidth)}function Mn(D){uc[D?"unshift":"push"](()=>{X=D,n(1,X)})}const kn=()=>{n(7,c=!0);let D;B&&B>1&&Number(je)>1?D=`Please select between ${je} and ${B} options`:Number(je)>1?D=`Please select at least ${je} options`:D="Please select an option",X==null||X.setCustomValidity(D)},pr=D=>Pe(D),mr=D=>Pe(D),br=D=>n(54,wt=D);function yr(D){uc[D?"unshift":"push"](()=>{S=D,n(6,S)})}function gr(){Ke=this.value,n(4,Ke)}function xr(D){gt=D,n(51,gt)}const vr=(D,Mt,cn)=>{D||Ge(Mt,cn)},wr=(D,Mt)=>{D||n(0,s=Mt)},Pr=(D,Mt)=>{D||n(0,s=Mt)},Mr=()=>n(0,s=null),kr=()=>n(0,s=null),Tr=D=>{h&&Ge(Ke,D)},Nr=()=>n(52,ve=!0),Zc=()=>n(52,ve=!0),Xw=()=>n(52,ve=!1),jw=()=>n(52,ve=!1);function Cw(D){uc[D?"unshift":"push"](()=>{xt=D,n(55,xt)})}function Uw(D){uc[D?"unshift":"push"](()=>{K=D,n(9,K)})}return t.$$set=D=>{"activeIndex"in D&&n(0,s=D.activeIndex),"activeOption"in D&&n(68,o=D.activeOption),"createOptionMsg"in D&&n(10,u=D.createOptionMsg),"allowUserOptions"in D&&n(11,h=D.allowUserOptions),"allowEmpty"in D&&n(69,p=D.allowEmpty),"autocomplete"in D&&n(12,y=D.autocomplete),"autoScroll"in D&&n(70,w=D.autoScroll),"breakpoint"in D&&n(71,P=D.breakpoint),"defaultDisabledTitle"in D&&n(13,N=D.defaultDisabledTitle),"disabled"in D&&n(50,O=D.disabled),"disabledInputTitle"in D&&n(14,z=D.disabledInputTitle),"duplicateOptionMsg"in D&&n(15,j=D.duplicateOptionMsg),"duplicates"in D&&n(16,I=D.duplicates),"key"in D&&n(17,A=D.key),"filterFunc"in D&&n(72,U=D.filterFunc),"closeDropdownOnSelect"in D&&n(73,H=D.closeDropdownOnSelect),"form_input"in D&&n(1,X=D.form_input),"highlightMatches"in D&&n(74,C=D.highlightMatches),"id"in D&&n(18,F=D.id),"input"in D&&n(6,S=D.input),"inputClass"in D&&n(19,R=D.inputClass),"inputStyle"in D&&n(20,E=D.inputStyle),"inputmode"in D&&n(21,L=D.inputmode),"invalid"in D&&n(7,c=D.invalid),"liActiveOptionClass"in D&&n(22,l=D.liActiveOptionClass),"liActiveUserMsgClass"in D&&n(23,f=D.liActiveUserMsgClass),"liOptionClass"in D&&n(24,b=D.liOptionClass),"liOptionStyle"in D&&n(25,g=D.liOptionStyle),"liSelectedClass"in D&&n(26,v=D.liSelectedClass),"liSelectedStyle"in D&&n(27,M=D.liSelectedStyle),"liUserMsgClass"in D&&n(28,x=D.liUserMsgClass),"loading"in D&&n(29,d=D.loading),"matchingOptions"in D&&n(2,m=D.matchingOptions),"maxOptions"in D&&n(30,V=D.maxOptions),"maxSelect"in D&&n(31,B=D.maxSelect),"maxSelectMsg"in D&&n(32,k=D.maxSelectMsg),"maxSelectMsgClass"in D&&n(33,Z=D.maxSelectMsgClass),"name"in D&&n(34,q=D.name),"noMatchingOptionsMsg"in D&&n(35,W=D.noMatchingOptionsMsg),"open"in D&&n(8,J=D.open),"options"in D&&n(3,_=D.options),"outerDiv"in D&&n(9,K=D.outerDiv),"outerDivClass"in D&&n(36,se=D.outerDivClass),"parseLabelsAsHtml"in D&&n(37,pe=D.parseLabelsAsHtml),"pattern"in D&&n(38,re=D.pattern),"placeholder"in D&&n(39,Fe=D.placeholder),"removeAllTitle"in D&&n(40,Ce=D.removeAllTitle),"removeBtnTitle"in D&&n(41,le=D.removeBtnTitle),"minSelect"in D&&n(42,Ye=D.minSelect),"required"in D&&n(43,je=D.required),"resetFilterOnAdd"in D&&n(75,ge=D.resetFilterOnAdd),"searchText"in D&&n(4,Ke=D.searchText),"selected"in D&&n(5,te=D.selected),"sortSelected"in D&&n(76,ce=D.sortSelected),"selectedOptionsDraggable"in D&&n(44,Ve=D.selectedOptionsDraggable),"style"in D&&n(45,Ue=D.style),"ulOptionsClass"in D&&n(46,ue=D.ulOptionsClass),"ulSelectedClass"in D&&n(47,lt=D.ulSelectedClass),"ulSelectedStyle"in D&&n(48,We=D.ulSelectedStyle),"ulOptionsStyle"in D&&n(49,xe=D.ulOptionsStyle),"value"in D&&n(67,yt=D.value),"$$scope"in D&&n(115,a=D.$$scope)},t.$$.update=()=>{t.$$.dirty[0]&32&&$e(te),t.$$.dirty[2]&32&&Se(yt),t.$$.dirty[0]&196664|t.$$.dirty[2]&1024&&n(2,m=_.filter(D=>U(D,Ke)&&(!te.map(A).includes(A(D))||I))),t.$$.dirty[0]&5&&n(68,o=m[s??-1]??null),t.$$.dirty[0]&32&&n(56,r=D=>te.map(zn).includes(D)),t.$$.dirty[0]&2|t.$$.dirty[1]&4096&&(X==null||X.setCustomValidity(""))},[s,X,m,_,Ke,te,S,c,J,K,u,h,y,N,z,j,I,A,F,R,E,L,l,f,b,g,v,M,x,d,V,B,k,Z,q,W,se,pe,re,Fe,Ce,le,Ye,je,Ve,Ue,ue,lt,We,xe,O,gt,ve,vt,wt,xt,r,Ge,Pe,Tt,Ee,Ot,et,ze,tt,Ie,nt,yt,o,p,w,P,U,H,C,ge,ce,i,Le,Vt,rt,He,St,it,Ae,Et,at,Re,zt,st,Be,Pt,vn,wn,Pn,Mn,kn,pr,mr,br,yr,gr,xr,vr,wr,Pr,Mr,kr,Tr,Nr,Zc,Xw,jw,Cw,Uw,a]}class gH extends oi{constructor(e){super(),ci(this,e,yH,bH,ui,{activeIndex:0,activeOption:68,createOptionMsg:10,allowUserOptions:11,allowEmpty:69,autocomplete:12,autoScroll:70,breakpoint:71,defaultDisabledTitle:13,disabled:50,disabledInputTitle:14,duplicateOptionMsg:15,duplicates:16,key:17,filterFunc:72,closeDropdownOnSelect:73,form_input:1,highlightMatches:74,id:18,input:6,inputClass:19,inputStyle:20,inputmode:21,invalid:7,liActiveOptionClass:22,liActiveUserMsgClass:23,liOptionClass:24,liOptionStyle:25,liSelectedClass:26,liSelectedStyle:27,liUserMsgClass:28,loading:29,matchingOptions:2,maxOptions:30,maxSelect:31,maxSelectMsg:32,maxSelectMsgClass:33,name:34,noMatchingOptionsMsg:35,open:8,options:3,outerDiv:9,outerDivClass:36,parseLabelsAsHtml:37,pattern:38,placeholder:39,removeAllTitle:40,removeBtnTitle:41,minSelect:42,required:43,resetFilterOnAdd:75,searchText:4,selected:5,sortSelected:76,selectedOptionsDraggable:44,style:45,ulOptionsClass:46,ulSelectedClass:47,ulSelectedStyle:48,ulOptionsStyle:49,value:67},null,[-1,-1,-1,-1,-1])}}function xH(t=!0){const e=this,n=new IntersectionObserver(function([r]){const i=r.intersectionRatio;if(i<1){const a=i<=0&&t?"center":"nearest";e.scrollIntoView({block:a,inline:a})}this.disconnect()});return n.observe(e),n}var A8;typeof Element<"u"&&!((A8=Element.prototype)!=null&&A8.scrollIntoViewIfNeeded)&&typeof IntersectionObserver<"u"&&(Element.prototype.scrollIntoViewIfNeeded=xH);var vH=Object.defineProperty,t7=t=>{throw TypeError(t)},wH=(t,e,n)=>e in t?vH(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Y=(t,e,n)=>wH(t,typeof e!="symbol"?e+"":e,n),p2=(t,e,n)=>e.has(t)||t7("Cannot "+n),T=(t,e,n)=>(p2(t,e,"read from private field"),n?n.call(t):e.get(t)),G=(t,e,n)=>e.has(t)?t7("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,n),Q=(t,e,n,r)=>(p2(t,e,"write to private field"),e.set(t,n),n),dt=(t,e,n)=>(p2(t,e,"access private method"),n),n7=(t,e,n,r)=>({set _(i){Q(t,e,i)},get _(){return T(t,e,r)}});class PH{constructor(){Y(this,"isAvailable",!1),Y(this,"isInstantiated",!1),typeof crypto<"u"&&"getRandomValues"in crypto&&(this.isAvailable=!0,this.isInstantiated=!0)}randomBytes(e){if(!this.isAvailable)throw new Error("System random byte generator is not available.");const n=new Uint8Array(e);for(let r=0;r<n.length;r+=65536)crypto.getRandomValues(n.subarray(r,r+Math.min(n.length-r,65536)));return n}}new PH;function MH(t){return t("return this")}const Cr=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:MH(Function);function m2(t,e){return typeof Cr[t]>"u"?e:Cr[t]}let kH=class{constructor(t){Y(this,"__encoding"),this.__encoding=t}decode(t){let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);return e}};const TH=m2("TextDecoder",kH);let NH=class{encode(t){const e=t.length,n=new Uint8Array(e);for(let r=0;r<e;r++)n[r]=t.charCodeAt(r);return n}};const OH=m2("TextEncoder",NH);function Ze(t){return typeof t=="function"}function E1(t,e){const n=Math.ceil(t.length/e);if(n===1)return[t];const r=Array(n);for(let i=0;i<n;i++){const a=i*e;r[i]=t.slice(a,a+e)}return r}function xc(t){const e=t.length;if(e===0)return[];if(e===1)return t[0];let n=0;for(let a=0;a<e;a++)n+=t[a].length;const r=new Array(n);let i=-1;for(let a=0;a<e;a++){const s=t[a];for(let o=0,u=s.length;o<u;o++)r[++i]=s[o]}return r}function VH(t,e){if(!t)throw new Error(Ze(e)?e():e)}function ps(t,e){return VH(t!=null,e),t}function SH(t){throw new Error(`This codepath should be unreachable. Unhandled input: ${t}`)}function r7(t){return(...e)=>{const n=e.length;if(n===0)throw new Error("Must provide one or more arguments");let r=e[0];for(let i=1;i<n;i++)t(e[i],r)&&(r=e[i]);return r}}function EH(){return Number.NaN}const jt=m2("BigInt",EH),zH=jt(0),IH=jt(1),up="0123456789abcdef",l0=new Uint8Array(256),i7=new Uint8Array(256*256);for(let t=0,e=up.length;t<e;t++)l0[up[t].charCodeAt(0)|0]=t|0,t>9&&(l0[up[t].toUpperCase().charCodeAt(0)|0]=t|0);for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)i7[e|n]=l0[t]<<4|l0[n]}function $i(t,e=-1){if(!t)return new Uint8Array;let n=t.startsWith("0x")?2:0;const r=Math.ceil((t.length-n)/2),i=Math.ceil(e===-1?r:e/8),a=new Uint8Array(i),s=i>r?i-r:0;for(let o=s;o<i;o++,n+=2)a[o]=i7[t.charCodeAt(n)<<8|t.charCodeAt(n+1)];return a}var LH=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function a7(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function HH(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(r){var i=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:function(){return t[r]}})}),n}var s7={exports:{}};const AH={},RH=Object.freeze(Object.defineProperty({__proto__:null,default:AH},Symbol.toStringTag,{value:"Module"})),BH=HH(RH);(function(t){(function(e,n){function r(c,l){if(!c)throw new Error(l||"Assertion failed")}function i(c,l){c.super_=l;var f=function(){};f.prototype=l.prototype,c.prototype=new f,c.prototype.constructor=c}function a(c,l,f){if(a.isBN(c))return c;this.negative=0,this.words=null,this.length=0,this.red=null,c!==null&&((l==="le"||l==="be")&&(f=l,l=10),this._init(c||0,l||10,f||"be"))}typeof e=="object"?e.exports=a:n.BN=a,a.BN=a,a.wordSize=26;var s;try{typeof window<"u"&&typeof window.Buffer<"u"?s=window.Buffer:s=BH.Buffer}catch{}a.isBN=function(c){return c instanceof a?!0:c!==null&&typeof c=="object"&&c.constructor.wordSize===a.wordSize&&Array.isArray(c.words)},a.max=function(c,l){return c.cmp(l)>0?c:l},a.min=function(c,l){return c.cmp(l)<0?c:l},a.prototype._init=function(c,l,f){if(typeof c=="number")return this._initNumber(c,l,f);if(typeof c=="object")return this._initArray(c,l,f);l==="hex"&&(l=16),r(l===(l|0)&&l>=2&&l<=36),c=c.toString().replace(/\s+/g,"");var b=0;c[0]==="-"&&(b++,this.negative=1),b<c.length&&(l===16?this._parseHex(c,b,f):(this._parseBase(c,l,b),f==="le"&&this._initArray(this.toArray(),l,f)))},a.prototype._initNumber=function(c,l,f){c<0&&(this.negative=1,c=-c),c<67108864?(this.words=[c&67108863],this.length=1):c<4503599627370496?(this.words=[c&67108863,c/67108864&67108863],this.length=2):(r(c<9007199254740992),this.words=[c&67108863,c/67108864&67108863,1],this.length=3),f==="le"&&this._initArray(this.toArray(),l,f)},a.prototype._initArray=function(c,l,f){if(r(typeof c.length=="number"),c.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(c.length/3),this.words=new Array(this.length);for(var b=0;b<this.length;b++)this.words[b]=0;var g,v,M=0;if(f==="be")for(b=c.length-1,g=0;b>=0;b-=3)v=c[b]|c[b-1]<<8|c[b-2]<<16,this.words[g]|=v<<M&67108863,this.words[g+1]=v>>>26-M&67108863,M+=24,M>=26&&(M-=26,g++);else if(f==="le")for(b=0,g=0;b<c.length;b+=3)v=c[b]|c[b+1]<<8|c[b+2]<<16,this.words[g]|=v<<M&67108863,this.words[g+1]=v>>>26-M&67108863,M+=24,M>=26&&(M-=26,g++);return this._strip()};function o(c,l){var f=c.charCodeAt(l);if(f>=48&&f<=57)return f-48;if(f>=65&&f<=70)return f-55;if(f>=97&&f<=102)return f-87;r(!1,"Invalid character in "+c)}function u(c,l,f){var b=o(c,f);return f-1>=l&&(b|=o(c,f-1)<<4),b}a.prototype._parseHex=function(c,l,f){this.length=Math.ceil((c.length-l)/6),this.words=new Array(this.length);for(var b=0;b<this.length;b++)this.words[b]=0;var g=0,v=0,M;if(f==="be")for(b=c.length-1;b>=l;b-=2)M=u(c,l,b)<<g,this.words[v]|=M&67108863,g>=18?(g-=18,v+=1,this.words[v]|=M>>>26):g+=8;else{var x=c.length-l;for(b=x%2===0?l+1:l;b<c.length;b+=2)M=u(c,l,b)<<g,this.words[v]|=M&67108863,g>=18?(g-=18,v+=1,this.words[v]|=M>>>26):g+=8}this._strip()};function h(c,l,f,b){for(var g=0,v=0,M=Math.min(c.length,f),x=l;x<M;x++){var d=c.charCodeAt(x)-48;g*=b,d>=49?v=d-49+10:d>=17?v=d-17+10:v=d,r(d>=0&&v<b,"Invalid character"),g+=v}return g}a.prototype._parseBase=function(c,l,f){this.words=[0],this.length=1;for(var b=0,g=1;g<=67108863;g*=l)b++;b--,g=g/l|0;for(var v=c.length-f,M=v%b,x=Math.min(v,v-M)+f,d=0,m=f;m<x;m+=b)d=h(c,m,m+b,l),this.imuln(g),this.words[0]+d<67108864?this.words[0]+=d:this._iaddn(d);if(M!==0){var V=1;for(d=h(c,m,c.length,l),m=0;m<M;m++)V*=l;this.imuln(V),this.words[0]+d<67108864?this.words[0]+=d:this._iaddn(d)}this._strip()},a.prototype.copy=function(c){c.words=new Array(this.length);for(var l=0;l<this.length;l++)c.words[l]=this.words[l];c.length=this.length,c.negative=this.negative,c.red=this.red};function p(c,l){c.words=l.words,c.length=l.length,c.negative=l.negative,c.red=l.red}if(a.prototype._move=function(c){p(c,this)},a.prototype.clone=function(){var c=new a(null);return this.copy(c),c},a.prototype._expand=function(c){for(;this.length<c;)this.words[this.length++]=0;return this},a.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},a.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{a.prototype[Symbol.for("nodejs.util.inspect.custom")]=y}catch{a.prototype.inspect=y}else a.prototype.inspect=y;function y(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var w=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],P=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],N=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];a.prototype.toString=function(c,l){c=c||10,l=l|0||1;var f;if(c===16||c==="hex"){f="";for(var b=0,g=0,v=0;v<this.length;v++){var M=this.words[v],x=((M<<b|g)&16777215).toString(16);g=M>>>24-b&16777215,b+=2,b>=26&&(b-=26,v--),g!==0||v!==this.length-1?f=w[6-x.length]+x+f:f=x+f}for(g!==0&&(f=g.toString(16)+f);f.length%l!==0;)f="0"+f;return this.negative!==0&&(f="-"+f),f}if(c===(c|0)&&c>=2&&c<=36){var d=P[c],m=N[c];f="";var V=this.clone();for(V.negative=0;!V.isZero();){var B=V.modrn(m).toString(c);V=V.idivn(m),V.isZero()?f=B+f:f=w[d-B.length]+B+f}for(this.isZero()&&(f="0"+f);f.length%l!==0;)f="0"+f;return this.negative!==0&&(f="-"+f),f}r(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var c=this.words[0];return this.length===2?c+=this.words[1]*67108864:this.length===3&&this.words[2]===1?c+=4503599627370496+this.words[1]*67108864:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-c:c},a.prototype.toJSON=function(){return this.toString(16,2)},s&&(a.prototype.toBuffer=function(c,l){return this.toArrayLike(s,c,l)}),a.prototype.toArray=function(c,l){return this.toArrayLike(Array,c,l)};var O=function(c,l){return c.allocUnsafe?c.allocUnsafe(l):new c(l)};a.prototype.toArrayLike=function(c,l,f){this._strip();var b=this.byteLength(),g=f||Math.max(1,b);r(b<=g,"byte array longer than desired length"),r(g>0,"Requested array length <= 0");var v=O(c,g),M=l==="le"?"LE":"BE";return this["_toArrayLike"+M](v,b),v},a.prototype._toArrayLikeLE=function(c,l){for(var f=0,b=0,g=0,v=0;g<this.length;g++){var M=this.words[g]<<v|b;c[f++]=M&255,f<c.length&&(c[f++]=M>>8&255),f<c.length&&(c[f++]=M>>16&255),v===6?(f<c.length&&(c[f++]=M>>24&255),b=0,v=0):(b=M>>>24,v+=2)}if(f<c.length)for(c[f++]=b;f<c.length;)c[f++]=0},a.prototype._toArrayLikeBE=function(c,l){for(var f=c.length-1,b=0,g=0,v=0;g<this.length;g++){var M=this.words[g]<<v|b;c[f--]=M&255,f>=0&&(c[f--]=M>>8&255),f>=0&&(c[f--]=M>>16&255),v===6?(f>=0&&(c[f--]=M>>24&255),b=0,v=0):(b=M>>>24,v+=2)}if(f>=0)for(c[f--]=b;f>=0;)c[f--]=0},Math.clz32?a.prototype._countBits=function(c){return 32-Math.clz32(c)}:a.prototype._countBits=function(c){var l=c,f=0;return l>=4096&&(f+=13,l>>>=13),l>=64&&(f+=7,l>>>=7),l>=8&&(f+=4,l>>>=4),l>=2&&(f+=2,l>>>=2),f+l},a.prototype._zeroBits=function(c){if(c===0)return 26;var l=c,f=0;return l&8191||(f+=13,l>>>=13),l&127||(f+=7,l>>>=7),l&15||(f+=4,l>>>=4),l&3||(f+=2,l>>>=2),l&1||f++,f},a.prototype.bitLength=function(){var c=this.words[this.length-1],l=this._countBits(c);return(this.length-1)*26+l};function z(c){for(var l=new Array(c.bitLength()),f=0;f<l.length;f++){var b=f/26|0,g=f%26;l[f]=c.words[b]>>>g&1}return l}a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var c=0,l=0;l<this.length;l++){var f=this._zeroBits(this.words[l]);if(c+=f,f!==26)break}return c},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(c){return this.negative!==0?this.abs().inotn(c).iaddn(1):this.clone()},a.prototype.fromTwos=function(c){return this.testn(c-1)?this.notn(c).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return this.negative!==0},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(c){for(;this.length<c.length;)this.words[this.length++]=0;for(var l=0;l<c.length;l++)this.words[l]=this.words[l]|c.words[l];return this._strip()},a.prototype.ior=function(c){return r((this.negative|c.negative)===0),this.iuor(c)},a.prototype.or=function(c){return this.length>c.length?this.clone().ior(c):c.clone().ior(this)},a.prototype.uor=function(c){return this.length>c.length?this.clone().iuor(c):c.clone().iuor(this)},a.prototype.iuand=function(c){var l;this.length>c.length?l=c:l=this;for(var f=0;f<l.length;f++)this.words[f]=this.words[f]&c.words[f];return this.length=l.length,this._strip()},a.prototype.iand=function(c){return r((this.negative|c.negative)===0),this.iuand(c)},a.prototype.and=function(c){return this.length>c.length?this.clone().iand(c):c.clone().iand(this)},a.prototype.uand=function(c){return this.length>c.length?this.clone().iuand(c):c.clone().iuand(this)},a.prototype.iuxor=function(c){var l,f;this.length>c.length?(l=this,f=c):(l=c,f=this);for(var b=0;b<f.length;b++)this.words[b]=l.words[b]^f.words[b];if(this!==l)for(;b<l.length;b++)this.words[b]=l.words[b];return this.length=l.length,this._strip()},a.prototype.ixor=function(c){return r((this.negative|c.negative)===0),this.iuxor(c)},a.prototype.xor=function(c){return this.length>c.length?this.clone().ixor(c):c.clone().ixor(this)},a.prototype.uxor=function(c){return this.length>c.length?this.clone().iuxor(c):c.clone().iuxor(this)},a.prototype.inotn=function(c){r(typeof c=="number"&&c>=0);var l=Math.ceil(c/26)|0,f=c%26;this._expand(l),f>0&&l--;for(var b=0;b<l;b++)this.words[b]=~this.words[b]&67108863;return f>0&&(this.words[b]=~this.words[b]&67108863>>26-f),this._strip()},a.prototype.notn=function(c){return this.clone().inotn(c)},a.prototype.setn=function(c,l){r(typeof c=="number"&&c>=0);var f=c/26|0,b=c%26;return this._expand(f+1),l?this.words[f]=this.words[f]|1<<b:this.words[f]=this.words[f]&~(1<<b),this._strip()},a.prototype.iadd=function(c){var l;if(this.negative!==0&&c.negative===0)return this.negative=0,l=this.isub(c),this.negative^=1,this._normSign();if(this.negative===0&&c.negative!==0)return c.negative=0,l=this.isub(c),c.negative=1,l._normSign();var f,b;this.length>c.length?(f=this,b=c):(f=c,b=this);for(var g=0,v=0;v<b.length;v++)l=(f.words[v]|0)+(b.words[v]|0)+g,this.words[v]=l&67108863,g=l>>>26;for(;g!==0&&v<f.length;v++)l=(f.words[v]|0)+g,this.words[v]=l&67108863,g=l>>>26;if(this.length=f.length,g!==0)this.words[this.length]=g,this.length++;else if(f!==this)for(;v<f.length;v++)this.words[v]=f.words[v];return this},a.prototype.add=function(c){var l;return c.negative!==0&&this.negative===0?(c.negative=0,l=this.sub(c),c.negative^=1,l):c.negative===0&&this.negative!==0?(this.negative=0,l=c.sub(this),this.negative=1,l):this.length>c.length?this.clone().iadd(c):c.clone().iadd(this)},a.prototype.isub=function(c){if(c.negative!==0){c.negative=0;var l=this.iadd(c);return c.negative=1,l._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(c),this.negative=1,this._normSign();var f=this.cmp(c);if(f===0)return this.negative=0,this.length=1,this.words[0]=0,this;var b,g;f>0?(b=this,g=c):(b=c,g=this);for(var v=0,M=0;M<g.length;M++)l=(b.words[M]|0)-(g.words[M]|0)+v,v=l>>26,this.words[M]=l&67108863;for(;v!==0&&M<b.length;M++)l=(b.words[M]|0)+v,v=l>>26,this.words[M]=l&67108863;if(v===0&&M<b.length&&b!==this)for(;M<b.length;M++)this.words[M]=b.words[M];return this.length=Math.max(this.length,M),b!==this&&(this.negative=1),this._strip()},a.prototype.sub=function(c){return this.clone().isub(c)};function j(c,l,f){f.negative=l.negative^c.negative;var b=c.length+l.length|0;f.length=b,b=b-1|0;var g=c.words[0]|0,v=l.words[0]|0,M=g*v,x=M&67108863,d=M/67108864|0;f.words[0]=x;for(var m=1;m<b;m++){for(var V=d>>>26,B=d&67108863,k=Math.min(m,l.length-1),Z=Math.max(0,m-c.length+1);Z<=k;Z++){var q=m-Z|0;g=c.words[q]|0,v=l.words[Z]|0,M=g*v+B,V+=M/67108864|0,B=M&67108863}f.words[m]=B|0,d=V|0}return d!==0?f.words[m]=d|0:f.length--,f._strip()}var I=function(c,l,f){var b=c.words,g=l.words,v=f.words,M=0,x,d,m,V=b[0]|0,B=V&8191,k=V>>>13,Z=b[1]|0,q=Z&8191,W=Z>>>13,J=b[2]|0,_=J&8191,K=J>>>13,se=b[3]|0,pe=se&8191,re=se>>>13,Fe=b[4]|0,Ce=Fe&8191,le=Fe>>>13,Ye=b[5]|0,je=Ye&8191,ge=Ye>>>13,Ke=b[6]|0,te=Ke&8191,ce=Ke>>>13,Ve=b[7]|0,Ue=Ve&8191,ue=Ve>>>13,lt=b[8]|0,We=lt&8191,xe=lt>>>13,yt=b[9]|0,$e=yt&8191,Se=yt>>>13,gt=g[0]|0,De=gt&8191,ve=gt>>>13,vt=g[1]|0,Ge=vt&8191,Pe=vt>>>13,Tt=g[2]|0,Je=Tt&8191,Ee=Tt>>>13,Ot=g[3]|0,et=Ot&8191,ze=Ot>>>13,wt=g[4]|0,tt=wt&8191,Ie=wt>>>13,xt=g[5]|0,nt=xt&8191,Le=xt>>>13,Vt=g[6]|0,rt=Vt&8191,He=Vt>>>13,St=g[7]|0,it=St&8191,Ae=St>>>13,Et=g[8]|0,at=Et&8191,Re=Et>>>13,zt=g[9]|0,st=zt&8191,Be=zt>>>13;f.negative=c.negative^l.negative,f.length=19,x=Math.imul(B,De),d=Math.imul(B,ve),d=d+Math.imul(k,De)|0,m=Math.imul(k,ve);var Pt=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,x=Math.imul(q,De),d=Math.imul(q,ve),d=d+Math.imul(W,De)|0,m=Math.imul(W,ve),x=x+Math.imul(B,Ge)|0,d=d+Math.imul(B,Pe)|0,d=d+Math.imul(k,Ge)|0,m=m+Math.imul(k,Pe)|0;var vn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(vn>>>26)|0,vn&=67108863,x=Math.imul(_,De),d=Math.imul(_,ve),d=d+Math.imul(K,De)|0,m=Math.imul(K,ve),x=x+Math.imul(q,Ge)|0,d=d+Math.imul(q,Pe)|0,d=d+Math.imul(W,Ge)|0,m=m+Math.imul(W,Pe)|0,x=x+Math.imul(B,Je)|0,d=d+Math.imul(B,Ee)|0,d=d+Math.imul(k,Je)|0,m=m+Math.imul(k,Ee)|0;var wn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(wn>>>26)|0,wn&=67108863,x=Math.imul(pe,De),d=Math.imul(pe,ve),d=d+Math.imul(re,De)|0,m=Math.imul(re,ve),x=x+Math.imul(_,Ge)|0,d=d+Math.imul(_,Pe)|0,d=d+Math.imul(K,Ge)|0,m=m+Math.imul(K,Pe)|0,x=x+Math.imul(q,Je)|0,d=d+Math.imul(q,Ee)|0,d=d+Math.imul(W,Je)|0,m=m+Math.imul(W,Ee)|0,x=x+Math.imul(B,et)|0,d=d+Math.imul(B,ze)|0,d=d+Math.imul(k,et)|0,m=m+Math.imul(k,ze)|0;var Pn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Pn>>>26)|0,Pn&=67108863,x=Math.imul(Ce,De),d=Math.imul(Ce,ve),d=d+Math.imul(le,De)|0,m=Math.imul(le,ve),x=x+Math.imul(pe,Ge)|0,d=d+Math.imul(pe,Pe)|0,d=d+Math.imul(re,Ge)|0,m=m+Math.imul(re,Pe)|0,x=x+Math.imul(_,Je)|0,d=d+Math.imul(_,Ee)|0,d=d+Math.imul(K,Je)|0,m=m+Math.imul(K,Ee)|0,x=x+Math.imul(q,et)|0,d=d+Math.imul(q,ze)|0,d=d+Math.imul(W,et)|0,m=m+Math.imul(W,ze)|0,x=x+Math.imul(B,tt)|0,d=d+Math.imul(B,Ie)|0,d=d+Math.imul(k,tt)|0,m=m+Math.imul(k,Ie)|0;var Mn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Mn>>>26)|0,Mn&=67108863,x=Math.imul(je,De),d=Math.imul(je,ve),d=d+Math.imul(ge,De)|0,m=Math.imul(ge,ve),x=x+Math.imul(Ce,Ge)|0,d=d+Math.imul(Ce,Pe)|0,d=d+Math.imul(le,Ge)|0,m=m+Math.imul(le,Pe)|0,x=x+Math.imul(pe,Je)|0,d=d+Math.imul(pe,Ee)|0,d=d+Math.imul(re,Je)|0,m=m+Math.imul(re,Ee)|0,x=x+Math.imul(_,et)|0,d=d+Math.imul(_,ze)|0,d=d+Math.imul(K,et)|0,m=m+Math.imul(K,ze)|0,x=x+Math.imul(q,tt)|0,d=d+Math.imul(q,Ie)|0,d=d+Math.imul(W,tt)|0,m=m+Math.imul(W,Ie)|0,x=x+Math.imul(B,nt)|0,d=d+Math.imul(B,Le)|0,d=d+Math.imul(k,nt)|0,m=m+Math.imul(k,Le)|0;var kn=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(kn>>>26)|0,kn&=67108863,x=Math.imul(te,De),d=Math.imul(te,ve),d=d+Math.imul(ce,De)|0,m=Math.imul(ce,ve),x=x+Math.imul(je,Ge)|0,d=d+Math.imul(je,Pe)|0,d=d+Math.imul(ge,Ge)|0,m=m+Math.imul(ge,Pe)|0,x=x+Math.imul(Ce,Je)|0,d=d+Math.imul(Ce,Ee)|0,d=d+Math.imul(le,Je)|0,m=m+Math.imul(le,Ee)|0,x=x+Math.imul(pe,et)|0,d=d+Math.imul(pe,ze)|0,d=d+Math.imul(re,et)|0,m=m+Math.imul(re,ze)|0,x=x+Math.imul(_,tt)|0,d=d+Math.imul(_,Ie)|0,d=d+Math.imul(K,tt)|0,m=m+Math.imul(K,Ie)|0,x=x+Math.imul(q,nt)|0,d=d+Math.imul(q,Le)|0,d=d+Math.imul(W,nt)|0,m=m+Math.imul(W,Le)|0,x=x+Math.imul(B,rt)|0,d=d+Math.imul(B,He)|0,d=d+Math.imul(k,rt)|0,m=m+Math.imul(k,He)|0;var pr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(pr>>>26)|0,pr&=67108863,x=Math.imul(Ue,De),d=Math.imul(Ue,ve),d=d+Math.imul(ue,De)|0,m=Math.imul(ue,ve),x=x+Math.imul(te,Ge)|0,d=d+Math.imul(te,Pe)|0,d=d+Math.imul(ce,Ge)|0,m=m+Math.imul(ce,Pe)|0,x=x+Math.imul(je,Je)|0,d=d+Math.imul(je,Ee)|0,d=d+Math.imul(ge,Je)|0,m=m+Math.imul(ge,Ee)|0,x=x+Math.imul(Ce,et)|0,d=d+Math.imul(Ce,ze)|0,d=d+Math.imul(le,et)|0,m=m+Math.imul(le,ze)|0,x=x+Math.imul(pe,tt)|0,d=d+Math.imul(pe,Ie)|0,d=d+Math.imul(re,tt)|0,m=m+Math.imul(re,Ie)|0,x=x+Math.imul(_,nt)|0,d=d+Math.imul(_,Le)|0,d=d+Math.imul(K,nt)|0,m=m+Math.imul(K,Le)|0,x=x+Math.imul(q,rt)|0,d=d+Math.imul(q,He)|0,d=d+Math.imul(W,rt)|0,m=m+Math.imul(W,He)|0,x=x+Math.imul(B,it)|0,d=d+Math.imul(B,Ae)|0,d=d+Math.imul(k,it)|0,m=m+Math.imul(k,Ae)|0;var mr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(mr>>>26)|0,mr&=67108863,x=Math.imul(We,De),d=Math.imul(We,ve),d=d+Math.imul(xe,De)|0,m=Math.imul(xe,ve),x=x+Math.imul(Ue,Ge)|0,d=d+Math.imul(Ue,Pe)|0,d=d+Math.imul(ue,Ge)|0,m=m+Math.imul(ue,Pe)|0,x=x+Math.imul(te,Je)|0,d=d+Math.imul(te,Ee)|0,d=d+Math.imul(ce,Je)|0,m=m+Math.imul(ce,Ee)|0,x=x+Math.imul(je,et)|0,d=d+Math.imul(je,ze)|0,d=d+Math.imul(ge,et)|0,m=m+Math.imul(ge,ze)|0,x=x+Math.imul(Ce,tt)|0,d=d+Math.imul(Ce,Ie)|0,d=d+Math.imul(le,tt)|0,m=m+Math.imul(le,Ie)|0,x=x+Math.imul(pe,nt)|0,d=d+Math.imul(pe,Le)|0,d=d+Math.imul(re,nt)|0,m=m+Math.imul(re,Le)|0,x=x+Math.imul(_,rt)|0,d=d+Math.imul(_,He)|0,d=d+Math.imul(K,rt)|0,m=m+Math.imul(K,He)|0,x=x+Math.imul(q,it)|0,d=d+Math.imul(q,Ae)|0,d=d+Math.imul(W,it)|0,m=m+Math.imul(W,Ae)|0,x=x+Math.imul(B,at)|0,d=d+Math.imul(B,Re)|0,d=d+Math.imul(k,at)|0,m=m+Math.imul(k,Re)|0;var br=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(br>>>26)|0,br&=67108863,x=Math.imul($e,De),d=Math.imul($e,ve),d=d+Math.imul(Se,De)|0,m=Math.imul(Se,ve),x=x+Math.imul(We,Ge)|0,d=d+Math.imul(We,Pe)|0,d=d+Math.imul(xe,Ge)|0,m=m+Math.imul(xe,Pe)|0,x=x+Math.imul(Ue,Je)|0,d=d+Math.imul(Ue,Ee)|0,d=d+Math.imul(ue,Je)|0,m=m+Math.imul(ue,Ee)|0,x=x+Math.imul(te,et)|0,d=d+Math.imul(te,ze)|0,d=d+Math.imul(ce,et)|0,m=m+Math.imul(ce,ze)|0,x=x+Math.imul(je,tt)|0,d=d+Math.imul(je,Ie)|0,d=d+Math.imul(ge,tt)|0,m=m+Math.imul(ge,Ie)|0,x=x+Math.imul(Ce,nt)|0,d=d+Math.imul(Ce,Le)|0,d=d+Math.imul(le,nt)|0,m=m+Math.imul(le,Le)|0,x=x+Math.imul(pe,rt)|0,d=d+Math.imul(pe,He)|0,d=d+Math.imul(re,rt)|0,m=m+Math.imul(re,He)|0,x=x+Math.imul(_,it)|0,d=d+Math.imul(_,Ae)|0,d=d+Math.imul(K,it)|0,m=m+Math.imul(K,Ae)|0,x=x+Math.imul(q,at)|0,d=d+Math.imul(q,Re)|0,d=d+Math.imul(W,at)|0,m=m+Math.imul(W,Re)|0,x=x+Math.imul(B,st)|0,d=d+Math.imul(B,Be)|0,d=d+Math.imul(k,st)|0,m=m+Math.imul(k,Be)|0;var yr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(yr>>>26)|0,yr&=67108863,x=Math.imul($e,Ge),d=Math.imul($e,Pe),d=d+Math.imul(Se,Ge)|0,m=Math.imul(Se,Pe),x=x+Math.imul(We,Je)|0,d=d+Math.imul(We,Ee)|0,d=d+Math.imul(xe,Je)|0,m=m+Math.imul(xe,Ee)|0,x=x+Math.imul(Ue,et)|0,d=d+Math.imul(Ue,ze)|0,d=d+Math.imul(ue,et)|0,m=m+Math.imul(ue,ze)|0,x=x+Math.imul(te,tt)|0,d=d+Math.imul(te,Ie)|0,d=d+Math.imul(ce,tt)|0,m=m+Math.imul(ce,Ie)|0,x=x+Math.imul(je,nt)|0,d=d+Math.imul(je,Le)|0,d=d+Math.imul(ge,nt)|0,m=m+Math.imul(ge,Le)|0,x=x+Math.imul(Ce,rt)|0,d=d+Math.imul(Ce,He)|0,d=d+Math.imul(le,rt)|0,m=m+Math.imul(le,He)|0,x=x+Math.imul(pe,it)|0,d=d+Math.imul(pe,Ae)|0,d=d+Math.imul(re,it)|0,m=m+Math.imul(re,Ae)|0,x=x+Math.imul(_,at)|0,d=d+Math.imul(_,Re)|0,d=d+Math.imul(K,at)|0,m=m+Math.imul(K,Re)|0,x=x+Math.imul(q,st)|0,d=d+Math.imul(q,Be)|0,d=d+Math.imul(W,st)|0,m=m+Math.imul(W,Be)|0;var gr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(gr>>>26)|0,gr&=67108863,x=Math.imul($e,Je),d=Math.imul($e,Ee),d=d+Math.imul(Se,Je)|0,m=Math.imul(Se,Ee),x=x+Math.imul(We,et)|0,d=d+Math.imul(We,ze)|0,d=d+Math.imul(xe,et)|0,m=m+Math.imul(xe,ze)|0,x=x+Math.imul(Ue,tt)|0,d=d+Math.imul(Ue,Ie)|0,d=d+Math.imul(ue,tt)|0,m=m+Math.imul(ue,Ie)|0,x=x+Math.imul(te,nt)|0,d=d+Math.imul(te,Le)|0,d=d+Math.imul(ce,nt)|0,m=m+Math.imul(ce,Le)|0,x=x+Math.imul(je,rt)|0,d=d+Math.imul(je,He)|0,d=d+Math.imul(ge,rt)|0,m=m+Math.imul(ge,He)|0,x=x+Math.imul(Ce,it)|0,d=d+Math.imul(Ce,Ae)|0,d=d+Math.imul(le,it)|0,m=m+Math.imul(le,Ae)|0,x=x+Math.imul(pe,at)|0,d=d+Math.imul(pe,Re)|0,d=d+Math.imul(re,at)|0,m=m+Math.imul(re,Re)|0,x=x+Math.imul(_,st)|0,d=d+Math.imul(_,Be)|0,d=d+Math.imul(K,st)|0,m=m+Math.imul(K,Be)|0;var xr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(xr>>>26)|0,xr&=67108863,x=Math.imul($e,et),d=Math.imul($e,ze),d=d+Math.imul(Se,et)|0,m=Math.imul(Se,ze),x=x+Math.imul(We,tt)|0,d=d+Math.imul(We,Ie)|0,d=d+Math.imul(xe,tt)|0,m=m+Math.imul(xe,Ie)|0,x=x+Math.imul(Ue,nt)|0,d=d+Math.imul(Ue,Le)|0,d=d+Math.imul(ue,nt)|0,m=m+Math.imul(ue,Le)|0,x=x+Math.imul(te,rt)|0,d=d+Math.imul(te,He)|0,d=d+Math.imul(ce,rt)|0,m=m+Math.imul(ce,He)|0,x=x+Math.imul(je,it)|0,d=d+Math.imul(je,Ae)|0,d=d+Math.imul(ge,it)|0,m=m+Math.imul(ge,Ae)|0,x=x+Math.imul(Ce,at)|0,d=d+Math.imul(Ce,Re)|0,d=d+Math.imul(le,at)|0,m=m+Math.imul(le,Re)|0,x=x+Math.imul(pe,st)|0,d=d+Math.imul(pe,Be)|0,d=d+Math.imul(re,st)|0,m=m+Math.imul(re,Be)|0;var vr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(vr>>>26)|0,vr&=67108863,x=Math.imul($e,tt),d=Math.imul($e,Ie),d=d+Math.imul(Se,tt)|0,m=Math.imul(Se,Ie),x=x+Math.imul(We,nt)|0,d=d+Math.imul(We,Le)|0,d=d+Math.imul(xe,nt)|0,m=m+Math.imul(xe,Le)|0,x=x+Math.imul(Ue,rt)|0,d=d+Math.imul(Ue,He)|0,d=d+Math.imul(ue,rt)|0,m=m+Math.imul(ue,He)|0,x=x+Math.imul(te,it)|0,d=d+Math.imul(te,Ae)|0,d=d+Math.imul(ce,it)|0,m=m+Math.imul(ce,Ae)|0,x=x+Math.imul(je,at)|0,d=d+Math.imul(je,Re)|0,d=d+Math.imul(ge,at)|0,m=m+Math.imul(ge,Re)|0,x=x+Math.imul(Ce,st)|0,d=d+Math.imul(Ce,Be)|0,d=d+Math.imul(le,st)|0,m=m+Math.imul(le,Be)|0;var wr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(wr>>>26)|0,wr&=67108863,x=Math.imul($e,nt),d=Math.imul($e,Le),d=d+Math.imul(Se,nt)|0,m=Math.imul(Se,Le),x=x+Math.imul(We,rt)|0,d=d+Math.imul(We,He)|0,d=d+Math.imul(xe,rt)|0,m=m+Math.imul(xe,He)|0,x=x+Math.imul(Ue,it)|0,d=d+Math.imul(Ue,Ae)|0,d=d+Math.imul(ue,it)|0,m=m+Math.imul(ue,Ae)|0,x=x+Math.imul(te,at)|0,d=d+Math.imul(te,Re)|0,d=d+Math.imul(ce,at)|0,m=m+Math.imul(ce,Re)|0,x=x+Math.imul(je,st)|0,d=d+Math.imul(je,Be)|0,d=d+Math.imul(ge,st)|0,m=m+Math.imul(ge,Be)|0;var Pr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Pr>>>26)|0,Pr&=67108863,x=Math.imul($e,rt),d=Math.imul($e,He),d=d+Math.imul(Se,rt)|0,m=Math.imul(Se,He),x=x+Math.imul(We,it)|0,d=d+Math.imul(We,Ae)|0,d=d+Math.imul(xe,it)|0,m=m+Math.imul(xe,Ae)|0,x=x+Math.imul(Ue,at)|0,d=d+Math.imul(Ue,Re)|0,d=d+Math.imul(ue,at)|0,m=m+Math.imul(ue,Re)|0,x=x+Math.imul(te,st)|0,d=d+Math.imul(te,Be)|0,d=d+Math.imul(ce,st)|0,m=m+Math.imul(ce,Be)|0;var Mr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Mr>>>26)|0,Mr&=67108863,x=Math.imul($e,it),d=Math.imul($e,Ae),d=d+Math.imul(Se,it)|0,m=Math.imul(Se,Ae),x=x+Math.imul(We,at)|0,d=d+Math.imul(We,Re)|0,d=d+Math.imul(xe,at)|0,m=m+Math.imul(xe,Re)|0,x=x+Math.imul(Ue,st)|0,d=d+Math.imul(Ue,Be)|0,d=d+Math.imul(ue,st)|0,m=m+Math.imul(ue,Be)|0;var kr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(kr>>>26)|0,kr&=67108863,x=Math.imul($e,at),d=Math.imul($e,Re),d=d+Math.imul(Se,at)|0,m=Math.imul(Se,Re),x=x+Math.imul(We,st)|0,d=d+Math.imul(We,Be)|0,d=d+Math.imul(xe,st)|0,m=m+Math.imul(xe,Be)|0;var Tr=(M+x|0)+((d&8191)<<13)|0;M=(m+(d>>>13)|0)+(Tr>>>26)|0,Tr&=67108863,x=Math.imul($e,st),d=Math.imul($e,Be),d=d+Math.imul(Se,st)|0,m=Math.imul(Se,Be);var Nr=(M+x|0)+((d&8191)<<13)|0;return M=(m+(d>>>13)|0)+(Nr>>>26)|0,Nr&=67108863,v[0]=Pt,v[1]=vn,v[2]=wn,v[3]=Pn,v[4]=Mn,v[5]=kn,v[6]=pr,v[7]=mr,v[8]=br,v[9]=yr,v[10]=gr,v[11]=xr,v[12]=vr,v[13]=wr,v[14]=Pr,v[15]=Mr,v[16]=kr,v[17]=Tr,v[18]=Nr,M!==0&&(v[19]=M,f.length++),f};Math.imul||(I=j);function A(c,l,f){f.negative=l.negative^c.negative,f.length=c.length+l.length;for(var b=0,g=0,v=0;v<f.length-1;v++){var M=g;g=0;for(var x=b&67108863,d=Math.min(v,l.length-1),m=Math.max(0,v-c.length+1);m<=d;m++){var V=v-m,B=c.words[V]|0,k=l.words[m]|0,Z=B*k,q=Z&67108863;M=M+(Z/67108864|0)|0,q=q+x|0,x=q&67108863,M=M+(q>>>26)|0,g+=M>>>26,M&=67108863}f.words[v]=x,b=M,M=g}return b!==0?f.words[v]=b:f.length--,f._strip()}function U(c,l,f){return A(c,l,f)}a.prototype.mulTo=function(c,l){var f,b=this.length+c.length;return this.length===10&&c.length===10?f=I(this,c,l):b<63?f=j(this,c,l):b<1024?f=A(this,c,l):f=U(this,c,l),f},a.prototype.mul=function(c){var l=new a(null);return l.words=new Array(this.length+c.length),this.mulTo(c,l)},a.prototype.mulf=function(c){var l=new a(null);return l.words=new Array(this.length+c.length),U(this,c,l)},a.prototype.imul=function(c){return this.clone().mulTo(c,this)},a.prototype.imuln=function(c){var l=c<0;l&&(c=-c),r(typeof c=="number"),r(c<67108864);for(var f=0,b=0;b<this.length;b++){var g=(this.words[b]|0)*c,v=(g&67108863)+(f&67108863);f>>=26,f+=g/67108864|0,f+=v>>>26,this.words[b]=v&67108863}return f!==0&&(this.words[b]=f,this.length++),this.length=c===0?1:this.length,l?this.ineg():this},a.prototype.muln=function(c){return this.clone().imuln(c)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(c){var l=z(c);if(l.length===0)return new a(1);for(var f=this,b=0;b<l.length&&l[b]===0;b++,f=f.sqr());if(++b<l.length)for(var g=f.sqr();b<l.length;b++,g=g.sqr())l[b]!==0&&(f=f.mul(g));return f},a.prototype.iushln=function(c){r(typeof c=="number"&&c>=0);var l=c%26,f=(c-l)/26,b=67108863>>>26-l<<26-l,g;if(l!==0){var v=0;for(g=0;g<this.length;g++){var M=this.words[g]&b,x=(this.words[g]|0)-M<<l;this.words[g]=x|v,v=M>>>26-l}v&&(this.words[g]=v,this.length++)}if(f!==0){for(g=this.length-1;g>=0;g--)this.words[g+f]=this.words[g];for(g=0;g<f;g++)this.words[g]=0;this.length+=f}return this._strip()},a.prototype.ishln=function(c){return r(this.negative===0),this.iushln(c)},a.prototype.iushrn=function(c,l,f){r(typeof c=="number"&&c>=0);var b;l?b=(l-l%26)/26:b=0;var g=c%26,v=Math.min((c-g)/26,this.length),M=67108863^67108863>>>g<<g,x=f;if(b-=v,b=Math.max(0,b),x){for(var d=0;d<v;d++)x.words[d]=this.words[d];x.length=v}if(v!==0)if(this.length>v)for(this.length-=v,d=0;d<this.length;d++)this.words[d]=this.words[d+v];else this.words[0]=0,this.length=1;var m=0;for(d=this.length-1;d>=0&&(m!==0||d>=b);d--){var V=this.words[d]|0;this.words[d]=m<<26-g|V>>>g,m=V&M}return x&&m!==0&&(x.words[x.length++]=m),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},a.prototype.ishrn=function(c,l,f){return r(this.negative===0),this.iushrn(c,l,f)},a.prototype.shln=function(c){return this.clone().ishln(c)},a.prototype.ushln=function(c){return this.clone().iushln(c)},a.prototype.shrn=function(c){return this.clone().ishrn(c)},a.prototype.ushrn=function(c){return this.clone().iushrn(c)},a.prototype.testn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,f=(c-l)/26,b=1<<l;if(this.length<=f)return!1;var g=this.words[f];return!!(g&b)},a.prototype.imaskn=function(c){r(typeof c=="number"&&c>=0);var l=c%26,f=(c-l)/26;if(r(this.negative===0,"imaskn works only with positive numbers"),this.length<=f)return this;if(l!==0&&f++,this.length=Math.min(f,this.length),l!==0){var b=67108863^67108863>>>l<<l;this.words[this.length-1]&=b}return this._strip()},a.prototype.maskn=function(c){return this.clone().imaskn(c)},a.prototype.iaddn=function(c){return r(typeof c=="number"),r(c<67108864),c<0?this.isubn(-c):this.negative!==0?this.length===1&&(this.words[0]|0)<=c?(this.words[0]=c-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(c),this.negative=1,this):this._iaddn(c)},a.prototype._iaddn=function(c){this.words[0]+=c;for(var l=0;l<this.length&&this.words[l]>=67108864;l++)this.words[l]-=67108864,l===this.length-1?this.words[l+1]=1:this.words[l+1]++;return this.length=Math.max(this.length,l+1),this},a.prototype.isubn=function(c){if(r(typeof c=="number"),r(c<67108864),c<0)return this.iaddn(-c);if(this.negative!==0)return this.negative=0,this.iaddn(c),this.negative=1,this;if(this.words[0]-=c,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var l=0;l<this.length&&this.words[l]<0;l++)this.words[l]+=67108864,this.words[l+1]-=1;return this._strip()},a.prototype.addn=function(c){return this.clone().iaddn(c)},a.prototype.subn=function(c){return this.clone().isubn(c)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(c,l,f){var b=c.length+f,g;this._expand(b);var v,M=0;for(g=0;g<c.length;g++){v=(this.words[g+f]|0)+M;var x=(c.words[g]|0)*l;v-=x&67108863,M=(v>>26)-(x/67108864|0),this.words[g+f]=v&67108863}for(;g<this.length-f;g++)v=(this.words[g+f]|0)+M,M=v>>26,this.words[g+f]=v&67108863;if(M===0)return this._strip();for(r(M===-1),M=0,g=0;g<this.length;g++)v=-(this.words[g]|0)+M,M=v>>26,this.words[g]=v&67108863;return this.negative=1,this._strip()},a.prototype._wordDiv=function(c,l){var f=this.length-c.length,b=this.clone(),g=c,v=g.words[g.length-1]|0,M=this._countBits(v);f=26-M,f!==0&&(g=g.ushln(f),b.iushln(f),v=g.words[g.length-1]|0);var x=b.length-g.length,d;if(l!=="mod"){d=new a(null),d.length=x+1,d.words=new Array(d.length);for(var m=0;m<d.length;m++)d.words[m]=0}var V=b.clone()._ishlnsubmul(g,1,x);V.negative===0&&(b=V,d&&(d.words[x]=1));for(var B=x-1;B>=0;B--){var k=(b.words[g.length+B]|0)*67108864+(b.words[g.length+B-1]|0);for(k=Math.min(k/v|0,67108863),b._ishlnsubmul(g,k,B);b.negative!==0;)k--,b.negative=0,b._ishlnsubmul(g,1,B),b.isZero()||(b.negative^=1);d&&(d.words[B]=k)}return d&&d._strip(),b._strip(),l!=="div"&&f!==0&&b.iushrn(f),{div:d||null,mod:b}},a.prototype.divmod=function(c,l,f){if(r(!c.isZero()),this.isZero())return{div:new a(0),mod:new a(0)};var b,g,v;return this.negative!==0&&c.negative===0?(v=this.neg().divmod(c,l),l!=="mod"&&(b=v.div.neg()),l!=="div"&&(g=v.mod.neg(),f&&g.negative!==0&&g.iadd(c)),{div:b,mod:g}):this.negative===0&&c.negative!==0?(v=this.divmod(c.neg(),l),l!=="mod"&&(b=v.div.neg()),{div:b,mod:v.mod}):this.negative&c.negative?(v=this.neg().divmod(c.neg(),l),l!=="div"&&(g=v.mod.neg(),f&&g.negative!==0&&g.isub(c)),{div:v.div,mod:g}):c.length>this.length||this.cmp(c)<0?{div:new a(0),mod:this}:c.length===1?l==="div"?{div:this.divn(c.words[0]),mod:null}:l==="mod"?{div:null,mod:new a(this.modrn(c.words[0]))}:{div:this.divn(c.words[0]),mod:new a(this.modrn(c.words[0]))}:this._wordDiv(c,l)},a.prototype.div=function(c){return this.divmod(c,"div",!1).div},a.prototype.mod=function(c){return this.divmod(c,"mod",!1).mod},a.prototype.umod=function(c){return this.divmod(c,"mod",!0).mod},a.prototype.divRound=function(c){var l=this.divmod(c);if(l.mod.isZero())return l.div;var f=l.div.negative!==0?l.mod.isub(c):l.mod,b=c.ushrn(1),g=c.andln(1),v=f.cmp(b);return v<0||g===1&&v===0?l.div:l.div.negative!==0?l.div.isubn(1):l.div.iaddn(1)},a.prototype.modrn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var f=(1<<26)%c,b=0,g=this.length-1;g>=0;g--)b=(f*b+(this.words[g]|0))%c;return l?-b:b},a.prototype.modn=function(c){return this.modrn(c)},a.prototype.idivn=function(c){var l=c<0;l&&(c=-c),r(c<=67108863);for(var f=0,b=this.length-1;b>=0;b--){var g=(this.words[b]|0)+f*67108864;this.words[b]=g/c|0,f=g%c}return this._strip(),l?this.ineg():this},a.prototype.divn=function(c){return this.clone().idivn(c)},a.prototype.egcd=function(c){r(c.negative===0),r(!c.isZero());var l=this,f=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var b=new a(1),g=new a(0),v=new a(0),M=new a(1),x=0;l.isEven()&&f.isEven();)l.iushrn(1),f.iushrn(1),++x;for(var d=f.clone(),m=l.clone();!l.isZero();){for(var V=0,B=1;!(l.words[0]&B)&&V<26;++V,B<<=1);if(V>0)for(l.iushrn(V);V-- >0;)(b.isOdd()||g.isOdd())&&(b.iadd(d),g.isub(m)),b.iushrn(1),g.iushrn(1);for(var k=0,Z=1;!(f.words[0]&Z)&&k<26;++k,Z<<=1);if(k>0)for(f.iushrn(k);k-- >0;)(v.isOdd()||M.isOdd())&&(v.iadd(d),M.isub(m)),v.iushrn(1),M.iushrn(1);l.cmp(f)>=0?(l.isub(f),b.isub(v),g.isub(M)):(f.isub(l),v.isub(b),M.isub(g))}return{a:v,b:M,gcd:f.iushln(x)}},a.prototype._invmp=function(c){r(c.negative===0),r(!c.isZero());var l=this,f=c.clone();l.negative!==0?l=l.umod(c):l=l.clone();for(var b=new a(1),g=new a(0),v=f.clone();l.cmpn(1)>0&&f.cmpn(1)>0;){for(var M=0,x=1;!(l.words[0]&x)&&M<26;++M,x<<=1);if(M>0)for(l.iushrn(M);M-- >0;)b.isOdd()&&b.iadd(v),b.iushrn(1);for(var d=0,m=1;!(f.words[0]&m)&&d<26;++d,m<<=1);if(d>0)for(f.iushrn(d);d-- >0;)g.isOdd()&&g.iadd(v),g.iushrn(1);l.cmp(f)>=0?(l.isub(f),b.isub(g)):(f.isub(l),g.isub(b))}var V;return l.cmpn(1)===0?V=b:V=g,V.cmpn(0)<0&&V.iadd(c),V},a.prototype.gcd=function(c){if(this.isZero())return c.abs();if(c.isZero())return this.abs();var l=this.clone(),f=c.clone();l.negative=0,f.negative=0;for(var b=0;l.isEven()&&f.isEven();b++)l.iushrn(1),f.iushrn(1);do{for(;l.isEven();)l.iushrn(1);for(;f.isEven();)f.iushrn(1);var g=l.cmp(f);if(g<0){var v=l;l=f,f=v}else if(g===0||f.cmpn(1)===0)break;l.isub(f)}while(!0);return f.iushln(b)},a.prototype.invm=function(c){return this.egcd(c).a.umod(c)},a.prototype.isEven=function(){return(this.words[0]&1)===0},a.prototype.isOdd=function(){return(this.words[0]&1)===1},a.prototype.andln=function(c){return this.words[0]&c},a.prototype.bincn=function(c){r(typeof c=="number");var l=c%26,f=(c-l)/26,b=1<<l;if(this.length<=f)return this._expand(f+1),this.words[f]|=b,this;for(var g=b,v=f;g!==0&&v<this.length;v++){var M=this.words[v]|0;M+=g,g=M>>>26,M&=67108863,this.words[v]=M}return g!==0&&(this.words[v]=g,this.length++),this},a.prototype.isZero=function(){return this.length===1&&this.words[0]===0},a.prototype.cmpn=function(c){var l=c<0;if(this.negative!==0&&!l)return-1;if(this.negative===0&&l)return 1;this._strip();var f;if(this.length>1)f=1;else{l&&(c=-c),r(c<=67108863,"Number is too big");var b=this.words[0]|0;f=b===c?0:b<c?-1:1}return this.negative!==0?-f|0:f},a.prototype.cmp=function(c){if(this.negative!==0&&c.negative===0)return-1;if(this.negative===0&&c.negative!==0)return 1;var l=this.ucmp(c);return this.negative!==0?-l|0:l},a.prototype.ucmp=function(c){if(this.length>c.length)return 1;if(this.length<c.length)return-1;for(var l=0,f=this.length-1;f>=0;f--){var b=this.words[f]|0,g=c.words[f]|0;if(b!==g){b<g?l=-1:b>g&&(l=1);break}}return l},a.prototype.gtn=function(c){return this.cmpn(c)===1},a.prototype.gt=function(c){return this.cmp(c)===1},a.prototype.gten=function(c){return this.cmpn(c)>=0},a.prototype.gte=function(c){return this.cmp(c)>=0},a.prototype.ltn=function(c){return this.cmpn(c)===-1},a.prototype.lt=function(c){return this.cmp(c)===-1},a.prototype.lten=function(c){return this.cmpn(c)<=0},a.prototype.lte=function(c){return this.cmp(c)<=0},a.prototype.eqn=function(c){return this.cmpn(c)===0},a.prototype.eq=function(c){return this.cmp(c)===0},a.red=function(c){return new E(c)},a.prototype.toRed=function(c){return r(!this.red,"Already a number in reduction context"),r(this.negative===0,"red works only with positives"),c.convertTo(this)._forceRed(c)},a.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(c){return this.red=c,this},a.prototype.forceRed=function(c){return r(!this.red,"Already a number in reduction context"),this._forceRed(c)},a.prototype.redAdd=function(c){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,c)},a.prototype.redIAdd=function(c){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,c)},a.prototype.redSub=function(c){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,c)},a.prototype.redISub=function(c){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,c)},a.prototype.redShl=function(c){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,c)},a.prototype.redMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.mul(this,c)},a.prototype.redIMul=function(c){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,c),this.red.imul(this,c)},a.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(c){return r(this.red&&!c.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,c)};var H={k256:null,p224:null,p192:null,p25519:null};function X(c,l){this.name=c,this.p=new a(l,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}X.prototype._tmp=function(){var c=new a(null);return c.words=new Array(Math.ceil(this.n/13)),c},X.prototype.ireduce=function(c){var l=c,f;do this.split(l,this.tmp),l=this.imulK(l),l=l.iadd(this.tmp),f=l.bitLength();while(f>this.n);var b=f<this.n?-1:l.ucmp(this.p);return b===0?(l.words[0]=0,l.length=1):b>0?l.isub(this.p):l.strip!==void 0?l.strip():l._strip(),l},X.prototype.split=function(c,l){c.iushrn(this.n,0,l)},X.prototype.imulK=function(c){return c.imul(this.k)};function C(){X.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}i(C,X),C.prototype.split=function(c,l){for(var f=4194303,b=Math.min(c.length,9),g=0;g<b;g++)l.words[g]=c.words[g];if(l.length=b,c.length<=9){c.words[0]=0,c.length=1;return}var v=c.words[9];for(l.words[l.length++]=v&f,g=10;g<c.length;g++){var M=c.words[g]|0;c.words[g-10]=(M&f)<<4|v>>>22,v=M}v>>>=22,c.words[g-10]=v,v===0&&c.length>10?c.length-=10:c.length-=9},C.prototype.imulK=function(c){c.words[c.length]=0,c.words[c.length+1]=0,c.length+=2;for(var l=0,f=0;f<c.length;f++){var b=c.words[f]|0;l+=b*977,c.words[f]=l&67108863,l=b*64+(l/67108864|0)}return c.words[c.length-1]===0&&(c.length--,c.words[c.length-1]===0&&c.length--),c};function F(){X.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}i(F,X);function S(){X.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}i(S,X);function R(){X.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}i(R,X),R.prototype.imulK=function(c){for(var l=0,f=0;f<c.length;f++){var b=(c.words[f]|0)*19+l,g=b&67108863;b>>>=26,c.words[f]=g,l=b}return l!==0&&(c.words[c.length++]=l),c},a._prime=function(c){if(H[c])return H[c];var l;if(c==="k256")l=new C;else if(c==="p224")l=new F;else if(c==="p192")l=new S;else if(c==="p25519")l=new R;else throw new Error("Unknown prime "+c);return H[c]=l,l};function E(c){if(typeof c=="string"){var l=a._prime(c);this.m=l.p,this.prime=l}else r(c.gtn(1),"modulus must be greater than 1"),this.m=c,this.prime=null}E.prototype._verify1=function(c){r(c.negative===0,"red works only with positives"),r(c.red,"red works only with red numbers")},E.prototype._verify2=function(c,l){r((c.negative|l.negative)===0,"red works only with positives"),r(c.red&&c.red===l.red,"red works only with red numbers")},E.prototype.imod=function(c){return this.prime?this.prime.ireduce(c)._forceRed(this):(p(c,c.umod(this.m)._forceRed(this)),c)},E.prototype.neg=function(c){return c.isZero()?c.clone():this.m.sub(c)._forceRed(this)},E.prototype.add=function(c,l){this._verify2(c,l);var f=c.add(l);return f.cmp(this.m)>=0&&f.isub(this.m),f._forceRed(this)},E.prototype.iadd=function(c,l){this._verify2(c,l);var f=c.iadd(l);return f.cmp(this.m)>=0&&f.isub(this.m),f},E.prototype.sub=function(c,l){this._verify2(c,l);var f=c.sub(l);return f.cmpn(0)<0&&f.iadd(this.m),f._forceRed(this)},E.prototype.isub=function(c,l){this._verify2(c,l);var f=c.isub(l);return f.cmpn(0)<0&&f.iadd(this.m),f},E.prototype.shl=function(c,l){return this._verify1(c),this.imod(c.ushln(l))},E.prototype.imul=function(c,l){return this._verify2(c,l),this.imod(c.imul(l))},E.prototype.mul=function(c,l){return this._verify2(c,l),this.imod(c.mul(l))},E.prototype.isqr=function(c){return this.imul(c,c.clone())},E.prototype.sqr=function(c){return this.mul(c,c)},E.prototype.sqrt=function(c){if(c.isZero())return c.clone();var l=this.m.andln(3);if(r(l%2===1),l===3){var f=this.m.add(new a(1)).iushrn(2);return this.pow(c,f)}for(var b=this.m.subn(1),g=0;!b.isZero()&&b.andln(1)===0;)g++,b.iushrn(1);r(!b.isZero());var v=new a(1).toRed(this),M=v.redNeg(),x=this.m.subn(1).iushrn(1),d=this.m.bitLength();for(d=new a(2*d*d).toRed(this);this.pow(d,x).cmp(M)!==0;)d.redIAdd(M);for(var m=this.pow(d,b),V=this.pow(c,b.addn(1).iushrn(1)),B=this.pow(c,b),k=g;B.cmp(v)!==0;){for(var Z=B,q=0;Z.cmp(v)!==0;q++)Z=Z.redSqr();r(q<k);var W=this.pow(m,new a(1).iushln(k-q-1));V=V.redMul(W),m=W.redSqr(),B=B.redMul(m),k=q}return V},E.prototype.invm=function(c){var l=c._invmp(this.m);return l.negative!==0?(l.negative=0,this.imod(l).redNeg()):this.imod(l)},E.prototype.pow=function(c,l){if(l.isZero())return new a(1).toRed(this);if(l.cmpn(1)===0)return c.clone();var f=4,b=new Array(1<<f);b[0]=new a(1).toRed(this),b[1]=c;for(var g=2;g<b.length;g++)b[g]=this.mul(b[g-1],c);var v=b[0],M=0,x=0,d=l.bitLength()%26;for(d===0&&(d=26),g=l.length-1;g>=0;g--){for(var m=l.words[g],V=d-1;V>=0;V--){var B=m>>V&1;if(v!==b[0]&&(v=this.sqr(v)),B===0&&M===0){x=0;continue}M<<=1,M|=B,x++,!(x!==f&&(g!==0||V!==0))&&(v=this.mul(v,b[M]),x=0,M=0)}d=26}return v},E.prototype.convertTo=function(c){var l=c.umod(this.m);return l===c?l.clone():l},E.prototype.convertFrom=function(c){var l=c.clone();return l.red=null,l},a.mont=function(c){return new L(c)};function L(c){E.call(this,c),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}i(L,E),L.prototype.convertTo=function(c){return this.imod(c.ushln(this.shift))},L.prototype.convertFrom=function(c){var l=this.imod(c.mul(this.rinv));return l.red=null,l},L.prototype.imul=function(c,l){if(c.isZero()||l.isZero())return c.words[0]=0,c.length=1,c;var f=c.imul(l),b=f.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),g=f.isub(b).iushrn(this.shift),v=g;return g.cmp(this.m)>=0?v=g.isub(this.m):g.cmpn(0)<0&&(v=g.iadd(this.m)),v._forceRed(this)},L.prototype.mul=function(c,l){if(c.isZero()||l.isZero())return new a(0)._forceRed(this);var f=c.mul(l),b=f.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),g=f.isub(b).iushrn(this.shift),v=g;return g.cmp(this.m)>=0?v=g.isub(this.m):g.cmpn(0)<0&&(v=g.iadd(this.m)),v._forceRed(this)},L.prototype.invm=function(c){var l=this.imod(c._invmp(this.m).mul(this.r2));return l._forceRed(this)}})(t,LH)})(s7);var XH=s7.exports;const Xe=a7(XH);function Ti(t){return Xe.isBN(t)}const o7=/^0x[\da-fA-F]+$/,jH=/^[\da-fA-F]+$/;function It(t,e=-1,n){return typeof t=="string"&&(t==="0x"||o7.test(t))&&(e===-1?n||t.length%2===0:t.length===2+Math.ceil(e/4))}function hr(t){return!!t&&typeof t=="object"}function c7(...t){return e=>(hr(e)||Ze(e))&&t.every(n=>Ze(e[n]))}function CH(...t){return e=>Ze(e)&&t.every(n=>Ze(e[n]))}function b2(...t){return e=>hr(e)&&t.every(n=>Ze(e[n]))}const UH=c7("toBigInt"),DH=c7("toBn"),J0=typeof jt=="function"&&typeof jt.asIntN=="function",FH=typeof Cr.Buffer=="function"&&typeof Cr.Buffer.isBuffer=="function";Cr.process;function u7(t){return FH&&!!t&&Ze(t.readDoubleLE)&&Cr.Buffer.isBuffer(t)}function Qe(t){return(t&&t.constructor)===Uint8Array||t instanceof Uint8Array}const ZH=new OH;function Mi(t){return t?ZH.encode(t.toString()):new Uint8Array}function qe(t,e=!1){if(e&&t==null)throw new Error("u8aToU8a: Expected non-null, non-undefined value");return Qe(t)?u7(t)?new Uint8Array(t):t:It(t)?$i(t):Array.isArray(t)?new Uint8Array(t):Mi(t)}function rr(...t){const e=t.length,n=new Array(e);let r=0;for(let i=0;i<e;i++)n[i]=qe(t[i]),r+=n[i].length;return li(n,r)}function li(t,e=0){const n=t.length;let r=0;if(!e)for(let a=0;a<n;a++)e+=t[a].length;const i=new Uint8Array(e);for(let a=0;a<n;a++)i.set(t[a],r),r+=t[a].length;return i}function l7(t,e){const n=qe(t),r=qe(e);if(n.length===r.length){const i=new DataView(n.buffer,n.byteOffset),a=new DataView(r.buffer,r.byteOffset),s=n.length%4|0,o=n.length-s|0;for(let u=0;u<o;u+=4)if(i.getUint32(u)!==a.getUint32(u))return!1;for(let u=o,h=n.length;u<h;u++)if(n[u]!==r[u])return!1;return!0}return!1}function Va(t,{isLe:e=!0,isNegative:n=!1}={}){e||(t=t.slice().reverse());const r=t.length;if(n&&r&&t[r-1]&128)switch(r){case 0:return new Xe(0);case 1:return new Xe((t[0]^255)*-1-1);case 2:return new Xe((t[0]+(t[1]<<8)^65535)*-1-1);case 3:return new Xe((t[0]+(t[1]<<8)+(t[2]<<16)^16777215)*-1-1);case 4:return new Xe((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)*-1-1);case 5:return new Xe(((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]^255)*4294967296)*-1-1);case 6:return new Xe(((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]+(t[5]<<8)^65535)*4294967296)*-1-1);default:return new Xe(t,"le").fromTwos(r*8)}switch(r){case 0:return new Xe(0);case 1:return new Xe(t[0]);case 2:return new Xe(t[0]+(t[1]<<8));case 3:return new Xe(t[0]+(t[1]<<8)+(t[2]<<16));case 4:return new Xe(t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216);case 5:return new Xe(t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8))*16777216);case 6:return new Xe(t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8)+(t[5]<<16))*16777216);default:return new Xe(t,"le")}}function qH(t,{bitLength:e=32,isLe:n=!0}={}){if(e!==32&&e!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");if(t.length<e/8)throw new Error(`Invalid input buffer provided, expected at least ${e/8} bytes, found ${t.length}`);const r=new DataView(t.buffer,t.byteOffset);return e===32?r.getFloat32(0,n):r.getFloat64(0,n)}const d0=new Array(256),d7=new Array(256*256);for(let t=0;t<256;t++)d0[t]=t.toString(16).padStart(2,"0");for(let t=0;t<256;t++){const e=t<<8;for(let n=0;n<256;n++)d7[e|n]=d0[t]+d0[n]}function lp(t,e){const n=t.length%2|0,r=t.length-n|0;for(let i=0;i<r;i+=2)e+=d7[t[i]<<8|t[i+1]];return n&&(e+=d0[t[r]|0]),e}function mt(t,e=-1,n=!0){const r=n?"0x":"";if(t!=null&&t.length){if(e>0){const i=Math.ceil(e/8);if(t.length>i)return`${lp(t.subarray(0,i/2),r)}…${lp(t.subarray(t.length-i/2),"")}`}}else return r;return lp(t,r)}function WH(t,{isLe:e=!0,isNegative:n=!1}={}){e||(t=t.slice().reverse());const r=t.length;if(n&&r&&t[r-1]&128)switch(r){case 0:return 0;case 1:return(t[0]^255)*-1-1;case 2:return(t[0]+(t[1]<<8)^65535)*-1-1;case 3:return(t[0]+(t[1]<<8)+(t[2]<<16)^16777215)*-1-1;case 4:return(t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)*-1-1;case 5:return((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]^255)*4294967296)*-1-1;case 6:return((t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216^4294967295)+(t[4]+(t[5]<<8)^65535)*4294967296)*-1-1;default:throw new Error("Value more than 48-bits cannot be reliably converted")}switch(r){case 0:return 0;case 1:return t[0];case 2:return t[0]+(t[1]<<8);case 3:return t[0]+(t[1]<<8)+(t[2]<<16);case 4:return t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216;case 5:return t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8))*16777216;case 6:return t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]+(t[4]<<8)+(t[5]<<16))*16777216;default:throw new Error("Value more than 48-bits cannot be reliably converted")}}const GH=new TH("utf-8");function Ta(t){return t?GH.decode(t):""}const YH=qe("<Bytes>"),KH=qe("</Bytes>");YH.length+KH.length;function JH(t){if(!t||t==="0x")return"";if(o7.test(t))return t.substring(2);if(jH.test(t))return t;throw new Error(`Expected hex value to convert, found '${t}'`)}function y2(t,{isLe:e=!1,isNegative:n=!1}={}){if(!t||t==="0x")return new Xe(0);const r=JH(t),i=new Xe(r,16,e?"le":"be");return n?i.fromTwos(r.length*4):i}const z1=r7((t,e)=>t.gt(e)),QH=r7((t,e)=>t.lt(e)),dn=new Xe(0),Uc=new Xe(1),Q0=new Xe(2),_H=new Xe(100),$H=new Xe(1e6),f0=new Xe(1e9),eA=f0.mul(f0),tA=new Xe(Number.MAX_SAFE_INTEGER),nA=new Xe(94906265);function To(t){return typeof t=="bigint"}function Vn(t){return t?Xe.isBN(t)?t:It(t)?y2(t.toString()):To(t)?new Xe(t.toString()):DH(t)?t.toBn():UH(t)?new Xe(t.toBigInt().toString()):new Xe(t):new Xe(0)}function f7(t){const e=Vn(t);if(e.isNeg())throw new Error("square root of negative numbers is not supported");if(e.lte(tA))return new Xe(~~Math.sqrt(e.toNumber()));let n=nA.clone();for(;;){const r=e.div(n).iadd(n).ishrn(1);if(n.eq(r)||n.eq(r.sub(Uc)))return n;n=r}}const rA={bitLength:-1,isLe:!0,isNegative:!1};function Na(t,{bitLength:e=-1,isLe:n=!0,isNegative:r=!1}=rA){const i=Vn(t),a=Math.ceil(e===-1?i.bitLength()/8:(e||0)/8);if(!t)return e===-1?new Uint8Array(1):new Uint8Array(a);const s=new Uint8Array(a),o=r?i.toTwos(a*8):i;return s.set(o.toArray(n?"le":"be",a),0),s}function iA(t,{bitLength:e=-1,isLe:n=!1,isNegative:r=!1}={}){return mt(Na(t,{bitLength:e,isLe:n,isNegative:r}))}const aA=Q0.pow(new Xe(6)).isub(Uc),sA=Q0.pow(new Xe(14)).isub(Uc),oA=Q0.pow(new Xe(30)).isub(Uc),cA={bitLength:16},uA={bitLength:32};function nn(t){const e=Vn(t);if(e.lte(aA))return new Uint8Array([e.toNumber()<<2]);if(e.lte(sA))return Na(e.shln(2).iadd(Uc),cA);if(e.lte(oA))return Na(e.shln(2).iadd(Q0),uA);const n=Na(e);let r=n.length;for(;n[r-1]===0;)r--;if(r<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return li([new Uint8Array([(r-4<<2)+3]),n.subarray(0,r)])}function No(t){return li([nn(t.length),t])}function _0(t){const e=qe(t);switch(e[0]&3){case 0:return[1,new Xe(e[0]>>>2)];case 1:return[2,new Xe(e[0]+(e[1]<<8)>>>2)];case 2:return[4,new Xe(e[0]+(e[1]<<8)+(e[2]<<16)+e[3]*16777216>>>2)];default:{const n=(e[0]>>>2)+5;switch(n){case 5:return[5,new Xe(e[1]+(e[2]<<8)+(e[3]<<16)+e[4]*16777216)];case 6:return[6,new Xe(e[1]+(e[2]<<8)+(e[3]<<16)+(e[4]+(e[5]<<8))*16777216)];case 7:return[7,new Xe(e[1]+(e[2]<<8)+(e[3]<<16)+(e[4]+(e[5]<<8)+(e[6]<<16))*16777216)];default:return[n,Va(e.subarray(1,n))]}}}}function Oo(t){switch(t[0]&3){case 0:return[1,t[0]>>>2];case 1:return[2,t[0]+(t[1]<<8)>>>2];case 2:return[4,t[0]+(t[1]<<8)+(t[2]<<16)+t[3]*16777216>>>2];default:switch((t[0]>>>2)+5){case 5:return[5,t[1]+(t[2]<<8)+(t[3]<<16)+t[4]*16777216];case 6:return[6,t[1]+(t[2]<<8)+(t[3]<<16)+(t[4]+(t[5]<<8))*16777216];case 7:return[7,t[1]+(t[2]<<8)+(t[3]<<16)+(t[4]+(t[5]<<8)+(t[6]<<16))*16777216];default:throw new Error("Compact input is > Number.MAX_SAFE_INTEGER")}}}function h0(t){const[e,n]=_0(t),r=e+n.toNumber();return[r,t.subarray(e,r)]}function lA(t=0,{bitLength:e=32,isLe:n=!0}={}){if(e!==32&&e!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");const r=new Uint8Array(e/8),i=new DataView(r.buffer,r.byteOffset);return e===32?i.setFloat32(0,Number(t),n):i.setFloat64(0,Number(t),n),r}function Ol(t){return typeof t=="boolean"}const Hy=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function h7(t,e=","){const n=t[0].startsWith("-"),r=n?t.substring(1).match(Hy):t.match(Hy);return r?`${n?"-":""}${r.join(e)}`:t}function p7(t){return{decimal:.1.toLocaleString(t,{useGrouping:!1}).charAt(1),thousand:1e3.toLocaleString(t,{useGrouping:!0}).replace(/\d/g,"").charAt(0)}}const ql=8,wi=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function m7(t){for(let e=0,n=wi.length;e<n;e++)if(wi[e].value===t)return wi[e];return wi[ql]}function b7(t,e,n){if(n)return m7(n);const r=ql-1+Math.ceil((t.length-e)/3);return wi[r]||wi[r<0?0:wi.length-1]}const dA=0,fA=wi[ql].text;let zc=dA,Cd=fA;function hA(t,{decimals:e=zc,forceUnit:n,locale:r="en",withAll:i=!1,withSi:a=!0,withSiFull:s=!1,withUnit:o=!0,withZero:u=!0}={}){let h=Vn(t).toString();if(h.length===0||h==="0")return"0";let p="";h[0].startsWith("-")&&(p="-",h=h.substring(1));const y=b7(h,e,n),w=h.length-(e+y.power),P=w<=0?"0":h.substring(0,w);let N=h.padStart(w<0?e:1,"0").substring(w<0?0:w).padEnd(i?Math.max(e,4):4,"0").substring(0,i?Math.max(4,e+y.power):4);if(!u){let A=N.length-1;do N[A]==="0"&&A--;while(N[A]==="0");N=N.substring(0,A+1)}const O=Ol(o)?wi[ql].text:o,z=a||s?y.value==="-"?o?` ${O}`:"":` ${s?`${y.text}${o?" ":""}`:y.value}${o?O:""}`:"",{decimal:j,thousand:I}=p7(r);return`${p}${h7(P,I)}${N&&`${j}${N}`}${z}`}const Vo=hA;Vo.calcSi=(t,e=zc)=>b7(t,e);Vo.findSi=m7;Vo.getDefaults=()=>({decimals:zc,unit:Cd});Vo.getOptions=(t=zc)=>wi.filter(({power:e})=>e<0?t+e>=0:!0);Vo.setDefaults=({decimals:t,unit:e})=>{zc=(Array.isArray(t)?t[0]:t)??zc,Cd=(Array.isArray(e)?e[0]:e)??Cd,wi[ql].text=Cd};function _c(t){return t.toString().padStart(2,"0")}function pA(t){const e=t.getFullYear().toString(),n=_c(t.getMonth()+1),r=_c(t.getDate()),i=_c(t.getHours()),a=_c(t.getMinutes()),s=_c(t.getSeconds());return`${e}-${n}-${r} ${i}:${a}:${s}`}function I1(t,{locale:e="en"}={}){const{thousand:n}=p7(e);return h7(Vn(t).toString(),n)}function Ut(t){return typeof t=="string"||t instanceof String}function mA(t){for(let e=0,n=t.length;e<n;e++){const r=t.charCodeAt(e);if(r<32||r>126)return!1}return!0}function Ay(t){for(let e=0,n=t.length;e<n;e++){const r=t[e]|0;if(r<32||r>126)return!1}return!0}function Ry(t){return Ut(t)?It(t)?Ay(qe(t)):mA(t):t?Ay(t):!1}const By=CH("isPrototypeOf","hasOwnProperty");function bA(t,e){return By(e)&&By(t)?t===e||t.isPrototypeOf(e):!1}const yA=b2("toHex","toHuman","toU8a"),gA=b2("get");function _r(t){return yA(t)&&gA(t.registry)}const y7=b2("toBigInt","toBn","toNumber","unwrap");function xA(t,e){return To(e)?e.toString():e}function bt(t,e){return JSON.stringify(t,xA,e)}function lo(t){return t===null}function Ht(t){return typeof t=="number"}function qt(t){return t===void 0}function vA(t){if(!t)return Ut(t);const e=qe(t),n=e.length;let r=0;for(;r<n;)if(e[r]<=127)r+=1;else if(e[r]>=194&&e[r]<=223){if(r+1<n){if(e[r+1]<128||e[r+1]>191)return!1}else return!1;r+=2}else if(e[r]===224){if(r+2<n){if(e[r+1]<160||e[r+1]>191||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]>=225&&e[r]<=236){if(r+2<n){if(e[r+1]<128||e[r+1]>191||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]===237){if(r+2<n){if(e[r+1]<128||e[r+1]>159||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]>=238&&e[r]<=239){if(r+2<n){if(e[r+1]<128||e[r+1]>191||e[r+2]<128||e[r+2]>191)return!1}else return!1;r+=3}else if(e[r]===240){if(r+3<n){if(e[r+1]<144||e[r+1]>191||e[r+2]<128||e[r+2]>191||e[r+3]<128||e[r+3]>191)return!1}else return!1;r+=4}else if(e[r]>=241&&e[r]<=243){if(r+3<n){if(e[r+1]<128||e[r+1]>191||e[r+2]<128||e[r+2]>191||e[r+3]<128||e[r+3]>191)return!1}else return!1;r+=4}else if(e[r]===244){if(r+3<n){if(e[r+1]<128||e[r+1]>143||e[r+2]<128||e[r+2]>191||e[r+3]<128||e[r+3]>191)return!1}else return!1;r+=4}else return!1;return!0}function Zn(t,e,n,r,i=0){const a=r?r(e,i):e.toString();let s;Object.defineProperty(t,a,{configurable:!0,enumerable:!0,get:function(){if(s===void 0){s=n(e,i,this);try{Object.defineProperty(this,a,{value:s})}catch{}}return s}})}function fo(t,e,n,r){for(let i=0,a=e.length;i<a;i++)Zn(t,e[i],n,r,i);return t}function So(t){return t}function Qi(){}const wA={debug:"log",error:"error",log:"log",warn:"warn"};function PA(t){if(t&&hr(t)&&t.constructor===Object){const e={};for(const[n,r]of Object.entries(t))e[n]=g2(r);return e}return t}function g2(t){return Array.isArray(t)?t.map(g2):Ti(t)?t.toString():Qe(t)||u7(t)?mt(qe(t)):PA(t)}function MA(t){return e=>{if(t<=0)return e;const n=`${e}`;return n.length<t?e:`${n.substring(0,t)} ...`}}function hu(t,e,n,r=-1){if(n.length===1&&Ze(n[0])){const i=n[0]();return hu(t,e,Array.isArray(i)?i:[i],r)}console[wA[t]](pA(new Date),e,...n.map(g2).map(MA(r)))}function kA(t,e){return!!t&&(t==="*"||e===t||t.endsWith("*")&&e.startsWith(t.slice(0,-1)))}function TA(t,e){return!!t&&t.startsWith("-")&&(e===t.slice(1)||t.endsWith("*")&&e.startsWith(t.slice(1,-1)))}function NA(t,e){let n=!1;for(const r of t)kA(r,e)?n=!0:TA(r,e)&&(n=!1);return n}function OA(t){var e,n,r,i;const a=parseInt(((n=(e=Cr.process)==null?void 0:e.env)==null?void 0:n.DEBUG_MAX)||"-1",10);return[NA((((i=(r=Cr.process)==null?void 0:r.env)==null?void 0:i.DEBUG)||"").toLowerCase().split(","),t),isNaN(a)?-1:a]}function Dr(t){const e=`${t.toUpperCase()}:`.padStart(16),[n,r]=OA(t.toLowerCase());return{debug:n?(...i)=>hu("debug",e,i,r):Qi,error:(...i)=>hu("error",e,i),log:(...i)=>hu("log",e,i),noop:Qi,warn:(...i)=>hu("warn",e,i)}}function VA(){return"none"}function pu(t,{getInstanceId:e=VA}={}){const n={},r=(...i)=>{const a=bt(i),s=e();return n[s]||(n[s]={}),n[s][a]===void 0&&(n[s][a]=t(...i)),n[s][a]};return r.unmemoize=(...i)=>{var a;const s=bt(i),o=e();((a=n[o])==null?void 0:a[s])!==void 0&&delete n[o][s]},r}function Po(t,e){setTimeout(()=>{Promise.resolve().then(()=>{t()}).catch(n=>{console.error(n)})},0)}function SA(t){const e=Object.keys(t);for(let n=0,r=e.length;n<r;n++)delete t[e[n]];return t}function he(t,...e){const n=new Set(["__proto__","constructor","prototype"]);for(let r=0,i=e.length;r<i;r++){const a=e[r];if(a)if(typeof a.entries=="function")for(const[s,o]of a.entries())n.has(s)||(t[s]=o);else{const s=Object.create(null);for(const[o,u]of Object.entries(a))n.has(o)||(s[o]=u);Object.assign(t,s)}}return t}function x2(t,e,n,r,i=0){const a=e;a in t||Object.defineProperty(t,a,{enumerable:!0,get:function(){return n(e,i,this)}})}function Ts(t,e,n,r){for(let i=0,a=e.length;i<a;i++)x2(t,e[i],n,r,i)}const Ic=new Array(256),g7=new Array(256);for(let t=0,e=Ic.length;t<e;t++)g7[t]=String.fromCharCode(t).toLowerCase(),Ic[t]=String.fromCharCode(t).toUpperCase();function EA(t){return t.slice(0,t.length-1).toLowerCase()+Ic[t.charCodeAt(t.length-1)]}function x7(t){return e=>{const n=e.replace(/[-_., ]+/g," ").trim().split(" ");let r="";for(let i=0,a=n.length;i<a;i++){const s=n[i];r+=t(/^[\dA-Z]+$/.test(s)?s.toLowerCase():s.replace(/^[\dA-Z]{2,}[^a-z]/,EA),i)}return r}}const Rt=x7((t,e)=>(e?Ic[t.charCodeAt(0)]:g7[t.charCodeAt(0)])+t.slice(1)),v2=x7(t=>Ic[t.charCodeAt(0)]+t.slice(1));function zA(t){return e=>e?t[e.charCodeAt(0)]+e.slice(1):""}const IA=zA(Ic);function v7(t){return mt(Mi(t))}const Xy={name:"@polkadot/api",path:import.meta&&import.meta.url?new URL(import.meta.url).pathname.substring(0,new URL(import.meta.url).pathname.lastIndexOf("/")+1):"auto",version:"16.3.1"},LA=Cr.crypto;function HA(t){return LA.getRandomValues(t)}const Ud={getRandomValues:HA},AA={crypto:Ud};class RA{constructor(e){Y(this,"__internal__bridge"),Y(this,"abort",()=>{throw new Error("abort")}),Y(this,"__wbindgen_is_undefined",n=>this.__internal__bridge.getObject(n)===void 0),Y(this,"__wbindgen_throw",(n,r)=>{throw new Error(this.__internal__bridge.getString(n,r))}),Y(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(AA)),Y(this,"__wbg_require_604837428532a733",(n,r)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(n,r)}`)}),Y(this,"__wbg_crypto_968f1772287e2df0",n=>this.__internal__bridge.addObject(Ud)),Y(this,"__wbg_getRandomValues_a3d34b4fee3c2869",n=>this.__internal__bridge.addObject(Ud.getRandomValues)),Y(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(n,r,i)=>{Ud.getRandomValues(this.__internal__bridge.getU8a(r,i))}),Y(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(n,r,i)=>{throw new Error("randomFillsync is not available")}),Y(this,"__wbindgen_object_drop_ref",n=>{this.__internal__bridge.takeObject(n)}),this.__internal__bridge=e}}class BA{constructor(e){Y(this,"__internal__createWasm"),Y(this,"__internal__heap"),Y(this,"__internal__wbg"),Y(this,"__internal__cachegetInt32"),Y(this,"__internal__cachegetUint8"),Y(this,"__internal__heapNext"),Y(this,"__internal__wasm"),Y(this,"__internal__wasmError"),Y(this,"__internal__wasmPromise"),Y(this,"__internal__type"),this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new RA(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){(!this.__internal__wasmPromise||e)&&(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:n,type:r,wasm:i}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=i,this.__internal__wasmError=n,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const n=this.getObject(e);return this.dropObject(e),n}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const n=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[n],this.__internal__heap[n]=e,n}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,n){return this.getUint8().subarray(e/1,e/1+n)}getString(e,n){return Ta(this.getU8a(e,n))}allocU8a(e){const n=this.__internal__wasm.__wbindgen_malloc(e.length*1);return this.getUint8().set(e,n/1),[n,e.length]}allocString(e){return this.allocU8a(Mi(e))}resultU8a(){const e=this.getInt32()[2],n=this.getInt32()[8/4+1],r=this.getU8a(e,n).slice();return this.__internal__wasm.__wbindgen_free(e,n*1),r}resultString(){return Ta(this.resultU8a())}}function XA(t,e,n){return async r=>{const i={error:null,type:"none",wasm:null};try{if(e!=null&&e.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const a=await WebAssembly.instantiate(e,{wbg:r});i.wasm=a.instance.exports,i.type="wasm"}catch(a){i.error=`FATAL: Unable to initialize @polkadot/wasm-${t}:: ${a.message}`,console.error(i.error)}return i}}const jy="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",w7=new Array(256);for(let t=0,e=jy.length;t<e;t++)w7[jy.charCodeAt(t)]=t;function jA(t,e){let n=0,r=0,i=-1;for(let a=0,s=e.length-1;i!==s;a++)n=n<<6|w7[t.charCodeAt(a)],(r+=6)>=8&&(e[++i]=n>>>(r-=8)&255);return e}const Yi=Uint8Array,ho=Uint16Array,L1=Uint32Array,CA=new Yi([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),P7=new Yi([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),M7=new Yi([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),k7=(t,e)=>{const n=new ho(31);for(let i=0;i<31;++i)n[i]=e+=1<<t[i-1];const r=new L1(n[30]);for(let i=1;i<30;++i)for(let a=n[i];a<n[i+1];++a)r[a]=a-n[i]<<5|i;return[n,r]},[T7,UA]=k7(P7,2);T7[28]=258,UA[258]=28;const[DA]=k7(M7,0),N7=new ho(32768);for(let t=0;t<32768;++t){let e=(t&43690)>>>1|(t&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,N7[t]=((e&65280)>>>8|(e&255)<<8)>>>1}const ol=(t,e,n)=>{const r=t.length;let i=0;const a=new ho(e);for(;i<r;++i)t[i]&&++a[t[i]-1];const s=new ho(e);for(i=1;i<e;++i)s[i]=s[i-1]+a[i-1]<<1;let o;{o=new ho(1<<e);const u=15-e;for(i=0;i<r;++i)if(t[i]){const h=i<<4|t[i],p=e-t[i];let y=s[t[i]-1]++<<p;for(const w=y|(1<<p)-1;y<=w;++y)o[N7[y]>>u]=h}}return o},Wl=new Yi(288);for(let t=0;t<144;++t)Wl[t]=8;for(let t=144;t<256;++t)Wl[t]=9;for(let t=256;t<280;++t)Wl[t]=7;for(let t=280;t<288;++t)Wl[t]=8;const O7=new Yi(32);for(let t=0;t<32;++t)O7[t]=5;const FA=ol(Wl,9),ZA=ol(O7,5),hi=(t,e,n)=>{const r=e>>>3;return(t[r]|t[r+1]<<8)>>>(e&7)&n},dp=(t,e)=>{const n=e>>>3;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>>(e&7)},qA=t=>(t>>>3)+(t&7&&1),WA=(t,e,n)=>{(n==null||n>t.length)&&(n=t.length);const r=new(t instanceof ho?ho:t instanceof L1?L1:Yi)(n-e);return r.set(t.subarray(e,n)),r},fp=t=>{let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e},GA=(t,e,n)=>{const r=!n||n.i;n||(n={});const i=t.length,a=!e||!r;e||(e=new Yi(i*3));const s=O=>{let z=e.length;if(O>z){const j=new Yi(Math.max(z<<1,O));j.set(e),e=j}};let o=n.f||0,u=n.p||0,h=n.b||0,p=n.l,y=n.d,w=n.m,P=n.n;if(o&&!p)return e;const N=i<<3;do{if(!p){n.f=o=hi(t,u,1);const I=hi(t,u+1,3);if(u+=3,I)if(I==1)p=FA,y=ZA,w=9,P=5;else if(I==2){const A=hi(t,u,31)+257,U=hi(t,u+10,15)+4,H=A+hi(t,u+5,31)+1;u+=14;const X=new Yi(H),C=new Yi(19);for(let c=0;c<U;++c)C[CA[c]]=hi(t,u+c*3,7);u+=U*3;const F=fp(C),S=(1<<F)-1;if(!r&&u+H*(F+7)>N)break;const R=ol(C,F);for(let c=0;c<H;){const l=R[hi(t,u,S)];u+=l&15;const f=l>>>4;if(f<16)X[c++]=f;else{let b=0,g=0;for(f==16?(g=3+hi(t,u,3),u+=2,b=X[c-1]):f==17?(g=3+hi(t,u,7),u+=3):f==18&&(g=11+hi(t,u,127),u+=7);g--;)X[c++]=b}}const E=X.subarray(0,A),L=X.subarray(A);w=fp(E),P=fp(L),p=ol(E,w),y=ol(L,P)}else throw"invalid block type";else{const A=qA(u)+4,U=t[A-4]|t[A-3]<<8,H=A+U;if(H>i){if(r)throw"unexpected EOF";break}a&&s(h+U),e.set(t.subarray(A,H),h),n.b=h+=U,n.p=u=H<<3;continue}if(u>N)throw"unexpected EOF"}a&&s(h+131072);const O=(1<<w)-1,z=(1<<P)-1,j=w+P+18;for(;r||u+j<N;){const I=p[dp(t,u)&O],A=I>>>4;if(u+=I&15,u>N)throw"unexpected EOF";if(!I)throw"invalid length/literal";if(A<256)e[h++]=A;else if(A==256){p=void 0;break}else{let U=A-254;if(A>264){const S=A-257,R=P7[S];U=hi(t,u,(1<<R)-1)+T7[S],u+=R}const H=y[dp(t,u)&z],X=H>>>4;if(!H)throw"invalid distance";u+=H&15;let C=DA[X];if(X>3){const S=M7[X];C+=dp(t,u)&(1<<S)-1,u+=S}if(u>N)throw"unexpected EOF";a&&s(h+131072);const F=h+U;for(;h<F;h+=4)e[h]=e[h-C],e[h+1]=e[h+1-C],e[h+2]=e[h+2-C],e[h+3]=e[h+3-C];h=F}}n.l=p,n.p=u,n.b=h,p&&(o=1,n.m=w,n.d=y,n.n=P)}while(!o);return h==e.length?e:WA(e,0,h)},YA=t=>{if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function KA(t,e){return GA((YA(t),t.subarray(2,-4)),e)}var JA=171008,QA=339468,_A="";const $A=KA(jA(_A,new Uint8Array(JA)),new Uint8Array(QA)),eR=XA("crypto",$A),$n=new BA(eR);async function tR(t){return $n.init(t)}function Gl(t){return(...e)=>{if(!$n.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return t($n.wasm,...e)}}const nR=Gl((t,e)=>(t.ext_secp_pub_expand(8,...$n.allocU8a(e)),$n.resultU8a())),rR=Gl((t,e,n,r)=>(t.ext_blake2b(8,...$n.allocU8a(e),...$n.allocU8a(n),r),$n.resultU8a())),iR=Gl((t,e)=>(t.ext_keccak256(8,...$n.allocU8a(e)),$n.resultU8a())),aR=Gl((t,e)=>(t.ext_keccak512(8,...$n.allocU8a(e)),$n.resultU8a())),sR=Gl((t,e,n)=>(t.ext_twox(8,...$n.allocU8a(e),n),$n.resultU8a()));function Yl(){return!!$n.wasm}async function oR(){try{return!!await tR()}catch{return!1}}function cR(){return oR().then(()=>{if(!Yl())throw new Error("Unable to initialize @polkadot/util-crypto");return!0}).catch(()=>!1)}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function uR(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function V7(t,e){return Array.isArray(e)?e.length===0?!0:t?e.every(n=>typeof n=="string"):e.every(n=>Number.isSafeInteger(n)):!1}function H1(t,e){if(typeof e!="string")throw new Error(`${t}: string expected`);return!0}function S7(t){if(!Number.isSafeInteger(t))throw new Error(`invalid integer: ${t}`)}function A1(t){if(!Array.isArray(t))throw new Error("array expected")}function E7(t,e){if(!V7(!0,e))throw new Error(`${t}: array of strings expected`)}function lR(t,e){if(!V7(!1,e))throw new Error(`${t}: array of numbers expected`)}function dR(...t){const e=a=>a,n=(a,s)=>o=>a(s(o)),r=t.map(a=>a.encode).reduceRight(n,e),i=t.map(a=>a.decode).reduce(n,e);return{encode:r,decode:i}}function fR(t){const e=t.split(""),n=e.length;E7("alphabet",e);const r=new Map(e.map((i,a)=>[i,a]));return{encode:i=>(A1(i),i.map(a=>{if(!Number.isSafeInteger(a)||a<0||a>=n)throw new Error(`alphabet.encode: digit index outside alphabet "${a}". Allowed: ${t}`);return e[a]})),decode:i=>(A1(i),i.map(a=>{H1("alphabet.decode",a);const s=r.get(a);if(s===void 0)throw new Error(`Unknown letter: "${a}". Allowed: ${t}`);return s}))}}function hR(t=""){return H1("join",t),{encode:e=>(E7("join.decode",e),e.join(t)),decode:e=>(H1("join.decode",e),e.split(t))}}function Cy(t,e,n){if(e<2)throw new Error(`convertRadix: invalid from=${e}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: invalid to=${n}, base cannot be less than 2`);if(A1(t),!t.length)return[];let r=0;const i=[],a=Array.from(t,o=>{if(S7(o),o<0||o>=e)throw new Error(`invalid integer: ${o}`);return o}),s=a.length;for(;;){let o=0,u=!0;for(let h=r;h<s;h++){const p=a[h],y=e*o,w=y+p;if(!Number.isSafeInteger(w)||y/e!==o||w-p!==y)throw new Error("convertRadix: carry overflow");const P=w/n;o=w%n;const N=Math.floor(P);if(a[h]=N,!Number.isSafeInteger(N)||N*n+o!==w)throw new Error("convertRadix: carry overflow");if(u)N?u=!1:r=h;else continue}if(i.push(o),u)break}for(let o=0;o<t.length-1&&t[o]===0;o++)i.push(0);return i.reverse()}function pR(t){S7(t);const e=2**8;return{encode:n=>{if(!uR(n))throw new Error("radix.encode input should be Uint8Array");return Cy(Array.from(n),e,t)},decode:n=>(lR("radix.decode",n),Uint8Array.from(Cy(n,t,e)))}}const mR=t=>dR(pR(58),fR(t),hR("")),bR=mR("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function yR({coder:t,ipfs:e},n){return(r,i)=>(n(r,i),t.decode(i?r.substring(1):r))}function gR({coder:t,ipfs:e}){return(n,r)=>{const i=t.encode(qe(n));return r?`${e}${i}`:i}}function xR({chars:t,ipfs:e,type:n,withPadding:r}){return(i,a)=>{if(typeof i!="string")throw new Error(`Expected ${n} string input`);if(a&&!i.startsWith(e))throw new Error(`Expected ipfs-compatible ${n} to start with '${e}'`);for(let s=a?1:0,o=i.length;s<o;s++)if(!t.includes(i[s]))if(r&&i[s]==="="){if(s!==o-1&&i[s+1]!=="=")throw new Error(`Invalid ${n} padding sequence "${i[s]}${i[s+1]}" at index ${s}`)}else throw new Error(`Invalid ${n} character "${i[s]}" (0x${i.charCodeAt(s).toString(16)}) at index ${s}`);return!0}}const w2={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:bR,ipfs:"z",type:"base58"},vR=xR(w2),wR=yR(w2,vR),PR=gR(w2),Bo=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function P2(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function Ns(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function ai(t,...e){if(!P2(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function MR(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");Ns(t.outputLen),Ns(t.blockLen)}function Os(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function M2(t,e){ai(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function Vl(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function Sa(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function hp(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function Vi(t,e){return t<<32-e|t>>>e}const z7=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function I7(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const ca=z7?t=>t:t=>I7(t);function kR(t){for(let e=0;e<t.length;e++)t[e]=I7(t[e]);return t}const ds=z7?t=>t:kR,L7=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",TR=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function Sl(t){if(ai(t),L7)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=TR[t[n]];return e}const ra={_0:48,_9:57,A:65,F:70,a:97,f:102};function Uy(t){if(t>=ra._0&&t<=ra._9)return t-ra._0;if(t>=ra.A&&t<=ra.F)return t-(ra.A-10);if(t>=ra.a&&t<=ra.f)return t-(ra.a-10)}function k2(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(L7)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let i=0,a=0;i<n;i++,a+=2){const s=Uy(t.charCodeAt(a)),o=Uy(t.charCodeAt(a+1));if(s===void 0||o===void 0){const u=t[a]+t[a+1];throw new Error('hex string expected, got non-hex character "'+u+'" at index '+a)}r[i]=s*16+o}return r}function NR(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function Oa(t){return typeof t=="string"&&(t=NR(t)),ai(t),t}function no(...t){let e=0;for(let r=0;r<t.length;r++){const i=t[r];ai(i),e+=i.length}const n=new Uint8Array(e);for(let r=0,i=0;r<t.length;r++){const a=t[r];n.set(a,i),i+=a.length}return n}class $0{}function H7(t){const e=r=>t().update(Oa(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function OR(t){const e=(r,i)=>t(i).update(Oa(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function VR(t=32){if(Bo&&typeof Bo.getRandomValues=="function")return Bo.getRandomValues(new Uint8Array(t));if(Bo&&typeof Bo.randomBytes=="function")return Uint8Array.from(Bo.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}const SR=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]);function ER(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const i=BigInt(32),a=BigInt(4294967295),s=Number(n>>i&a),o=Number(n&a),u=r?4:0,h=r?0:4;t.setUint32(e+u,s,r),t.setUint32(e+h,o,r)}function zR(t,e,n){return t&e^~t&n}function IR(t,e,n){return t&e^t&n^e&n}class LR extends $0{constructor(e,n,r,i){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=i,this.buffer=new Uint8Array(e),this.view=hp(this.buffer)}update(e){Os(this),e=Oa(e),ai(e);const{view:n,buffer:r,blockLen:i}=this,a=e.length;for(let s=0;s<a;){const o=Math.min(i-this.pos,a-s);if(o===i){const u=hp(e);for(;i<=a-s;s+=i)this.process(u,s);continue}r.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===i&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Os(this),M2(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:i,isLE:a}=this;let{pos:s}=this;n[s++]=128,Sa(this.buffer.subarray(s)),this.padOffset>i-s&&(this.process(r,0),s=0);for(let y=s;y<i;y++)n[y]=0;ER(r,i-8,BigInt(this.length*8),a),this.process(r,0);const o=hp(e),u=this.outputLen;if(u%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const h=u/4,p=this.get();if(h>p.length)throw new Error("_sha2: outputLen bigger than state");for(let y=0;y<h;y++)o.setUint32(4*y,p[y],a)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:i,finished:a,destroyed:s,pos:o}=this;return e.destroyed=s,e.finished=a,e.length=i,e.pos=o,i%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}}const Qa=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),hd=BigInt(2**32-1),Dy=BigInt(32);function A7(t,e=!1){return e?{h:Number(t&hd),l:Number(t>>Dy&hd)}:{h:Number(t>>Dy&hd)|0,l:Number(t&hd)|0}}function HR(t,e=!1){const n=t.length;let r=new Uint32Array(n),i=new Uint32Array(n);for(let a=0;a<n;a++){const{h:s,l:o}=A7(t[a],e);[r[a],i[a]]=[s,o]}return[r,i]}const R7=(t,e,n)=>t>>>n|e<<32-n,B7=(t,e,n)=>t<<32-n|e>>>n,AR=(t,e,n)=>t<<64-n|e>>>n-32,RR=(t,e,n)=>t>>>n-32|e<<64-n,BR=(t,e)=>e,XR=(t,e)=>t,jR=(t,e,n)=>t<<n|e>>>32-n,CR=(t,e,n)=>e<<n|t>>>32-n,UR=(t,e,n)=>e<<n-32|t>>>64-n,DR=(t,e,n)=>t<<n-32|e>>>64-n;function X7(t,e,n,r){const i=(e>>>0)+(r>>>0);return{h:t+n+(i/2**32|0)|0,l:i|0}}const j7=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),C7=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,mn=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),Te=new Uint32Array(32);function _a(t,e,n,r,i,a){const s=i[a],o=i[a+1];let u=Te[2*t],h=Te[2*t+1],p=Te[2*e],y=Te[2*e+1],w=Te[2*n],P=Te[2*n+1],N=Te[2*r],O=Te[2*r+1],z=j7(u,p,s);h=C7(z,h,y,o),u=z|0,{Dh:O,Dl:N}={Dh:O^h,Dl:N^u},{Dh:O,Dl:N}={Dh:BR(O,N),Dl:XR(O)},{h:P,l:w}=X7(P,w,O,N),{Bh:y,Bl:p}={Bh:y^P,Bl:p^w},{Bh:y,Bl:p}={Bh:R7(y,p,24),Bl:B7(y,p,24)},Te[2*t]=u,Te[2*t+1]=h,Te[2*e]=p,Te[2*e+1]=y,Te[2*n]=w,Te[2*n+1]=P,Te[2*r]=N,Te[2*r+1]=O}function $a(t,e,n,r,i,a){const s=i[a],o=i[a+1];let u=Te[2*t],h=Te[2*t+1],p=Te[2*e],y=Te[2*e+1],w=Te[2*n],P=Te[2*n+1],N=Te[2*r],O=Te[2*r+1],z=j7(u,p,s);h=C7(z,h,y,o),u=z|0,{Dh:O,Dl:N}={Dh:O^h,Dl:N^u},{Dh:O,Dl:N}={Dh:R7(O,N,16),Dl:B7(O,N,16)},{h:P,l:w}=X7(P,w,O,N),{Bh:y,Bl:p}={Bh:y^P,Bl:p^w},{Bh:y,Bl:p}={Bh:AR(y,p,63),Bl:RR(y,p,63)},Te[2*t]=u,Te[2*t+1]=h,Te[2*e]=p,Te[2*e+1]=y,Te[2*n]=w,Te[2*n+1]=P,Te[2*r]=N,Te[2*r+1]=O}function FR(t,e={},n,r,i){if(Ns(n),t<0||t>n)throw new Error("outputLen bigger than keyLen");const{key:a,salt:s,personalization:o}=e;if(a!==void 0&&(a.length<1||a.length>n))throw new Error("key length must be undefined or 1.."+n);if(s!==void 0&&s.length!==r)throw new Error("salt must be undefined or "+r);if(o!==void 0&&o.length!==i)throw new Error("personalization must be undefined or "+i)}class ZR extends $0{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,Ns(e),Ns(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=Vl(this.buffer)}update(e){Os(this),e=Oa(e),ai(e);const{blockLen:n,buffer:r,buffer32:i}=this,a=e.length,s=e.byteOffset,o=e.buffer;for(let u=0;u<a;){this.pos===n&&(ds(i),this.compress(i,0,!1),ds(i),this.pos=0);const h=Math.min(n-this.pos,a-u),p=s+u;if(h===n&&!(p%4)&&u+h<a){const y=new Uint32Array(o,p,Math.floor((a-u)/4));ds(y);for(let w=0;u+n<a;w+=i.length,u+=n)this.length+=n,this.compress(y,w,!1);ds(y);continue}r.set(e.subarray(u,u+h),this.pos),this.pos+=h,this.length+=h,u+=h}return this}digestInto(e){Os(this),M2(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,Sa(this.buffer.subarray(n)),ds(r),this.compress(r,0,!0),ds(r);const i=Vl(e);this.get().forEach((a,s)=>i[s]=ca(a))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:i,destroyed:a,outputLen:s,pos:o}=this;return e||(e=new this.constructor({dkLen:s})),e.set(...this.get()),e.buffer.set(n),e.destroyed=a,e.finished=i,e.length=r,e.pos=o,e.outputLen=s,e}clone(){return this._cloneInto()}}class qR extends ZR{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=mn[0]|0,this.v0h=mn[1]|0,this.v1l=mn[2]|0,this.v1h=mn[3]|0,this.v2l=mn[4]|0,this.v2h=mn[5]|0,this.v3l=mn[6]|0,this.v3h=mn[7]|0,this.v4l=mn[8]|0,this.v4h=mn[9]|0,this.v5l=mn[10]|0,this.v5h=mn[11]|0,this.v6l=mn[12]|0,this.v6h=mn[13]|0,this.v7l=mn[14]|0,this.v7h=mn[15]|0,FR(n,e,64,16,16);let{key:r,personalization:i,salt:a}=e,s=0;if(r!==void 0&&(r=Oa(r),s=r.length),this.v0l^=this.outputLen|s<<8|65536|1<<24,a!==void 0){a=Oa(a);const o=Vl(a);this.v4l^=ca(o[0]),this.v4h^=ca(o[1]),this.v5l^=ca(o[2]),this.v5h^=ca(o[3])}if(i!==void 0){i=Oa(i);const o=Vl(i);this.v6l^=ca(o[0]),this.v6h^=ca(o[1]),this.v7l^=ca(o[2]),this.v7h^=ca(o[3])}if(r!==void 0){const o=new Uint8Array(this.blockLen);o.set(r),this.update(o)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:i,v2l:a,v2h:s,v3l:o,v3h:u,v4l:h,v4h:p,v5l:y,v5h:w,v6l:P,v6h:N,v7l:O,v7h:z}=this;return[e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z]}set(e,n,r,i,a,s,o,u,h,p,y,w,P,N,O,z){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=i|0,this.v2l=a|0,this.v2h=s|0,this.v3l=o|0,this.v3h=u|0,this.v4l=h|0,this.v4h=p|0,this.v5l=y|0,this.v5h=w|0,this.v6l=P|0,this.v6h=N|0,this.v7l=O|0,this.v7h=z|0}compress(e,n,r){this.get().forEach((u,h)=>Te[h]=u),Te.set(mn,16);let{h:i,l:a}=A7(BigInt(this.length));Te[24]=mn[8]^a,Te[25]=mn[9]^i,r&&(Te[28]=~Te[28],Te[29]=~Te[29]);let s=0;const o=SR;for(let u=0;u<12;u++)_a(0,4,8,12,e,n+2*o[s++]),$a(0,4,8,12,e,n+2*o[s++]),_a(1,5,9,13,e,n+2*o[s++]),$a(1,5,9,13,e,n+2*o[s++]),_a(2,6,10,14,e,n+2*o[s++]),$a(2,6,10,14,e,n+2*o[s++]),_a(3,7,11,15,e,n+2*o[s++]),$a(3,7,11,15,e,n+2*o[s++]),_a(0,5,10,15,e,n+2*o[s++]),$a(0,5,10,15,e,n+2*o[s++]),_a(1,6,11,12,e,n+2*o[s++]),$a(1,6,11,12,e,n+2*o[s++]),_a(2,7,8,13,e,n+2*o[s++]),$a(2,7,8,13,e,n+2*o[s++]),_a(3,4,9,14,e,n+2*o[s++]),$a(3,4,9,14,e,n+2*o[s++]);this.v0l^=Te[0]^Te[16],this.v0h^=Te[1]^Te[17],this.v1l^=Te[2]^Te[18],this.v1h^=Te[3]^Te[19],this.v2l^=Te[4]^Te[20],this.v2h^=Te[5]^Te[21],this.v3l^=Te[6]^Te[22],this.v3h^=Te[7]^Te[23],this.v4l^=Te[8]^Te[24],this.v4h^=Te[9]^Te[25],this.v5l^=Te[10]^Te[26],this.v5h^=Te[11]^Te[27],this.v6l^=Te[12]^Te[28],this.v6h^=Te[13]^Te[29],this.v7l^=Te[14]^Te[30],this.v7h^=Te[15]^Te[31],Sa(Te)}destroy(){this.destroyed=!0,Sa(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const WR=OR(t=>new qR(t)),Fy=WR;function GR(t){return(...e)=>mt(t(...e))}function YR(t,e){return(n,r=256,i)=>{const a=qe(n);return!J0||!i&&Yl()?t[r](a):e[r](a)}}function ys(t,e=256,n,r){const i=Math.ceil(e/8),a=qe(t);return!J0||!r&&Yl()?rR(a,qe(n),i):n?Fy(a,{dkLen:i,key:n}):Fy(a,{dkLen:i})}const mu=GR(ys),KR=Mi("SS58PRE");function U7(t){return ys(rr(KR,t),512)}function JR(t){const e=t[0]&64?2:1,n=e===1?t[0]:(t[0]&63)<<2|t[1]>>6|(t[1]&63)<<8,r=[34+e,35+e].includes(t.length),i=t.length-(r?2:1),a=U7(t.subarray(0,i));return[(t[0]&128)===0&&![46,47].includes(t[0])&&(r?t[t.length-2]===a[0]&&t[t.length-1]===a[1]:t[t.length-1]===a[0]),i,e,n]}const QR=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"autonomys",displayName:"Autonomys",symbols:["AI3"],decimals:[18],standardAccount:"*25519",website:"https://autonomys.xyz"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],_R={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],encointer:["0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],frequency:["0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],integritee:["0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da","0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],liberland:["0x6bd89e052d67a45bb60a9a23e8581053d5e0d619f15cb9865946937e690c42d6"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],peaq:["0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polimec:["0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vara:["0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},$R={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},eB={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,bittensor:354,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,encointer:434,enjin:1155,equilibrium:99999997,frequency:2091,genshiro:99999996,hydradx:354,integritee:2015,"interlay-parachain":354,karura:686,khala:434,kusama:434,liberland:767,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,peaq:3338,pendulum:354,phala:354,picasso:434,polimec:3344,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vara:4976,vtb:694,xxnetwork:1955,zeitgeist:354},tB={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},Zy=[0,2,42],nB=["testnet"];function rB(t){var e,n;const r=t.network||"",i=r.replace(/_/g,"-").split("-"),a=t;return a.slip44=eB[r],a.hasLedgerSupport=!!a.slip44,a.genesisHash=_R[r]||[],a.icon=$R[r]||"substrate",a.isTestnet=!!tB[r]||nB.includes(i[i.length-1]),a.isIgnored=a.isTestnet||!(t.standardAccount&&(e=t.decimals)!=null&&e.length&&(n=t.symbols)!=null&&n.length)&&t.prefix!==42,a}function iB({genesisHash:t,prefix:e}){return!!t.length||e===42}function aB(t){return!t.isIgnored&&!!t.network}function sB(t,e){const n=Zy.includes(t.prefix),r=Zy.includes(e.prefix);return n===r?n?0:t.displayName.localeCompare(e.displayName):n?-1:1}const oB=QR.map(rB),D7=oB.filter(aB).sort(sB),cB=D7.filter(iB),Dd={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:D7.map(({prefix:t})=>t),prefix:42};function Es(t,e,n=-1){if(!t)throw new Error("Invalid empty address passed");if(Qe(t)||It(t))return qe(t);try{const r=wR(t);if(!Dd.allowedEncodedLengths.includes(r.length))throw new Error("Invalid decoded address length");const[i,a,s,o]=JR(r);if(!i&&!e)throw new Error("Invalid decoded address checksum");if(n!==-1&&n!==o)throw new Error(`Expected ss58Format ${n}, received ${o}`);return r.slice(s,a)}catch(r){throw new Error(`Decoding ${t}: ${r.message}`)}}const qy={bitLength:256,isLe:!1},uB=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),es=new Uint32Array(64);class lB extends LR{constructor(e=32){super(64,e,8,!1),this.A=Qa[0]|0,this.B=Qa[1]|0,this.C=Qa[2]|0,this.D=Qa[3]|0,this.E=Qa[4]|0,this.F=Qa[5]|0,this.G=Qa[6]|0,this.H=Qa[7]|0}get(){const{A:e,B:n,C:r,D:i,E:a,F:s,G:o,H:u}=this;return[e,n,r,i,a,s,o,u]}set(e,n,r,i,a,s,o,u){this.A=e|0,this.B=n|0,this.C=r|0,this.D=i|0,this.E=a|0,this.F=s|0,this.G=o|0,this.H=u|0}process(e,n){for(let y=0;y<16;y++,n+=4)es[y]=e.getUint32(n,!1);for(let y=16;y<64;y++){const w=es[y-15],P=es[y-2],N=Vi(w,7)^Vi(w,18)^w>>>3,O=Vi(P,17)^Vi(P,19)^P>>>10;es[y]=O+es[y-7]+N+es[y-16]|0}let{A:r,B:i,C:a,D:s,E:o,F:u,G:h,H:p}=this;for(let y=0;y<64;y++){const w=Vi(o,6)^Vi(o,11)^Vi(o,25),P=p+w+zR(o,u,h)+uB[y]+es[y]|0,N=(Vi(r,2)^Vi(r,13)^Vi(r,22))+IR(r,i,a)|0;p=h,h=u,u=o,o=s+P|0,s=a,a=i,i=r,r=P+N|0}r=r+this.A|0,i=i+this.B|0,a=a+this.C|0,s=s+this.D|0,o=o+this.E|0,u=u+this.F|0,h=h+this.G|0,p=p+this.H|0,this.set(r,i,a,s,o,u,h,p)}roundClean(){Sa(es)}destroy(){this.set(0,0,0,0,0,0,0,0),Sa(this.buffer)}}const dB=H7(()=>new lB);class F7 extends $0{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,MR(e);const r=Oa(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,a=new Uint8Array(i);a.set(r.length>i?e.create().update(r).digest():r);for(let s=0;s<a.length;s++)a[s]^=54;this.iHash.update(a),this.oHash=e.create();for(let s=0;s<a.length;s++)a[s]^=106;this.oHash.update(a),Sa(a)}update(e){return Os(this),this.iHash.update(e),this}digestInto(e){Os(this),ai(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:i,destroyed:a,blockLen:s,outputLen:o}=this;return e=e,e.finished=i,e.destroyed=a,e.blockLen=s,e.outputLen=o,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const Z7=(t,e,n)=>new F7(t,e).update(n).digest();Z7.create=(t,e)=>new F7(t,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const T2=BigInt(0),R1=BigInt(1);function p0(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}function pd(t){const e=t.toString(16);return e.length&1?"0"+e:e}function q7(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?T2:BigInt("0x"+t)}function eh(t){return q7(Sl(t))}function W7(t){return ai(t),q7(Sl(Uint8Array.from(t).reverse()))}function N2(t,e){return k2(t.toString(16).padStart(e*2,"0"))}function G7(t,e){return N2(t,e).reverse()}function Gr(t,e,n){let r;if(typeof e=="string")try{r=k2(e)}catch(a){throw new Error(t+" must be hex string or Uint8Array, cause: "+a)}else if(P2(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");const i=r.length;if(typeof n=="number"&&i!==n)throw new Error(t+" of length "+n+" expected, got "+i);return r}const pp=t=>typeof t=="bigint"&&T2<=t;function fB(t,e,n){return pp(t)&&pp(e)&&pp(n)&&e<=t&&t<n}function hB(t,e,n,r){if(!fB(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function pB(t){let e;for(e=0;t>T2;t>>=R1,e+=1);return e}const th=t=>(R1<<BigInt(t))-R1;function mB(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");const r=w=>new Uint8Array(w),i=w=>Uint8Array.of(w);let a=r(t),s=r(t),o=0;const u=()=>{a.fill(1),s.fill(0),o=0},h=(...w)=>n(s,a,...w),p=(w=r(0))=>{s=h(i(0),w),a=h(),w.length!==0&&(s=h(i(1),w),a=h())},y=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let w=0;const P=[];for(;w<e;){a=h();const N=a.slice();P.push(N),w+=a.length}return no(...P)};return(w,P)=>{u(),p(w);let N;for(;!(N=P(y()));)p();return u(),N}}function O2(t,e,n={}){if(!t||typeof t!="object")throw new Error("expected valid options object");function r(i,a,s){const o=t[i];if(s&&o===void 0)return;const u=typeof o;if(u!==a||o===null)throw new Error(`param "${i}" is invalid: expected ${a}, got ${u}`)}Object.entries(e).forEach(([i,a])=>r(i,a,!1)),Object.entries(n).forEach(([i,a])=>r(i,a,!0))}function Wy(t){const e=new WeakMap;return(n,...r)=>{const i=e.get(n);if(i!==void 0)return i;const a=t(n,...r);return e.set(n,a),a}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const lr=BigInt(0),er=BigInt(1),ro=BigInt(2),bB=BigInt(3),Y7=BigInt(4),K7=BigInt(5),J7=BigInt(8);function Kr(t,e){const n=t%e;return n>=lr?n:e+n}function Zr(t,e,n){let r=t;for(;e-- >lr;)r*=r,r%=n;return r}function Gy(t,e){if(t===lr)throw new Error("invert: expected non-zero number");if(e<=lr)throw new Error("invert: expected positive modulus, got "+e);let n=Kr(t,e),r=e,i=lr,a=er;for(;n!==lr;){const s=r/n,o=r%n,u=i-a*s;r=n,n=o,i=a,a=u}if(r!==er)throw new Error("invert: does not exist");return Kr(i,e)}function Q7(t,e){const n=(t.ORDER+er)/Y7,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error("Cannot find square root");return r}function yB(t,e){const n=(t.ORDER-K7)/J7,r=t.mul(e,ro),i=t.pow(r,n),a=t.mul(e,i),s=t.mul(t.mul(a,ro),i),o=t.mul(a,t.sub(s,t.ONE));if(!t.eql(t.sqr(o),e))throw new Error("Cannot find square root");return o}function gB(t){if(t<BigInt(3))throw new Error("sqrt is not defined for small field");let e=t-er,n=0;for(;e%ro===lr;)e/=ro,n++;let r=ro;const i=nh(t);for(;Yy(i,r)===1;)if(r++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(n===1)return Q7;let a=i.pow(r,e);const s=(e+er)/ro;return function(o,u){if(o.is0(u))return u;if(Yy(o,u)!==1)throw new Error("Cannot find square root");let h=n,p=o.mul(o.ONE,a),y=o.pow(u,e),w=o.pow(u,s);for(;!o.eql(y,o.ONE);){if(o.is0(y))return o.ZERO;let P=1,N=o.sqr(y);for(;!o.eql(N,o.ONE);)if(P++,N=o.sqr(N),P===h)throw new Error("Cannot find square root");const O=er<<BigInt(h-P-1),z=o.pow(p,O);h=P,p=o.sqr(z),y=o.mul(y,p),w=o.mul(w,z)}return w}}function xB(t){return t%Y7===bB?Q7:t%J7===K7?yB:gB(t)}const vB=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function wB(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"},n=vB.reduce((r,i)=>(r[i]="function",r),e);return O2(t,n),t}function PB(t,e,n){if(n<lr)throw new Error("invalid exponent, negatives unsupported");if(n===lr)return t.ONE;if(n===er)return e;let r=t.ONE,i=e;for(;n>lr;)n&er&&(r=t.mul(r,i)),i=t.sqr(i),n>>=er;return r}function _7(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),i=e.reduce((s,o,u)=>t.is0(o)?s:(r[u]=s,t.mul(s,o)),t.ONE),a=t.inv(i);return e.reduceRight((s,o,u)=>t.is0(o)?s:(r[u]=t.mul(s,r[u]),t.mul(s,o)),a),r}function Yy(t,e){const n=(t.ORDER-er)/ro,r=t.pow(e,n),i=t.eql(r,t.ONE),a=t.eql(r,t.ZERO),s=t.eql(r,t.neg(t.ONE));if(!i&&!a&&!s)throw new Error("invalid Legendre symbol result");return i?1:a?0:-1}function MB(t,e){e!==void 0&&Ns(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function nh(t,e,n=!1,r={}){if(t<=lr)throw new Error("invalid field: expected ORDER > 0, got "+t);let i,a;if(typeof e=="object"&&e!=null){if(r.sqrt||n)throw new Error("cannot specify opts in two arguments");const p=e;p.BITS&&(i=p.BITS),p.sqrt&&(a=p.sqrt),typeof p.isLE=="boolean"&&(n=p.isLE)}else typeof e=="number"&&(i=e),r.sqrt&&(a=r.sqrt);const{nBitLength:s,nByteLength:o}=MB(t,i);if(o>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let u;const h=Object.freeze({ORDER:t,isLE:n,BITS:s,BYTES:o,MASK:th(s),ZERO:lr,ONE:er,create:p=>Kr(p,t),isValid:p=>{if(typeof p!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof p);return lr<=p&&p<t},is0:p=>p===lr,isValidNot0:p=>!h.is0(p)&&h.isValid(p),isOdd:p=>(p&er)===er,neg:p=>Kr(-p,t),eql:(p,y)=>p===y,sqr:p=>Kr(p*p,t),add:(p,y)=>Kr(p+y,t),sub:(p,y)=>Kr(p-y,t),mul:(p,y)=>Kr(p*y,t),pow:(p,y)=>PB(h,p,y),div:(p,y)=>Kr(p*Gy(y,t),t),sqrN:p=>p*p,addN:(p,y)=>p+y,subN:(p,y)=>p-y,mulN:(p,y)=>p*y,inv:p=>Gy(p,t),sqrt:a||(p=>(u||(u=xB(t)),u(h,p))),toBytes:p=>n?G7(p,o):N2(p,o),fromBytes:p=>{if(p.length!==o)throw new Error("Field.fromBytes: expected "+o+" bytes, got "+p.length);return n?W7(p):eh(p)},invertBatch:p=>_7(h,p),cmov:(p,y,w)=>w?y:p});return Object.freeze(h)}function $7(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function ev(t){const e=$7(t);return e+Math.ceil(e/2)}function kB(t,e,n=!1){const r=t.length,i=$7(e),a=ev(e);if(r<16||r<a||r>1024)throw new Error("expected "+a+"-1024 bytes of input, got "+r);const s=n?W7(t):eh(t),o=Kr(s,e-er)+er;return n?G7(o,i):N2(o,i)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Lc=BigInt(0),io=BigInt(1);function cl(t,e){const n=e.negate();return t?n:e}function TB(t,e,n){const r=a=>a.pz,i=_7(t.Fp,n.map(r));return n.map((a,s)=>a.toAffine(i[s])).map(t.fromAffine)}function tv(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function mp(t,e){tv(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),i=2**t,a=th(t),s=BigInt(t);return{windows:n,windowSize:r,mask:a,maxNumber:i,shiftBy:s}}function Ky(t,e,n){const{windowSize:r,mask:i,maxNumber:a,shiftBy:s}=n;let o=Number(t&i),u=t>>s;o>r&&(o-=a,u+=io);const h=e*r,p=h+Math.abs(o)-1,y=o===0,w=o<0,P=e%2!==0;return{nextN:u,offset:p,isZero:y,isNeg:w,isNegF:P,offsetF:h}}function NB(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error("invalid point at index "+r)})}function OB(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error("invalid scalar at index "+r)})}const bp=new WeakMap,nv=new WeakMap;function yp(t){return nv.get(t)||1}function Jy(t){if(t!==Lc)throw new Error("invalid wNAF")}function VB(t,e){return{constTimeNegate:cl,hasPrecomputes(n){return yp(n)!==1},unsafeLadder(n,r,i=t.ZERO){let a=n;for(;r>Lc;)r&io&&(i=i.add(a)),a=a.double(),r>>=io;return i},precomputeWindow(n,r){const{windows:i,windowSize:a}=mp(r,e),s=[];let o=n,u=o;for(let h=0;h<i;h++){u=o,s.push(u);for(let p=1;p<a;p++)u=u.add(o),s.push(u);o=u.double()}return s},wNAF(n,r,i){let a=t.ZERO,s=t.BASE;const o=mp(n,e);for(let u=0;u<o.windows;u++){const{nextN:h,offset:p,isZero:y,isNeg:w,isNegF:P,offsetF:N}=Ky(i,u,o);i=h,y?s=s.add(cl(P,r[N])):a=a.add(cl(w,r[p]))}return Jy(i),{p:a,f:s}},wNAFUnsafe(n,r,i,a=t.ZERO){const s=mp(n,e);for(let o=0;o<s.windows&&i!==Lc;o++){const{nextN:u,offset:h,isZero:p,isNeg:y}=Ky(i,o,s);if(i=u,!p){const w=r[h];a=a.add(y?w.negate():w)}}return Jy(i),a},getPrecomputes(n,r,i){let a=bp.get(r);return a||(a=this.precomputeWindow(r,n),n!==1&&(typeof i=="function"&&(a=i(a)),bp.set(r,a))),a},wNAFCached(n,r,i){const a=yp(n);return this.wNAF(a,this.getPrecomputes(a,n,i),r)},wNAFCachedUnsafe(n,r,i,a){const s=yp(n);return s===1?this.unsafeLadder(n,r,a):this.wNAFUnsafe(s,this.getPrecomputes(s,n,i),r,a)},setWindowSize(n,r){tv(r,e),nv.set(n,r),bp.delete(n)}}}function SB(t,e,n,r){let i=e,a=t.ZERO,s=t.ZERO;for(;n>Lc||r>Lc;)n&io&&(a=a.add(i)),r&io&&(s=s.add(i)),i=i.double(),n>>=io,r>>=io;return{p1:a,p2:s}}function EB(t,e,n,r){NB(n,t),OB(r,e);const i=n.length,a=r.length;if(i!==a)throw new Error("arrays of points and scalars must have equal length");const s=t.ZERO,o=pB(BigInt(i));let u=1;o>12?u=o-3:o>4?u=o-2:o>0&&(u=2);const h=th(u),p=new Array(Number(h)+1).fill(s),y=Math.floor((e.BITS-1)/u)*u;let w=s;for(let P=y;P>=0;P-=u){p.fill(s);for(let O=0;O<a;O++){const z=r[O],j=Number(z>>BigInt(P)&h);p[j]=p[j].add(n[O])}let N=s;for(let O=p.length-1,z=s;O>0;O--)z=z.add(p[O]),N=N.add(z);if(w=w.add(N),P!==0)for(let O=0;O<u;O++)w=w.double()}return w}function Qy(t,e){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return wB(e),e}else return nh(t)}function zB(t,e,n={}){if(!e||typeof e!="object")throw new Error(`expected valid ${t} CURVE object`);for(const s of["p","n","h"]){const o=e[s];if(!(typeof o=="bigint"&&o>Lc))throw new Error(`CURVE.${s} must be positive bigint`)}const r=Qy(e.p,n.Fp),i=Qy(e.n,n.Fn),a=["Gx","Gy","a","b"];for(const s of a)if(!r.isValid(e[s]))throw new Error(`CURVE.${s} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:i}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function _y(t){t.lowS!==void 0&&p0("lowS",t.lowS),t.prehash!==void 0&&p0("prehash",t.prehash)}class IB extends Error{constructor(e=""){super(e)}}const ba={Err:IB,_tlv:{encode:(t,e)=>{const{Err:n}=ba;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length&1)throw new n("tlv.encode: unpadded data");const r=e.length/2,i=pd(r);if(i.length/2&128)throw new n("tlv.encode: long form length too big");const a=r>127?pd(i.length/2|128):"";return pd(t)+a+i+e},decode(t,e){const{Err:n}=ba;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const i=e[r++],a=!!(i&128);let s=0;if(!a)s=i;else{const u=i&127;if(!u)throw new n("tlv.decode(long): indefinite length not supported");if(u>4)throw new n("tlv.decode(long): byte length is too big");const h=e.subarray(r,r+u);if(h.length!==u)throw new n("tlv.decode: length bytes not complete");if(h[0]===0)throw new n("tlv.decode(long): zero leftmost byte");for(const p of h)s=s<<8|p;if(r+=u,s<128)throw new n("tlv.decode(long): not minimal encoding")}const o=e.subarray(r,r+s);if(o.length!==s)throw new n("tlv.decode: wrong value length");return{v:o,l:e.subarray(r+s)}}},_int:{encode(t){const{Err:e}=ba;if(t<ul)throw new e("integer: negative integers are not allowed");let n=pd(t);if(Number.parseInt(n[0],16)&8&&(n="00"+n),n.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return n},decode(t){const{Err:e}=ba;if(t[0]&128)throw new e("invalid signature integer: negative");if(t[0]===0&&!(t[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return eh(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=ba,i=Gr("signature",t),{v:a,l:s}=r.decode(48,i);if(s.length)throw new e("invalid signature: left bytes after parsing");const{v:o,l:u}=r.decode(2,a),{v:h,l:p}=r.decode(2,u);if(p.length)throw new e("invalid signature: left bytes after parsing");return{r:n.decode(o),s:n.decode(h)}},hexFromSig(t){const{_tlv:e,_int:n}=ba,r=e.encode(2,n.encode(t.r)),i=e.encode(2,n.encode(t.s)),a=r+i;return e.encode(48,a)}},ul=BigInt(0),ll=BigInt(1),LB=BigInt(2),md=BigInt(3),HB=BigInt(4);function AB(t,e,n){function r(i){const a=t.sqr(i),s=t.mul(a,i);return t.add(t.add(s,t.mul(i,e)),n)}return r}function rv(t,e,n){const{BYTES:r}=t;function i(a){let s;if(typeof a=="bigint")s=a;else{let o=Gr("private key",a);if(e){if(!e.includes(o.length*2))throw new Error("invalid private key");const u=new Uint8Array(r);u.set(o,u.length-o.length),o=u}try{s=t.fromBytes(o)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof a}`)}}if(n&&(s=t.create(s)),!t.isValidNot0(s))throw new Error("invalid private key: out of range [1..N-1]");return s}return i}function RB(t,e={}){const{Fp:n,Fn:r}=zB("weierstrass",t,e),{h:i,n:a}=t;O2(e,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:s}=e;if(s&&(!n.is0(t.a)||typeof s.beta!="bigint"||typeof s.splitScalar!="function"))throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');function o(){if(!n.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}function u(F,S,R){const{x:E,y:L}=S.toAffine(),c=n.toBytes(E);if(p0("isCompressed",R),R){o();const l=!n.isOdd(L);return no(iv(l),c)}else return no(Uint8Array.of(4),c,n.toBytes(L))}function h(F){ai(F);const S=n.BYTES,R=S+1,E=2*S+1,L=F.length,c=F[0],l=F.subarray(1);if(L===R&&(c===2||c===3)){const f=n.fromBytes(l);if(!n.isValid(f))throw new Error("bad point: is not on curve, wrong x");const b=w(f);let g;try{g=n.sqrt(b)}catch(M){const x=M instanceof Error?": "+M.message:"";throw new Error("bad point: is not on curve, sqrt error"+x)}o();const v=n.isOdd(g);return(c&1)===1!==v&&(g=n.neg(g)),{x:f,y:g}}else if(L===E&&c===4){const f=n.fromBytes(l.subarray(S*0,S*1)),b=n.fromBytes(l.subarray(S*1,S*2));if(!P(f,b))throw new Error("bad point: is not on curve");return{x:f,y:b}}else throw new Error(`bad point: got length ${L}, expected compressed=${R} or uncompressed=${E}`)}const p=e.toBytes||u,y=e.fromBytes||h,w=AB(n,t.a,t.b);function P(F,S){const R=n.sqr(S),E=w(F);return n.eql(R,E)}if(!P(t.Gx,t.Gy))throw new Error("bad curve params: generator point");const N=n.mul(n.pow(t.a,md),HB),O=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(N,O)))throw new Error("bad curve params: a or b");function z(F,S,R=!1){if(!n.isValid(S)||R&&n.is0(S))throw new Error(`bad point coordinate ${F}`);return S}function j(F){if(!(F instanceof H))throw new Error("ProjectivePoint expected")}const I=Wy((F,S)=>{const{px:R,py:E,pz:L}=F;if(n.eql(L,n.ONE))return{x:R,y:E};const c=F.is0();S==null&&(S=c?n.ONE:n.inv(L));const l=n.mul(R,S),f=n.mul(E,S),b=n.mul(L,S);if(c)return{x:n.ZERO,y:n.ZERO};if(!n.eql(b,n.ONE))throw new Error("invZ was invalid");return{x:l,y:f}}),A=Wy(F=>{if(F.is0()){if(e.allowInfinityPoint&&!n.is0(F.py))return;throw new Error("bad point: ZERO")}const{x:S,y:R}=F.toAffine();if(!n.isValid(S)||!n.isValid(R))throw new Error("bad point: x or y not field elements");if(!P(S,R))throw new Error("bad point: equation left != right");if(!F.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function U(F,S,R,E,L){return R=new H(n.mul(R.px,F),R.py,R.pz),S=cl(E,S),R=cl(L,R),S.add(R)}class H{constructor(S,R,E){this.px=z("x",S),this.py=z("y",R,!0),this.pz=z("z",E),Object.freeze(this)}static fromAffine(S){const{x:R,y:E}=S||{};if(!S||!n.isValid(R)||!n.isValid(E))throw new Error("invalid affine point");if(S instanceof H)throw new Error("projective point not allowed");return n.is0(R)&&n.is0(E)?H.ZERO:new H(R,E,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(S){return TB(H,"pz",S)}static fromBytes(S){return ai(S),H.fromHex(S)}static fromHex(S){const R=H.fromAffine(y(Gr("pointHex",S)));return R.assertValidity(),R}static fromPrivateKey(S){const R=rv(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return H.BASE.multiply(R(S))}static msm(S,R){return EB(H,r,S,R)}precompute(S=8,R=!0){return C.setWindowSize(this,S),R||this.multiply(md),this}_setWindowSize(S){this.precompute(S)}assertValidity(){A(this)}hasEvenY(){const{y:S}=this.toAffine();if(!n.isOdd)throw new Error("Field doesn't support isOdd");return!n.isOdd(S)}equals(S){j(S);const{px:R,py:E,pz:L}=this,{px:c,py:l,pz:f}=S,b=n.eql(n.mul(R,f),n.mul(c,L)),g=n.eql(n.mul(E,f),n.mul(l,L));return b&&g}negate(){return new H(this.px,n.neg(this.py),this.pz)}double(){const{a:S,b:R}=t,E=n.mul(R,md),{px:L,py:c,pz:l}=this;let f=n.ZERO,b=n.ZERO,g=n.ZERO,v=n.mul(L,L),M=n.mul(c,c),x=n.mul(l,l),d=n.mul(L,c);return d=n.add(d,d),g=n.mul(L,l),g=n.add(g,g),f=n.mul(S,g),b=n.mul(E,x),b=n.add(f,b),f=n.sub(M,b),b=n.add(M,b),b=n.mul(f,b),f=n.mul(d,f),g=n.mul(E,g),x=n.mul(S,x),d=n.sub(v,x),d=n.mul(S,d),d=n.add(d,g),g=n.add(v,v),v=n.add(g,v),v=n.add(v,x),v=n.mul(v,d),b=n.add(b,v),x=n.mul(c,l),x=n.add(x,x),v=n.mul(x,d),f=n.sub(f,v),g=n.mul(x,M),g=n.add(g,g),g=n.add(g,g),new H(f,b,g)}add(S){j(S);const{px:R,py:E,pz:L}=this,{px:c,py:l,pz:f}=S;let b=n.ZERO,g=n.ZERO,v=n.ZERO;const M=t.a,x=n.mul(t.b,md);let d=n.mul(R,c),m=n.mul(E,l),V=n.mul(L,f),B=n.add(R,E),k=n.add(c,l);B=n.mul(B,k),k=n.add(d,m),B=n.sub(B,k),k=n.add(R,L);let Z=n.add(c,f);return k=n.mul(k,Z),Z=n.add(d,V),k=n.sub(k,Z),Z=n.add(E,L),b=n.add(l,f),Z=n.mul(Z,b),b=n.add(m,V),Z=n.sub(Z,b),v=n.mul(M,k),b=n.mul(x,V),v=n.add(b,v),b=n.sub(m,v),v=n.add(m,v),g=n.mul(b,v),m=n.add(d,d),m=n.add(m,d),V=n.mul(M,V),k=n.mul(x,k),m=n.add(m,V),V=n.sub(d,V),V=n.mul(M,V),k=n.add(k,V),d=n.mul(m,k),g=n.add(g,d),d=n.mul(Z,k),b=n.mul(B,b),b=n.sub(b,d),d=n.mul(B,m),v=n.mul(Z,v),v=n.add(v,d),new H(b,g,v)}subtract(S){return this.add(S.negate())}is0(){return this.equals(H.ZERO)}multiply(S){const{endo:R}=e;if(!r.isValidNot0(S))throw new Error("invalid scalar: out of range");let E,L;const c=l=>C.wNAFCached(this,l,H.normalizeZ);if(R){const{k1neg:l,k1:f,k2neg:b,k2:g}=R.splitScalar(S),{p:v,f:M}=c(f),{p:x,f:d}=c(g);L=M.add(d),E=U(R.beta,v,x,l,b)}else{const{p:l,f}=c(S);E=l,L=f}return H.normalizeZ([E,L])[0]}multiplyUnsafe(S){const{endo:R}=e,E=this;if(!r.isValid(S))throw new Error("invalid scalar: out of range");if(S===ul||E.is0())return H.ZERO;if(S===ll)return E;if(C.hasPrecomputes(this))return this.multiply(S);if(R){const{k1neg:L,k1:c,k2neg:l,k2:f}=R.splitScalar(S),{p1:b,p2:g}=SB(H,E,c,f);return U(R.beta,b,g,L,l)}else return C.wNAFCachedUnsafe(E,S)}multiplyAndAddUnsafe(S,R,E){const L=this.multiplyUnsafe(R).add(S.multiplyUnsafe(E));return L.is0()?void 0:L}toAffine(S){return I(this,S)}isTorsionFree(){const{isTorsionFree:S}=e;return i===ll?!0:S?S(H,this):C.wNAFCachedUnsafe(this,a).is0()}clearCofactor(){const{clearCofactor:S}=e;return i===ll?this:S?S(H,this):this.multiplyUnsafe(i)}toBytes(S=!0){return p0("isCompressed",S),this.assertValidity(),p(H,this,S)}toRawBytes(S=!0){return this.toBytes(S)}toHex(S=!0){return Sl(this.toBytes(S))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}H.BASE=new H(t.Gx,t.Gy,n.ONE),H.ZERO=new H(n.ZERO,n.ONE,n.ZERO),H.Fp=n,H.Fn=r;const X=r.BITS,C=VB(H,e.endo?Math.ceil(X/2):X);return H}function iv(t){return Uint8Array.of(t?2:3)}function BB(t,e,n={}){O2(e,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const r=e.randomBytes||VR,i=e.hmac||((E,...L)=>Z7(e.hash,E,no(...L))),{Fp:a,Fn:s}=t,{ORDER:o,BITS:u}=s;function h(E){const L=o>>ll;return E>L}function p(E){return h(E)?s.neg(E):E}function y(E,L){if(!s.isValidNot0(L))throw new Error(`invalid signature ${E}: out of range 1..CURVE.n`)}class w{constructor(L,c,l){y("r",L),y("s",c),this.r=L,this.s=c,l!=null&&(this.recovery=l),Object.freeze(this)}static fromCompact(L){const c=s.BYTES,l=Gr("compactSignature",L,c*2);return new w(s.fromBytes(l.subarray(0,c)),s.fromBytes(l.subarray(c,c*2)))}static fromDER(L){const{r:c,s:l}=ba.toSig(Gr("DER",L));return new w(c,l)}assertValidity(){}addRecoveryBit(L){return new w(this.r,this.s,L)}recoverPublicKey(L){const c=a.ORDER,{r:l,s:f,recovery:b}=this;if(b==null||![0,1,2,3].includes(b))throw new Error("recovery id invalid");if(o*LB<c&&b>1)throw new Error("recovery id is ambiguous for h>1 curve");const g=b===2||b===3?l+o:l;if(!a.isValid(g))throw new Error("recovery id 2 or 3 invalid");const v=a.toBytes(g),M=t.fromHex(no(iv((b&1)===0),v)),x=s.inv(g),d=A(Gr("msgHash",L)),m=s.create(-d*x),V=s.create(f*x),B=t.BASE.multiplyUnsafe(m).add(M.multiplyUnsafe(V));if(B.is0())throw new Error("point at infinify");return B.assertValidity(),B}hasHighS(){return h(this.s)}normalizeS(){return this.hasHighS()?new w(this.r,s.neg(this.s),this.recovery):this}toBytes(L){if(L==="compact")return no(s.toBytes(this.r),s.toBytes(this.s));if(L==="der")return k2(ba.hexFromSig(this));throw new Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return Sl(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return Sl(this.toBytes("compact"))}}const P=rv(s,n.allowedPrivateKeyLengths,n.wrapPrivateKey),N={isValidPrivateKey(E){try{return P(E),!0}catch{return!1}},normPrivateKeyToScalar:P,randomPrivateKey:()=>{const E=o;return kB(r(ev(E)),E)},precompute(E=8,L=t.BASE){return L.precompute(E,!1)}};function O(E,L=!0){return t.fromPrivateKey(E).toBytes(L)}function z(E){if(typeof E=="bigint")return!1;if(E instanceof t)return!0;const L=Gr("key",E).length,c=a.BYTES,l=c+1,f=2*c+1;if(!(n.allowedPrivateKeyLengths||s.BYTES===l))return L===l||L===f}function j(E,L,c=!0){if(z(E)===!0)throw new Error("first arg must be private key");if(z(L)===!1)throw new Error("second arg must be public key");return t.fromHex(L).multiply(P(E)).toBytes(c)}const I=e.bits2int||function(E){if(E.length>8192)throw new Error("input is too large");const L=eh(E),c=E.length*8-u;return c>0?L>>BigInt(c):L},A=e.bits2int_modN||function(E){return s.create(I(E))},U=th(u);function H(E){return hB("num < 2^"+u,E,ul,U),s.toBytes(E)}function X(E,L,c=C){if(["recovered","canonical"].some(B=>B in c))throw new Error("sign() legacy options not supported");const{hash:l}=e;let{lowS:f,prehash:b,extraEntropy:g}=c;f==null&&(f=!0),E=Gr("msgHash",E),_y(c),b&&(E=Gr("prehashed msgHash",l(E)));const v=A(E),M=P(L),x=[H(M),H(v)];if(g!=null&&g!==!1){const B=g===!0?r(a.BYTES):g;x.push(Gr("extraEntropy",B))}const d=no(...x),m=v;function V(B){const k=I(B);if(!s.isValidNot0(k))return;const Z=s.inv(k),q=t.BASE.multiply(k).toAffine(),W=s.create(q.x);if(W===ul)return;const J=s.create(Z*s.create(m+W*M));if(J===ul)return;let _=(q.x===W?0:2)|Number(q.y&ll),K=J;return f&&h(J)&&(K=p(J),_^=1),new w(W,K,_)}return{seed:d,k2sig:V}}const C={lowS:e.lowS,prehash:!1},F={lowS:e.lowS,prehash:!1};function S(E,L,c=C){const{seed:l,k2sig:f}=X(E,L,c);return mB(e.hash.outputLen,s.BYTES,i)(l,f)}t.BASE.precompute(8);function R(E,L,c,l=F){const f=E;L=Gr("msgHash",L),c=Gr("publicKey",c),_y(l);const{lowS:b,prehash:g,format:v}=l;if("strict"in l)throw new Error("options.strict was renamed to lowS");if(v!==void 0&&!["compact","der","js"].includes(v))throw new Error('format must be "compact", "der" or "js"');const M=typeof f=="string"||P2(f),x=!M&&!v&&typeof f=="object"&&f!==null&&typeof f.r=="bigint"&&typeof f.s=="bigint";if(!M&&!x)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let d,m;try{if(x)if(v===void 0||v==="js")d=new w(f.r,f.s);else throw new Error("invalid format");if(M){try{v!=="compact"&&(d=w.fromDER(f))}catch(_){if(!(_ instanceof ba.Err))throw _}!d&&v!=="der"&&(d=w.fromCompact(f))}m=t.fromHex(c)}catch{return!1}if(!d||b&&d.hasHighS())return!1;g&&(L=e.hash(L));const{r:V,s:B}=d,k=A(L),Z=s.inv(B),q=s.create(k*Z),W=s.create(V*Z),J=t.BASE.multiplyUnsafe(q).add(m.multiplyUnsafe(W));return J.is0()?!1:s.create(J.x)===V}return Object.freeze({getPublicKey:O,getSharedSecret:j,sign:S,verify:R,utils:N,Point:t,Signature:w})}function XB(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=nh(e.n,t.nBitLength),i={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:i}}function jB(t){const{CURVE:e,curveOpts:n}=XB(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function CB(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function UB(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=jB(t),i=RB(e,n),a=BB(i,r,n);return CB(t,a)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function DB(t,e){const n=r=>UB({...t,hash:r});return{...n(e),create:n}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const m0={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")};BigInt(0);const FB=BigInt(1),B1=BigInt(2),$y=(t,e)=>(t+e/B1)/e;function ZB(t){const e=m0.p,n=BigInt(3),r=BigInt(6),i=BigInt(11),a=BigInt(22),s=BigInt(23),o=BigInt(44),u=BigInt(88),h=t*t*t%e,p=h*h*t%e,y=Zr(p,n,e)*p%e,w=Zr(y,n,e)*p%e,P=Zr(w,B1,e)*h%e,N=Zr(P,i,e)*P%e,O=Zr(N,a,e)*N%e,z=Zr(O,o,e)*O%e,j=Zr(z,u,e)*z%e,I=Zr(j,o,e)*O%e,A=Zr(I,n,e)*p%e,U=Zr(A,s,e)*N%e,H=Zr(U,r,e)*h%e,X=Zr(H,B1,e);if(!X1.eql(X1.sqr(X),t))throw new Error("Cannot find square root");return X}const X1=nh(m0.p,void 0,void 0,{sqrt:ZB}),qB=DB({...m0,Fp:X1,lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=m0.n,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-FB*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),a=n,s=BigInt("0x100000000000000000000000000000000"),o=$y(a*t,e),u=$y(-r*t,e);let h=Kr(t-o*n-u*i,e),p=Kr(-o*r-u*a,e);const y=h>s,w=p>s;if(y&&(h=e-h),w&&(p=e-p),h>s||p>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:y,k1:h,k2neg:w,k2:p}}}},dB);function av(t,e=Dd.prefix){const n=Es(t);if(e<0||e>16383||[46,47].includes(e))throw new Error("Out of range ss58Format specified");if(!Dd.allowedDecodedLengths.includes(n.length))throw new Error(`Expected a valid key to convert, with length ${Dd.allowedDecodedLengths.join(", ")}`);const r=rr(e<64?[e]:[(e&252)>>2|64,e>>8|(e&3)<<6],n);return PR(rr(r,U7(r).subarray(0,[32,33].includes(n.length)?2:1)))}const WB=BigInt(0),$c=BigInt(1),GB=BigInt(2),YB=BigInt(7),KB=BigInt(256),JB=BigInt(113),sv=[],ov=[],cv=[];for(let t=0,e=$c,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],sv.push(2*(5*r+n)),ov.push((t+1)*(t+2)/2%64);let i=WB;for(let a=0;a<7;a++)e=(e<<$c^(e>>YB)*JB)%KB,e&GB&&(i^=$c<<($c<<BigInt(a))-$c);cv.push(i)}const uv=HR(cv,!0),QB=uv[0],_B=uv[1],e9=(t,e,n)=>n>32?UR(t,e,n):jR(t,e,n),t9=(t,e,n)=>n>32?DR(t,e,n):CR(t,e,n);function $B(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let s=0;s<10;s++)n[s]=t[s]^t[s+10]^t[s+20]^t[s+30]^t[s+40];for(let s=0;s<10;s+=2){const o=(s+8)%10,u=(s+2)%10,h=n[u],p=n[u+1],y=e9(h,p,1)^n[o],w=t9(h,p,1)^n[o+1];for(let P=0;P<50;P+=10)t[s+P]^=y,t[s+P+1]^=w}let i=t[2],a=t[3];for(let s=0;s<24;s++){const o=ov[s],u=e9(i,a,o),h=t9(i,a,o),p=sv[s];i=t[p],a=t[p+1],t[p]=u,t[p+1]=h}for(let s=0;s<50;s+=10){for(let o=0;o<10;o++)n[o]=t[s+o];for(let o=0;o<10;o++)t[s+o]^=~n[(o+2)%10]&n[(o+4)%10]}t[0]^=QB[r],t[1]^=_B[r]}Sa(n)}class V2 extends $0{constructor(e,n,r,i=!1,a=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=i,this.rounds=a,Ns(r),!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=Vl(this.state)}clone(){return this._cloneInto()}keccak(){ds(this.state32),$B(this.state32,this.rounds),ds(this.state32),this.posOut=0,this.pos=0}update(e){Os(this),e=Oa(e),ai(e);const{blockLen:n,state:r}=this,i=e.length;for(let a=0;a<i;){const s=Math.min(n-this.pos,i-a);for(let o=0;o<s;o++)r[this.pos++]^=e[a++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:i}=this;e[r]^=n,n&128&&r===i-1&&this.keccak(),e[i-1]^=128,this.keccak()}writeInto(e){Os(this,!1),ai(e),this.finish();const n=this.state,{blockLen:r}=this;for(let i=0,a=e.length;i<a;){this.posOut>=r&&this.keccak();const s=Math.min(r-this.posOut,a-i);e.set(n.subarray(this.posOut,this.posOut+s),i),this.posOut+=s,i+=s}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return Ns(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(M2(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,Sa(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:i,rounds:a,enableXOF:s}=this;return e||(e=new V2(n,r,i,s,a)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=a,e.suffix=r,e.outputLen=i,e.enableXOF=s,e.destroyed=this.destroyed,e}}const lv=(t,e,n)=>H7(()=>new V2(e,t,n)),eX=lv(1,136,256/8),tX=lv(1,72,512/8),S2=YR({256:iR,512:aR},{256:eX,512:tX});function nX(t,e){if(![33,65].includes(t.length))throw new Error(`Invalid publicKey provided, received ${t.length} bytes input`);if(t.length===65)return t.subarray(1);if(!J0||Yl())return nR(t).subarray(1);const{px:n,py:r}=qB.ProjectivePoint.fromHex(t);return rr(Na(n,qy),Na(r,qy))}function rX(t){return[33,65].includes(t.length)&&(t=S2(nX(t))),t.slice(-20)}function iX(t){if(!t)return"0x";const e=qe(t);if(![20,32,33,65].includes(e.length))throw new Error(`Invalid address or publicKey provided, received ${e.length} bytes input`);const n=mt(rX(e),-1,!1),r=mt(S2(n),-1,!1);let i="";for(let a=0;a<40;a++)i=`${i}${parseInt(r[a],16)>7?n[a].toUpperCase():n[a]}`;return`0x${i}`}function aX(t,e){return t!==(e>7?t.toUpperCase():t.toLowerCase())}function sX(t){const e=t.replace("0x",""),n=mt(S2(e.toLowerCase()),-1,!1);for(let r=0;r<40;r++)if(aX(e[r],parseInt(n[r],16)))return!1;return!0}function oX(t){return!t||t.length!==42||!It(t)?!1:/^(0x)?[0-9a-f]{40}$/.test(t)||/^(0x)?[0-9A-F]{40}$/.test(t)?!0:sX(t)}const Qn=jt("11400714785074694791"),Ui=jt("14029467366897019727"),n9=jt("1609587929392839161"),eu=jt("9650029242287828579"),r9=jt("2870177450012600261"),fa=jt("0xffffffffffffffff"),cX=jt(7),uX=jt(11),lX=jt(12),dX=jt(16),fX=jt(18),hX=jt(23),pX=jt(27),mX=jt(29),Uo=jt(31),bX=jt(32),yX=jt(33),gX=jt(64),i9=jt(256);function Vr(t,e){const n=t&fa;return(n<<e|n>>gX-e)&fa}function j1(t,e,n){const r=new Array(n);let i=0;for(let s=0;s<n;s++,i+=2)r[s]=jt(t[e+i]|t[e+1+i]<<8);let a=zH;for(let s=n-1;s>=0;s--)a=(a<<dX)+r[s];return a}function xX(t,e){const n={seed:t,u8a:new Uint8Array(32),u8asize:0,v1:t+Qn+Ui,v2:t+Ui,v3:t,v4:t-Qn};if(e.length<32)return n.u8a.set(e),n.u8asize=e.length,n;const r=e.length-32;let i=0;if(r>=0){const a=s=>Qn*Vr(s+Ui*j1(e,i,4),Uo);do n.v1=a(n.v1),i+=8,n.v2=a(n.v2),i+=8,n.v3=a(n.v3),i+=8,n.v4=a(n.v4),i+=8;while(i<=r)}return i<e.length&&(n.u8a.set(e.subarray(i,e.length)),n.u8asize=e.length-i),n}function vX(t,e){const{seed:n,u8a:r,u8asize:i,v1:a,v2:s,v3:o,v4:u}=xX(jt(e),t);let h=0,p=fa&jt(t.length)+(t.length>=32?((((Vr(a,IH)+Vr(s,cX)+Vr(o,lX)+Vr(u,fX)^Qn*Vr(a*Ui,Uo))*Qn+eu^Qn*Vr(s*Ui,Uo))*Qn+eu^Qn*Vr(o*Ui,Uo))*Qn+eu^Qn*Vr(u*Ui,Uo))*Qn+eu:n+r9);for(;h<=i-8;)p=fa&eu+Qn*Vr(p^Qn*Vr(Ui*j1(r,h,4),Uo),pX),h+=8;for(h+4<=i&&(p=fa&n9+Ui*Vr(p^Qn*j1(r,h,2),hX),h+=4);h<i;)p=fa&Qn*Vr(p^r9*jt(r[h++]),uX);p=fa&Ui*(p^p>>yX),p=fa&n9*(p^p>>mX),p=fa&(p^p>>bX);const y=new Uint8Array(8);for(let w=7;w>=0;w--)y[w]=Number(p%i9),p=p/i9;return y}function vc(t,e=64,n){const r=Math.ceil(e/64),i=qe(t);if(!J0||Yl())return sR(i,r);const a=new Uint8Array(r*8);for(let s=0;s<r;s++)a.set(vX(i,s).reverse(),s*8);return a}const wX=Cr.fetch,dv=-99999;function tu(t,e,n){Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:n})}class fv extends Error{constructor(e="",n=dv,r){if(super(),Y(this,"code"),Y(this,"data"),Y(this,"message"),Y(this,"name"),Y(this,"stack"),tu(this,"message",String(e)),tu(this,"name",this.constructor.name),tu(this,"data",r),tu(this,"code",n),Ze(Error.captureStackTrace))Error.captureStackTrace(this,this.constructor);else{const{stack:i}=new Error(e);i&&tu(this,"stack",i)}}}Y(fv,"CODES",{ASSERT:-90009,INVALID_JSONRPC:-99998,METHOD_NOT_FOUND:-32601,UNKNOWN:dv});function PX(t){if(qt(t))return"";const e=`: ${Ut(t)?t.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):bt(t)}`;return e.length<=256?e:`${e.substring(0,255)}…`}function a9(t){if(t){const{code:e,data:n,message:r}=t;throw new fv(`${e}: ${r}${PX(n)}`,e,n)}}var C1;class hv{constructor(){G(this,C1,0)}decodeResponse(e){if(!e||e.jsonrpc!=="2.0")throw new Error("Invalid jsonrpc field in decoded object");const n=!qt(e.params)&&!qt(e.method);if(!Ht(e.id)&&(!n||!Ht(e.params.subscription)&&!Ut(e.params.subscription)))throw new Error("Invalid id field in decoded object");if(a9(e.error),e.result===void 0&&!n)throw new Error("No result found in jsonrpc response");return n?(a9(e.params.error),e.params.result):e.result}encodeJson(e,n){const[r,i]=this.encodeObject(e,n);return[r,bt(i)]}encodeObject(e,n){const r=++n7(this,C1)._;return[r,{id:r,jsonrpc:"2.0",method:e,params:n}]}}C1=new WeakMap;const MX="http://127.0.0.1:9933",kX="ws://127.0.0.1:9944",pv={HTTP_URL:MX,WS_URL:kX},El=1024,E2=3e4,TX=31536e6;var bu,Fd;class U1{constructor(e,n){Y(this,"key"),G(this,bu),G(this,Fd),Y(this,"createdAt"),Y(this,"next"),Y(this,"prev"),this.key=e,Q(this,Fd,n),Q(this,bu,Date.now()+n),this.createdAt=Date.now(),this.next=this.prev=this}refresh(){Q(this,bu,Date.now()+T(this,Fd))}get expiry(){return T(this,bu)}}bu=new WeakMap,Fd=new WeakMap;var ha,ao,vi,_n,On,fs,Cs,Zd,D1;class z2{constructor(e=El,n=E2){G(this,Cs),Y(this,"capacity"),G(this,ha,new Map),G(this,ao,new Map),G(this,vi,0),G(this,_n),G(this,On),G(this,fs),this.capacity=e,n?Q(this,fs,n):Q(this,fs,TX),Q(this,_n,Q(this,On,new U1("<empty>",T(this,fs))))}get ttl(){return T(this,fs)}get length(){return T(this,vi)}get lengthData(){return T(this,ha).size}get lengthRefs(){return T(this,ao).size}entries(){const e=this.keys(),n=e.length,r=new Array(n);for(let i=0;i<n;i++){const a=e[i];r[i]=[a,T(this,ha).get(a)]}return r}keys(){const e=[];if(T(this,vi)){let n=T(this,_n);for(;n!==T(this,On);)e.push(n.key),n=n.next;e.push(n.key)}return e}get(e){const n=T(this,ha).get(e);return n?(dt(this,Cs,D1).call(this,e),dt(this,Cs,Zd).call(this),n):(dt(this,Cs,Zd).call(this),null)}set(e,n){if(T(this,ha).has(e))dt(this,Cs,D1).call(this,e);else{const r=new U1(e,T(this,fs));T(this,ao).set(r.key,r),this.length===0?Q(this,_n,Q(this,On,r)):(T(this,_n).prev=r,r.next=T(this,_n),Q(this,_n,r)),T(this,vi)===this.capacity?(T(this,ha).delete(T(this,On).key),T(this,ao).delete(T(this,On).key),Q(this,On,T(this,On).prev),T(this,On).next=T(this,_n)):Q(this,vi,T(this,vi)+1)}dt(this,Cs,Zd).call(this),T(this,ha).set(e,n)}}ha=new WeakMap,ao=new WeakMap,vi=new WeakMap,_n=new WeakMap,On=new WeakMap,fs=new WeakMap,Cs=new WeakSet,Zd=function(){for(;T(this,On).expiry&&T(this,On).expiry<Date.now()&&T(this,vi)>0;)T(this,ao).delete(T(this,On).key),T(this,ha).delete(T(this,On).key),Q(this,vi,T(this,vi)-1),Q(this,On,T(this,On).prev),T(this,On).next=T(this,_n);T(this,vi)===0&&Q(this,_n,Q(this,On,new U1("<empty>",T(this,fs))))},D1=function(t){const e=T(this,ao).get(t);e&&e!==T(this,_n)&&(e.refresh(),e.prev.next=e.next,e.next.prev=e.prev,e.next=T(this,_n),T(this,_n).prev=e,Q(this,_n,e))};const bd="HTTP Provider does not have subscriptions, use WebSockets instead",gp=Dr("api-http");var yu,qd,dl,fl,hl,Jr,Wd,Gd,F1;const NX=class mv{constructor(e=pv.HTTP_URL,n={},r,i){if(G(this,Gd),G(this,yu),G(this,qd),G(this,dl),G(this,fl),G(this,hl),G(this,Jr),G(this,Wd),!/^(https|http):\/\//.test(e))throw new Error(`Endpoint should start with 'http://' or 'https://', received '${e}'`);Q(this,dl,new hv),Q(this,fl,e),Q(this,hl,n),Q(this,qd,r===0?0:r||El);const a=i===void 0?E2:i;Q(this,yu,new z2(r===0?0:r||El,a)),Q(this,Wd,i),Q(this,Jr,{active:{requests:0,subscriptions:0},total:{bytesRecv:0,bytesSent:0,cached:0,errors:0,requests:0,subscriptions:0,timeout:0}})}get hasSubscriptions(){return!1}clone(){return new mv(T(this,fl),T(this,hl))}async connect(){}async disconnect(){}get stats(){return T(this,Jr)}get ttl(){return T(this,Wd)}get isClonable(){return!0}get isConnected(){return!0}on(e,n){return gp.error("HTTP Provider does not have 'on' emitters, use WebSockets instead"),Qi}async send(e,n,r){T(this,Jr).total.requests++;const[,i]=T(this,dl).encodeJson(e,n);if(T(this,qd)===0)return dt(this,Gd,F1).call(this,i);const a=r?`${e}::${bt(n)}`:"";let s=r?T(this,yu).get(a):null;return s?T(this,Jr).total.cached++:(s=dt(this,Gd,F1).call(this,i),r&&T(this,yu).set(a,s)),s}async subscribe(e,n,r,i){throw gp.error(bd),new Error(bd)}async unsubscribe(e,n,r){throw gp.error(bd),new Error(bd)}};yu=new WeakMap,qd=new WeakMap,dl=new WeakMap,fl=new WeakMap,hl=new WeakMap,Jr=new WeakMap,Wd=new WeakMap,Gd=new WeakSet,F1=async function(t){T(this,Jr).active.requests++,T(this,Jr).total.bytesSent+=t.length;try{const e=await wX(T(this,fl),{body:t,headers:{Accept:"application/json","Content-Length":`${t.length}`,"Content-Type":"application/json",...T(this,hl)},method:"POST"});if(!e.ok)throw new Error(`[${e.status}]: ${e.statusText}`);const n=await e.text();T(this,Jr).total.bytesRecv+=n.length;const r=T(this,dl).decodeResponse(JSON.parse(n));return T(this,Jr).active.requests--,r}catch(e){T(this,Jr).active.requests--,T(this,Jr).total.errors++;const{method:n,params:r}=JSON.parse(t),i=e,a=`
Failed HTTP Request: ${JSON.stringify({method:n,params:r})}`;throw i.message=`${i.message}${a}`,i}};let OX=NX;var bv={exports:{}};(function(t){var e=Object.prototype.hasOwnProperty,n="~";function r(){}Object.create&&(r.prototype=Object.create(null),new r().__proto__||(n=!1));function i(u,h,p){this.fn=u,this.context=h,this.once=p||!1}function a(u,h,p,y,w){if(typeof p!="function")throw new TypeError("The listener must be a function");var P=new i(p,y||u,w),N=n?n+h:h;return u._events[N]?u._events[N].fn?u._events[N]=[u._events[N],P]:u._events[N].push(P):(u._events[N]=P,u._eventsCount++),u}function s(u,h){--u._eventsCount===0?u._events=new r:delete u._events[h]}function o(){this._events=new r,this._eventsCount=0}o.prototype.eventNames=function(){var u=[],h,p;if(this._eventsCount===0)return u;for(p in h=this._events)e.call(h,p)&&u.push(n?p.slice(1):p);return Object.getOwnPropertySymbols?u.concat(Object.getOwnPropertySymbols(h)):u},o.prototype.listeners=function(u){var h=n?n+u:u,p=this._events[h];if(!p)return[];if(p.fn)return[p.fn];for(var y=0,w=p.length,P=new Array(w);y<w;y++)P[y]=p[y].fn;return P},o.prototype.listenerCount=function(u){var h=n?n+u:u,p=this._events[h];return p?p.fn?1:p.length:0},o.prototype.emit=function(u,h,p,y,w,P){var N=n?n+u:u;if(!this._events[N])return!1;var O=this._events[N],z=arguments.length,j,I;if(O.fn){switch(O.once&&this.removeListener(u,O.fn,void 0,!0),z){case 1:return O.fn.call(O.context),!0;case 2:return O.fn.call(O.context,h),!0;case 3:return O.fn.call(O.context,h,p),!0;case 4:return O.fn.call(O.context,h,p,y),!0;case 5:return O.fn.call(O.context,h,p,y,w),!0;case 6:return O.fn.call(O.context,h,p,y,w,P),!0}for(I=1,j=new Array(z-1);I<z;I++)j[I-1]=arguments[I];O.fn.apply(O.context,j)}else{var A=O.length,U;for(I=0;I<A;I++)switch(O[I].once&&this.removeListener(u,O[I].fn,void 0,!0),z){case 1:O[I].fn.call(O[I].context);break;case 2:O[I].fn.call(O[I].context,h);break;case 3:O[I].fn.call(O[I].context,h,p);break;case 4:O[I].fn.call(O[I].context,h,p,y);break;default:if(!j)for(U=1,j=new Array(z-1);U<z;U++)j[U-1]=arguments[U];O[I].fn.apply(O[I].context,j)}}return!0},o.prototype.on=function(u,h,p){return a(this,u,h,p,!1)},o.prototype.once=function(u,h,p){return a(this,u,h,p,!0)},o.prototype.removeListener=function(u,h,p,y){var w=n?n+u:u;if(!this._events[w])return this;if(!h)return s(this,w),this;var P=this._events[w];if(P.fn)P.fn===h&&(!y||P.once)&&(!p||P.context===p)&&s(this,w);else{for(var N=0,O=[],z=P.length;N<z;N++)(P[N].fn!==h||y&&!P[N].once||p&&P[N].context!==p)&&O.push(P[N]);O.length?this._events[w]=O.length===1?O[0]:O:s(this,w)}return this},o.prototype.removeAllListeners=function(u){var h;return u?(h=n?n+u:u,this._events[h]&&s(this,h)):(this._events=new r,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=n,o.EventEmitter=o,t.exports=o})(bv);var VX=bv.exports;const yv=a7(VX),xp=Cr.WebSocket,SX={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};function EX(t){if(t>=0&&t<=999)return"(Unused)";if(t>=1016){if(t<=1999)return"(For WebSocket standard)";if(t<=2999)return"(For WebSocket extensions)";if(t<=3999)return"(For libraries and frameworks)";if(t<=4999)return"(For applications)"}return SX[t]||"(Unknown)"}const zX={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},IX=2500,LX=60*1e3,HX=5e3,Sr=Dr("api-ws");function s9(t,e){Object.keys(t).forEach(n=>{e&&e(t[n]),delete t[n]})}function vp(){return{bytesRecv:0,bytesSent:0,cached:0,errors:0,requests:0,subscriptions:0,timeout:0}}var gu,Do,Fo,Yd,Us,Ci,Kd,Ir,Ds,Jd,Qd,ua,Zo,sr,xu,la,qo,Wt,vu,_d,Z1,Fs,q1,W1,G1,Y1,$d,K1,J1,Q1;const AX=class gv{constructor(e=pv.WS_URL,n=IX,r={},i,a,s){G(this,_d),G(this,gu),G(this,Do),G(this,Fo),G(this,Yd),G(this,Us),G(this,Ci,{}),G(this,Kd),G(this,Ir),G(this,Ds,{}),G(this,Jd),G(this,Qd),G(this,ua),G(this,Zo),G(this,sr),G(this,xu,!1),G(this,la,{}),G(this,qo,null),G(this,Wt),G(this,vu),G(this,Fs,(h,...p)=>{T(this,Us).emit(h,...p)}),G(this,q1,h=>{const p=new Error(`disconnected from ${this.endpoint}: ${h.code}:: ${h.reason||EX(h.code)}`);T(this,ua)>0&&Sr.error(p.message),Q(this,xu,!1),T(this,Wt)&&(T(this,Wt).onclose=null,T(this,Wt).onerror=null,T(this,Wt).onmessage=null,T(this,Wt).onopen=null,Q(this,Wt,null)),T(this,qo)&&(clearInterval(T(this,qo)),Q(this,qo,null)),s9(T(this,Ci),y=>{try{y.callback(p,void 0)}catch(w){Sr.error(w)}}),s9(T(this,Ds)),Q(this,sr,vp()),T(this,Fs).call(this,"disconnected"),T(this,ua)>0&&setTimeout(()=>{this.connectWithRetry().catch(Qi)},T(this,ua))}),G(this,W1,h=>{Sr.debug(()=>["socket error",h]),T(this,Fs).call(this,"error",h)}),G(this,G1,h=>{Sr.debug(()=>["received",h.data]);const p=h.data.length;T(this,sr).bytesRecv+=p,T(this,Ir).total.bytesRecv+=p;const y=JSON.parse(h.data);return qt(y.method)?T(this,Y1).call(this,y):T(this,$d).call(this,y)}),G(this,Y1,h=>{const p=T(this,Ci)[h.id];if(!p){Sr.debug(()=>`Unable to find handler for id=${h.id}`);return}try{const{method:y,params:w,subscription:P}=p,N=T(this,Do).decodeResponse(h);if(p.callback(null,N),P){const O=`${P.type}::${N}`;T(this,la)[O]=he({},P,{method:y,params:w}),T(this,Ds)[O]&&T(this,$d).call(this,T(this,Ds)[O])}}catch(y){T(this,sr).errors++,T(this,Ir).total.errors++,p.callback(y,void 0)}delete T(this,Ci)[h.id]}),G(this,$d,h=>{if(!h.method)throw new Error("No method found in JSONRPC response");const p=`${zX[h.method]||h.method}::${h.params.subscription}`,y=T(this,la)[p];if(!y){T(this,Ds)[p]=h,Sr.debug(()=>`Unable to find handler for subscription=${p}`);return}delete T(this,Ds)[p];try{const w=T(this,Do).decodeResponse(h);y.callback(null,w)}catch(w){T(this,sr).errors++,T(this,Ir).total.errors++,y.callback(w,void 0)}}),G(this,K1,()=>{if(T(this,Wt)===null)throw new Error("WebSocket cannot be null in onOpen");return Sr.debug(()=>["connected to",this.endpoint]),Q(this,xu,!0),T(this,J1).call(this),T(this,Fs).call(this,"connected"),!0}),G(this,J1,()=>{const h=T(this,la);Q(this,la,{}),Promise.all(Object.keys(h).map(async p=>{const{callback:y,method:w,params:P,type:N}=h[p];if(!N.startsWith("author_"))try{await this.subscribe(N,w,P,y)}catch(O){Sr.error(O)}})).catch(Sr.error)}),G(this,Q1,()=>{const h=Date.now(),p=Object.keys(T(this,Ci));for(let y=0,w=p.length;y<w;y++){const P=T(this,Ci)[p[y]];if(h-P.start>T(this,vu)){try{P.callback(new Error(`No response received from RPC endpoint in ${T(this,vu)/1e3}s`),void 0)}catch{}T(this,sr).timeout++,T(this,Ir).total.timeout++,delete T(this,Ci)[p[y]]}}});const o=Array.isArray(e)?e:[e];if(o.length===0)throw new Error("WsProvider requires at least one Endpoint");o.forEach(h=>{if(!/^(wss|ws):\/\//.test(h))throw new Error(`Endpoint should start with 'ws://', received '${h}'`)});const u=s===void 0?E2:s;Q(this,gu,new z2(a===0?0:a||El,u)),Q(this,Qd,s),Q(this,Jd,a||El),Q(this,Us,new yv),Q(this,ua,n||0),Q(this,Do,new hv),Q(this,Zo,-1),Q(this,Fo,o),Q(this,Yd,r),Q(this,Wt,null),Q(this,Ir,{active:{requests:0,subscriptions:0},total:vp()}),Q(this,sr,vp()),Q(this,vu,i||LX),n&&n>0&&this.connectWithRetry().catch(Qi),Q(this,Kd,new Promise(h=>{T(this,Us).once("connected",()=>{h(this)})}))}get hasSubscriptions(){return!0}get isClonable(){return!0}get isConnected(){return T(this,xu)}get isReady(){return T(this,Kd)}get endpoint(){return T(this,Fo)[T(this,Zo)]}clone(){return new gv(T(this,Fo))}selectEndpointIndex(e){return(T(this,Zo)+1)%e.length}async connect(){if(T(this,Wt))throw new Error("WebSocket is already connected");try{Q(this,Zo,this.selectEndpointIndex(T(this,Fo))),Q(this,Wt,typeof Cr.WebSocket<"u"&&bA(Cr.WebSocket,xp)?new xp(this.endpoint):new xp(this.endpoint,void 0,{headers:T(this,Yd)})),T(this,Wt)&&(T(this,Wt).onclose=T(this,q1),T(this,Wt).onerror=T(this,W1),T(this,Wt).onmessage=T(this,G1),T(this,Wt).onopen=T(this,K1)),Q(this,qo,setInterval(()=>T(this,Q1).call(this),HX))}catch(e){throw Sr.error(e),T(this,Fs).call(this,"error",e),e}}async connectWithRetry(){if(T(this,ua)>0)try{await this.connect()}catch{setTimeout(()=>{this.connectWithRetry().catch(Qi)},T(this,ua))}}async disconnect(){Q(this,ua,0);try{T(this,Wt)&&T(this,Wt).close(1e3)}catch(e){throw Sr.error(e),T(this,Fs).call(this,"error",e),e}}get stats(){return{active:{requests:Object.keys(T(this,Ci)).length,subscriptions:Object.keys(T(this,la)).length},total:T(this,Ir).total}}get ttl(){return T(this,Qd)}get endpointStats(){return T(this,sr)}on(e,n){return T(this,Us).on(e,n),()=>{T(this,Us).removeListener(e,n)}}send(e,n,r,i){T(this,sr).requests++,T(this,Ir).total.requests++;const[a,s]=T(this,Do).encodeJson(e,n);if(T(this,Jd)===0)return dt(this,_d,Z1).call(this,a,s,e,n,i);const o=r?`${e}::${bt(n)}`:"";let u=r?T(this,gu).get(o):null;return u?(T(this,sr).cached++,T(this,Ir).total.cached++):(u=dt(this,_d,Z1).call(this,a,s,e,n,i),r&&T(this,gu).set(o,u)),u}subscribe(e,n,r,i){return T(this,sr).subscriptions++,T(this,Ir).total.subscriptions++,this.send(n,r,!1,{callback:i,type:e})}async unsubscribe(e,n,r){const i=`${e}::${r}`;if(qt(T(this,la)[i]))return Sr.debug(()=>`Unable to find active subscription=${i}`),!1;delete T(this,la)[i];try{return this.isConnected&&!lo(T(this,Wt))?this.send(n,[r]):!0}catch{return!1}}};gu=new WeakMap,Do=new WeakMap,Fo=new WeakMap,Yd=new WeakMap,Us=new WeakMap,Ci=new WeakMap,Kd=new WeakMap,Ir=new WeakMap,Ds=new WeakMap,Jd=new WeakMap,Qd=new WeakMap,ua=new WeakMap,Zo=new WeakMap,sr=new WeakMap,xu=new WeakMap,la=new WeakMap,qo=new WeakMap,Wt=new WeakMap,vu=new WeakMap,_d=new WeakSet,Z1=async function(t,e,n,r,i){return new Promise((a,s)=>{try{if(!this.isConnected||T(this,Wt)===null)throw new Error("WebSocket is not connected");const o=(h,p)=>{h?s(h):a(p)};Sr.debug(()=>["calling",n,e]),T(this,Ci)[t]={callback:o,method:n,params:r,start:Date.now(),subscription:i};const u=e.length;T(this,sr).bytesSent+=u,T(this,Ir).total.bytesSent+=u,T(this,Wt).send(e)}catch(o){T(this,sr).errors++,T(this,Ir).total.errors++;const u=o,h=`
Failed WS Request: ${JSON.stringify({method:n,params:r})}`;u.message=`${u.message}${h}`,s(u)}})},Fs=new WeakMap,q1=new WeakMap,W1=new WeakMap,G1=new WeakMap,Y1=new WeakMap,$d=new WeakMap,K1=new WeakMap,J1=new WeakMap,Q1=new WeakMap;let xv=AX;var _1=function(t,e){return _1=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i])},_1(t,e)};function Fr(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");_1(t,e);function n(){this.constructor=t}t.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}function RX(t,e,n,r){function i(a){return a instanceof n?a:new n(function(s){s(a)})}return new(n||(n=Promise))(function(a,s){function o(p){try{h(r.next(p))}catch(y){s(y)}}function u(p){try{h(r.throw(p))}catch(y){s(y)}}function h(p){p.done?a(p.value):i(p.value).then(o,u)}h((r=r.apply(t,[])).next())})}function vv(t,e){var n={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},r,i,a,s=Object.create((typeof Iterator=="function"?Iterator:Object).prototype);return s.next=o(0),s.throw=o(1),s.return=o(2),typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function o(h){return function(p){return u([h,p])}}function u(h){if(r)throw new TypeError("Generator is already executing.");for(;s&&(s=0,h[0]&&(n=0)),n;)try{if(r=1,i&&(a=h[0]&2?i.return:h[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,h[1])).done)return a;switch(i=0,a&&(h=[h[0]&2,a.value]),h[0]){case 0:case 1:a=h;break;case 4:return n.label++,{value:h[1],done:!1};case 5:n.label++,i=h[1],h=[0];continue;case 7:h=n.ops.pop(),n.trys.pop();continue;default:if(a=n.trys,!(a=a.length>0&&a[a.length-1])&&(h[0]===6||h[0]===2)){n=0;continue}if(h[0]===3&&(!a||h[1]>a[0]&&h[1]<a[3])){n.label=h[1];break}if(h[0]===6&&n.label<a[1]){n.label=a[1],a=h;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(h);break}a[2]&&n.ops.pop(),n.trys.pop();continue}h=e.call(t,n)}catch(p){h=[6,p],i=0}finally{r=a=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function Hc(t){var e=typeof Symbol=="function"&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function Ac(t,e){var n=typeof Symbol=="function"&&t[Symbol.iterator];if(!n)return t;var r=n.call(t),i,a=[],s;try{for(;(e===void 0||e-- >0)&&!(i=r.next()).done;)a.push(i.value)}catch(o){s={error:o}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(s)throw s.error}}return a}function Rc(t,e,n){if(arguments.length===2)for(var r=0,i=e.length,a;r<i;r++)(a||!(r in e))&&(a||(a=Array.prototype.slice.call(e,0,r)),a[r]=e[r]);return t.concat(a||Array.prototype.slice.call(e))}function wc(t){return this instanceof wc?(this.v=t,this):new wc(t)}function BX(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r=n.apply(t,e||[]),i,a=[];return i=Object.create((typeof AsyncIterator=="function"?AsyncIterator:Object).prototype),o("next"),o("throw"),o("return",s),i[Symbol.asyncIterator]=function(){return this},i;function s(P){return function(N){return Promise.resolve(N).then(P,y)}}function o(P,N){r[P]&&(i[P]=function(O){return new Promise(function(z,j){a.push([P,O,z,j])>1||u(P,O)})},N&&(i[P]=N(i[P])))}function u(P,N){try{h(r[P](N))}catch(O){w(a[0][3],O)}}function h(P){P.value instanceof wc?Promise.resolve(P.value.v).then(p,y):w(a[0][2],P)}function p(P){u("next",P)}function y(P){u("throw",P)}function w(P,N){P(N),a.shift(),a.length&&u(a[0][0],a[0][1])}}function XX(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=t[Symbol.asyncIterator],n;return e?e.call(t):(t=typeof Hc=="function"?Hc(t):t[Symbol.iterator](),n={},r("next"),r("throw"),r("return"),n[Symbol.asyncIterator]=function(){return this},n);function r(a){n[a]=t[a]&&function(s){return new Promise(function(o,u){s=t[a](s),i(o,u,s.done,s.value)})}}function i(a,s,o,u){Promise.resolve(u).then(function(h){a({value:h,done:o})},s)}}function Zt(t){return typeof t=="function"}function I2(t){var e=function(r){Error.call(r),r.stack=new Error().stack},n=t(e);return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n}var wp=I2(function(t){return function(e){t(this),this.message=e?e.length+` errors occurred during unsubscription:
`+e.map(function(n,r){return r+1+") "+n.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=e}});function b0(t,e){if(t){var n=t.indexOf(e);0<=n&&t.splice(n,1)}}var Ea=function(){function t(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._finalizers=null}return t.prototype.unsubscribe=function(){var e,n,r,i,a;if(!this.closed){this.closed=!0;var s=this._parentage;if(s)if(this._parentage=null,Array.isArray(s))try{for(var o=Hc(s),u=o.next();!u.done;u=o.next()){var h=u.value;h.remove(this)}}catch(O){e={error:O}}finally{try{u&&!u.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}else s.remove(this);var p=this.initialTeardown;if(Zt(p))try{p()}catch(O){a=O instanceof wp?O.errors:[O]}var y=this._finalizers;if(y){this._finalizers=null;try{for(var w=Hc(y),P=w.next();!P.done;P=w.next()){var N=P.value;try{o9(N)}catch(O){a=a??[],O instanceof wp?a=Rc(Rc([],Ac(a)),Ac(O.errors)):a.push(O)}}}catch(O){r={error:O}}finally{try{P&&!P.done&&(i=w.return)&&i.call(w)}finally{if(r)throw r.error}}}if(a)throw new wp(a)}},t.prototype.add=function(e){var n;if(e&&e!==this)if(this.closed)o9(e);else{if(e instanceof t){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=(n=this._finalizers)!==null&&n!==void 0?n:[]).push(e)}},t.prototype._hasParent=function(e){var n=this._parentage;return n===e||Array.isArray(n)&&n.includes(e)},t.prototype._addParent=function(e){var n=this._parentage;this._parentage=Array.isArray(n)?(n.push(e),n):n?[n,e]:e},t.prototype._removeParent=function(e){var n=this._parentage;n===e?this._parentage=null:Array.isArray(n)&&b0(n,e)},t.prototype.remove=function(e){var n=this._finalizers;n&&b0(n,e),e instanceof t&&e._removeParent(this)},t.EMPTY=function(){var e=new t;return e.closed=!0,e}(),t}(),wv=Ea.EMPTY;function Pv(t){return t instanceof Ea||t&&"closed"in t&&Zt(t.remove)&&Zt(t.add)&&Zt(t.unsubscribe)}function o9(t){Zt(t)?t():t.unsubscribe()}var jX={Promise:void 0},CX={setTimeout:function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];return setTimeout.apply(void 0,Rc([t,e],Ac(n)))},clearTimeout:function(t){return clearTimeout(t)},delegate:void 0};function Mv(t){CX.setTimeout(function(){throw t})}function c9(){}function ef(t){t()}var L2=function(t){Fr(e,t);function e(n){var r=t.call(this)||this;return r.isStopped=!1,n?(r.destination=n,Pv(n)&&n.add(r)):r.destination=FX,r}return e.create=function(n,r,i){return new y0(n,r,i)},e.prototype.next=function(n){this.isStopped||this._next(n)},e.prototype.error=function(n){this.isStopped||(this.isStopped=!0,this._error(n))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(n){this.destination.next(n)},e.prototype._error=function(n){try{this.destination.error(n)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(Ea),UX=function(){function t(e){this.partialObserver=e}return t.prototype.next=function(e){var n=this.partialObserver;if(n.next)try{n.next(e)}catch(r){yd(r)}},t.prototype.error=function(e){var n=this.partialObserver;if(n.error)try{n.error(e)}catch(r){yd(r)}else yd(e)},t.prototype.complete=function(){var e=this.partialObserver;if(e.complete)try{e.complete()}catch(n){yd(n)}},t}(),y0=function(t){Fr(e,t);function e(n,r,i){var a=t.call(this)||this,s;return Zt(n)||!n?s={next:n??void 0,error:r??void 0,complete:i??void 0}:s=n,a.destination=new UX(s),a}return e}(L2);function yd(t){Mv(t)}function DX(t){throw t}var FX={closed:!0,next:c9,error:DX,complete:c9},H2=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function Eo(t){return t}function ZX(t){return t.length===0?Eo:t.length===1?t[0]:function(e){return t.reduce(function(n,r){return r(n)},e)}}var gn=function(){function t(e){e&&(this._subscribe=e)}return t.prototype.lift=function(e){var n=new t;return n.source=this,n.operator=e,n},t.prototype.subscribe=function(e,n,r){var i=this,a=WX(e)?e:new y0(e,n,r);return ef(function(){var s=i,o=s.operator,u=s.source;a.add(o?o.call(a,u):u?i._subscribe(a):i._trySubscribe(a))}),a},t.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(n){e.error(n)}},t.prototype.forEach=function(e,n){var r=this;return n=u9(n),new n(function(i,a){var s=new y0({next:function(o){try{e(o)}catch(u){a(u),s.unsubscribe()}},error:a,complete:i});r.subscribe(s)})},t.prototype._subscribe=function(e){var n;return(n=this.source)===null||n===void 0?void 0:n.subscribe(e)},t.prototype[H2]=function(){return this},t.prototype.pipe=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return ZX(e)(this)},t.prototype.toPromise=function(e){var n=this;return e=u9(e),new e(function(r,i){var a;n.subscribe(function(s){return a=s},function(s){return i(s)},function(){return r(a)})})},t.create=function(e){return new t(e)},t}();function u9(t){var e;return(e=t??jX.Promise)!==null&&e!==void 0?e:Promise}function qX(t){return t&&Zt(t.next)&&Zt(t.error)&&Zt(t.complete)}function WX(t){return t&&t instanceof L2||qX(t)&&Pv(t)}function kv(t){return Zt(t==null?void 0:t.lift)}function Wn(t){return function(e){if(kv(e))return e.lift(function(n){try{return t(n,this)}catch(r){this.error(r)}});throw new TypeError("Unable to lift unknown Observable type")}}function qn(t,e,n,r,i){return new GX(t,e,n,r,i)}var GX=function(t){Fr(e,t);function e(n,r,i,a,s,o){var u=t.call(this,n)||this;return u.onFinalize=s,u.shouldUnsubscribe=o,u._next=r?function(h){try{r(h)}catch(p){n.error(p)}}:t.prototype._next,u._error=a?function(h){try{a(h)}catch(p){n.error(p)}finally{this.unsubscribe()}}:t.prototype._error,u._complete=i?function(){try{i()}catch(h){n.error(h)}finally{this.unsubscribe()}}:t.prototype._complete,u}return e.prototype.unsubscribe=function(){var n;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var r=this.closed;t.prototype.unsubscribe.call(this),!r&&((n=this.onFinalize)===null||n===void 0||n.call(this))}},e}(L2);function A2(){return Wn(function(t,e){var n=null;t._refCount++;var r=qn(e,void 0,void 0,void 0,function(){if(!t||t._refCount<=0||0<--t._refCount){n=null;return}var i=t._connection,a=n;n=null,i&&(!a||i===a)&&i.unsubscribe(),e.unsubscribe()});t.subscribe(r),r.closed||(n=t.connect())})}var YX=function(t){Fr(e,t);function e(n,r){var i=t.call(this)||this;return i.source=n,i.subjectFactory=r,i._subject=null,i._refCount=0,i._connection=null,kv(n)&&(i.lift=n.lift),i}return e.prototype._subscribe=function(n){return this.getSubject().subscribe(n)},e.prototype.getSubject=function(){var n=this._subject;return(!n||n.isStopped)&&(this._subject=this.subjectFactory()),this._subject},e.prototype._teardown=function(){this._refCount=0;var n=this._connection;this._subject=this._connection=null,n==null||n.unsubscribe()},e.prototype.connect=function(){var n=this,r=this._connection;if(!r){r=this._connection=new Ea;var i=this.getSubject();r.add(this.source.subscribe(qn(i,void 0,function(){n._teardown(),i.complete()},function(a){n._teardown(),i.error(a)},function(){return n._teardown()}))),r.closed&&(this._connection=null,r=Ea.EMPTY)}return r},e.prototype.refCount=function(){return A2()(this)},e}(gn),KX=I2(function(t){return function(){t(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),rh=function(t){Fr(e,t);function e(){var n=t.call(this)||this;return n.closed=!1,n.currentObservers=null,n.observers=[],n.isStopped=!1,n.hasError=!1,n.thrownError=null,n}return e.prototype.lift=function(n){var r=new l9(this,this);return r.operator=n,r},e.prototype._throwIfClosed=function(){if(this.closed)throw new KX},e.prototype.next=function(n){var r=this;ef(function(){var i,a;if(r._throwIfClosed(),!r.isStopped){r.currentObservers||(r.currentObservers=Array.from(r.observers));try{for(var s=Hc(r.currentObservers),o=s.next();!o.done;o=s.next()){var u=o.value;u.next(n)}}catch(h){i={error:h}}finally{try{o&&!o.done&&(a=s.return)&&a.call(s)}finally{if(i)throw i.error}}}})},e.prototype.error=function(n){var r=this;ef(function(){if(r._throwIfClosed(),!r.isStopped){r.hasError=r.isStopped=!0,r.thrownError=n;for(var i=r.observers;i.length;)i.shift().error(n)}})},e.prototype.complete=function(){var n=this;ef(function(){if(n._throwIfClosed(),!n.isStopped){n.isStopped=!0;for(var r=n.observers;r.length;)r.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var n;return((n=this.observers)===null||n===void 0?void 0:n.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(n){return this._throwIfClosed(),t.prototype._trySubscribe.call(this,n)},e.prototype._subscribe=function(n){return this._throwIfClosed(),this._checkFinalizedStatuses(n),this._innerSubscribe(n)},e.prototype._innerSubscribe=function(n){var r=this,i=this,a=i.hasError,s=i.isStopped,o=i.observers;return a||s?wv:(this.currentObservers=null,o.push(n),new Ea(function(){r.currentObservers=null,b0(o,n)}))},e.prototype._checkFinalizedStatuses=function(n){var r=this,i=r.hasError,a=r.thrownError,s=r.isStopped;i?n.error(a):s&&n.complete()},e.prototype.asObservable=function(){var n=new gn;return n.source=this,n},e.create=function(n,r){return new l9(n,r)},e}(gn),l9=function(t){Fr(e,t);function e(n,r){var i=t.call(this)||this;return i.destination=n,i.source=r,i}return e.prototype.next=function(n){var r,i;(i=(r=this.destination)===null||r===void 0?void 0:r.next)===null||i===void 0||i.call(r,n)},e.prototype.error=function(n){var r,i;(i=(r=this.destination)===null||r===void 0?void 0:r.error)===null||i===void 0||i.call(r,n)},e.prototype.complete=function(){var n,r;(r=(n=this.destination)===null||n===void 0?void 0:n.complete)===null||r===void 0||r.call(n)},e.prototype._subscribe=function(n){var r,i;return(i=(r=this.source)===null||r===void 0?void 0:r.subscribe(n))!==null&&i!==void 0?i:wv},e}(rh),zl=function(t){Fr(e,t);function e(n){var r=t.call(this)||this;return r._value=n,r}return Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(n){var r=t.prototype._subscribe.call(this,n);return!r.closed&&n.next(this._value),r},e.prototype.getValue=function(){var n=this,r=n.hasError,i=n.thrownError,a=n._value;if(r)throw i;return this._throwIfClosed(),a},e.prototype.next=function(n){t.prototype.next.call(this,this._value=n)},e}(rh),R2={now:function(){return(R2.delegate||Date).now()},delegate:void 0},JX=function(t){Fr(e,t);function e(n,r,i){n===void 0&&(n=1/0),r===void 0&&(r=1/0),i===void 0&&(i=R2);var a=t.call(this)||this;return a._bufferSize=n,a._windowTime=r,a._timestampProvider=i,a._buffer=[],a._infiniteTimeWindow=!0,a._infiniteTimeWindow=r===1/0,a._bufferSize=Math.max(1,n),a._windowTime=Math.max(1,r),a}return e.prototype.next=function(n){var r=this,i=r.isStopped,a=r._buffer,s=r._infiniteTimeWindow,o=r._timestampProvider,u=r._windowTime;i||(a.push(n),!s&&a.push(o.now()+u)),this._trimBuffer(),t.prototype.next.call(this,n)},e.prototype._subscribe=function(n){this._throwIfClosed(),this._trimBuffer();for(var r=this._innerSubscribe(n),i=this,a=i._infiniteTimeWindow,s=i._buffer,o=s.slice(),u=0;u<o.length&&!n.closed;u+=a?1:2)n.next(o[u]);return this._checkFinalizedStatuses(n),r},e.prototype._trimBuffer=function(){var n=this,r=n._bufferSize,i=n._timestampProvider,a=n._buffer,s=n._infiniteTimeWindow,o=(s?1:2)*r;if(r<1/0&&o<a.length&&a.splice(0,a.length-o),!s){for(var u=i.now(),h=0,p=1;p<a.length&&a[p]<=u;p+=2)h=p;h&&a.splice(0,h+1)}},e}(rh),QX=function(t){Fr(e,t);function e(n,r){return t.call(this)||this}return e.prototype.schedule=function(n,r){return this},e}(Ea),d9={setInterval:function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];return setInterval.apply(void 0,Rc([t,e],Ac(n)))},clearInterval:function(t){return clearInterval(t)},delegate:void 0},_X=function(t){Fr(e,t);function e(n,r){var i=t.call(this,n,r)||this;return i.scheduler=n,i.work=r,i.pending=!1,i}return e.prototype.schedule=function(n,r){var i;if(r===void 0&&(r=0),this.closed)return this;this.state=n;var a=this.id,s=this.scheduler;return a!=null&&(this.id=this.recycleAsyncId(s,a,r)),this.pending=!0,this.delay=r,this.id=(i=this.id)!==null&&i!==void 0?i:this.requestAsyncId(s,this.id,r),this},e.prototype.requestAsyncId=function(n,r,i){return i===void 0&&(i=0),d9.setInterval(n.flush.bind(n,this),i)},e.prototype.recycleAsyncId=function(n,r,i){if(i===void 0&&(i=0),i!=null&&this.delay===i&&this.pending===!1)return r;r!=null&&d9.clearInterval(r)},e.prototype.execute=function(n,r){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var i=this._execute(n,r);if(i)return i;this.pending===!1&&this.id!=null&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(n,r){var i=!1,a;try{this.work(n)}catch(s){i=!0,a=s||new Error("Scheduled action threw falsy error")}if(i)return this.unsubscribe(),a},e.prototype.unsubscribe=function(){if(!this.closed){var n=this,r=n.id,i=n.scheduler,a=i.actions;this.work=this.state=this.scheduler=null,this.pending=!1,b0(a,this),r!=null&&(this.id=this.recycleAsyncId(i,r,null)),this.delay=null,t.prototype.unsubscribe.call(this)}},e}(QX),$X=1,Pp,$1={};function f9(t){return t in $1?(delete $1[t],!0):!1}var Tv={setImmediate:function(t){var e=$X++;return $1[e]=!0,Pp||(Pp=Promise.resolve()),Pp.then(function(){return f9(e)&&t()}),e},clearImmediate:function(t){f9(t)}},ej=Tv.setImmediate,tj=Tv.clearImmediate,h9={setImmediate:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return ej.apply(void 0,Rc([],Ac(t)))},clearImmediate:function(t){return tj(t)},delegate:void 0},nj=function(t){Fr(e,t);function e(n,r){var i=t.call(this,n,r)||this;return i.scheduler=n,i.work=r,i}return e.prototype.requestAsyncId=function(n,r,i){return i===void 0&&(i=0),i!==null&&i>0?t.prototype.requestAsyncId.call(this,n,r,i):(n.actions.push(this),n._scheduled||(n._scheduled=h9.setImmediate(n.flush.bind(n,void 0))))},e.prototype.recycleAsyncId=function(n,r,i){var a;if(i===void 0&&(i=0),i!=null?i>0:this.delay>0)return t.prototype.recycleAsyncId.call(this,n,r,i);var s=n.actions;r!=null&&((a=s[s.length-1])===null||a===void 0?void 0:a.id)!==r&&(h9.clearImmediate(r),n._scheduled===r&&(n._scheduled=void 0))},e}(_X),p9=function(){function t(e,n){n===void 0&&(n=t.now),this.schedulerActionCtor=e,this.now=n}return t.prototype.schedule=function(e,n,r){return n===void 0&&(n=0),new this.schedulerActionCtor(this,e).schedule(r,n)},t.now=R2.now,t}(),rj=function(t){Fr(e,t);function e(n,r){r===void 0&&(r=p9.now);var i=t.call(this,n,r)||this;return i.actions=[],i._active=!1,i}return e.prototype.flush=function(n){var r=this.actions;if(this._active){r.push(n);return}var i;this._active=!0;do if(i=n.execute(n.state,n.delay))break;while(n=r.shift());if(this._active=!1,i){for(;n=r.shift();)n.unsubscribe();throw i}},e}(p9),ij=function(t){Fr(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e.prototype.flush=function(n){this._active=!0;var r=this._scheduled;this._scheduled=void 0;var i=this.actions,a;n=n||i.shift();do if(a=n.execute(n.state,n.delay))break;while((n=i[0])&&n.id===r&&i.shift());if(this._active=!1,a){for(;(n=i[0])&&n.id===r&&i.shift();)n.unsubscribe();throw a}},e}(rj),aj=new ij(nj),Kl=new gn(function(t){return t.complete()});function sj(t){return t&&Zt(t.schedule)}function Nv(t){return t[t.length-1]}function oj(t){return Zt(Nv(t))?t.pop():void 0}function ih(t){return sj(Nv(t))?t.pop():void 0}var Ov=function(t){return t&&typeof t.length=="number"&&typeof t!="function"};function Vv(t){return Zt(t==null?void 0:t.then)}function Sv(t){return Zt(t[H2])}function Ev(t){return Symbol.asyncIterator&&Zt(t==null?void 0:t[Symbol.asyncIterator])}function zv(t){return new TypeError("You provided "+(t!==null&&typeof t=="object"?"an invalid object":"'"+t+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function cj(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var Iv=cj();function Lv(t){return Zt(t==null?void 0:t[Iv])}function Hv(t){return BX(this,arguments,function(){var e,n,r,i;return vv(this,function(a){switch(a.label){case 0:e=t.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,wc(e.read())];case 3:return n=a.sent(),r=n.value,i=n.done,i?[4,wc(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return[4,wc(r)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return e.releaseLock(),[7];case 10:return[2]}})})}function Av(t){return Zt(t==null?void 0:t.getReader)}function zs(t){if(t instanceof gn)return t;if(t!=null){if(Sv(t))return uj(t);if(Ov(t))return lj(t);if(Vv(t))return dj(t);if(Ev(t))return Rv(t);if(Lv(t))return fj(t);if(Av(t))return hj(t)}throw zv(t)}function uj(t){return new gn(function(e){var n=t[H2]();if(Zt(n.subscribe))return n.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function lj(t){return new gn(function(e){for(var n=0;n<t.length&&!e.closed;n++)e.next(t[n]);e.complete()})}function dj(t){return new gn(function(e){t.then(function(n){e.closed||(e.next(n),e.complete())},function(n){return e.error(n)}).then(null,Mv)})}function fj(t){return new gn(function(e){var n,r;try{for(var i=Hc(t),a=i.next();!a.done;a=i.next()){var s=a.value;if(e.next(s),e.closed)return}}catch(o){n={error:o}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}e.complete()})}function Rv(t){return new gn(function(e){pj(t,e).catch(function(n){return e.error(n)})})}function hj(t){return Rv(Hv(t))}function pj(t,e){var n,r,i,a;return RX(this,void 0,void 0,function(){var s,o;return vv(this,function(u){switch(u.label){case 0:u.trys.push([0,5,6,11]),n=XX(t),u.label=1;case 1:return[4,n.next()];case 2:if(r=u.sent(),!!r.done)return[3,4];if(s=r.value,e.next(s),e.closed)return[2];u.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return o=u.sent(),i={error:o},[3,11];case 6:return u.trys.push([6,,9,10]),r&&!r.done&&(a=n.return)?[4,a.call(n)]:[3,8];case 7:u.sent(),u.label=8;case 8:return[3,10];case 9:if(i)throw i.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function gs(t,e,n,r,i){r===void 0&&(r=0),i===void 0&&(i=!1);var a=e.schedule(function(){n(),i?t.add(this.schedule(null,r)):this.unsubscribe()},r);if(t.add(a),!i)return a}function Bv(t,e){return e===void 0&&(e=0),Wn(function(n,r){n.subscribe(qn(r,function(i){return gs(r,t,function(){return r.next(i)},e)},function(){return gs(r,t,function(){return r.complete()},e)},function(i){return gs(r,t,function(){return r.error(i)},e)}))})}function Xv(t,e){return e===void 0&&(e=0),Wn(function(n,r){r.add(t.schedule(function(){return n.subscribe(r)},e))})}function mj(t,e){return zs(t).pipe(Xv(e),Bv(e))}function bj(t,e){return zs(t).pipe(Xv(e),Bv(e))}function yj(t,e){return new gn(function(n){var r=0;return e.schedule(function(){r===t.length?n.complete():(n.next(t[r++]),n.closed||this.schedule())})})}function gj(t,e){return new gn(function(n){var r;return gs(n,e,function(){r=t[Iv](),gs(n,e,function(){var i,a,s;try{i=r.next(),a=i.value,s=i.done}catch(o){n.error(o);return}s?n.complete():n.next(a)},0,!0)}),function(){return Zt(r==null?void 0:r.return)&&r.return()}})}function jv(t,e){if(!t)throw new Error("Iterable cannot be null");return new gn(function(n){gs(n,e,function(){var r=t[Symbol.asyncIterator]();gs(n,e,function(){r.next().then(function(i){i.done?n.complete():n.next(i.value)})},0,!0)})})}function xj(t,e){return jv(Hv(t),e)}function vj(t,e){if(t!=null){if(Sv(t))return mj(t,e);if(Ov(t))return yj(t,e);if(Vv(t))return bj(t,e);if(Ev(t))return jv(t,e);if(Lv(t))return gj(t,e);if(Av(t))return xj(t,e)}throw zv(t)}function Zi(t,e){return e?vj(t,e):zs(t)}function ee(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=ih(t);return Zi(t,n)}var B2=I2(function(t){return function(){t(this),this.name="EmptyError",this.message="no elements in sequence"}});function Sn(t,e){return new Promise(function(n,r){var i=new y0({next:function(a){n(a),i.unsubscribe()},error:r,complete:function(){r(new B2)}});t.subscribe(i)})}function ne(t,e){return Wn(function(n,r){var i=0;n.subscribe(qn(r,function(a){r.next(t.call(e,a,i++))}))})}var wj=Array.isArray;function Pj(t,e){return wj(e)?t.apply(void 0,Rc([],Ac(e))):t(e)}function Mj(t){return ne(function(e){return Pj(t,e)})}var kj=Array.isArray,Tj=Object.getPrototypeOf,Nj=Object.prototype,Oj=Object.keys;function Vj(t){if(t.length===1){var e=t[0];if(kj(e))return{args:e,keys:null};if(Sj(e)){var n=Oj(e);return{args:n.map(function(r){return e[r]}),keys:n}}}return{args:t,keys:null}}function Sj(t){return t&&typeof t=="object"&&Tj(t)===Nj}function Ej(t,e){return t.reduce(function(n,r,i){return n[r]=e[i],n},{})}function me(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=ih(t),r=oj(t),i=Vj(t),a=i.args,s=i.keys;if(a.length===0)return Zi([],n);var o=new gn(zj(a,n,s?function(u){return Ej(s,u)}:Eo));return r?o.pipe(Mj(r)):o}function zj(t,e,n){return n===void 0&&(n=Eo),function(r){m9(e,function(){for(var i=t.length,a=new Array(i),s=i,o=i,u=function(p){m9(e,function(){var y=Zi(t[p],e),w=!1;y.subscribe(qn(r,function(P){a[p]=P,w||(w=!0,o--),o||r.next(n(a.slice()))},function(){--s||r.complete()}))},r)},h=0;h<i;h++)u(h)},r)}}function m9(t,e,n){t?gs(n,t,e):e()}function Ij(t,e,n,r,i,a,s,o){var u=[],h=0,p=0,y=!1,w=function(){y&&!u.length&&!h&&e.complete()},P=function(O){return h<r?N(O):u.push(O)},N=function(O){h++;var z=!1;zs(n(O,p++)).subscribe(qn(e,function(j){e.next(j)},function(){z=!0},void 0,function(){if(z)try{h--;for(var j=function(){var I=u.shift();s||N(I)};u.length&&h<r;)j();w()}catch(I){e.error(I)}}))};return t.subscribe(qn(e,P,function(){y=!0,w()})),function(){}}function ah(t,e,n){return n===void 0&&(n=1/0),Zt(e)?ah(function(r,i){return ne(function(a,s){return e(r,a,i,s)})(zs(t(r,i)))},n):(typeof e=="number"&&(n=e),Wn(function(r,i){return Ij(r,i,t,n)}))}function Lj(t){return ah(Eo,t)}function Hj(){return Lj(1)}function b9(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return Hj()(Zi(t,ih(t)))}function za(t){return Wn(function(e,n){var r=null,i=!1,a;r=e.subscribe(qn(n,void 0,void 0,function(s){a=zs(t(s,za(t)(e))),r?(r.unsubscribe(),r=null,a.subscribe(n)):i=!0})),i&&(r.unsubscribe(),r=null,a.subscribe(n))})}function Aj(t,e,n,r,i){return function(a,s){var o=n,u=e,h=0;a.subscribe(qn(s,function(p){var y=h++;u=o?t(u,p,y):(o=!0,p)},function(){o&&s.next(u),s.complete()}))}}function Rj(t,e){return Wn(Aj(t,e,arguments.length>=2,!1,!0))}var Bj=function(t,e){return t.push(e),t};function sh(){return Wn(function(t,e){Rj(Bj,[])(t).subscribe(e)})}function Xj(t){return new gn(function(e){return t.subscribe(e)})}var jj={connector:function(){return new rh}};function Cj(t,e){e===void 0&&(e=jj);var n=e.connector;return Wn(function(r,i){var a=n();zs(t(Xj(a))).subscribe(i),i.add(r.subscribe(a))})}function Uj(t){return Wn(function(e,n){var r=!1;e.subscribe(qn(n,function(i){r=!0,n.next(i)},function(){r||n.next(t),n.complete()}))})}function Dj(t){return t<=0?function(){return Kl}:Wn(function(e,n){var r=0;e.subscribe(qn(n,function(i){++r<=t&&(n.next(i),t<=r&&n.complete())}))})}function Fj(t,e){return e===void 0&&(e=Eo),t=t??Zj,Wn(function(n,r){var i,a=!0;n.subscribe(qn(r,function(s){var o=e(s);(a||!t(i,o))&&(a=!1,i=o,r.next(s))}))})}function Zj(t,e){return t===e}function qj(t){return t===void 0&&(t=Wj),Wn(function(e,n){var r=!1;e.subscribe(qn(n,function(i){r=!0,n.next(i)},function(){return r?n.complete():n.error(t())}))})}function Wj(){return new B2}function y9(t,e){var n=arguments.length>=2;return function(r){return r.pipe(Eo,Dj(1),n?Uj(e):qj(function(){return new B2}))}}function Gj(t,e){var n=Zt(t)?t:function(){return t};return Zt(e)?Cj(e,{connector:n}):function(r){return new YX(r,n)}}function Cv(t,e,n,r){var i=Zt(n)?n:void 0;return function(a){return Gj(new JX(t,e,r),i)(a)}}function Jl(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=ih(t);return Wn(function(r,i){(n?b9(t,r,n):b9(t,r)).subscribe(i)})}function be(t,e){return Wn(function(n,r){var i=null,a=0,s=!1,o=function(){return s&&!i&&r.complete()};n.subscribe(qn(r,function(u){i==null||i.unsubscribe();var h=0,p=a++;zs(t(u,p)).subscribe(i=qn(r,function(y){return r.next(e?e(u,y,p,h++):y)},function(){i=null,o()}))},function(){s=!0,o()}))})}function Vs(t,e,n){var r=Zt(t)||e||n?{next:t,error:e,complete:n}:t;return r?Wn(function(i,a){var s;(s=r.subscribe)===null||s===void 0||s.call(r);var o=!0;i.subscribe(qn(a,function(u){var h;(h=r.next)===null||h===void 0||h.call(r,u),a.next(u)},function(){var u;o=!1,(u=r.complete)===null||u===void 0||u.call(r),a.complete()},function(u){var h;o=!1,(h=r.error)===null||h===void 0||h.call(r,u),a.error(u)},function(){var u,h;o&&((u=r.unsubscribe)===null||u===void 0||u.call(r)),(h=r.finalize)===null||h===void 0||h.call(r)}))}):Eo}const Yj=Dr("api/util");function Kj(t,{block:{extrinsics:e,header:n}},r,i){for(const[a,s]of e.entries())if(s.hash.eq(t))return{blockNumber:y7(n.number)?n.number.unwrap():n.number,events:r.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eqn(a)),txIndex:a};if(i.isInBlock){const a=e.map(s=>s.hash.toHex());Yj.warn(`block ${n.hash.toHex()}: Unable to find extrinsic ${t.toHex()} inside ${a.join(", ")}`)}return{}}function Mp(t){return Ze(t.sign)}const Jj={Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null},g9={metadata:{description:"Returns the metadata of a runtime",params:[],type:"OpaqueMetadata"}},Qj={Metadata:[{methods:{metadata_at_version:{description:"Returns the metadata at a given version.",params:[{name:"version",type:"u32"}],type:"Option<OpaqueMetadata>"},metadata_versions:{description:"Returns the supported metadata versions.",params:[],type:"Vec<u32>"},...g9},version:2},{methods:{...g9},version:1}]},_j={ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},$j={ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},eC={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:Jj}},tC={ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},nC={ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},tf={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},rC={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant:tf},iC={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:{...tf,args:"Vec<Type>"},EventMetadataV14:{...tf,args:"Vec<Type>"},FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:{...tf,args:"Vec<FunctionArgumentMetadataV14>"},ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"},aC={CustomMetadata15:{map:"BTreeMap<Text, CustomValueMetadata15>"},CustomValueMetadata15:{type:"SiLookupTypeId",value:"Bytes"},ExtrinsicMetadataV15:{version:"u8",addressType:"SiLookupTypeId",callType:"SiLookupTypeId",signatureType:"SiLookupTypeId",extraType:"SiLookupTypeId",signedExtensions:"Vec<SignedExtensionMetadataV14>"},OuterEnums15:{callType:"SiLookupTypeId",eventType:"SiLookupTypeId",errorType:"SiLookupTypeId"},PalletMetadataV15:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8",docs:"Vec<Text>"},RuntimeApiMetadataV15:{name:"Text",methods:"Vec<RuntimeApiMethodMetadataV15>",docs:"Vec<Text>"},RuntimeApiMethodMetadataV15:{name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<Text>"},RuntimeApiMethodParamMetadataV15:{name:"Text",type:"SiLookupTypeId"},MetadataV15:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV15>",extrinsic:"ExtrinsicMetadataV15",type:"SiLookupTypeId",apis:"Vec<RuntimeApiMetadataV15>",outerEnums:"OuterEnums15",custom:"CustomMetadata15"}},sC={MetadataV16:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV16>",extrinsic:"ExtrinsicMetadataV16",apis:"Vec<RuntimeApiMetadataV16>",outerEnums:"OuterEnums15",custom:"CustomMetadata15"},PalletMetadataV16:{name:"Text",storage:"Option<PalletStorageMetadataV16>",calls:"Option<PalletCallMetadataV16>",events:"Option<PalletEventMetadataV16>",constants:"Vec<PalletConstantMetadataV16>",errors:"Option<PalletErrorMetadataV16>",associatedTypes:"Vec<PalletAssociatedTypeMetadataV16>",viewFunctions:"Vec<PalletViewFunctionMetadataV16>",index:"u8",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},PalletStorageMetadataV16:{prefix:"Text",items:"Vec<StorageEntryMetadataV16>"},StorageEntryMetadataV16:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},ItemDeprecationInfoV16:{_enum:{NotDeprecated:"Null",DeprecatedWithoutNote:"Null",Deprecated:{note:"Text",since:"Option<Text>"}}},PalletCallMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},EnumDeprecationInfoV16:"BTreeMap<u8, VariantDeprecationInfoV16>",VariantDeprecationInfoV16:{_enum:{DummyVariant:"Null",DeprecatedWithoutNote:"Null",Deprecated:{note:"Text",since:"Option<Text>"}}},PalletEventMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},PalletConstantMetadataV16:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},PalletErrorMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},PalletAssociatedTypeMetadataV16:{name:"Text",type:"SiLookupTypeId",docs:"Vec<Text>"},PalletViewFunctionMetadataV16:{id:"[u8; 32]",name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<T::String>",deprecationInfo:"ItemDeprecationInfoV16"},ExtrinsicMetadataV16:{versions:"Vec<u8>",addressType:"SiLookupTypeId",callType:"SiLookupTypeId",signatureType:"SiLookupTypeId",transactionExtensionsByVersion:"BTreeMap<u8, Vec<Compact<u32>>>",transactionExtensions:"Vec<TransactionExtensionMetadataV16>"},TransactionExtensionMetadataV16:{identifier:"Text",type:"SiLookupTypeId",implicit:"SiLookupTypeId"},RuntimeApiMetadataV16:{name:"Text",methods:"Vec<RuntimeApiMethodMetadataV16>",docs:"Vec<Text>",version:"Compact<u32>",deprecationInfo:"ItemDeprecationInfoV16"},RuntimeApiMethodMetadataV16:{name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"}},oC={rpc:{},runtime:Qj,types:{..._j,...$j,...eC,...tC,...nC,...iC,...aC,...sC,ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV16",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV16",PalletCallMetadataLatest:"PalletCallMetadataV16",PalletConstantMetadataLatest:"PalletConstantMetadataV16",PalletErrorMetadataLatest:"PalletErrorMetadataV16",PalletEventMetadataLatest:"PalletEventMetadataV16",PalletMetadataLatest:"PalletMetadataV16",PalletStorageMetadataLatest:"PalletStorageMetadataV16",PortableType:"PortableTypeV14",RuntimeApiMetadataLatest:"RuntimeApiMetadataV16",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",TransactionExtensionMetadataLatest:"TransactionExtensionMetadataV16",StorageEntryMetadataLatest:"StorageEntryMetadataV16",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",OpaqueMetadata:"Opaque<Bytes>",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14",V15:"MetadataV15",V16:"MetadataV16"}}}},wu={execute_block:{description:"Execute the given block.",params:[{name:"block",type:"Block"}],type:"Null"}},x9={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre3"}},kp={initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}},v9={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersion"}},cC={...wu,initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"ExtrinsicInclusionMode"}},uC={Core:[{methods:{...v9,...cC},version:5},{methods:{...v9,...wu,...kp},version:4},{methods:{version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre4"},...wu,...kp},version:3},{methods:{...x9,...wu,...kp},version:2},{methods:{initialise_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"},...x9,...wu},version:1}]},lC={Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},dC={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"},fC={rpc:{},runtime:uC,types:{...lC,AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId32",AccountId33:"GenericAccountId33",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeCall:"Call",RuntimeEvent:"Event",RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",SlotDuration:"u64",StorageData:"Bytes",StorageInfo:{palletName:"Bytes",storage_name:"Bytes",prefix:"Bytes",maxValues:"Option<u32>",maxSize:"Option<u32>"},StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionLongevity:"u64",TransactionTag:"Bytes",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",WeightV0:"u32",WeightV1:"u64",WeightV2:{refTime:"Compact<u64>",proofSize:"Compact<u64>"},Weight:"WeightV2",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)",ExtrinsicInclusionMode:{_enum:["AllExtrinsics","OnlyInherents"]}}},hC={Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}},pC={rpc:{},types:{...hC,...rC,SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"}},mC={AssetConversionApi:[{methods:{get_reserves:{description:"Get pool reserves",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"}],type:"Option<(Balance,Balance)>"},quote_price_exact_tokens_for_tokens:{description:"Quote price: exact tokens for tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"},quote_price_tokens_for_exact_tokens:{description:"Quote price: tokens for exact tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"}},version:1}]},bC={rpc:{},runtime:mC,types:{TAssetConversion:"Option<MultiLocation>"}},yC={AssetsApi:[{methods:{account_balances:{description:"Return the current set of authorities.",params:[{name:"account",type:"AccountId"}],type:"Vec<(u32, TAssetBalance)>"}},version:1}]},gC={rpc:{},runtime:yC,types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},xC={AuraApi:[{methods:{authorities:{description:"Return the current set of authorities.",params:[],type:"Vec<AuthorityId>"},slot_duration:{description:"Returns the slot duration for Aura.",params:[],type:"SlotDuration"}},version:1}]},vC={rpc:{},runtime:xC,types:{RawAuraPreDigest:{slotNumber:"u64"}}},wC={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}},PC={epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",isUnsafe:!0,params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},w9={current_epoch:{description:"Returns information regarding the current epoch.",params:[],type:"Epoch"},current_epoch_start:{description:"Returns the slot that started the current epoch.",params:[],type:"Slot"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the current epoch.",params:[{name:"slot",type:"Slot"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},next_epoch:{description:"Returns information regarding the next epoch (which was already previously announced).",params:[],type:"Epoch"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BabeEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},MC={BabeApi:[{methods:{configuration:{description:"Return the genesis configuration for BABE. The configuration is only read on genesis.",params:[],type:"BabeGenesisConfiguration"},...w9},version:2},{methods:{configuration:{description:"Return the configuration for BABE. Version 1.",params:[],type:"BabeGenesisConfigurationV1"},...w9},version:1}]},kC={rpc:PC,runtime:MC,types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeGenesisConfiguration:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",allowedSlots:"AllowedSlots"},BabeGenesisConfigurationV1:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",secondarySlots:"bool"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",Epoch:{epochIndex:"u64",startSlot:"Slot",duration:"u64",authorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Hash",config:"BabeEpochConfiguration"},EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},OpaqueKeyOwnershipProof:"Bytes",Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},TC={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}},NC={getFinalizedHead:{description:"Returns hash of the latest BEEFY finalized block as seen by this client.",params:[],type:"H256"},subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefyVersionedFinalityProof"}},Uv={beefy_genesis:{description:"Return the block number where BEEFY consensus is enabled/started",params:[],type:"Option<BlockNumber>"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"ValidatorSetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},validator_set:{description:"Return the current active BEEFY validator set",params:[],type:"Option<ValidatorSet>"}},Tp={...Uv,submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BeefyEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},OC={...Uv,submit_report_double_voting_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report a double voting equivocation.",params:[{name:"equivocationProof",type:"SpConsensusBeefyDoubleVotingProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},VC={authority_set_proof:{description:"Return the currently active BEEFY authority set proof.",params:[],type:"BeefyAuthoritySet"},next_authority_set_proof:{description:"Return the next/queued BEEFY authority set proof.",params:[],type:"BeefyNextAuthoritySet"}},SC={BeefyApi:[{methods:OC,version:4},{methods:Tp,version:3},{methods:Tp,version:2},{methods:Tp,version:1}],BeefyMmrApi:[{methods:VC,version:1}]},EC={rpc:NC,runtime:SC,types:{BeefyAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefyEquivocationProof:{first:"BeefyVoteMessage",second:"BeefyVoteMessage"},BeefyCompactSignedCommitment:{commitment:"BeefyCommitment",signaturesFrom:"Vec<u8>",validatorSetLen:"u32",signaturesCompact:"Vec<EcdsaSignature>"},BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyVersionedFinalityProof:{_enum:{V0:"Null",V1:"BeefyCompactSignedCommitment"}},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"Vec<(BeefyPayloadId, Bytes)>",BeefyPayloadId:"[u8;2]",BeefyVoteMessage:{commitment:"BeefyCommitment",id:"AuthorityId",signature:"Signature"},MmrRootHash:"H256",ValidatorSetId:"u64",ValidatorSet:{validators:"Vec<AuthorityId>",id:"ValidatorSetId"}}},zC={Benchmark:[{methods:{benchmark_metadata:{description:"Get the benchmark metadata available for this runtime.",params:[{name:"extra",type:"bool"}],type:"(Vec<BenchmarkList>, Vec<StorageInfo>)"},dispatch_benchmark:{description:"Dispatch the given benchmark.",params:[{name:"config",type:"BenchmarkConfig"}],type:"Result<Vec<BenchmarkBatch>, Text>"}},version:1}]},IC={rpc:{},runtime:zC,types:{BenchmarkBatch:{pallet:"Text",instance:"Text",benchmark:"Text",results:"Vec<BenchmarkResult>"},BenchmarkConfig:{pallet:"Bytes",benchmark:"Bytes",selectedComponents:"Vec<(BenchmarkParameter, u32)>",verify:"bool",internalRepeats:"u32"},BenchmarkList:{pallet:"Bytes",instance:"Bytes",benchmarks:"Vec<BenchmarkMetadata>"},BenchmarkMetadata:{name:"Bytes",components:"Vec<(BenchmarkParameter, u32, u32)>"},BenchmarkParameter:{_enum:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]},BenchmarkResult:{components:"Vec<(BenchmarkParameter, u32)>",extrinsicTime:"u128",storageRootTime:"u128",reads:"u32",repeatReads:"u32",writes:"u32",repeatWrites:"u32",proofSize:"u32",benchKeys:"Vec<(Vec<u8>, u32, u32, bool)>"}}},Np={random_seed:{description:"Generate a random seed.",params:[],type:"Hash"}},P9={apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResultPre6"}},nu={check_inherents:{description:"Check that the inherents are valid.",params:[{name:"block",type:"Block"},{name:"data",type:"InherentData"}],type:"CheckInherentsResult"},inherent_extrinsics:{description:"Generate inherent extrinsics.",params:[{name:"inherent",type:"InherentData"}],type:"Vec<Extrinsic>"}},gd={finalize_block:{description:"Finish the current block.",params:[],type:"Header"}},LC={BlockBuilder:[{methods:{apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResult"},...nu,...gd},version:6},{methods:{...P9,...nu,...gd},version:5},{methods:{...Np,...P9,...nu,...gd},version:4},{methods:{...Np,...nu,...gd},version:3},{methods:{finalise_block:{description:"Finish the current block.",params:[],type:"Header"},...Np,...nu},version:2}]},HC={rpc:{},runtime:LC,types:{CheckInherentsResult:{okay:"bool",fatalError:"bool",errors:"InherentData"},InherentData:{data:"BTreeMap<InherentIdentifier, Bytes>"},InherentIdentifier:"[u8; 8]"}},AC={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},RC={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}},BC={call:{deprecated:"Use the runtime interface `api.call.contractsApi.call` instead",description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractExecResult"},getStorage:{deprecated:"Use the runtime interface `api.call.contractsApi.getStorage` instead",description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<Bytes>"},instantiate:{deprecated:"Use the runtime interface `api.call.contractsApi.instantiate` instead",description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequestV1"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractInstantiateResult"},rentProjection:{deprecated:"Not available in newer versions of the contracts interfaces",description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<BlockNumber>"},uploadCode:{deprecated:"Use the runtime interface `api.call.contractsApi.uploadCode` instead",description:"Upload new code without instantiating a contract from it",endpoint:"contracts_upload_code",params:[{name:"uploadRequest",type:"CodeUploadRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"CodeUploadResult"}},M9={get_storage:{description:"Query a given storage key in a given contract.",params:[{name:"address",type:"AccountId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},upload_code:{description:"Upload new code without instantiating a contract from it.",params:[{name:"origin",type:"AccountId"},{name:"code",type:"Bytes"},{name:"storageDepositLimit",type:"Option<Balance>"}],type:"CodeUploadResult"}},XC={ContractsApi:[{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResult"},...M9},version:2},{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResultU64"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResultU64"},...M9},version:1}]},jC={rpc:BC,runtime:XC,types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",CodeSource:{_enum:{Upload:"Bytes",Existing:"Hash"}},CodeUploadRequest:{origin:"AccountId",code:"Bytes",storageDepositLimit:"Option<Balance>"},CodeUploadResult:"Result<CodeUploadResultValue, DispatchError>",CodeUploadResultValue:{codeHash:"CodeHash",deposit:"Balance"},ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",storageDepositLimit:"Option<Balance>",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"ContractReturnFlags",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultOk:{flags:"ContractReturnFlags",data:"Bytes"},ContractExecResultResult:"Result<ContractExecResultOk, DispatchError>",ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"Weight",gasRequired:"Weight",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResultU64:{gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractCallFlags:{_set:{_bitLength:32,ForwardInput:1,CloneInput:2,TailCall:4,AllowReentry:8}},ContractReturnFlags:{_set:{_bitLength:32,Revert:1}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"ContractReturnFlags",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequestV1:{origin:"AccountId",value:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequestV2:{_fallback:"InstantiateRequestV1",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequest:{_fallback:"InstantiateRequestV2",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"CodeSource",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:"Result<InstantiateReturnValueTo267, Null>",ContractInstantiateResultTo299:"Result<InstantiateReturnValueOk, Null>",ContractInstantiateResult:{gasConsumed:"WeightV2",gasRequired:"WeightV2",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},ContractInstantiateResultU64:{_fallback:"ContractInstantiateResultTo299",gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValueOk:{result:"ExecReturnValue",accountId:"AccountId"},InstantiateReturnValue:"Result<InstantiateReturnValueOk, DispatchError>",InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",StorageDeposit:{_enum:{Refund:"Balance",Charge:"Balance"}},TombstoneContractInfo:"Hash",TrieId:"Bytes"}},CC=["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"],UC={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:CC},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}},DC={getBlockStats:{description:"Reexecute the specified `block_hash` and gather statistics while doing so",isUnsafe:!0,params:[{isHistoric:!0,name:"at",type:"Hash"}],type:"Option<BlockStats>"}},FC={rpc:DC,types:{BlockStats:{witnessLen:"u64",witnessCompactLen:"u64",blockLen:"u64",blockNumExtrinsics:"u64"}}},ZC={AuthorityDiscoveryApi:[{methods:{authorities:{description:"Retrieve authority identifiers of the current and next authority set.",params:[],type:"Vec<AuthorityId>"}},version:1}]},qC={rpc:{},runtime:ZC,types:{}},WC={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}},GC={createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{isOptional:!0,name:"parentHash",type:"BlockHash"}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{isOptional:!0,name:"justification",type:"Justification"}],type:"bool"}},YC={rpc:GC,types:{CreatedBlock:{_alias:{blockHash:"hash"},blockHash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},KC={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmCallInfo:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCreateInfo:{exitReason:"ExitReason",value:"H160",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCallInfoV2:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmCreateInfoV2:{exitReason:"ExitReason",value:"H160",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},EvmWeightInfo:{refTimeLimit:"Option<u64>",proofSizeLimit:"Option<u64>",refTimeUsage:"Option<u64>",proofSizeUsage:"Option<u64>"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},JC={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",ExtrinsicV5:"GenericExtrinsicV5",ExtrinsicPayloadV5:"GenericExtrinsicPayloadV5",ExtrinsicSignatureV5:"GenericExtrinsicSignatureV5",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},QC={FungiblesApi:[{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>"}},version:1},{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<XcmVersionedAssets, FungiblesAccessError>"}},version:2}]},_C={rpc:{},runtime:QC,types:{FungiblesAccessError:{_enum:["AssetIdConversionFailed","AmountToBalanceConversionFailed"]}}},$C={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},eU={GenesisBuilder:[{methods:{build_config:{description:"Build `RuntimeGenesisConfig` from a JSON blob not using any defaults and store it in the storage.",params:[{name:"json",type:"Vec<u8>"}],type:"Result<(), GenesisBuildErr>"},create_default_config:{description:"Creates the default `RuntimeGenesisConfig` and returns it as a JSON blob.",params:[],type:"Vec<u8>"}},version:1}]},tU={rpc:{},runtime:eU,types:{GenesisBuildErr:"Text"}},nU={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}},rU={proveFinality:{description:"Prove finality for the given block number, returning the Justification for the last block in the set.",params:[{name:"blockNumber",type:"BlockNumber"}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},k9={generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"SetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},grandpa_authorities:{description:"Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.",params:[],type:"AuthorityList"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"GrandpaEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},iU={GrandpaApi:[{methods:{current_set_id:{description:"Get current GRANDPA authority set id.",params:[],type:"SetId"},...k9},version:3},{methods:k9,version:2}]},aU={rpc:rU,runtime:iU,types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},sU={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},oU={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Opaque<Bytes>",OpaquePeerId:"Opaque<Bytes>",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},cU={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}},uU={MixnetApi:[{methods:{current_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},maybe_register:{description:"Try to register a mixnode for the next session.",params:[{name:"session_index",type:"u32"},{name:"mixnode",type:"Mixnode"}],type:"bool"},prev_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},session_status:{description:"Get the index and phase of the current session.",params:[],type:"SessionStatus"}},version:1}]},lU={rpc:{},runtime:uU,types:{Mixnode:{externalAddresses:"Vec<Bytes>",kxPublic:"[u8; 32]",peerId:"[u8; 32]"},MixnodesErr:{_enum:{InsufficientRegistrations:{min:"u32",num:"u32"}}},SessionPhase:{_enum:["CoverToCurrent","RequestsToCurrent","CoverToPrev","DisconnectFromPrev"]},SessionStatus:{currentIndex:"u32",phase:"SessionPhase"}}},dU={generateProof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<u64>"},{isOptional:!0,name:"bestKnownBlockNumber",type:"u64"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafBatchProof"},root:{description:"Get the MMR root hash for the current best block.",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrHash"},verifyProof:{description:"Verify an MMR proof",params:[{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"},verifyProofStateless:{description:"Verify an MMR proof statelessly given an mmr_root",params:[{name:"root",type:"MmrHash"},{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"}},fU={generate_proof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<BlockNumber>"},{name:"bestKnownBlockNumber",type:"Option<BlockNumber>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},mmr_leaf_count:{description:"Return the number of MMR blocks in the chain.",params:[],type:"Result<U64, MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"}},hU={generate_batch_proof:{description:"Generate MMR proof for a series of leaves under given indices.",params:[{name:"leafIndices",type:"Vec<MmrLeafIndex>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},generate_proof:{description:"Generate MMR proof for a leaf under given index.",params:[{name:"leafIndex",type:"MmrLeafIndex"}],type:"Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_batch_proof:{description:"Verify MMR proof against on-chain MMR for a batch of leaves.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_batch_proof_stateless:{description:"Verify MMR proof against given root hash or a batch of leaves.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"}},pU={MmrApi:[{methods:fU,version:2},{methods:hU,version:1}]},mU={rpc:dU,runtime:pU,types:{MmrBatchProof:{leafIndices:"Vec<MmrLeafIndex>",leafCount:"MmrNodeIndex",items:"Vec<Hash>"},MmrEncodableOpaqueLeaf:"Bytes",MmrError:{_enum:["InvalidNumericOp","Push","GetRoot","Commit","GenerateProof","Verify","LeafNotFound"," PalletNotIncluded","InvalidLeafIndex","InvalidBestKnownBlock"]},MmrHash:"Hash",MmrLeafBatchProof:{blockHash:"BlockHash",leaves:"Bytes",proof:"Bytes"},MmrLeafIndex:"u64",MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"},MmrNodeIndex:"u64",MmrProof:{leafIndex:"MmrLeafIndex",leafCount:"MmrNodeIndex",items:"Vec<Hash>"}}},bU={NftsApi:[{methods:{attribute:{description:"An attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_attribute:{description:"A collection attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_owner:{description:"A collection owner",params:[{name:"collection",type:"NftCollectionId"}],type:"Option<AccountId>"},custom_attribute:{description:"A custom attribute",params:[{name:"account",type:"AccountId"},{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},owner:{description:"Collection owner",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"}],type:"Option<AccountId>"},system_attribute:{description:"System attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},version:1}]},yU={rpc:{},runtime:bU,types:{NftCollectionId:"u32",NftItemId:"u32"}},gU={NominationPoolsApi:[{methods:{balance_to_points:{description:"Returns the equivalent points of `new_funds` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"newFunds",type:"Balance"}],type:"Balance"},pending_rewards:{description:"Returns the pending rewards for the given member.",params:[{name:"member",type:"AccountId"}],type:"Balance"},points_to_balance:{description:"Returns the equivalent balance of `points` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"points",type:"Balance"}],type:"Balance"}},version:1}]},xU={rpc:{},runtime:gU,types:{NpApiError:{_enum:["MemberNotFound","OverflowInPendingRewards"]},NpPoolId:"u32"}},vU={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}},wU={DifficultyApi:[{methods:{difficulty:{description:"Return the target difficulty of the next block.",params:[],type:"Raw"}},version:1}],TimestampApi:[{methods:{timestamp:{description:"API necessary for timestamp-based difficulty adjustment algorithms.",params:[],type:"Moment"}},version:1}]},PU={rpc:{},runtime:wU,types:{}},MU={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},kU={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},TU={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}},NU={SessionKeys:[{methods:{decode_session_keys:{description:"Decode the given public session keys.",params:[{name:"encoded",type:"Bytes"}],type:"Option<Vec<(Bytes, KeyTypeId)>>"},generate_session_keys:{description:"Generate a set of session keys with optionally using the given seed.",params:[{name:"seed",type:"Option<Bytes>"}],type:"Bytes"}},version:1}]},OU={BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"},VU={rpc:{},runtime:NU,types:{...OU,FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Bytes>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"}},SU={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}},EU={StakingApi:[{methods:{nominations_quota:{description:"Returns the nominations quota for a nominator with a given balance.",params:[{name:"balance",type:"Balance"}],type:"u32"}},version:1}]},zU={Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},IU={CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionResultToSpec10:{electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure<AccountId, Balance>)>",compute:"ElectionCompute"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"},LU={rpc:{},runtime:EU,types:{...zU,...IU,ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{_fallback:"StakingLedgerTo223",stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}}},HU={ValidateStatement:[{methods:{valdate_statement:{description:"Validate the statement.",params:[{name:"source",type:"StatementStoreStatementSource"},{name:"statement",type:"SpStatementStoreStatement"}],type:"Result<StatementStoreValidStatement, StatementStoreInvalidStatement>"}},version:1}]},AU={rpc:{},runtime:HU,types:{StatementStoreStatementSource:{_enum:["Chain","Network","Local"]},StatementStoreValidStatement:{maxCount:"u32",maxSize:"u32"},StatementStoreInvalidStatement:{_enum:["BadProof","NoProof","InternalError"]}}},RU={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}},BU={genSyncSpec:{description:"Returns the json-serialized chainspec running the node, with a sync state.",endpoint:"sync_state_genSyncSpec",params:[{name:"raw",type:"bool"}],type:"Json"}},XU={rpc:BU,types:{}},jU={accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},addLogFilter:{description:"Adds the supplied directives to the current log filter",isUnsafe:!0,params:[{name:"directives",type:"Text"}],type:"Null"},addReservedPeer:{description:"Adds a reserved peer",isUnsafe:!0,params:[{name:"peer",type:"Text"}],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",isUnsafe:!0,params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ApplyExtrinsicResult"},health:{description:"Return health status of the node",noErrorLog:!0,params:[],type:"Health"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},name:{description:"Retrieves the node name",params:[],type:"Text"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",isUnsafe:!0,params:[],type:"NetworkState"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},peers:{description:"Returns the currently connected peers",isUnsafe:!0,params:[],type:"Vec<PeerInfo>"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},removeReservedPeer:{description:"Remove a reserved peer",isUnsafe:!0,params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",isUnsafe:!0,params:[],type:"Null"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},version:{description:"Retrieves the version of the node",params:[],type:"Text"}},CU={AccountNonceApi:[{methods:{account_nonce:{description:"The API to query account nonce (aka transaction index)",params:[{name:"accountId",type:"AccountId"}],type:"Index"}},version:1}]},UU={rpc:jU,runtime:CU,types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ApplyExtrinsicResultPre6:"Result<DispatchOutcomePre6, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError",Exhausted:"Null",Corruption:"Null",Unavailable:"Null"}},DispatchErrorPre6:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorPre6First:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorModuleU8:{index:"u8",error:"u8"},DispatchErrorModuleU8a:{index:"u8",error:"[u8; 4]"},DispatchErrorModule:"DispatchErrorModuleU8a",DispatchErrorModulePre6:"DispatchErrorModuleU8",DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchOutcomePre6:"Result<(), DispatchErrorPre6>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null",BadSigner:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Unsupported","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},TransactionalError:{_enum:["LimitReached","NoLayer"]},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Option<Weight>",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},DU={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},FU={rpc:{},types:{Multiplier:"Fixed128"}},ZU={TaggedTransactionQueue:[{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"},{name:"blockHash",type:"BlockHash"}],type:"TransactionValidity"}},version:3},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:2},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:1}]},qU={rpc:{},runtime:ZU,types:{TransactionSource:{_enum:["InBlock","Local","External"]},TransactionValidity:"Result<ValidTransaction, TransactionValidityError>",ValidTransaction:{priority:"TransactionPriority",requires:"Vec<TransactionTag>",provides:"Vec<TransactionTag>",longevity:"TransactionLongevity",propagate:"bool"}}},WU={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},GU={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},YU={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},KU={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},JU={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},QU={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},_U={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}},$U={AuraUnincludedSegmentApi:[{methods:{can_build_upon:{description:"Whether it is legal to extend the chain",params:[{name:"includedHash",type:"BlockHash"},{name:"slot",type:"Slot"}],type:"bool"}},version:1}],CollectCollationInfo:[{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[{name:"header",type:"Header"}],type:"CollationInfo"}},version:2},{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[],type:"CollationInfoV1"}},version:1}]},eD={CollationInfo:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber",headData:"HeadData"},CollationInfoV1:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber"},ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}},tD={rpc:{},runtime:$U,types:eD},xd={methods:{best_finalized:{description:"Returns number and hash of the best finalized header known to the bridge module.",params:[],type:"(BlockNumber, Hash)"}},version:1},nD={KusamaFinalityApi:[xd],PolkadotFinalityApi:[xd],RococoFinalityApi:[xd],WestendFinalityApi:[xd]},rD={rpc:{},runtime:nD,types:{}},iD={HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}},pi={assumed_validation_data:{description:"Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.",params:[{name:"paraId",type:"ParaId"},{name:"hash",type:"Hash"}],type:"Option<(PersistedValidationData, ValidationCodeHash)>"},availability_cores:{description:"Yields information on all availability cores as relevant to the child block.",params:[],type:"Vec<CoreState>"},candidate_events:{description:"Get a vector of events concerning candidates that occurred within a block.",params:[],type:"Vec<CandidateEvent>"},candidate_pending_availability:{description:"Get the receipt of a candidate pending availability.",params:[{name:"paraId",type:"ParaId"}],type:"Option<CommittedCandidateReceipt>"},check_validation_outputs:{description:"Checks if the given validation outputs pass the acceptance criteria.",params:[{name:"paraId",type:"ParaId"},{name:"outputs",type:"CandidateCommitments"}],type:"bool"},dmq_contents:{description:"Get all the pending inbound messages in the downward message queue for a para.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundDownwardMessage>"},inbound_hrmp_channels_contents:{description:"Get the contents of all channels addressed to the given recipient.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundHrmpMessage>"},on_chain_votes:{description:"Scrape dispute relevant from on-chain, backing votes and resolved disputes.",params:[],type:"Option<ScrapedOnChainVotes>"},persisted_validation_data:{description:"Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<PersistedValidationData>"},session_index_for_child:{description:"Returns the session index expected at a child of the block.",params:[],type:"SessionIndex"},validation_code:{description:"Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCode>"},validation_code_by_hash:{description:"Get the validation code from its hash.",params:[{name:"hash",type:"ValidationCodeHash"}],type:"Option<ValidationCode>"},validator_groups:{description:"Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on",params:[],type:"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)"},validators:{description:"Get the current validators.",params:[],type:"Vec<ValidatorId>"}},Si={pvfs_require_precheck:{description:"Returns code hashes of PVFs that require pre-checking by validators in the active set.",params:[],type:"Vec<ValidationCodeHash>"},session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<SessionInfo>"},submit_pvf_check_statement:{description:"Submits a PVF pre-checking statement into the transaction pool.",params:[{name:"stmt",type:"PvfCheckStatement"},{name:"signature",type:"ValidatorSignature"}],type:"Null"},validation_code_hash:{description:"Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCodeHash>"}},ia={disputes:{description:"Returns all onchain disputes.",params:[],type:"Vec<(SessionIndex, CandidateHash, DisputeState)>"}},ts={session_executor_params:{description:"Returns execution parameters for the session.",params:[{name:"sessionIndex",type:"SessionIndex"}],type:"Option<ExecutorParams>"}},As={key_ownership_proof:{description:"Returns a merkle proof of a validator session key",params:[{name:"validatorId",type:"ValidatorId"}],type:"Option<OpaqueKeyOwnershipProof>"},submit_report_dispute_lost:{description:"Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session",params:[{name:"disputeProof",type:"DisputeProof"},{name:"keyOwnershipProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"},unapplied_slashes:{description:"Returns a list of validators that lost a past session dispute and need to be slashed",params:[],type:"Vec<(SessionIndex, CandidateHash, PendingSlashes)>"}},Xo={minimum_backing_votes:{description:"Get the minimum number of backing votes for a parachain candidate. This is a staging method! Do not use on production runtimes!",params:[],type:"u32"}},ru={async_backing_params:{description:"Returns candidate's acceptance limitations for asynchronous backing for a relay parent",params:[],type:"AsyncBackingParams"},para_backing_state:{description:"Returns the state of parachain backing for a given para",params:[{name:"paraId",type:"ParaId"}],type:"Option<BackingState>"}},vd={disabled_validators:{description:"Returns a list of all disabled validators at the given block",params:[],type:"ValidatorIndex"}},Op={node_features:{description:"Get node features. This is a staging method! Do not use on production runtimes!",params:[],type:"NodeFeatures"}},T9={approval_voting_params:{description:"Approval voting configuration parameters",params:[],type:"ApprovalVotingParams"}},aD={claim_queue:{description:"Claim queue",params:[],type:"BTreeMap<CoreIndex, Vec<u32>>"}},sD={ParachainHost:[{methods:{...pi,...Si,...ia,...ts,...As,...Xo,...ru,...vd,...Op,...T9,...aD},version:11},{methods:{...pi,...Si,...ia,...ts,...As,...Xo,...ru,...vd,...Op,...T9},version:10},{methods:{...pi,...Si,...ia,...ts,...As,...Xo,...ru,...vd,...Op},version:9},{methods:{...pi,...Si,...ia,...ts,...As,...Xo,...ru,...vd},version:8},{methods:{...pi,...Si,...ia,...ts,...As,...Xo,...ru},version:7},{methods:{...pi,...Si,...ia,...ts,...As,...Xo},version:6},{methods:{...pi,...Si,...ia,...ts,...As},version:5},{methods:{...pi,...Si,...ia,...ts},version:4},{methods:{...pi,...Si,...ia},version:3},{methods:{...pi,...Si},version:2},{methods:{session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<OldV1SessionInfo>"},...pi},version:1}]},N9={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},O9={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","ZeroFour","ZeroFive","ZeroSix","ZeroSeven","OneOne","OneTwo","OneThree","OneFour","OneFive","OneSix","OneSeven","TwoTwo","TwoThree","TwoFour","TwoFive","TwoSix","TwoSeven","ThreeThree","ThreeFour","ThreeFive","ThreeSix","ThreeSeven","FourFour","FourFive","FourSix","FourSeven","FiveFive","FiveSix","FiveSeven","SixSix","SixSeven","SevenSeven"]},oD={Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"},cD={...oD,AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange10:N9,SlotRange:O9,WinningData10:`[WinningDataEntry; ${N9._enum.length}]`,WinningData:`[WinningDataEntry; ${O9._enum.length}]`,WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData10:"Vec<WinnersDataTuple10>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple10:"(AccountId, ParaId, BalanceOf, SlotRange10)",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"},uD={ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},lD={ServiceQuality:{_enum:["Ordered","Fast"]}},dD={DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExecutorParam:{_enum:{Phantom:"Null",MaxMemoryPages:"u32",StackLogicalMax:"u32",StackNativeMax:"u32",PrecheckingMaxMemory:"u64",PvfPrepTimeout:"(PvfPrepTimeoutKind, u64)",PvfExecTimeout:"(PvfExecTimeoutKind, u64)"}},ExecutorParamsHash:"Hash",ExecutorParams:"Vec<ExecutorParam>",ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",PvfExecTimeoutKind:{_enum:["Backing","Approval"]},PvfPrepTimeoutKind:{_enum:["Precheck","Lenient"]},ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}},fD={rpc:{},runtime:sD,types:{...lD,...dD,...iD,...uD,...cD,AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},ApprovalVotingParams:{maxApprovalCoalesceCount:"u32"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AsyncBackingParams:{maxCandidateDepth:"u32",allowedAncestryLen:"u32"},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BackingState:{constraints:"Constraints",pendingAvailability:"Vec<CandidatePendingAvailability>"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateEvent:{_enum:{CandidateBacked:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateIncluded:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateTimedOut:"(CandidateReceipt, HeadData, CoreIndex)"}},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},Constraints:{minRelayParentNumber:"BlockNumber",maxPovSize:"u32",maxCodeSize:"u32",umpRemaining:"u32",umpRemainingBytes:"u32",maxUmpNumPerCandidate:"u32",dmpRemainingMessages:"Vec<BlockNumber>",hrmpInbound:"InboundHrmpLimitations",hrmpChannelsOut:"HashMap<ParaId, OutboundHrmpChannelLimitations>",maxHrmpNumPerCandidate:"u32",requiredParent:"HeadData",validationCodeHash:"ValidationCodeHash",upgradeRestriction:"Option<UpgradeRestriction>",futureValidationCode:"Option<(BlockNumber, ValidationCodeHash)>"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},CoreState:{_enum:{Occupied:"OccupiedCore",Scheduled:"ScheduledCore",Free:"Null"}},DisputeProof:{timeSlot:"DisputesTimeSlot",kind:"SlashingOffenceKind",validatorIndex:"ValidatorIndex",validatorId:"ValidatorId"},DisputesTimeSlot:{sessionIndex:"SessionIndex",candidateHash:"CandidateHash"},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GroupRotationInfo:{sessionStartBlock:"BlockNumber",groupRotationFrequency:"BlockNumber",now:"BlockNumber"},GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpLimitations:{validWatermarks:"Vec<BlockNumber>"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",NodeFeatures:"BitVec",OccupiedCore:{nextUpOnAvailable:"Option<ScheduledCore>",occupiedSince:"BlockNumber",timeOutAt:"BlockNumber",nextUpOnTimeOut:"Option<ScheduledCore>",availability:"BitVec",groupResponsible:"GroupIndex",candidateHash:"CandidateHash",candidateDescriptor:"CandidateDescriptor"},OccupiedCoreAssumption:{_enum:["Included,","TimedOut","Free"]},OutboundHrmpChannelLimitations:{bytesRemaining:"u32",messagesRemaining:"u32"},OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},PendingSlashes:{_alias:{slashKeys:"keys"},slashKeys:"BTreeMap<ValidatorIndex, ValidatorId>",kind:"SlashingOffenceKind"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},PvfCheckStatement:{accept:"bool",subject:"ValidationCodeHash",sessionIndex:"SessionIndex",validatorIndex:"ParaValidatorIndex"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},ScheduledCore:{paraId:"ParaId",collator:"Option<CollatorId>"},Scheduling:{_enum:["Always","Dynamic"]},ScrapedOnChainVotes:{session:"SessionIndex",backingValidatorsPerCandidate:"Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>",disputes:"MultiDisputeStatementSet"},SessionInfo:{activeValidatorIndices:"Vec<ParaValidatorIndex>",randomSeed:"[u8; 32]",disputePeriod:"SessionIndex",validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},OldV1SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ParaValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},SlashingOffenceKind:{_enum:["ForInvalid","AgainstValid"]},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"}},hD={rpc:{},types:{Approvals:"[bool; 4]"}},pD={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}},mD={DryRunApi:[{methods:{dry_run_call:{description:"Dry run call",params:[{name:"origin",type:"OriginCaller"},{name:"call",type:"RuntimeCall"}],type:"Result<CallDryRunEffects, XcmDryRunApiError>"},dry_run_xcm:{description:"Dry run XCM program",params:[{name:"originLocation",type:"VersionedMultiLocation"},{name:"xcm",type:"VersionedXcm"}],type:"Result<XcmDryRunEffects, XcmDryRunApiError>"}},version:1},{methods:{dry_run_call:{description:"Dry run call",params:[{name:"origin",type:"OriginCaller"},{name:"call",type:"RuntimeCall"},{name:"resultXcmsVersion",type:"u32"}],type:"Result<CallDryRunEffects, XcmDryRunApiError>"},dry_run_xcm:{description:"Dry run XCM program",params:[{name:"originLocation",type:"VersionedMultiLocation"},{name:"xcm",type:"VersionedXcm"}],type:"Result<XcmDryRunEffects, XcmDryRunApiError>"}},version:2}]},bD={rpc:{},runtime:mD,types:{PostDispatchInfo:{actualWeight:"Option<Weight>",paysFee:"Pays"},DispatchResultWithPostInfo:"Result<PostDispatchInfo, DispatchError>",CallDryRunEffects:{executionResult:"DispatchResultWithPostInfo",emittedEvents:"Vec<Event>",localXcm:"Option<VersionedXcm>",forwardedXcms:"Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>"},XcmDryRunEffects:{executionResult:"OutcomeV4",emittedEvents:"Vec<Event>",forwardedXcms:"Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>"},XcmDryRunApiError:{_enum:["Unimplemented","VersionedConversionFailed"]}}};var $;(function(t){t[t.BTreeMap=0]="BTreeMap",t[t.BTreeSet=1]="BTreeSet",t[t.Compact=2]="Compact",t[t.DoNotConstruct=3]="DoNotConstruct",t[t.Enum=4]="Enum",t[t.HashMap=5]="HashMap",t[t.Int=6]="Int",t[t.Linkage=7]="Linkage",t[t.Null=8]="Null",t[t.Option=9]="Option",t[t.Plain=10]="Plain",t[t.Range=11]="Range",t[t.RangeInclusive=12]="RangeInclusive",t[t.Result=13]="Result",t[t.Set=14]="Set",t[t.Si=15]="Si",t[t.Struct=16]="Struct",t[t.Tuple=17]="Tuple",t[t.UInt=18]="UInt",t[t.Vec=19]="Vec",t[t.VecFixed=20]="VecFixed",t[t.WrapperKeepOpaque=21]="WrapperKeepOpaque",t[t.WrapperOpaque=22]="WrapperOpaque"})($||($={}));function Dv(t){return Ze(t.eq)}function Fv(t,e){return Array.isArray(e)?t.length===e.length&&qt(t.find((n,r)=>Dv(n)?!n.eq(e[r]):n!==e[r])):!1}class oh extends Array{constructor(e,n){super(n),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),this.registry=e}static get[Symbol.species](){return Array}get encodedLength(){const e=this.length;let n=nn(e).length;for(let r=0;r<e;r++)n+=this[r].encodedLength;return n}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(e){return Fv(this,e)}inspect(){return{inner:this.inspectInner(),outer:[nn(this.length)]}}inspectInner(){const e=this.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=this[r].inspect();return n}toArray(){return Array.from(this)}toHex(){return mt(this.toU8a())}toHuman(e,n){const r=this.length,i=new Array(r);for(let a=0;a<r;a++)i[a]=this[a]&&this[a].toHuman(e,n);return i}toJSON(){const e=this.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=this[r]&&this[r].toJSON();return n}toPrimitive(e){const n=this.length,r=new Array(n);for(let i=0;i<n;i++)r[i]=this[i]&&this[i].toPrimitive(e);return r}toString(){const e=this.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=this[r].toString();return`[${n.join(", ")}]`}toU8a(e){const n=this.toU8aInner();return li(e?n:[nn(this.length),...n])}toU8aInner(e){const n=this.length,r=new Array(n);for(let i=0;i<n;i++)r[i]=this[i].toU8a(e);return r}}var Jn;class ch{constructor(e,n,r){Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,Jn),this.initialU8aLength=r,Q(this,Jn,n),this.registry=e}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get inner(){return T(this,Jn)}get isEmpty(){return T(this,Jn).isEmpty}eq(e){return T(this,Jn).eq(e)}inspect(){return T(this,Jn).inspect()}toHex(e){return T(this,Jn).toHex(e)}toHuman(e,n){return T(this,Jn).toHuman(e,n)}toJSON(){return T(this,Jn).toJSON()}toPrimitive(e){return T(this,Jn).toPrimitive(e)}toString(){return T(this,Jn).toString()}toU8a(e){return T(this,Jn).toU8a(e)}unwrap(){return T(this,Jn)}valueOf(){return T(this,Jn)}}Jn=new WeakMap;const yD=64,V9=52,gD=new Xe(1e4),xD=[["Perquintill",eA],["Perbill",f0],["Permill",$H],["Percent",_H]];function vD(t){return Ze(t.toBn)}function wD(t,e){return`${(t.mul(gD).div(e).toNumber()/100).toFixed(2)}%`}function Zv(t,e){if(Ht(t)){if(!Number.isInteger(t)||t>Number.MAX_SAFE_INTEGER||t<Number.MIN_SAFE_INTEGER)throw new Error("Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1");return t}else if(Ut(t)){if(It(t,-1,!0))return y2(t,{isLe:!1,isNegative:e}).toString();if(t.includes(".")||t.includes(",")||t.includes("e"))throw new Error("String should not contain decimal points or scientific notation");return t}else{if(Ti(t)||To(t))return t.toString();if(hr(t)){if(vD(t))return t.toBn().toString();const n=Object.keys(t);if(n.length!==1)throw new Error("Unable to construct number from multi-key object");return Zv(t[n[0]],e)}else if(!t)return 0}throw new Error(`Unable to create BN from unknown type ${typeof t}`)}var is;class qv extends Xe{constructor(e,n=0,r=yD,i=!1){super(Qe(n)?r<=48?WH(n.subarray(0,r/8),{isNegative:i}):Va(n.subarray(0,r/8),{isLe:!0,isNegative:i}).toString():Zv(n,i)),Y(this,"registry"),Y(this,"encodedLength"),Y(this,"isUnsigned"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,is),this.registry=e,Q(this,is,r),this.encodedLength=T(this,is)/8,this.initialU8aLength=T(this,is)/8,this.isUnsigned=!i;const a=this.isNeg(),s=r-(i&&!a?1:0);if(a&&!i)throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);if(super.bitLength()>s)throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${s}`)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}bitLength(){return T(this,is)}eq(e){return super.eq(It(e)?y2(e.toString(),{isLe:!1,isNegative:!this.isUnsigned}):Vn(e))}inspect(){return{outer:[this.toU8a()]}}isMax(){return this.toU8a().filter(e=>e===255).length===T(this,is)/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(e=!1){return iA(this,{bitLength:this.bitLength(),isLe:e,isNegative:!this.isUnsigned})}toHuman(e){const n=this.toRawType();if(n==="Balance")return this.isMax()?"everything":Vo(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,r]=xD.find(([i])=>i===n)||[];return r?wD(this,r):I1(this)}toJSON(e=!1){return e||T(this,is)>128||super.bitLength()>V9?this.toHex():this.toNumber()}toPrimitive(){return super.bitLength()>V9?this.toString():this.toNumber()}toRawType(){return this instanceof this.registry.createClassUnsafe("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(e){return super.toString(e)}toU8a(e){return Na(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}is=new WeakMap;function PD(t,e){return qt(t)||(Dv(t)?!t.eq(e):t!==e)}function MD(t){return!Array.isArray(t)||t.length!==2}function Vp(t,e){return t.size===e.length&&!e.some(n=>MD(n)||PD(t.get(n[0]),n[1]))}function X2(t,e){return Array.isArray(e)?Vp(t,e):e instanceof Map?Vp(t,[...e.entries()]):hr(e)?Vp(t,Object.entries(e)):!1}function Sp(t,e){return t.size===e.length&&!e.some(n=>!t.has(n))}function kD(t,e){return Array.isArray(e)?Sp(t,e):e instanceof Set?Sp(t,[...e.values()]):hr(e)?Sp(t,Object.values(e)):!1}const g0=1024;function Wv(t){var e;const n=((e=t.name)==null?void 0:e.toLowerCase())||"";return["enum","hashmap","linkage","null","option","range","rangeinclusive","result","struct","tuple","vec","vecfixed"].includes(n)}function j2(t,e,n,{message:r},i,a,s,o,u){let h="";try{h=`: ${new o(t).toRawType()}`}catch{}return`${e}: failed at ${mt(i.subarray(0,16))}…${u?` on ${u}`:""} (index ${a+1}/${s})${h}:: ${r}`}function C2(t,e,n,[r,i]){const a=e.length;let s=0,o=0;try{for(;o<a;){const u=new r[o](t,n.subarray(s));s+=u.initialU8aLength||u.encodedLength,e[o]=u,o++}}catch(u){throw new Error(j2(t,"decodeU8a",e,u,n.subarray(s),o,a,r[o],i[o]))}return[e,s]}function TD(t,e,n,[r,i]){const a=e.length;let s=0,o=0;if(a>g0&&Wv(r[o]))throw new Error(`decodeU8aStruct: Maximum depth exceeded, received ${a} elements, limit ${g0}`);try{for(;o<a;){const u=new r[o](t,n.subarray(s));s+=u.initialU8aLength||u.encodedLength,e[o]=[i[o],u],o++}}catch(u){throw new Error(j2(t,"decodeU8aStruct",e,u,n.subarray(s),o,a,r[o],i[o]))}return[e,s]}function uh(t,e,n,r,i){const a=e.length;if(a>g0&&Wv(i))throw new Error(`decodeU8aVec: Maximum depth exceeded, received ${a} elements, limit ${g0}`);let s=r,o=0;try{for(;o<a;){const u=new i(t,n.subarray(s));s+=u.initialU8aLength||u.encodedLength,e[o]=u,o++}}catch(u){throw new Error(j2(t,"decodeU8aVec",e,u,n.subarray(s),o,a,i))}return[s,s-r]}const em=["BTreeMap","BTreeSet","HashMap","Vec"],ND=em.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Opaque","Option","UInt","WrapperKeepOpaque","WrapperOpaque"]),x0=["<","(","[",'"',","," "],S9=[Ei("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),Ei("VecDeque<","Vec<",!1),VD(),E9("Bounded",!0),E9("Weak",!1),LD(),ID(),HD("Box<"),zD(),Ei("String","Text"),Ei("Vec<u8>","Bytes"),Ei("&\\[u8\\]","Bytes"),Ei("&'static\\[u8\\]","Bytes"),Ei("RawAddress","Address"),Ei("Lookup::Source","LookupSource"),Ei("Lookup::Target","LookupTarget"),Ei("exec::StorageKey","ContractStorageKey"),SD(),ED(),OD()];function OD(){return t=>t.trim()}function U2(t,e){let n=0;for(let r=e,i=t.length;r<i;r++)if(t[r]===">"){if(!n)return r;n--}else t[r]==="<"&&n++;throw new Error(`Unable to find closing matching <> on '${t}' (start ${e})`)}function Ei(t,e,n=!0){const r=new RegExp(`(^${t}|${x0.map(a=>`\\${a}${t}`).join("|")})`,"g"),i=a=>(r.lastIndex=0,n&&x0.includes(a[0])?`${a[0]}${e}`:e);return a=>a.replace(r,i)}function VD(){return t=>{if(t.includes(" as HasCompact")){for(let e=0,n=t.length;e<n;e++)if(t[e]==="<"){const r=U2(t,e+1)-14;t.substring(r,r+14)===" as HasCompact"&&(t=`Compact<${t.substring(e+1,r)}>`)}}return t}}function SD(){const t=/,\)/g,e=/\(([^,]+)\)/;return n=>(t.lastIndex=0,n.replace(t,")").replace(e,"$1"))}function D2(t,e,n){let r=-1;for(;;){if(r=t.indexOf(e,r+1),r===-1)return t;const i=r+e.length,a=U2(t,i);t=`${t.substring(0,r)}${n(t.substring(i,a))}${t.substring(a+1)}`}}function E9(t,e){return n=>{for(let r=0,i=em.length;r<i;r++){const a=em[r];n=D2(n,`${t}${a}<`,s=>{const o=s.split(",").map(u=>u.trim()).filter(u=>u);return e&&o.pop(),`${a}<${o.join(",")}>`})}return n}}function ED(){return t=>{let e=0;for(;e!==-1;)if(e=t.indexOf("::"),e===0)t=t.substring(2);else if(e!==-1){let n=e;for(;n!==-1&&!x0.includes(t[n]);)n--;t=`${t.substring(0,n+1)}${t.substring(e+2)}`}return t}}function zD(){return t=>{for(let e=0,n=t.length;e<n;e++)if(t[e]==="<"&&!ND.find(r=>{const i=e-r.length;return i>=0&&t.substring(i,e)===r&&(i===0||x0.includes(t[i-1]))})){const r=U2(t,e+1);t=`${t.substring(0,e)}${t.substring(r+1)}`}return t}}function ID(){const t=e=>`(${e},${e})`;return e=>D2(e,"PairOf<",t)}function LD(){const t=/\s/g,e=/(T|Self)::/g,n=/<(T|Self)asTrait>::/g,r=/<Tas[a-z]+::Trait>::/g,i=/<LookupasStaticLookup>/g,a=/::Type/g;return s=>(t.lastIndex=0,e.lastIndex=0,n.lastIndex=0,r.lastIndex=0,i.lastIndex=0,a.lastIndex=0,s.replace(t,"").replace(e,"").replace(n,"").replace(r,"").replace(i,"Lookup").replace(a,""))}function HD(t){const e=n=>n;return n=>D2(n,t,e)}const z9=new Map;function v0(t){const e=t.toString(),n=z9.get(e);if(n)return n;let r=e;for(let i=0,a=S9.length;i<a;i++)r=S9[i](r);return z9.set(e,r),r}function I9(t){return t instanceof Uint8Array||Array.isArray(t)}function L9(t){return _r(t)&&Ht(t.index)&&_r(t.value)}function H9(t){return _r(t)&&Ol(t.isSome)&&_r(t.value)}function A9(t){return Ht(t)||Ti(t)||To(t)}function AD(t,e){let n=0;const r=Math.min(t.length,e.length);for(let i=0;i<r;++i)if(n=ya(t[i],e[i]),n!==0)return n;return t.length-e.length}function Gv(t,e,n){if(_r(n)){const r=n.toHex();if(e.has(r))throw new Error(`Duplicate value in ${t}: ${bt(n)}`);e.add(r)}return!0}function ya(t,e){if(A9(t)&&A9(e))return Vn(t).cmp(Vn(e));if(t instanceof Map&&e instanceof Map)return ya(Array.from(t.values()),Array.from(e.values()));if(L9(t)&&L9(e))return ya(t.index,e.index)||ya(t.value,e.value);if(H9(t)&&H9(e))return ya(t.isNone?0:1,e.isNone?0:1)||ya(t.value,e.value);if(I9(t)&&I9(e))return AD(t,e);if(_r(t)&&_r(e))return ya(t.toU8a(!0),e.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${bt(t)} (typeof ${typeof t}) <-> ${bt(e)} (typeof ${typeof e})`)}function RD(t){const e=new Set;return new Set(Array.from(t).filter(n=>Gv("BTreeSet",e,n)).sort(ya))}function BD(t){const e=new Set;return new Map(Array.from(t.entries()).filter(([n])=>Gv("BTreeMap",e,n)).sort(([n],[r])=>ya(n,r)))}function ki(t,e){return typeof e=="function"?e:t.createClassUnsafe(e)}function XD(t,e){const n=e.length,r=new Array(n);for(let i=0;i<n;i++)r[i]=ki(t,e[i]);return r}function F2(t,e){const n=Object.entries(e),r=n.length,i=[new Array(r),new Array(r)];for(let a=0;a<r;a++)i[1][a]=n[a][0],i[0][a]=ki(t,n[a][1]);return i}function Yv(t,[e,n]){const r={};for(let i=0,a=n.length;i<a;i++)r[n[i]]=t.getClassName(e[i])||new e[i](t).toRawType();return r}function jD(t,e,n){if(Qe(n)){const[r,i]=(n[0]&3)<3?Oo(n):_0(n);return[new e(t,i),r]}else if(n instanceof Kv){const r=n.unwrap();return r instanceof e?[r,0]:[new e(t,r),0]}else if(n instanceof e)return[n,0];return[new e(t,n),0]}var Pu,Nn;const CD=class tm{constructor(e,n,r=0,{definition:i,setDefinition:a=So}={}){Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,Pu),G(this,Nn),this.registry=e,Q(this,Pu,i||a(ki(e,n)));const[s,o]=jD(e,T(this,Pu),r);this.initialU8aLength=o,Q(this,Nn,s)}static with(e){let n;const r=i=>n=i;return class extends tm{constructor(i,a){super(i,e,a,{definition:n,setDefinition:r})}}}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return T(this,Nn).isEmpty}bitLength(){return T(this,Nn).bitLength()}eq(e){return T(this,Nn).eq(e instanceof tm?T(e,Nn):e)}inspect(){return{outer:[this.toU8a()]}}toBigInt(){return T(this,Nn).toBigInt()}toBn(){return T(this,Nn).toBn()}toHex(e){return T(this,Nn).toHex(e)}toHuman(e,n){return T(this,Nn).toHuman(e,n)}toJSON(){return T(this,Nn).toJSON()}toNumber(){return T(this,Nn).toNumber()}toPrimitive(e){return T(this,Nn).toPrimitive(e)}toRawType(){return`Compact<${this.registry.getClassName(T(this,Pu))||T(this,Nn).toRawType()}>`}toString(){return T(this,Nn).toString()}toU8a(e){return nn(T(this,Nn).toBn())}unwrap(){return T(this,Nn)}};Pu=new WeakMap,Nn=new WeakMap;let Kv=CD;var Cn;const UD=class Jv{constructor(e,n="DoNotConstruct"){throw Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"isStorageFallback"),G(this,Cn),this.registry=e,Q(this,Cn,new Error(`DoNotConstruct: Cannot construct unknown type ${n}`)),T(this,Cn)}static with(e){return class extends Jv{constructor(n){super(n,e)}}}get encodedLength(){throw T(this,Cn)}get hash(){throw T(this,Cn)}get isEmpty(){throw T(this,Cn)}eq(){throw T(this,Cn)}inspect(){throw T(this,Cn)}toHex(){throw T(this,Cn)}toHuman(){throw T(this,Cn)}toJSON(){throw T(this,Cn)}toPrimitive(){throw T(this,Cn)}toRawType(){throw T(this,Cn)}toString(){throw T(this,Cn)}toU8a(){throw T(this,Cn)}};Cn=new WeakMap;let Qv=UD;class _i{constructor(e){Y(this,"encodedLength",0),Y(this,"isEmpty",!0),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength",0),Y(this,"isStorageFallback"),this.registry=e}get hash(){throw new Error(".hash is not implemented on Null")}eq(e){return e instanceof _i||lo(e)}inspect(){return{}}toHex(){return"0x"}toHuman(){return this.toJSON()}toJSON(){return null}toPrimitive(){return null}toRawType(){return"Null"}toString(){return""}toU8a(e){return new Uint8Array}}function DD(t){const e=Object.values(t);if(e.some(n=>Ht(n))){if(!e.every(n=>Ht(n)&&n>=0&&n<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function FD(t,e){const n={};let r,i;if(Array.isArray(e)){for(let a=0,s=e.length;a<s;a++)n[e[a]]={Type:_i,index:a};r=!0,i=!1}else if(DD(e)){const[a,s]=F2(t,e);for(let o=0,u=s.length;o<u;o++)n[s[o]]={Type:a[o],index:o};r=!Object.values(n).some(({Type:o})=>o!==_i),i=!1}else{const a=Object.entries(e);for(let s=0,o=a.length;s<o;s++){const[u,h]=a[s];n[u]={Type:_i,index:h}}r=!0,i=!0}return{def:n,isBasic:r,isIndexed:i}}function _v(t,e){const n=Object.values(t);for(let r=0,i=n.length;r<i;r++){const{Type:a,index:s}=n[r];if(s===e)return a}throw new Error(`Unable to create Enum via index ${e}, in ${Object.keys(t).join(", ")}`)}function $v(t,e,n,r){const i=_v(e,n);return{index:n,value:new i(t,r)}}function Mu(t,e,n=0,r){const i=_v(e,n);return{index:n,value:r instanceof i?r:new i(t,r)}}function R9(t,e,n,r){const i=Object.keys(e).map(o=>o.toLowerCase()),a=n.toLowerCase(),s=i.indexOf(a);if(s===-1)throw new Error(`Cannot map Enum JSON, unable to find '${n}' in ${i.join(", ")}`);try{return Mu(t,e,Object.values(e)[s].index,r)}catch(o){throw new Error(`Enum(${n}):: ${o.message}`)}}function ZD(t,e,n,r){if(Ht(r))return Mu(t,e,r,n);if(Qe(n)||It(n)){const i=qe(n);if(i.length)return $v(t,e,i[0],i.subarray(1))}else{if(n instanceof Ha)return Mu(t,e,n.index,n.value);if(Ht(n))return Mu(t,e,n);if(Ut(n))return R9(t,e,n.toString());if(hr(n)){const i=Object.keys(n)[0];return R9(t,e,i,n[i])}}return Mu(t,e,Object.values(e)[0].index)}var ku,Tu,Zs,Ai,nf,Un;const qD=class nm{constructor(e,n,r,i,{definition:a,setDefinition:s=So}={}){Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,ku),G(this,Tu),G(this,Zs),G(this,Ai),G(this,nf),G(this,Un);const{def:o,isBasic:u,isIndexed:h}=a||s(FD(e,n)),p=Qe(r)&&r.length&&!Ht(i)?$v(e,o,r[0],r.subarray(1)):ZD(e,o,r,i);this.registry=e,Q(this,ku,o),Q(this,Ai,u),Q(this,nf,h),Q(this,Zs,Object.values(o).map(({index:y})=>y)),Q(this,Tu,T(this,Zs).indexOf(p.index)),Q(this,Un,p.value),T(this,Un).initialU8aLength&&(this.initialU8aLength=1+T(this,Un).initialU8aLength)}static with(e){var n;let r;const i=a=>r=a;return n=class extends nm{constructor(a,s,o){super(a,e,s,o,{definition:r,setDefinition:i})}},(()=>{const a=Array.isArray(e)?e:Object.keys(e),s=a.length,o=new Array(s),u=new Array(s);for(let h=0;h<s;h++){const p=v2(a[h]);o[h]=`as${p}`,u[h]=`is${p}`}Ts(n.prototype,u,(h,p,y)=>y.type===a[p]),Ts(n.prototype,o,(h,p,y)=>{if(y.type!==a[p])throw new Error(`Cannot convert '${y.type}' via ${h}`);return y.value})})(),n}get encodedLength(){return 1+T(this,Un).encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return T(this,Zs)[T(this,Tu)]}get inner(){return T(this,Un)}get isBasic(){return T(this,Ai)}get isEmpty(){return T(this,Un).isEmpty}get isNone(){return T(this,Un)instanceof _i}get defIndexes(){return T(this,Zs)}get defKeys(){return Object.keys(T(this,ku))}get type(){return this.defKeys[T(this,Tu)]}get value(){return T(this,Un)}eq(e){return Qe(e)?!this.toU8a().some((n,r)=>n!==e[r]):Ht(e)?this.toNumber()===e:T(this,Ai)&&Ut(e)?this.type===e:It(e)?this.toHex()===e:e instanceof nm?this.index===e.index&&this.value.eq(e.value):hr(e)?this.value.eq(e[this.type]):this.value.eq(e)}inspect(){if(T(this,Ai))return{outer:[new Uint8Array([this.index])]};const{inner:e,outer:n=[]}=T(this,Un).inspect();return{inner:e,outer:[new Uint8Array([this.index]),...n]}}toHex(){return mt(this.toU8a())}toHuman(e,n){return T(this,Ai)||this.isNone?this.type:{[this.type]:T(this,Un).toHuman(e,n)}}toJSON(){return T(this,Ai)?this.type:{[Rt(this.type)]:T(this,Un).toJSON()}}toNumber(){return this.index}toPrimitive(e){return T(this,Ai)?this.type:{[Rt(this.type)]:T(this,Un).toPrimitive(e)}}_toRawStruct(){if(T(this,Ai))return T(this,nf)?this.defKeys.reduce((n,r,i)=>(n[r]=T(this,Zs)[i],n),{}):this.defKeys;const e=Object.entries(T(this,ku));return Yv(this.registry,e.reduce((n,[r,{Type:i}],a)=>(n[0][a]=i,n[1][a]=r,n),[new Array(e.length),new Array(e.length)]))}toRawType(){return bt({_enum:this._toRawStruct()})}toString(){return this.isNone?this.type:bt(this.toJSON())}toU8a(e){return e?T(this,Un).toU8a(e):li([new Uint8Array([this.index]),T(this,Un).toU8a(e)])}};ku=new WeakMap,Tu=new WeakMap,Zs=new WeakMap,Ai=new WeakMap,nf=new WeakMap,Un=new WeakMap;let Ha=qD;class Aa extends qv{constructor(e,n=0,r){super(e,n,r,!0)}static with(e,n){return class extends Aa{constructor(r,i){super(r,i,e)}toRawType(){return n||super.toRawType()}}}}class fc extends _i{toRawType(){return"None"}}function WD(t,e,n){return n instanceof e?n:n instanceof Ql?n.value instanceof e?n.value:n.isNone?new fc(t):new e(t,n.value):lo(n)||qt(n)||n==="0x"||n instanceof fc?new fc(t):Qe(n)?!n.length||n[0]===0?new fc(t):new e(t,n.subarray(1)):new e(t,n)}var Wo,ar;const GD=class rm{constructor(e,n,r,{definition:i,setDefinition:a=So}={}){Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,Wo),G(this,ar);const s=i||a(ki(e,n)),o=Qe(r)&&r.length&&!_r(r)?r[0]===0?new fc(e):new s(e,r.subarray(1)):WD(e,s,r);this.registry=e,Q(this,Wo,s),Q(this,ar,o),o!=null&&o.initialU8aLength&&(this.initialU8aLength=1+o.initialU8aLength)}static with(e){let n;const r=i=>(n=i,i);return class extends rm{constructor(i,a){super(i,e,a,{definition:n,setDefinition:r})}}}get encodedLength(){return 1+T(this,ar).encodedLength}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return T(this,ar)instanceof fc}get isSome(){return!this.isNone}get value(){return T(this,ar)}eq(e){return e instanceof rm?this.isSome===e.isSome&&this.value.eq(e.value):this.value.eq(e)}inspect(){if(this.isNone)return{outer:[new Uint8Array([0])]};const{inner:e,outer:n=[]}=T(this,ar).inspect();return{inner:e,outer:[new Uint8Array([1]),...n]}}toHex(){return this.isNone?"0x":mt(this.toU8a().subarray(1))}toHuman(e,n){return T(this,ar).toHuman(e,n)}toJSON(){return this.isNone?null:T(this,ar).toJSON()}toPrimitive(e){return this.isNone?null:T(this,ar).toPrimitive(e)}toRawType(e){const n=this.registry.getClassName(T(this,Wo))||new(T(this,Wo))(this.registry).toRawType();return e?n:`Option<${n}>`}toString(){return T(this,ar).toString()}toU8a(e){if(e)return T(this,ar).toU8a(!0);const n=new Uint8Array(this.encodedLength);return this.isSome&&(n.set([1]),n.set(T(this,ar).toU8a(),1)),n}unwrap(){if(this.isNone)throw new Error("Option: unwrapping a None value");return T(this,ar)}unwrapOr(e){return this.isSome?this.unwrap():e}unwrapOrDefault(){return this.isSome?this.unwrap():new(T(this,Wo))(this.registry)}};Wo=new WeakMap,ar=new WeakMap;let Ql=GD;class Z2 extends Ha{constructor(e,n,r,i){super(e,{Ok:n,Err:r},i)}static with(e){return class extends Z2{constructor(n,r){super(n,e.Ok,e.Err,r)}}}get asErr(){if(!this.isErr)throw new Error("Cannot extract Err value from Ok result, check isErr first");return this.value}get asOk(){if(!this.isOk)throw new Error("Cannot extract Ok value from Err result, check isOk first");return this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return!this.isOk}get isOk(){return this.index===0}toRawType(){const e=this._toRawStruct();return`Result<${e.Ok},${e.Err}>`}}function YD(t,e,n,r){if(Array.isArray(n)){const i=r[0];for(let a=0,s=i.length;a<s;a++)try{const o=n==null?void 0:n[a];e[a]=o instanceof i[a]?o:new i[a](t,o)}catch(o){throw new Error(`Tuple: failed on ${a}:: ${o.message}`)}return[e,0]}else{if(It(n))return C2(t,e,qe(n),r);if(!n||!e.length){const i=r[0];for(let a=0,s=i.length;a<s;a++)e[a]=new i[a](t);return[e,0]}}throw new Error(`Expected array input to Tuple decoding, found ${typeof n}: ${bt(n)}`)}var qs;const KD=class e6 extends oh{constructor(e,n,r,{definition:i,setDefinition:a=So}={}){const s=i||a(Array.isArray(n)?[XD(e,n),[]]:Ze(n)||Ut(n)?[[ki(e,n)],[]]:F2(e,n));super(e,s[0].length),G(this,qs),this.initialU8aLength=(Qe(r)?C2(e,this,r,s):YD(e,this,r,s))[1],Q(this,qs,s)}static with(e){let n;const r=i=>n=i;return class extends e6{constructor(i,a){super(i,e,a,{definition:n,setDefinition:r})}}}get encodedLength(){let e=0;for(let n=0,r=this.length;n<r;n++)e+=this[n].encodedLength;return e}get Types(){return T(this,qs)[1].length?T(this,qs)[1]:T(this,qs)[0].map(e=>new e(this.registry).toRawType())}inspect(){return{inner:this.inspectInner()}}toRawType(){return`(${T(this,qs)[0].map(e=>this.registry.getClassName(e)||new e(this.registry).toRawType()).join(",")})`}toString(){return bt(this.toJSON())}toU8a(e){return li(this.toU8aInner(e))}};qs=new WeakMap;let lh=KD;class Ra extends qv{static with(e,n){return class extends Ra{constructor(r,i){super(r,i,e)}toRawType(){return n||super.toRawType()}}}}const B9=512*1024,JD=Dr("Vec");function QD(t){if(Array.isArray(t))return[t,t.length,0];if(Qe(t)||It(t)){const e=qe(t),[n,r]=Oo(e);if(r>B9)throw new Error(`Vec length ${r.toString()} exceeds ${B9}`);return[e,r,n]}else if(!t)return[null,0,0];throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof t}: ${bt(t)}`)}function t6(t,e,n,r,i){if(Array.isArray(n)){const a=e.length;for(let s=0;s<a;s++){const o=n[s];try{e[s]=o instanceof i?o:new i(t,o)}catch(u){throw JD.error(`Unable to decode on index ${s}`,u.message),u}}return[0,0]}else if(!n)return[0,0];return uh(t,e,qe(n),r,i)}var Ri;const _D=class n6 extends oh{constructor(e,n,r=[],{definition:i,setDefinition:a=So}={}){const[s,o,u]=QD(r);super(e,o),G(this,Ri),Q(this,Ri,i||a(ki(e,n))),this.initialU8aLength=(Qe(s)?uh(e,this,s,u,T(this,Ri)):t6(e,this,s,u,T(this,Ri)))[0]}static with(e){let n;const r=i=>n=i;return class extends n6{constructor(i,a){super(i,e,a,{definition:n,setDefinition:r})}}}get Type(){return T(this,Ri).name}indexOf(e){const n=e instanceof T(this,Ri)?e:new(T(this,Ri))(this.registry,e);for(let r=0,i=this.length;r<i;r++)if(n.eq(this[r]))return r;return-1}toRawType(){return`Vec<${this.registry.getClassName(T(this,Ri))||new(T(this,Ri))(this.registry).toRawType()}>`}};Ri=new WeakMap;let $D=_D;var Go;const eF=class r6 extends oh{constructor(e,n,r,i=[],{definition:a,setDefinition:s=So}={}){super(e,r),G(this,Go),Q(this,Go,a||s(ki(e,n))),this.initialU8aLength=(Qe(i)?uh(e,this,i,0,T(this,Go)):t6(e,this,i,0,T(this,Go)))[1]}static with(e,n){let r;const i=a=>r=a;return class extends r6{constructor(a,s){super(a,e,n,s,{definition:r,setDefinition:i})}}}get Type(){return new(T(this,Go))(this.registry).toRawType()}get encodedLength(){let e=0;for(let n=0,r=this.length;n<r;n++)e+=this[n].encodedLength;return e}inspect(){return{inner:this.inspectInner()}}toU8a(){const e=this.toU8aInner();return e.length?li(e):new Uint8Array([])}toRawType(){return`[${this.Type};${this.length}]`}};Go=new WeakMap;let tF=eF;class si extends Uint8Array{constructor(e,n,r){super(qe(n)),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),this.registry=e,this.initialU8aLength=r}static get[Symbol.species](){return Uint8Array}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return Ry(this)}get isEmpty(){return!this.length||qt(this.find(e=>!!e))}get isUtf8(){return vA(this)}bitLength(){return this.length*8}eq(e){return e instanceof Uint8Array?this.length===e.length&&!this.some((n,r)=>n!==e[r]):this.eq(qe(e))}inspect(){return{outer:[this.toU8a()]}}toHex(){return mt(this)}toHuman(e,n){return this.toPrimitive(n)}toJSON(){return this.toHex()}toPrimitive(e){if(!e&&this.isAscii){const n=this.toUtf8();if(Ry(n))return n}return this.toJSON()}toRawType(){return"Raw"}toString(){return this.toHex()}toU8a(e){return Uint8Array.from(this)}toUtf8(){if(!this.isUtf8)throw new Error("The character sequence is not a valid Utf8 string");return Ta(this)}}function nF(t){if(!(t!=null&&t.length))return[0,new Uint8Array];const[e,n]=Oo(t),r=e+Math.ceil(n/8);if(r>t.length)throw new Error(`BitVec: required length less than remainder, expected at least ${r}, found ${t.length}`);return[n,t.subarray(e,r)]}function rF(t){if(Array.isArray(t)||Ut(t)){const e=qe(t);return[e.length*8,e]}return nF(t)}var Yo,Nu;class iF extends si{constructor(e,n,r=!1){const[i,a]=rF(n);super(e,a),G(this,Yo),G(this,Nu),Q(this,Yo,i),Q(this,Nu,r)}get encodedLength(){return this.length+nn(T(this,Yo)).length}inspect(){return{outer:[nn(T(this,Yo)),super.toU8a()]}}toBoolArray(){const e=[...this.toU8a(!0)].map(i=>[!!(i&128),!!(i&64),!!(i&32),!!(i&16),!!(i&8),!!(i&4),!!(i&2),!!(i&1)]),n=e.length,r=new Array(8*n);for(let i=0;i<n;i++){const a=i*8,s=e[i];for(let o=0;o<8;o++)r[a+o]=T(this,Nu)?s[o]:s[7-o]}return r}toHuman(){return`0b${[...this.toU8a(!0)].map(e=>`00000000${e.toString(2)}`.slice(-8)).map(e=>T(this,Nu)?e:e.split("").reverse().join("")).join("_")}`}toRawType(){return"BitVec"}toU8a(e){const n=super.toU8a(e);return e?n:li([nn(T(this,Yo)),n])}}Yo=new WeakMap,Nu=new WeakMap;function aF(t){return t}function sF(t,[e,n],r,i){let a;const s=Array.isArray(r),o=r instanceof Map,u=n.length;if(!s&&!o&&!hr(r))throw new Error(`Struct: Cannot decode value ${bt(r)} (typeof ${typeof r}), expected an input object, map or array`);if(s&&r.length!==u)throw new Error(`Struct: Unable to map ${bt(r)} array to object with known keys ${n.join(", ")}`);const h=new Array(u);for(let p=0;p<u;p++){const y=n[p],w=i.get(y)||y,P=e[p];let N;try{if(s)N=r[p];else if(o)N=w&&r.get(w);else if(N=w&&Object.prototype.hasOwnProperty.call(r,w)?r[w]:void 0,qt(N)){if(qt(a)){const O=Object.entries(r);a={};for(let z=0,j=O.length;z<j;z++)Object.prototype.hasOwnProperty.call(r,O[z][0])&&(a[Rt(O[z][0])]=O[z][1])}N=w&&Object.prototype.hasOwnProperty.call(a,w)?a[w]:void 0}h[p]=[y,N instanceof P?N:new P(t,N)]}catch(O){let z=P.name;try{z=new P(t).toRawType()}catch{}throw new Error(`Struct: failed on ${w}: ${z}:: ${O.message}`)}}return[h,0]}var rf,Ko;const oF=class im extends Map{constructor(e,n,r,i=new Map,{definition:a,setDefinition:s=aF}={}){const o=a||s(F2(e,n)),[u,h]=Qe(r)||It(r)?TD(e,new Array(o[0].length),qe(r),o):r instanceof im?[r,0]:sF(e,o,r||{},i);super(u),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,rf),G(this,Ko),this.initialU8aLength=h,this.registry=e,Q(this,rf,i),Q(this,Ko,o)}static with(e,n){var r;let i;const a=s=>i=s;return r=class extends im{constructor(s,o){super(s,e,o,n,{definition:i,setDefinition:a})}},(()=>{const s=Object.keys(e);Ts(r.prototype,s,(o,u,h)=>h.get(o))})(),r}get defKeys(){return T(this,Ko)[1]}get isEmpty(){return[...this.keys()].length===0}get encodedLength(){let e=0;for(const n of this.values())e+=n.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get Type(){const e={},[n,r]=T(this,Ko);for(let i=0,a=r.length;i<a;i++)e[r[i]]=new n[i](this.registry).toRawType();return e}eq(e){return X2(this,e)}get(e){return super.get(e)}getAtIndex(e){return this.toArray()[e]}getT(e){return super.get(e)}inspect(e){const n=[];for(const[r,i]of this.entries())n.push({...i.inspect(!e||Ol(e)?e:e[r]),name:Rt(r)});return{inner:n}}toArray(){return[...this.values()]}toHex(){return mt(this.toU8a())}toHuman(e,n){const r={};for(const[i,a]of this.entries())r[i]=a.toHuman(e,n);return r}toJSON(){const e={};for(const[n,r]of this.entries())e[T(this,rf).get(n)||n]=r.toJSON();return e}toPrimitive(e){const n={};for(const[r,i]of this.entries())n[r]=i.toPrimitive(e);return n}toRawType(){return bt(Yv(this.registry,T(this,Ko)))}toString(){return bt(this.toJSON())}toU8a(e){const n=[];for(const[r,i]of this.entries())n.push(i.toU8a(!e||Ol(e)?e:e[r]));return li(n)}};rf=new WeakMap,Ko=new WeakMap;let xn=oF;const cF=Dr("Map");function uF(t,e,n,r){const i=new Map,[a,s]=Oo(r),o=[];for(let p=0;p<s;p++)o.push(e,n);const[u,h]=C2(t,new Array(o.length),r.subarray(a),[o,[]]);for(let p=0,y=u.length;p<y;p+=2)i.set(u[p],u[p+1]);return[e,n,i,a+h]}function X9(t,e,n,r){const i=new Map;for(const[a,s]of r.entries()){const o=e.prototype instanceof oh||e.prototype instanceof xn||e.prototype instanceof Ha;try{i.set(a instanceof e?a:new e(t,o&&typeof a=="string"?JSON.parse(a):a),s instanceof n?s:new n(t,s))}catch(u){throw cF.error("Failed to decode key or value:",u.message),u}}return[e,n,i,0]}function lF(t,e,n,r){const i=ki(t,e),a=ki(t,n);if(r){if(Qe(r)||It(r))return uF(t,i,a,qe(r));if(r instanceof Map)return X9(t,i,a,r);if(hr(r))return X9(t,i,a,new Map(Object.entries(r)))}else return[i,a,new Map,0];throw new Error("Map: cannot decode type")}var Ou,Vu,af;class i6 extends Map{constructor(e,n,r,i,a="HashMap"){const[s,o,u,h]=lF(e,n,r,i);super(a==="BTreeMap"?BD(u):u),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,Ou),G(this,Vu),G(this,af),this.registry=e,this.initialU8aLength=h,Q(this,Ou,s),Q(this,Vu,o),Q(this,af,a)}get encodedLength(){let e=nn(this.size).length;for(const[n,r]of this.entries())e+=n.encodedLength+r.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}eq(e){return X2(this,e)}inspect(){const e=[];for(const[n,r]of this.entries())e.push(n.inspect()),e.push(r.inspect());return{inner:e,outer:[nn(this.size)]}}toHex(){return mt(this.toU8a())}toHuman(e,n){const r={};for(const[i,a]of this.entries())r[i instanceof si&&!n&&i.isAscii?i.toUtf8():i.toString()]=a.toHuman(e,n);return r}toJSON(){const e={};for(const[n,r]of this.entries())e[n.toString()]=r.toJSON();return e}toPrimitive(e){const n={};for(const[r,i]of this.entries())n[r instanceof si&&!e&&r.isAscii?r.toUtf8():r.toString()]=i.toPrimitive(e);return n}toRawType(){return`${T(this,af)}<${this.registry.getClassName(T(this,Ou))||new(T(this,Ou))(this.registry).toRawType()},${this.registry.getClassName(T(this,Vu))||new(T(this,Vu))(this.registry).toRawType()}>`}toString(){return bt(this.toJSON())}toU8a(e){const n=[];e||n.push(nn(this.size));for(const[r,i]of this.entries())n.push(r.toU8a(e),i.toU8a(e));return li(n)}}Ou=new WeakMap,Vu=new WeakMap,af=new WeakMap;class q2 extends i6{static with(e,n){return class extends q2{constructor(r,i){super(r,e,n,i,"BTreeMap")}}}}const dF=Dr("BTreeSet");function fF(t,e,n){const r=new Set,[i,a]=Oo(n),s=new Array(a),[o]=uh(t,s,n,i,e);for(let u=0;u<a;u++)r.add(s[u]);return[e,r,o]}function hF(t,e,n){const r=new Set;return n.forEach(i=>{try{r.add(i instanceof e?i:new e(t,i))}catch(a){throw dF.error("Failed to decode key or value:",a.message),a}}),[e,r,0]}function pF(t,e,n){const r=ki(t,e);if(n){if(Qe(n)||It(n))return fF(t,r,qe(n));if(Array.isArray(n)||n instanceof Set)return hF(t,r,n)}else return[r,new Set,0];throw new Error("BTreeSet: cannot decode type")}var Su;const mF=class a6 extends Set{constructor(e,n,r){const[i,a,s]=pF(e,n,r);super(RD(a)),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,Su),this.registry=e,this.initialU8aLength=s,Q(this,Su,i)}static with(e){return class extends a6{constructor(n,r){super(n,e,r)}}}get encodedLength(){let e=nn(this.size).length;for(const n of this.values())e+=n.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()].map(e=>e.toString())}eq(e){return kD(this,e)}inspect(){const e=[];for(const n of this.values())e.push(n.inspect());return{inner:e,outer:[nn(this.size)]}}toHex(){return mt(this.toU8a())}toHuman(e,n){const r=[];for(const i of this.values())r.push(i.toHuman(e,n));return r}toJSON(){const e=[];for(const n of this.values())e.push(n.toJSON());return e}toRawType(){return`BTreeSet<${this.registry.getClassName(T(this,Su))||new(T(this,Su))(this.registry).toRawType()}>`}toPrimitive(e){const n=[];for(const r of this.values())n.push(r.toPrimitive(e));return n}toString(){return bt(this.toJSON())}toU8a(e){const n=[];e||n.push(nn(this.size));for(const r of this.values())n.push(r.toU8a(e));return li(n)}};Su=new WeakMap;let bF=mF;const j9=10*1024*1024;function yF(t){if(!t.length)return[new Uint8Array,0];const[e,n]=Oo(t),r=e+n;if(n>j9)throw new Error(`Bytes length ${n.toString()} exceeds ${j9}`);if(r>t.length)throw new Error(`Bytes: required length less than remainder, expected at least ${r}, found ${t.length}`);return[t.subarray(e,r),r]}class dh extends si{constructor(e,n){const[r,i]=Qe(n)&&!(n instanceof si)?yF(n):Array.isArray(n)||Ut(n)?[qe(n),0]:[n,0];super(e,r,i)}get encodedLength(){return this.length+nn(this.length).length}inspect(e){const n=nn(this.length);return{outer:e?[super.toU8a()]:this.length?[n,super.toU8a()]:[n]}}toRawType(){return"Bytes"}toU8a(e){return e?super.toU8a(e):No(this)}}class W2 extends i6{static with(e,n){return class extends W2{constructor(r,i){super(r,e,n,i)}}}}class Bc extends Boolean{constructor(e,n=!1){super(Qe(n)?n[0]===1:n instanceof Boolean?n.valueOf():!!n),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength",1),Y(this,"isStorageFallback"),this.registry=e}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return!this.isTrue}get isTrue(){return this.valueOf()}eq(e){return this.valueOf()===(e instanceof Boolean?e.valueOf():e)}inspect(){return{outer:[this.toU8a()]}}toHex(){return mt(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toPrimitive(){return this.toJSON()}toRawType(){return"bool"}toString(){return this.toJSON().toString()}toU8a(e){return new Uint8Array([this.valueOf()?1:0])}}function gF(t,e){return e[0]===0?null:new Bc(t,e[0]===1)}class xF extends Ql{constructor(e,n){super(e,Bc,Qe(n)||It(n)?gF(e,qe(n)):n),this.initialU8aLength=1}get encodedLength(){return 1}get isFalse(){return this.isSome?!this.value.valueOf():!1}get isTrue(){return this.isSome?this.value.valueOf():!1}inspect(){return{outer:[this.toU8a()]}}toRawType(e){return e?"bool":"Option<bool>"}toU8a(e){return e?super.toU8a(!0):this.isSome?new Uint8Array([this.isTrue?1:2]):new Uint8Array([0])}}var sf;const vF=class s6 extends lh{constructor(e,n,r,{rangeName:i="Range"}={}){super(e,[n,n],r),G(this,sf),Q(this,sf,i)}static with(e){return class extends s6{constructor(n,r){super(n,e,r)}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return`${T(this,sf)}<${this.start.toRawType()}>`}};sf=new WeakMap;let o6=vF;class G2 extends o6{constructor(e,n,r){super(e,n,r,{rangeName:"RangeInclusive"})}static with(e){return class extends G2{constructor(n,r){super(n,e,r)}}}}const C9=128*1024;function wF(t){if(Qe(t)){if(!t.length)return["",0];if(t instanceof si)return[Ta(t),0];const[e,n]=Oo(t),r=e+n;if(n>C9)throw new Error(`Text: length ${n.toString()} exceeds ${C9}`);if(r>t.length)throw new Error(`Text: required length less than remainder, expected at least ${r}, found ${t.length}`);return[Ta(t.subarray(e,r)),r]}else if(It(t))return[Ta($i(t)),0];return[t?t.toString():"",0]}var of;class c6 extends String{constructor(e,n){const[r,i]=wF(n);super(r),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,of,null),this.registry=e,this.initialU8aLength=i}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(e){return Ut(e)?this.toString()===e.toString():!1}inspect(){const e=Mi(super.toString());return{outer:e.length?[nn(e.length),e]:[nn(e.length)]}}setOverride(e){Q(this,of,e)}toHex(){return mt(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toRawType(){return"Text"}toString(){return T(this,of)||super.toString()}toU8a(e){const n=Mi(super.toString());return e?n:No(n)}}of=new WeakMap;class PF extends c6{constructor(e,n=""){super(e,n),this.setOverride(v0(this.toString()))}toRawType(){return"Type"}}function MF(t,e){const n=qe(t),r=e/8;if(!n.length)return[new Uint8Array(r),0];if(Qe(t)?n.length<r:n.length!==r)throw new Error(`Expected input with ${r} bytes (${e} bits), found ${n.length} bytes`);return[n.subarray(0,r),r]}class Is extends si{constructor(e,n=new Uint8Array,r=256){const[i,a]=MF(n,r);super(e,i,a)}static with(e,n){return class extends Is{constructor(r,i){super(r,i,e)}toRawType(){return n||super.toRawType()}}}toRawType(){return`[u8;${this.length}]`}}function kF(t,e,n){const r=ki(t,e);if(Qe(n)||It(n))try{const[,a]=It(n)?[0,qe(n)]:n instanceof si?[0,n.subarray()]:h0(n);return[r,new r(t,a),n]}catch{return[r,null,n]}const i=new r(t,n);return[r,i,No(i.toU8a())]}var Eu,Dn,zu;const TF=class u6 extends dh{constructor(e,n,r,{opaqueName:i="WrapperKeepOpaque"}={}){const[a,s,o]=kF(e,n,r);super(e,o),G(this,Eu),G(this,Dn),G(this,zu),Q(this,Eu,a),Q(this,Dn,s),Q(this,zu,i)}static with(e){return class extends u6{constructor(n,r){super(n,e,r)}}}get isDecoded(){return!!T(this,Dn)}inspect(){return T(this,Dn)?{inner:[T(this,Dn).inspect()],outer:[nn(this.length)]}:{outer:[nn(this.length),this.toU8a(!0)]}}toHuman(e,n){return T(this,Dn)?T(this,Dn).toHuman(e,n):super.toHuman(e,n)}toPrimitive(e){return T(this,Dn)?T(this,Dn).toPrimitive(e):super.toPrimitive(e)}toRawType(){return`${T(this,zu)}<${this.registry.getClassName(T(this,Eu))||(T(this,Dn)?T(this,Dn).toRawType():new(T(this,Eu))(this.registry).toRawType())}>`}toString(){return T(this,Dn)?T(this,Dn).toString():super.toString()}unwrap(){if(!T(this,Dn))throw new Error(`${T(this,zu)}: unwrapping an undecodable value`);return T(this,Dn)}};Eu=new WeakMap,Dn=new WeakMap,zu=new WeakMap;let l6=TF;class Y2 extends l6{constructor(e,n,r){super(e,n,r,{opaqueName:"WrapperOpaque"})}static with(e){return class extends Y2{constructor(n,r){super(n,e,r)}}}get inner(){return this.unwrap()}}var Iu;const NF=class d6 extends Number{constructor(e,n,{bitLength:r=32}={}){super(Qe(n)||It(n)?n.length===0?0:qH(qe(n),{bitLength:r}):n||0),Y(this,"encodedLength"),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,Iu),Q(this,Iu,r),this.encodedLength=r/8,this.initialU8aLength=this.encodedLength,this.registry=e}static with(e){return class extends d6{constructor(n,r){super(n,r,{bitLength:e})}}}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.valueOf()===0}eq(e){return this.valueOf()===Number(e)}inspect(){return{outer:[this.toU8a()]}}toHex(){return mt(this.toU8a())}toHuman(){return this.toString()}toJSON(){return this.toHex()}toNumber(){return this.valueOf()}toPrimitive(){return this.toNumber()}toRawType(){return`f${T(this,Iu)}`}toU8a(e){return lA(this,{bitLength:T(this,Iu)})}};Iu=new WeakMap;let f6=NF;function OF(t){return Object.entries(t||{})}class h6 extends Map{constructor(e,n){const r=OF(n);super(r),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),this.registry=e,Ts(this,r.map(([i])=>i),i=>this.get(i))}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return[...this.keys()].length===0}eq(e){return X2(this,e)}getT(e){return this.get(e)}inspect(){throw new Error("Unimplemented")}toHex(){throw new Error("Unimplemented")}toHuman(){return[...this.entries()].reduce((e,[n,r])=>(e[n]=Ze(r==null?void 0:r.toHuman)?r.toHuman():r,e),{})}toJSON(){return[...this.entries()].reduce((e,[n,r])=>(e[n]=r,e),{})}toPrimitive(e){return[...this.entries()].reduce((n,[r,i])=>(n[r]=Ze(i.toPrimitive)?i.toPrimitive(e):i,n),{})}toRawType(){return"Json"}toString(){return bt(this.toJSON())}toU8a(e){throw new Error("Unimplemented")}}function p6(t,e){const n=new Xe(0);for(let r=0,i=e.length;r<i;r++)n.ior(Vn(t[e[r]]||0));return n}function VF(t,e){const n=e.length,r=new Array(n);for(let i=0;i<n;i++){const a=e[i];if(qt(t[a]))throw new Error(`Set: Invalid key '${a}' passed to Set, allowed ${Object.keys(t).join(", ")}`);r[i]=a}return r}function U9(t,e){const n=Vn(e),r=Object.keys(t),i=[];for(let s=0,o=r.length;s<o;s++){const u=r[s];n.and(Vn(t[u])).eq(Vn(t[u]))&&i.push(u)}const a=p6(t,i);if(!n.eq(a))throw new Error(`Set: Mismatch decoding '${n.toString()}', computed as '${a.toString()}' with ${i.join(", ")}`);return i}function m6(t,e=0,n){if(n%8!==0)throw new Error(`Expected valid bitLength, power of 8, found ${n}`);const r=n/8;if(Qe(e))return e.length===0?[]:U9(t,Va(e.subarray(0,r),{isLe:!0}));if(Ut(e))return m6(t,qe(e),r);if(e instanceof Set||Array.isArray(e)){const i=Array.isArray(e)?e:[...e.values()];return VF(t,i)}return U9(t,e)}var Ws,Lu;const SF=class b6 extends Set{constructor(e,n,r,i=8){super(m6(n,r,i)),Y(this,"registry"),Y(this,"createdAtHash"),Y(this,"initialU8aLength"),Y(this,"isStorageFallback"),G(this,Ws),G(this,Lu),Y(this,"add",a=>{if(T(this,Ws)&&qt(T(this,Ws)[a]))throw new Error(`Set: Invalid key '${a}' on add`);return super.add(a),this}),this.registry=e,Q(this,Ws,n),Q(this,Lu,i/8)}static with(e,n){var r;return r=class extends b6{constructor(i,a){super(i,e,a,n)}},(()=>{const i=Object.keys(e),a=i.length,s=new Array(a);for(let o=0;o<a;o++)s[o]=`is${v2(i[o])}`;Ts(r.prototype,s,(o,u,h)=>h.strings.includes(i[u]))})(),r}get encodedLength(){return T(this,Lu)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()]}get valueEncoded(){return p6(T(this,Ws),this.strings)}eq(e){return Array.isArray(e)?Fv(this.strings.sort(),e.sort()):e instanceof Set?this.eq([...e.values()]):Ht(e)||Ti(e)?this.valueEncoded.eq(Vn(e)):!1}inspect(){return{outer:[this.toU8a()]}}toHex(){return mt(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toPrimitive(){return this.toJSON()}toRawType(){return bt({_set:T(this,Ws)})}toString(){return`[${this.strings.join(", ")}]`}toU8a(e){return Na(this.valueEncoded,{bitLength:T(this,Lu)*8,isLe:!0})}};Ws=new WeakMap,Lu=new WeakMap;let EF=SF;class D9 extends f6.with(32){constructor(){super(...arguments),Y(this,"__FloatType","f32")}}class F9 extends f6.with(64){constructor(){super(...arguments),Y(this,"__FloatType","f64")}}class Z9 extends Aa.with(8){constructor(){super(...arguments),Y(this,"__IntType","i8")}}class q9 extends Aa.with(16){constructor(){super(...arguments),Y(this,"__IntType","i16")}}class am extends Aa.with(32){constructor(){super(...arguments),Y(this,"__IntType","i32")}}class W9 extends Aa.with(64){constructor(){super(...arguments),Y(this,"__IntType","i64")}}class G9 extends Aa.with(128){constructor(){super(...arguments),Y(this,"__IntType","i128")}}class Y9 extends Aa.with(256){constructor(){super(...arguments),Y(this,"__IntType","i256")}}class K9 extends am{constructor(e,n){throw super(e,n),new Error("The `isize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally i64) and WASM (always i32) code. Use one of the `i32` or `i64` types explicitly.")}}class J9 extends Ra.with(8){constructor(){super(...arguments),Y(this,"__UIntType","u8")}}class Q9 extends Ra.with(16){constructor(){super(...arguments),Y(this,"__UIntType","u16")}}class Il extends Ra.with(32){constructor(){super(...arguments),Y(this,"__UIntType","u32")}}class Qr extends Ra.with(64){constructor(){super(...arguments),Y(this,"__UIntType","u64")}}class _9 extends Ra.with(128){constructor(){super(...arguments),Y(this,"__UIntType","u128")}}class $9 extends Ra.with(256){constructor(){super(...arguments),Y(this,"__UIntType","u256")}}class e5 extends Il{constructor(e,n){throw super(e,n),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}function zF(t){const e=[];let n=0,r=0,i=0,a=0,s=0;for(let o=0,u=t.length;o<u;o++)switch(t[o]){case",":{n||r||i||a||(e.push(t.substring(s,o).trim()),s=o+1);break}case"<":n++;break;case">":n--;break;case"[":r++;break;case"]":r--;break;case"{":i++;break;case"}":i--;break;case"(":a++;break;case")":a--;break}if(n||r||i||a)throw new Error(`Invalid definition (missing terminators) found in ${t}`);return e.push(t.substring(s,t.length).trim()),e}const IF=["_alias","_fallback"];function y6(t){return Ut(t)?t.toString():bt(t)}function LF(t){const e=Object.values(t);if(e.some(n=>Ht(n))){if(!e.every(n=>Ht(n)&&n>=0&&n<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function HF(t,e,n,r){return t.info=$.Enum,t.fallbackType=r,Array.isArray(e)?t.sub=e.map((i,a)=>({index:a,info:$.Plain,name:i,type:"Null"})):LF(e)?t.sub=Object.entries(e).map(([i,a],s)=>he({},Ba(y6(a||"Null"),{name:i},n),{index:s})):t.sub=Object.entries(e).map(([i,a])=>({index:a,info:$.Plain,name:i,type:"Null"})),t}function AF(t,e,n){return t.info=$.Set,t.fallbackType=n,t.length=e._bitLength,t.sub=Object.entries(e).filter(([r])=>!r.startsWith("_")).map(([r,i])=>({index:i,info:$.Plain,name:r,type:"Null"})),t}function RF(t,e,n,r){const i=JSON.parse(e),a=Object.keys(i);return i._enum?HF(t,i._enum,r,i._fallback):i._set?AF(t,i._set,i._fallback):(t.alias=i._alias?new Map(Object.entries(i._alias)):void 0,t.fallbackType=i._fallback,t.sub=a.filter(s=>!IF.includes(s)).map(s=>Ba(y6(i[s]),{name:s},r)),t)}function BF(t,e,n,r){const i=e.length-1;let a=-1,s=0;for(let y=1;y<i&&a===-1;y++)switch(e[y]){case";":{s===0&&(a=y);break}case"[":case"(":case"<":s++;break;case"]":case")":case">":s--;break}if(a===-1)throw new Error(`${e}: Unable to extract location of ';'`);const o=e.substring(1,a),[u,h]=e.substring(a+1,i).split(";"),p=parseInt(u.trim(),10);if(p>2048)throw new Error(`${e}: Only support for [Type; <length>], where length <= 2048`);return t.displayName=h,t.length=p,t.sub=Ba(o,{},r),t}function wd(t,e,n,r){return t.sub=n.length===0?[]:zF(n).map(i=>Ba(i,{},r)),t}function g6(t,e,n,r){const[i,a]=e.substring(r.length+1,e.length-1).split(","),s=parseInt(i.trim(),10);if(s>8192||s%8)throw new Error(`${e}: Only support for ${r}<bitLength>, where length <= 8192 and a power of 8, found ${s}`);return t.displayName=a,t.length=s,t}function XF(t,e,n){return g6(t,e,n,"Int")}function jF(t,e,n){return g6(t,e,n,"UInt")}function CF(t,e,n){return t.displayName=e.substring(15,e.length-1),t}function t5(t,[e,n]){return t.startsWith(e)&&t.slice(-1*n.length)===n}const UF=[["[","]",$.VecFixed,BF],["{","}",$.Struct,RF],["(",")",$.Tuple,wd],["BTreeMap<",">",$.BTreeMap,wd],["HashMap<",">",$.HashMap,wd],["Int<",">",$.Int,XF],["Result<",">",$.Result,wd],["UInt<",">",$.UInt,jF],["DoNotConstruct<",">",$.DoNotConstruct,CF]],DF=[["BTreeSet<",">",$.BTreeSet],["Compact<",">",$.Compact],["Linkage<",">",$.Linkage],["Opaque<",">",$.WrapperOpaque],["Option<",">",$.Option],["Range<",">",$.Range],["RangeInclusive<",">",$.RangeInclusive],["Vec<",">",$.Vec],["WrapperKeepOpaque<",">",$.WrapperKeepOpaque],["WrapperOpaque<",">",$.WrapperOpaque]];function n5(t,[e,n]){return t.substring(e.length,t.length-n.length)}function Ba(t,{displayName:e,name:n}={},r=0){const i=v0(t),a={displayName:e,info:$.Plain,name:n,type:i};if(++r>64)throw new Error("getTypeDef: Maximum nested limit reached");const s=UF.find(u=>t5(i,u));if(s)return a.info=s[2],s[3](a,i,n5(i,s),r);const o=DF.find(u=>t5(i,u));return o&&(a.info=o[2],a.sub=Ba(n5(i,o),{},r)),a}function Ll({lookupName:t,type:e}){return t||e}function w0(t){if(!Array.isArray(t.sub))throw new Error(`Expected subtype as TypeDef[] in ${bt(t)}`);return t.sub}function FF(t){if(!t.sub||Array.isArray(t.sub))throw new Error(`Expected subtype as TypeDef in ${bt(t)}`);return t.sub}function x6(t){return Ll(FF(t))}function r5(t){const e=w0(t),n={};for(let r=0,i=e.length;r<i;r++){const a=e[r];if(!a.name)throw new Error(`No name found in definition ${bt(a)}`);n[a.name]=Ll(a)}return n}function sm(t){return w0(t).map(Ll)}function i5(t,{displayName:e,length:n}){if(!Ht(n))throw new Error(`Expected bitLength information for ${e||t.constructor.name}<bitLength>`);return t.with(n,e)}function a5(t,e){const[n,r]=sm(e);return t.with(n,r)}function Rs(t,e){return t.with(x6(e))}const ZF={[$.BTreeMap]:(t,e)=>a5(q2,e),[$.BTreeSet]:(t,e)=>Rs(bF,e),[$.Compact]:(t,e)=>Rs(Kv,e),[$.DoNotConstruct]:(t,e)=>Qv.with(e.displayName||e.type),[$.Enum]:(t,e)=>{const n=w0(e);return Ha.with(n.every(({type:r})=>r==="Null")?n.reduce((r,{index:i,name:a},s)=>{if(!a)throw new Error("No name found in sub definition");return r[a]=i||s,r},{}):r5(e))},[$.HashMap]:(t,e)=>a5(W2,e),[$.Int]:(t,e)=>i5(Aa,e),[$.Linkage]:(t,e)=>{const n=`Option<${x6(e)}>`,r=xn.with({previous:n,next:n});return r.prototype.toRawType=function(){return`Linkage<${this.next.toRawType(!0)}>`},r},[$.Null]:(t,e)=>_i,[$.Option]:(t,e)=>{if(!e.sub||Array.isArray(e.sub))throw new Error("Expected type information for Option");return Rs(Ql,e)},[$.Plain]:(t,e)=>t.getOrUnknown(e.type),[$.Range]:(t,e)=>Rs(o6,e),[$.RangeInclusive]:(t,e)=>Rs(G2,e),[$.Result]:(t,e)=>{const[n,r]=sm(e);return Z2.with({Err:r,Ok:n})},[$.Set]:(t,e)=>EF.with(w0(e).reduce((n,{index:r,name:i})=>{if(!i||!Ht(r))throw new Error("No name found in sub definition");return n[i]=r,n},{}),e.length),[$.Si]:(t,e)=>v6(t,t.lookup.getTypeDef(e.type)),[$.Struct]:(t,e)=>xn.with(r5(e),e.alias),[$.Tuple]:(t,e)=>lh.with(sm(e)),[$.UInt]:(t,e)=>i5(Ra,e),[$.Vec]:(t,{sub:e})=>{if(!e||Array.isArray(e))throw new Error("Expected type information for vector");return e.type==="u8"?dh:$D.with(Ll(e))},[$.VecFixed]:(t,{displayName:e,length:n,sub:r})=>{if(!Ht(n)||!r||Array.isArray(r))throw new Error("Expected length & type information for fixed vector");return r.type==="u8"?Is.with(n*8,e):tF.with(Ll(r),n)},[$.WrapperKeepOpaque]:(t,e)=>Rs(l6,e),[$.WrapperOpaque]:(t,e)=>Rs(Y2,e)};function qF(t,e){try{const n=ZF[e.info](t,e);if(!n)throw new Error("No class created");return!n.__fallbackType&&e.fallbackType&&(n.__fallbackType=e.fallbackType),n}catch(n){throw new Error(`Unable to construct class from ${bt(e)}: ${n.message}`)}}function v6(t,e){return t.getUnsafe(e.type,!1,e)}function pl(t,e){return t.getUnsafe(e)||v6(t,t.isLookupType(e)?t.lookup.getTypeDef(e):Ba(e))}function s5(t,e){const n=t.toU8a(),r=t.toRawType();if(!(l7(n,e)||["Bytes","Text","Type"].includes(r)&&e.length===t.length||t.isEmpty&&e.every(i=>!i)))throw new Error(`${r}:: Decoded input doesn't match input, received ${mt(e,512)} (${e.length} bytes), created ${mt(n,512)} (${n.length} bytes)`)}function WF(t,[e]){Qe(e)?s5(t,e):It(e)&&s5(t,qe(e))}function o5(t,e,n=[],{blockHash:r,isFallback:i,isOptional:a,isPedantic:s}={}){const o=new(a?Ql.with(e):e)(t,...n);return s&&WF(o,n),r&&(o.createdAtHash=om(t,"BlockHash",[r])),i&&(o.isStorageFallback=!0),o}function om(t,e,n=[],r={}){let i=null,a=null;try{return i=pl(t,e),o5(t,i,n,r)}catch(s){a=new Error(`createType(${e}):: ${s.message}`)}if(i!=null&&i.__fallbackType)try{return i=pl(t,i.__fallbackType),o5(t,i,n,r)}catch{}throw a}const GF=t=>t.toString(),YF=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function KF(t,e,n=GF){return`${t}${e?`<${(Array.isArray(e)?e:[e]).map(n).join(", ")}>`:""}`}function qr(t,e,n){const{info:r,sub:i}=e;switch(r){case $.BTreeMap:case $.BTreeSet:case $.Compact:case $.HashMap:case $.Linkage:case $.Option:case $.Range:case $.RangeInclusive:case $.Result:case $.Vec:case $.WrapperKeepOpaque:case $.WrapperOpaque:return KF(n,i,a=>K2(t,a))}throw new Error(`Unable to encode ${bt(e)} with params`)}function c5(t,e,n,r){const i=e.map(({name:s})=>s);if(!i.every(s=>!!s))throw new Error(`Subtypes does not have consistent names, ${i.join(", ")}`);const a=he({},r);for(let s=0,o=e.length;s<o;s++){const u=e[s];if(!u.name)throw new Error(`No name found in ${bt(u)}`);a[u.name]=K2(t,u)}return bt(n?{_enum:a}:a)}const JF={[$.BTreeMap]:(t,e)=>qr(t,e,"BTreeMap"),[$.BTreeSet]:(t,e)=>qr(t,e,"BTreeSet"),[$.Compact]:(t,e)=>qr(t,e,"Compact"),[$.DoNotConstruct]:(t,{displayName:e,lookupIndex:n,lookupName:r})=>`DoNotConstruct<${r||e||(qt(n)?"Unknown":t.createLookupType(n))}>`,[$.Enum]:(t,{sub:e})=>{if(!Array.isArray(e))throw new Error("Unable to encode Enum type");return e.every(({type:n})=>n==="Null")?bt({_enum:e.map(({name:n},r)=>`${n||`Empty${r}`}`)}):c5(t,e,!0)},[$.HashMap]:(t,e)=>qr(t,e,"HashMap"),[$.Int]:(t,{length:e=32})=>`Int<${e}>`,[$.Linkage]:(t,e)=>qr(t,e,"Linkage"),[$.Null]:(t,e)=>"Null",[$.Option]:(t,e)=>qr(t,e,"Option"),[$.Plain]:(t,{displayName:e,type:n})=>e||n,[$.Range]:(t,e)=>qr(t,e,"Range"),[$.RangeInclusive]:(t,e)=>qr(t,e,"RangeInclusive"),[$.Result]:(t,e)=>qr(t,e,"Result"),[$.Set]:(t,{length:e=8,sub:n})=>{if(!Array.isArray(n))throw new Error("Unable to encode Set type");return bt({_set:n.reduce((r,{index:i,name:a},s)=>he(r,{[`${a||`Unknown${i||s}`}`]:i||s}),{_bitLength:e||8})})},[$.Si]:(t,{lookupName:e,type:n})=>e||n,[$.Struct]:(t,{alias:e,sub:n})=>{if(!Array.isArray(n))throw new Error("Unable to encode Struct type");return c5(t,n,!1,e?{_alias:[...e.entries()].reduce((r,[i,a])=>he(r,{[i]:a}),{})}:{})},[$.Tuple]:(t,{sub:e})=>{if(!Array.isArray(e))throw new Error("Unable to encode Tuple type");return`(${e.map(n=>K2(t,n)).join(",")})`},[$.UInt]:(t,{length:e=32})=>`UInt<${e}>`,[$.Vec]:(t,e)=>qr(t,e,"Vec"),[$.VecFixed]:(t,{length:e,sub:n})=>{if(!Ht(e)||!n||Array.isArray(n))throw new Error("Unable to encode VecFixed type");return`[${n.type};${e}]`},[$.WrapperKeepOpaque]:(t,e)=>qr(t,e,"WrapperKeepOpaque"),[$.WrapperOpaque]:(t,e)=>qr(t,e,"WrapperOpaque")};function w6(t,e,n=!0){return n&&e.lookupName?e.lookupName:JF[e.info](t,e)}function K2(t,e){return e.displayName&&!YF.some(n=>e.displayName===n)?e.displayName:w6(t,e)}function Or(t,e){return he({},e,{type:w6(t,e,!1)})}const QF=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError"];function Ur(t){return QF.reduce((e,n)=>he(e,{[n]:`${n}${t}`}),{})}const _F={FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAssetV0",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},$F={AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},eZ={AssetIdV2:{_enum:{Concrete:"MultiLocationV2",Abstract:"Bytes"}},AssetInstanceV2:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]",Blob:"Bytes"}},BodyIdV2:{_enum:{Unit:"Null",Named:"Bytes",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null",Defense:"Null",Administration:"Null",Treasury:"Null"}},BodyPartV2:{_enum:{Voice:"Null",Members:{count:"Compact<u32>"},Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},NetworkIdV2:{_enum:{Any:"Null",Named:"Bytes",Polkadot:"Null",Kusama:"Null"}},JunctionV2:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkIdV2",id:"[u8; 32]"},AccountIndex64:{network:"NetworkIdV2",index:"Compact<u64>"},AccountKey20:{network:"NetworkIdV2",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Bytes",OnlyChild:"Null",Plurality:{id:"BodyIdV2",part:"BodyPartV2"}}},JunctionsV2:{_enum:{Here:"Null",X1:"JunctionV2",X2:"(JunctionV2, JunctionV2)",X3:"(JunctionV2, JunctionV2, JunctionV2)",X4:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X5:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X6:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X7:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X8:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)"}},FungibilityV2:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV2"}},InteriorMultiLocationV2:"JunctionsV2",MultiAssetV2:{id:"AssetIdV2",fun:"FungibilityV2"},MultiAssetsV2:"Vec<MultiAssetV2>",MultiAssetFilterV2:{_enum:{Definite:"MultiAssetsV2",Wild:"WildMultiAssetV2"}},MultiLocationV2:{parents:"u8",interior:"JunctionsV2"},OriginKindV2:{_enum:{Native:"Null",SovereignAccount:"Null",Superuser:"Null",Xcm:"Null"}},WildFungibilityV2:{_enum:{Fungible:"Null",NonFungible:"Null"}},ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"Option<(u32, XcmErrorV2)>",Version:"u32"}},ResponseV2Error:"(u32, XcmErrorV2)",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"Compact<u64>",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocationV2",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"Compact<u32>",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"Compact<u32>",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponseWeight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2<RuntimeCall>",SetAppendix:"XcmV2<RuntimeCall>",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"Compact<u64>"},UnsubscribeVersion:"Null"}},WildMultiAssetV2:{_enum:{All:"Null",AllOf:{id:"AssetIdV2",fun:"WildFungibilityV2"}}},XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Overflow:"Null",Unimplemented:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",BadOrigin:"Null",InvalidLocation:"Null",AssetNotFound:"Null",FailedToTransactAsset:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",ExceedsMaxMessageSize:"Null",DestinationUnsupported:"Null",Transport:"Null",Unroutable:"Null",UnknownClaim:"Null",FailedToDecode:"Null",MaxWeightInvalid:"Null",NotHoldingFees:"Null",TooExpensive:"Null",Trap:"u64",UnhandledXcmVersion:"Null",WeightLimitReached:"Weight",Barrier:"Null",WeightNotComputable:"Null"}}},tZ={AssetIdV3:{_enum:{Concrete:"MultiLocationV3",Abstract:"Bytes"}},BodyIdV3:{_enum:{Unit:"Null",Moniker:"[u8;4]",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null",Defense:"Null",Administration:"Null",Treasury:"Null"}},BodyPartV3:{_enum:{Voice:"Null",Members:{count:"Compact<u32>"},Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},AssetInstanceV3:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},FungibilityV3:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV3"}},InteriorMultiLocationV3:"JunctionsV3",JunctionV3:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV3>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV3>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV3>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV3"}},JunctionsV3:{_enum:{Here:"Null",X1:"JunctionV3",X2:"(JunctionV3, JunctionV3)",X3:"(JunctionV3, JunctionV3, JunctionV3)",X4:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X5:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X6:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X7:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X8:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)"}},MaybeErrorCodeV3:{_enum:{Success:"Null",Error:"Bytes",TruncatedError:"Bytes"}},MaxPalletsInfo:"u32",MultiAssetV3:{id:"AssetIdV3",fun:"FungibilityV3"},MultiAssetsV3:"Vec<MultiAssetV3>",MultiAssetFilterV3:{_enum:{Definite:"MultiAssetsV3",Wild:"WildMultiAssetV3"}},MultiLocationV3:{parents:"u8",interior:"JunctionsV3"},MaxPalletNameLen:"u32",NetworkIdV3:{_enum:{ByGenesis:"[u8;32]",ByFork:{blockNumber:"u64",blockHash:"[u8;32]"},Polkadot:"Null",Kusama:"Null",Westend:"Null",Rococo:"Null",Wococo:"Null",Ethereum:{chainId:"Compact<u64>"},BitcoinCore:"Null",BitcoinCash:"Null",PolkadotBulletin:"Null"}},OriginKindV3:"OriginKindV2",PalletInfoV3:{index:"Compact<u32>",name:"Bytes",moduleName:"Bytes",major:"Compact<u32>",minor:"Compact<u32>",patch:"Compact<u32>"},WildFungibilityV3:"WildFungibilityV2",QueryResponseInfoV3:{destination:"MultiLocationV3",queryId:"Compact<u64>",maxWeight:"WeightV2"},ResponseV3:{_enum:{Null:"Null",Assets:"MultiAssetsV3",ExecutionResult:"Option<(u32,XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV3>",DispatchResult:"MaybeErrorCodeV3"}},XcmErrorV3:{_enum:{Overflow:"Null",Unimplemented:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",LocationFull:"Null",LocationNotInvertible:"Null",BadOrigin:"Null",InvalidLocation:"Null",AssetNotFound:"Null",FailedToTransactAsset:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",ExceedsMaxMessageSize:"Null",DestinationUnsupported:"Null",Transport:"Null",Unroutable:"Null",UnknownClaim:"Null",FailedToDecode:"Null",MaxWeightInvalid:"Null",NotHoldingFees:"Null",TooExpensive:"Null",Trap:"u64",ExpectationFalse:"Null",PalletNotFound:"Null",NameMismatch:"Null",VersionIncompatible:"Null",HoldingWouldOverflow:"Null",ExportError:"Null",ReanchorFailed:"Null",NoDeal:"Null",FeesNotMet:"Null",LockError:"Null",NoPermission:"Null",Unanchored:"Null",NotDepositable:"Null",UnhandledXcmVersion:"Null",WeightLimitReached:"WeightV2",Barrier:"Null",ExceedsStackLimit:"Null"}},ResponseV3Error:"(u32, XcmErrorV3)",ResponseV3Result:"Option<(u32, ResponseV3Error)>",WeightLimitV3:{_enum:{Unlimited:"Null",Limited:"WeightV2"}},InstructionV3:{_enum:{WithdrawAsset:"MultiAssetsV3",ReserveAssetDeposited:"MultiAssetsV3",ReceiveTeleportedAsset:"MultiAssetsV3",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV3",maxWeight:"WeightV2",querier:"Option<MultiLocationV3>"},TransferAsset:{assets:"MultiAssetsV3",beneficiary:"MultiLocationV3"},TransferReserveAsset:{assets:"MultiAssetsV3",dest:"MultiLocationV3",xcm:"XcmV3"},Transact:{originKind:"XcmOriginKind",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"JunctionsV3",ReportError:"QueryResponseInfoV3",DepositAsset:{assets:"MultiAssetFilterV3",beneficiary:"MultiLocationV3"},DepositReserveAsset:{assets:"MultiAssetFilterV3",dest:"MultiLocationV3",xcm:"XcmV3"},ExchangeAsset:{give:"MultiAssetFilterV3",want:"MultiAssetsV3",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV3",reserve:"MultiLocationV3",xcm:"XcmV3"},InitiateTeleport:{assets:"MultiAssetFilterV3",dest:"MultiLocationV3",xcm:"XcmV3"},ReportHolding:{responseInfo:"QueryResponseInfoV3",assets:"MultiAssetFilterV3"},BuyExecution:{fees:"MultiAssetV3",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV3<RuntimeCall>",SetAppendix:"XcmV3<RuntimeCall>",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV3",ticket:"MultiLocationV3"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV3",ExpectAsset:"MultiAssetsV3",ExpectOrigin:"Option<MultiLocationV3>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV3"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV3",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV3",ExportMessage:{network:"NetworkIdV3",destination:"JunctionsV3",xcm:"XcmV3"},LockAsset:{asset:"MultiAssetV3",unlocker:"MultiLocationV3"},UnlockAsset:{asset:"MultiAssetV3",target:"MultiLocationV3"},NoteUnlockable:{asset:"MultiAssetV3",owner:"MultiLocationV3"},RequestUnlock:{asset:"MultiAssetV3",locker:"MultiLocationV3"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8; 32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV3",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV3>"}}},WildMultiAssetV3:{_enum:{All:"Null",AllOf:{id:"AssetIdV3",fun:"WildFungibilityV2"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV3",fun:"WildFungibilityV2",count:"Compact<u32>"}}},VersionV3:"u32",XcmV3:"Vec<InstructionV3>"},nZ={AssetIdV4:"MultiLocationV4",AssetInstanceV4:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},FungibilityV4:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV4"}},UncheckedFungibilityV4:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV4"}},JunctionV4:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV4>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV4>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV4>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV4"}},JunctionsV4:{_enum:{Here:"Null",X1:"[JunctionV4;1]",X2:"[JunctionV4;2]",X3:"[JunctionV4;3]",X4:"[JunctionV4;4]",X5:"[JunctionV4;5]",X6:"[JunctionV4;6]",X7:"[JunctionV4;7]",X8:"[JunctionV4;8]"}},MaxPalletsInfo:"u32",NetworkIdV4:"NetworkIdV3",MultiAssetV4:{id:"AssetIdV4",fun:"FungibilityV4"},MultiAssetsV4:"Vec<MultiAssetV4>",MultiAssetFilterV4:{_enum:{Definite:"MultiAssetsV4",Wild:"WildMultiAssetV4"}},MultiLocationV4:{parents:"u8",interior:"JunctionsV4"},OriginKindV4:"XcmOriginKind",PalletInfoV4:"PalletInfoV3",WildFungibilityV4:"WildFungibilityV2",QueryResponseInfoV4:{destination:"MultiLocationV4",queryId:"Compact<u64>",maxWeight:"WeightV2"},ResponseV4:{_enum:{Null:"Null",Assets:"MultiAssetsV4",ExecutionResult:"Option<(u32, XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV4>",DispatchResult:"MaybeErrorCodeV3"}},InstructionV4:{_enum:{WithdrawAsset:"MultiAssetsV4",ReserveAssetDeposited:"MultiAssetsV4",ReceiveTeleportedAsset:"MultiAssetsV4",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV4",maxWeight:"WeightV2",querier:"Option<MultiLocationV4>"},TransferAsset:{assets:"MultiAssetsV4",beneficiary:"MultiLocationV4"},TransferReserveAsset:{assets:"MultiAssetsV4",dest:"MultiLocationV4",xcm:"XcmV4"},Transact:{originKind:"OriginKindV4",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"JunctionsV4",ReportError:"QueryResponseInfoV4",DepositAsset:{assets:"MultiAssetFilterV4",beneficiary:"MultiLocationV4"},DepositReserveAsset:{assets:"MultiAssetFilterV4",dest:"MultiLocationV4",xcm:"XcmV4"},ExchangeAsset:{give:"MultiAssetFilterV4",want:"MultiAssetsV4",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV4",reserve:"MultiLocationV4",xcm:"XcmV4"},InitiateTeleport:{assets:"MultiAssetFilterV4",dest:"MultiLocationV4",xcm:"XcmV4"},ReportHolding:{responseInfo:"QueryResponseInfoV4",assets:"MultiAssetFilterV4"},BuyExecution:{fees:"MultiAssetV4",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV4",SetAppendix:"XcmV4",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV4",ticket:"MultiLocationV4"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV4",ExpectAsset:"MultiAssetsV4",ExpectOrigin:"Option<MultiLocationV4>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV4"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV4",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV4",ExportMessage:{network:"NetworkIdV4",destination:"JunctionsV4",xcm:"XcmV4"},LockAsset:{asset:"MultiAssetV4",unlocker:"MultiLocationV4"},UnlockAsset:{asset:"MultiAssetV4",target:"MultiLocationV4"},NoteUnlockable:{asset:"MultiAssetV4",owner:"MultiLocationV4"},RequestUnlock:{asset:"MultiAssetV4",locker:"MultiLocationV4"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8;32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV4",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV4>"}}},OutcomeV4:{_enum:{Complete:{used:"WeightV2"},Incomplete:{used:"WeightV2",error:"XcmErrorV3"},Error:{error:"XcmErrorV3"}}},WildMultiAssetV4:{_enum:{All:"Null",AllOf:{id:"AssetIdV4",fun:"WildFungibilityV4"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV4",fun:"WildFungibilityV4",count:"Compact<u32>"}}},VersionV4:"u32",XcmV4:"Vec<InstructionV4>",XcmErrorV4:"XcmErrorV3"},rZ={AssetIdV5:"MultiLocationV5",AssetInstanceV5:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},MultiAssetV5:{id:"AssetIdV5",fun:"FungibilityV5"},MultiAssetsV5:"Vec<MultiAssetV5>",WildMultiAssetV5:{_enum:{All:"Null",AllOf:{id:"AssetIdV5",fun:"WildFungibilityV5"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV5",fun:"WildFungibilityV5",count:"Compact<u32>"}}},MultiAssetFilterV5:{_enum:{Definite:"MultiAssetsV5",Wild:"WildMultiAssetV5"}},MultiAssetTransferFilterV5:{_enum:{Teleport:"MultiAssetFilterV5",ReserveDeposit:"MultiAssetFilterV5",ReserveWithdraw:"MultiAssetFilterV5"}},FungibilityV5:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV5"}},UncheckedFungibilityV5:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV5"}},WildFungibilityV5:"WildFungibilityV2",JunctionV5:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV5>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV5>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV5>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV5"}},NetworkIdV5:{_enum:{ByGenesis:"[u8;32]",ByFork:{blockNumber:"u64",blockHash:"[u8;32]"},Polkadot:"Null",Kusama:"Null",Ethereum:{chainId:"Compact<u64>"},BitcoinCore:"Null",BitcoinCash:"Null",PolkadotBulletin:"Null"}},JunctionsV5:{_enum:{Here:"Null",X1:"[JunctionV5;1]",X2:"[JunctionV5;2]",X3:"[JunctionV5;3]",X4:"[JunctionV5;4]",X5:"[JunctionV5;5]",X6:"[JunctionV5;6]",X7:"[JunctionV5;7]",X8:"[JunctionV5;8]"}},MultiLocationV5:{parents:"u8",interior:"JunctionsV5"},InteriorMultiLocationV5:"JunctionsV5",XcmV5:"Vec<InstructionV5>",PalletInfoV5:"PalletInfoV3",ResponseV5:{_enum:{Null:"Null",Assets:"MultiAssetsV5",ExecutionResult:"Option<(u32, XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV5>",DispatchResult:"MaybeErrorCodeV3"}},QueryResponseInfoV5:{destination:"MultiLocationV5",queryId:"Compact<u64>",maxWeight:"WeightV2"},InstructionV5:{_enum:{WithdrawAsset:"MultiAssetsV5",ReserveAssetDeposited:"MultiAssetsV5",ReceiveTeleportedAsset:"MultiAssetsV5",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV5",maxWeight:"WeightV2",querier:"Option<MultiLocationV5>"},TransferAsset:{assets:"MultiAssetsV5",beneficiary:"MultiLocationV5"},TransferReserveAsset:{assets:"MultiAssetsV5",dest:"MultiLocationV5",xcm:"XcmV5"},Transact:{originKind:"OriginKindV4",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocationV5",ReportError:"QueryResponseInfoV4",DepositAsset:{assets:"MultiAssetFilterV5",beneficiary:"MultiLocationV5"},DepositReserveAsset:{assets:"MultiAssetFilterV5",dest:"MultiLocationV5",xcm:"XcmV5"},ExchangeAsset:{give:"MultiAssetFilterV5",want:"MultiAssetsV5",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV5",reserve:"MultiLocationV5",xcm:"XcmV5"},InitiateTeleport:{assets:"MultiAssetFilterV5",dest:"MultiLocationV5",xcm:"XcmV5"},ReportHolding:{responseInfo:"QueryResponseInfoV4",assets:"MultiAssetFilterV5"},BuyExecution:{fees:"MultiAssetV4",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV5",SetAppendix:"XcmV5",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV5",ticket:"MultiLocationV5"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV5",ExpectAsset:"MultiAssetsV5",ExpectOrigin:"Option<MultiLocationV5>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV4"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV4",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV5",ExportMessage:{network:"NetworkIdV5",destination:"InteriorMultiLocationV5",xcm:"XcmV5"},LockAsset:{asset:"MultiAssetV5",unlocker:"MultiLocationV5"},UnlockAsset:{asset:"MultiAssetV5",target:"MultiLocationV5"},NoteUnlockable:{asset:"MultiAssetV5",owner:"MultiLocationV5"},RequestUnlock:{asset:"MultiAssetV5",locker:"MultiLocationV5"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8;32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV5",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV5>"},PayFees:{asset:"MultiAssetV5"},InitiateTransfer:{destination:"MultiLocationV5",remoteFees:"Option<MultiAssetTransferFilterV5>",preserveOrigin:"bool",assets:"Vec<MultiAssetTransferFilterV5>",remoteXcm:"XcmV5"},ExecuteWithOrigin:{descendant_origin:"Option<InteriorMultiLocationV5>",xcm:"XcmV5"},SetHints:{hints:"Vec<HintV5>"}}},HintV5:{_enum:{AssetClaimer:{location:"MultiLocationV5"}}},XcmErrorV5:"XcmErrorV3"},iZ="V5",aZ={XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},sZ={BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}},oZ={rpc:{},types:{...sZ,...aZ,..._F,...$F,...eZ,...tZ,...nZ,...rZ,...Ur(iZ),DoubleEncodedCall:{encoded:"Bytes"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2",V3:"MultiAssetV3",V4:"MultiAssetV4",V5:"MultiAssetV5"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2",V3:"MultiAssetsV3",V4:"MultiAssetsV4",V5:"MultiAssetsV5"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2",V3:"MultiLocationV3",V4:"MultiLocationV4",v5:"MultiLocationV5"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2",V3:"ResponseV3",V4:"ResponseV4",V5:"ResponseV5"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2",V3:"XcmV3",V4:"XcmV4",V5:"XcmV5"}},XcmVersion:"u32"}},cZ={XcmPaymentApi:[{methods:{query_acceptable_payment_assets:{description:"The API to query acceptable payment assets",params:[{name:"version",type:"u32"}],type:"Result<Vec<XcmVersionedAssetId>, XcmPaymentApiError>"},query_weight_to_asset_fee:{description:"",params:[{name:"weight",type:"WeightV2"},{name:"asset",type:"XcmVersionedAssetId"}],type:"Result<u128, XcmPaymentApiError>"},query_xcm_weight:{description:"",params:[{name:"message",type:"XcmVersionedXcm"}],type:"Result<WeightV2, XcmPaymentApiError>"}},version:1}]},uZ={rpc:{},runtime:cZ,types:{XcmPaymentApiError:{_enum:["Unimplemented","VersionedConversionFailed","WeightNotComputable","UnhandledXcmVersion","AssetNotFound"]}}},lZ={LocationToAccountApi:[{methods:{convert_location:{description:"Converts `Location` to `AccountId`",params:[{name:"location",type:"XcmVersionedLocation"}],type:"Result<AccountId, Error>"}},version:1}]},dZ={rpc:{},runtime:lZ,types:{Error:{_enum:["Unsupported","VersionedConversionFailed"]}}},fZ={ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},hZ={ContractConstructorSpecV0:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV1:{name:"Vec<Text>",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV2:{label:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV3:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV4:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>",default:"bool",returnType:"Option<ContractTypeSpec>"},ContractContractSpecV0:{constructors:"Vec<ContractConstructorSpecV0>",messages:"Vec<ContractMessageSpecV0>",events:"Vec<ContractEventSpecV0>",docs:"Vec<Text>"},ContractContractSpecV1:{constructors:"Vec<ContractConstructorSpecV1>",messages:"Vec<ContractMessageSpecV1>",events:"Vec<ContractEventSpecV1>",docs:"Vec<Text>"},ContractContractSpecV2:{constructors:"Vec<ContractConstructorSpecV2>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV3:{constructors:"Vec<ContractConstructorSpecV3>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV4:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractContractSpecV5:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV3>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractContractSpecV6:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV3>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractDisplayName:"SiPath",ContractEventParamSpecV0:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventParamSpecV2:{label:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpecV0:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV1:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV2:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>"},ContractEventSpecV3:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>",module_path:"Text",signature_topic:"Option<[u8; 32]>"},ContractMessageParamSpecV0:{name:"Text",type:"ContractTypeSpec"},ContractMessageParamSpecV2:{label:"Text",type:"ContractTypeSpec"},ContractMessageSpecV0:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV1:{name:"Vec<Text>",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV2:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV3:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>",default:"bool"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},pZ={ContractConstructorSpecLatest:"ContractConstructorSpecV4",ContractEventSpecLatest:"ContractEventSpecV3",ContractEventParamSpecLatest:"ContractEventParamSpecV2",ContractMessageParamSpecLatest:"ContractMessageParamSpecV2",ContractMessageSpecLatest:"ContractMessageSpecV3",ContractMetadataLatest:"ContractMetadataV6"},mZ={rpc:{},types:{...fZ,...hZ,...pZ,ContractProjectInfo:{source:"ContractProjectSource",contract:"ContractProjectContract"},ContractReviveProjectInfo:{source:"ContractReviveProjectSource",contract:"ContractProjectContract"},ContractMetadataV0:{metadataVersion:"Text",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractMetadataV1:{types:"Vec<PortableType>",spec:"ContractContractSpecV1"},ContractMetadataV2:{types:"Vec<PortableType>",spec:"ContractContractSpecV2"},ContractMetadataV3:{types:"Vec<PortableType>",spec:"ContractContractSpecV3"},ContractMetadataV4:{types:"Vec<PortableType>",spec:"ContractContractSpecV4",version:"Text"},ContractMetadataV5:{types:"Vec<PortableType>",spec:"ContractContractSpecV5",version:"u64"},ContractMetadataV6:{types:"Vec<PortableType>",spec:"ContractContractSpecV6",version:"u64"},ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1",V2:"ContractMetadataV2",V3:"ContractMetadataV3",V4:"ContractMetadataV4",V5:"ContractMetadataV5",V6:"ContractMetadataV6"}},ContractProjectV0:{metadataVersion:"Text",source:"ContractProjectSource",contract:"ContractProjectContract",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"},ContractReviveProjectSource:{_alias:{wasmHash:"hash",wasm:"contract_binary"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"},ContractEnvironmentV4:{_alias:{hashType:"hash"},accountId:"Option<ContractTypeSpec>",balance:"Option<ContractTypeSpec>",blockNumber:"Option<ContractTypeSpec>",hashType:"Option<ContractTypeSpec>",timestamp:"Option<ContractTypeSpec>",maxEventTopics:"Option<u32>"}}},bZ={listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"Text"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"Text"}},yZ={clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"Text"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},gZ={...bZ,...yZ,accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},feeHistory:{description:"Returns fee history for given block count & reward percentiles",params:[{name:"blockCount",type:"U256"},{name:"newestBlock",type:"BlockNumber"},{name:"rewardPercentiles",type:"Option<Vec<f64>>"}],type:"EthFeeHistory"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},maxPriorityFeePerGas:{description:"Returns max priority fee per gas",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}},u5={account_basic:{description:"Returns pallet_evm::Accounts by address.",params:[{name:"address",type:"H160"}],type:"EvmAccount"},account_code_at:{description:"For a given account address, returns pallet_evm::AccountCodes.",params:[{name:"address",type:"H160"}],type:"Bytes"},author:{description:"Returns the converted FindAuthor::find_author authority id.",params:[],type:"H160"},call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfo, DispatchError>"},chain_id:{description:"Returns runtime defined pallet_evm::ChainId.",params:[],type:"u64"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfo, DispatchError>"},current_all:{description:"Return all the current data for a block in a single runtime call.",params:[],type:"(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)"},current_block:{description:"Return the current block.",params:[],type:"BlockV2"},current_receipts:{description:"Return the current receipt.",params:[],type:"Option<Vec<EthReceiptV3>>"},current_transaction_statuses:{description:"Return the current transaction status.",params:[],type:"Option<Vec<EthTransactionStatus>>"},elasticity:{description:"Return the elasticity multiplier.",params:[],type:"Option<Permill>"},extrinsic_filter:{description:"Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.",params:[{name:"xts",type:"Vec<Extrinsic>"}],type:"Vec<TransactionV2>"},gas_price:{description:"Returns FixedGasPrice::min_gas_price",params:[],type:"u256"},storage_at:{description:"For a given account address and index, returns pallet_evm::AccountStorages.",params:[{name:"address",type:"H160"},{name:"index",type:"u256"}],type:"H256"}},xZ={call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfoV2, DispatchError>"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfoV2, DispatchError>"}},vZ={ConvertTransactionRuntimeApi:[{methods:{convert_transaction:{description:"Converts an Ethereum-style transaction to Extrinsic",params:[{name:"transaction",type:"TransactionV2"}],type:"Extrinsic"}},version:2}],DebugRuntimeApi:[{methods:{trace_block:{description:"Trace all block extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"knownTransactions",type:"Vec<H256>"}],type:"Result<(), DispatchError>"},trace_transaction:{description:"Trace transaction extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"transaction",type:"EthTransaction"}],type:"Result<(), DispatchError>"}},version:4}],EthereumRuntimeRPCApi:[{methods:{...u5},version:4},{methods:{...u5,...xZ},version:5}]},wZ={BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},PZ={BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},MZ={BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},kZ={...wZ,...PZ,...MZ,EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFeeHistory:{oldestBlock:"U256",baseFeePerGas:"Vec<U256>",gasUsedRatio:"Vec<f64>",reward:"Option<Vec<Vec<U256>>>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthReceiptV0:"EthReceipt",EthReceiptV3:"EthReceipt",EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:{hash:"H256",nonce:"U256",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionIndex:"Option<U256>",from:"H160",to:"Option<H160>",value:"U256",gasPrice:"Option<U256>",maxFeePerGas:"Option<U256>",maxPriorityFeePerGas:"Option<U256>",gas:"U256",input:"Bytes",creates:"Option<H160>",raw:"Bytes",publicKey:"Option<H512>",chainId:"Option<U64>",standardV:"U256",v:"U256",r:"U256",s:"U256",accessList:"Option<Vec<EthAccessListItem>>",transactionType:"Option<U256>"},EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}},TZ={rpc:gZ,runtime:vZ,types:kZ},NZ={AuthorFilterAPI:[{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:2},{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"}],type:"bool"}},version:1}],NimbusApi:[{methods:{can_author:{description:"The runtime api used to predict whether a Nimbus author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:1}]},OZ={rpc:{},runtime:NZ,types:{}},VZ={OracleApi:[{methods:{get_all_values:{description:"Retrieves all values",params:[{name:"providerId",type:"Raw"}],type:"Raw"},get_value:{description:"Retrieves a single value",params:[{name:"providerId",type:"Raw"},{name:"key",type:"Raw"}],type:"Option<Raw>"}},version:1}]},SZ={rpc:{},runtime:VZ,types:{}},EZ={TokensApi:[{methods:{query_existential_deposit:{description:"Query the existential amount for a specific currency",params:[{name:"currencyId",type:"Raw"}],type:"u128"}},version:1}]},zZ={rpc:{},runtime:EZ,types:{}},IZ={methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}},LZ={rpc:IZ,types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}},HZ={hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",isUnsafe:!0,params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",isUnsafe:!0,params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},insertKey:{description:"Insert a key into the keystore.",isUnsafe:!0,params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",isUnsafe:!0,params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",isUnsafe:!0,params:[],type:"Bytes"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"},submitExtrinsic:{description:"Submit a fully formatted extrinsic for block inclusion",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"}},AZ={rpc:HZ,types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}},RZ={getBlock:{description:"Get header and body of a relay chain block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{isOptional:!0,name:"blockNumber",type:"BlockNumber"}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"}},BZ={rpc:RZ,types:{BlockHash:"Hash"}},XZ={getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<u64>"}},jZ={rpc:XZ,types:{PrefixedStorageKey:"StorageKey"}},CZ={localStorageClear:{description:"Clear offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Null"},localStorageGet:{description:"Get offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},localStorageSet:{description:"Set offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"}},UZ={OffchainWorkerApi:[{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"header",type:"Header"}],type:"Null"}},version:2},{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"number",type:"BlockNumber"}],type:"Null"}},version:1}]},DZ={rpc:CZ,runtime:UZ,types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}},FZ={queryFeeDetails:{deprecated:"Use `api.call.transactionPaymentApi.queryFeeDetails` instead",description:"Query the detailed fee of a given encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"FeeDetails"},queryInfo:{deprecated:"Use `api.call.transactionPaymentApi.queryInfo` instead",description:"Retrieves the fee information for an encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeDispatchInfoV1"}},Pd={query_fee_details:{description:"The transaction fee details",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"FeeDetails"}},Ep={query_call_fee_details:{description:"The call fee details",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"FeeDetails"}},zp={query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},l5={query_call_info:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},Ip={query_length_to_fee:{description:"Query the output of the current LengthToFee given some input",params:[{name:"length",type:"u32"}],type:"Balance"},query_weight_to_fee:{description:"Query the output of the current WeightToFee given some input",params:[{name:"weight",type:"Weight"}],type:"Balance"}},ZZ={TransactionPaymentApi:[{methods:{...Ip,...zp,...Pd},version:4},{methods:{...Ip,...zp,...Pd},version:3},{methods:{...zp,...Pd},version:2},{methods:{query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...Pd},version:1}],TransactionPaymentCallApi:[{methods:{...Ip,...l5,...Ep},version:3},{methods:{...l5,...Ep},version:2},{methods:{CALL:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...Ep},version:1}]},qZ={rpc:FZ,runtime:ZZ,types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV1:{weight:"WeightV1",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV2:{weight:"WeightV2",class:"DispatchClass",partialFee:"Balance"}}},WZ={call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Bytes"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},getKeys:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getMetadata:{description:"Returns the runtime metadata",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Metadata"},getPairs:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",isUnsafe:!0,params:[{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<KeyValue>"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeVersion"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",isUnsafe:!0,params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{isOptional:!0,name:"toBlock",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{isOptional:!0,name:"keys",type:"Vec<StorageKey>"}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",isUnsafe:!0,params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"},{name:"methods",type:"Option<Text>"}],type:"TraceBlockResponse"},trieMigrationStatus:{description:"Check current migration state",isUnsafe:!0,params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MigrationStatusResult"}},GZ={rpc:WZ,types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",MigrationStatusResult:{topRemainingToMigrate:"u64",childRemainingToMigrate:"u64"},ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32",stateVersion:"u8"},RuntimeVersionPre4:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPre3:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32",apis:"Vec<RuntimeVersionApi>"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}},P0=Object.freeze(Object.defineProperty({__proto__:null,assetConversion:bC,assets:gC,attestations:KU,aura:vC,author:AZ,authorship:wC,babe:kC,balances:TC,beefy:EC,benchmark:IC,blockbuilder:HC,bridges:JU,chain:BZ,childstate:jZ,claims:QU,collective:AC,consensus:RC,contracts:jC,contractsAbi:mZ,crowdloan:_U,cumulus:tD,democracy:UC,dev:FC,discovery:qC,dryRunApi:bD,elections:WC,engine:YC,eth:TZ,evm:KC,extrinsics:JC,finality:rD,fungibles:_C,genericAsset:$C,genesisBuilder:tU,gilt:nU,grandpa:aU,identity:sU,imOnline:oU,lottery:cU,metadata:oC,mixnet:lU,mmr:mU,nfts:yU,nimbus:OZ,nompools:xU,offchain:DZ,offences:vU,ormlOracle:SZ,ormlTokens:zZ,parachains:fD,payment:qZ,poll:hD,pow:PU,proxy:MU,purchase:pD,recovery:kU,rpc:LZ,runtime:fC,scaleInfo:pC,scheduler:TU,session:VU,society:SU,staking:LU,state:GZ,statement:AU,support:RU,syncstate:XU,system:UU,treasury:DU,txpayment:FU,txqueue:qU,uniques:WU,utility:GU,vesting:YU,xcm:oZ,xcmPaymentApi:uZ,xcmRuntimeApi:dZ},Symbol.toStringTag,{value:"Module"})),ml={};Object.keys(P0).forEach(t=>Object.entries(P0[t].rpc||{}).forEach(([e,n])=>{const r=n.aliasSection||t;ml[r]||(ml[r]={}),ml[r][e]=he({},n,{isSubscription:!!n.pubsub,jsonrpc:`${r}_${e}`,method:e,section:r})}));const d5=Dr("PortableRegistry"),f5={toNumber:()=>-1},YZ={Char:"u32",Str:"Text"},KZ=M6(["sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","fp_account::AccountId20","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight","*_democracy::vote::Vote","*_conviction_voting::vote::Vote","*_identity::types::Data","sp_core::OpaqueMetadata","sp_core::OpaquePeerId","sp_core::offchain::OpaqueMultiaddr","primitive_types::*","sp_arithmetic::per_things::*","*_runtime::RuntimeCall","*_runtime::RuntimeEvent","ink::env::types::*","ink::primitives::types::*","ink_env::types::*","ink_primitives::types::*"]),JZ=M6(["pallet_identity::types::BitFlags"]),P6=["bitvec::order::Lsb0","BitOrderLsb0"],QZ=["bitvec::order::Msb0","BitOrderMsb0"],h5=[...P6,...QZ],_Z=["BoundedBTreeMap","BoundedBTreeSet","BoundedVec","Box","BTreeMap","BTreeSet","Cow","Option","Range","RangeInclusive","Result","WeakBoundedVec","WrapperKeepOpaque","WrapperOpaque"],$Z=["entries","keys","new","size","hash","registry"],eq=["generic","misc","pallet","traits","types"];function p5(t){const e=t.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=t[r].toString();return n}function M6(t){const e=t.length,n=new Array(e);for(let r=0;r<e;r++)n[r]=t[r].split("::");return n}function J2(t,e){return t.length===e.length&&t.every((n,r)=>{const i=e[r].toString();if(n==="*"||n===i)return!0;if(n.includes("*")&&n.includes("_")&&i.includes("_")){let a=n.split("_"),s=i.split("_");if(a[0]==="*"){const o=s.indexOf(a[1]);o!==-1&&(a=a.slice(1),s=s.slice(o))}return a.length===2&&a[1]==="*"&&a[0]===s[0]?!0:J2(a,s)}return!1})}function tq({def:t,path:e}){return["frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight"].includes(e.join("::"))?!t.isComposite||t.asComposite.fields.length===1?"WeightV1":null:e.length&&KZ.some(n=>J2(n,e))?e[e.length-1].toString():null}function k6(t,e,n,r,i=!1){const a=r.length;if(a===0||_Z.includes(r[a-1].toString()))return null;const s=new Array(a),o=new Array(a);for(let h=0;h<a;h++){const p=v2(i?r[h].replace("pallet_",""):r[h]),y=p.toLowerCase();s[h]=p,o[h]=y}let u="";for(let h=0;h<a;h++){const p=o[h];(h!==1||!eq.includes(p))&&p!==o[h+1]&&(u+=s[h])}if(s[1]==="RawOrigin"&&a===2&&n.length===2&&n[1].type.isSome){const h=t[n[1].type.unwrap().toNumber()];h.type.path.length===2&&(u=`${u}${h.type.path[1].toString()}`)}return{lookupIndex:e,name:u,params:n}}function nq(t,e,{type:{params:n,path:r}}){return k6(t,e,n,r)}function rq(t,e,n){const r=[n[e]];for(let i=e+1,a=n.length;i<a;i++){const s=n[i];s.name===t&&r.push(s)}return r}function m5(t,e){const n=t.length;for(let r=0;r<n;r++){const i=t[r];for(let a=r+1;a<n;a++){const s=t[a];if(i.lookupIndex!==s.lookupIndex&&i.name===s.name)return!1}}for(let r=0;r<n;r++){const i=t[r];e[i.lookupIndex]=i.name}return!0}function iq(t,e,n){const r={};return n.map((i,a)=>{const{lookupIndex:s,name:o,params:u}=i;if(o){if(r[s])return i}else return null;const h=rq(o,a,n);if(h.length===1||!h.some(P=>u.length!==P.params.length||u.some((N,O)=>!N.name.eq(P.params[O].name)||N.type.unwrapOr(f5).toNumber()!==P.params[O].type.unwrapOr(f5).toNumber())))return i;const p=u.findIndex(({type:P},N)=>h.every(({params:O},z)=>O[N].type.isSome&&(z===0||!O[N].type.eq(P))));if(p===-1)return i;const y=h.length,w=new Array(y);for(let P=0;P<y;P++){const{lookupIndex:N,name:O,params:z}=h[P],{def:j,path:I}=t.getSiType(z[p].type.unwrap());if(!j.isPrimitive&&!I.length)return null;w[P]={lookupIndex:N,name:j.isPrimitive?`${O}${j.asPrimitive.toString()}`:`${O}${I[I.length-1].toString()}`}}if(m5(w,r))return i;for(let P=0;P<y;P++){const{lookupIndex:N,name:O,params:z}=h[P],{def:j,path:I}=t.getSiType(z[p].type.unwrap()),A=k6(e,N,z,I,!0);if(j.isPrimitive||!A)return null;w[P]={lookupIndex:N,name:`${O}${A.name}`}}return m5(w,r)?i:null}).filter(i=>!!i).map(({lookupIndex:i,name:a,params:s})=>({lookupIndex:i,name:r[i]||a,params:s}))}function aq(t,e,n,r){if(t.registry.register(e),r.SpRuntimeUncheckedExtrinsic){const[i,,a]=r.SpRuntimeUncheckedExtrinsic,s=t.getSiType(i.type.unwrap()),o=t.getSiType(a.type.unwrap()).path.join("::");let u=s.path.join("::");const h=u==="sp_runtime::multiaddress::MultiAddress";if(h){const[p]=s.params;u=t.getSiType(p.type.unwrap()).path.join("::")}t.registry.register({AccountId:u.endsWith("::AccountId20")||u.endsWith("::H160")?"AccountId20":"AccountId32",Address:h?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(o)?"MultiSignature":n[a.type.unwrap().toNumber()]||"MultiSignature"})}}function sq(t,e){const n=Object.keys(t).some(i=>!i.startsWith("Pallet")),r={};if(t.SpRuntimeUncheckedExtrinsic){const[,{type:i}]=t.SpRuntimeUncheckedExtrinsic;r[i.unwrap().toNumber()]="Call"}else n&&!e&&d5.warn("Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic");if(t.FrameSystemEventRecord){const[{type:i}]=t.FrameSystemEventRecord;r[i.unwrap().toNumber()]="Event"}else n&&!e&&d5.warn("Unable to determine runtime Event type, cannot inspect frame_system::EventRecord");return r}function oq(t,e){const n=[],r={};for(let u=0,h=e.length;u<h;u++){const p=e[u],y=p.id.toNumber(),w=nq(e,y,e[u]);w&&n.push(w),r[y]=p}const i={},a={},s={},o=iq(t,e,n);for(let u=0,h=o.length;u<h;u++){const{lookupIndex:p,name:y,params:w}=o[u];a[p]=y,i[y]=t.registry.createLookupType(p),s[y]=w}return{lookups:i,names:a,params:s,types:r}}var M0,cf,Lr,Hu,Bi,uf,kt,Kn,lf,T6,b5,y5,g5,x5,v5,Lp,w5,P5,M5,k5,T5,N5,O5,V5;class cq extends xn{constructor(e,n,r){super(e,{types:"Vec<PortableType>"},n),G(this,kt),G(this,M0),G(this,cf),G(this,Lr),G(this,Hu),G(this,Bi,{}),G(this,uf);const{lookups:i,names:a,params:s,types:o}=oq(this,this.types);Q(this,M0,sq(s,r)),Q(this,cf,i),Q(this,Lr,a),Q(this,Hu,s),Q(this,uf,o)}get names(){return Object.values(T(this,Lr)).sort()}get paramTypes(){return T(this,Hu)}get types(){return this.getT("types")}register(){aq(this,T(this,cf),T(this,Lr),T(this,Hu))}getName(e){return T(this,Lr)[dt(this,kt,lf).call(this,e)]}getSiType(e){const n=(T(this,uf)||this.types)[dt(this,kt,lf).call(this,e)];if(!n)throw new Error(`PortableRegistry: Unable to find type with lookupId ${e.toString()}`);return n.type}getTypeDef(e){const n=dt(this,kt,lf).call(this,e);if(!T(this,Bi)[n]){const r=T(this,Lr)[n],i={info:$.DoNotConstruct,lookupIndex:n,lookupName:r,type:this.registry.createLookupType(n)};r&&(T(this,Bi)[n]=i);const a=dt(this,kt,T6).call(this,this.getSiType(e),n);r||(T(this,Bi)[n]=i),Object.keys(a).forEach(s=>{(s!=="lookupName"||a[s])&&(T(this,Bi)[n][s]=a[s])}),a.info===$.Plain&&(T(this,Bi)[n].lookupNameRoot=T(this,Bi)[n].lookupName,delete T(this,Bi)[n].lookupName)}return T(this,Bi)[n]}sanitizeField(e){let n=null,r=null;return e.isSome&&(n=Rt(e.unwrap()),n.includes("#")?(r=n,n=r.replace(/#/g,"_")):$Z.includes(n)&&(r=n,n=`${n}_`)),[n,r]}}M0=new WeakMap,cf=new WeakMap,Lr=new WeakMap,Hu=new WeakMap,Bi=new WeakMap,uf=new WeakMap,kt=new WeakSet,Kn=function(t){const e=this.getTypeDef(t),n=t.toNumber();return[$.DoNotConstruct,$.Enum,$.Struct].includes(e.info)&&e.lookupName?{docs:e.docs,info:$.Si,lookupIndex:n,lookupName:T(this,Lr)[n],type:this.registry.createLookupType(t)}:e},lf=function(t){if(Ut(t)){if(!this.registry.isLookupType(t))throw new Error(`PortableRegistry: Expected a lookup string type, found ${t}`);return parseInt(t.replace("Lookup",""),10)}else if(Ht(t))return t;return t.toNumber()},T6=function(t,e){const n=t.path.join("::");let r;const i=T(this,M0)[e]||tq(t);try{if(i)r=dt(this,kt,k5).call(this,e,i);else switch(t.def.type){case"Array":r=dt(this,kt,b5).call(this,e,t.def.asArray);break;case"BitSequence":r=dt(this,kt,y5).call(this,e,t.def.asBitSequence);break;case"Compact":r=dt(this,kt,g5).call(this,e,t.def.asCompact);break;case"Composite":r=dt(this,kt,x5).call(this,e,t,t.def.asComposite);break;case"HistoricMetaCompat":r=dt(this,kt,P5).call(this,e,t.def.asHistoricMetaCompat);break;case"Primitive":r=dt(this,kt,M5).call(this,e,t);break;case"Sequence":r=dt(this,kt,T5).call(this,e,t.def.asSequence);break;case"Tuple":r=dt(this,kt,N5).call(this,e,t.def.asTuple);break;case"Variant":r=dt(this,kt,O5).call(this,e,t,t.def.asVariant);break;default:SH(t.def.type)}}catch(a){throw new Error(`PortableRegistry: ${e}${n?` (${n})`:""}: Error extracting ${bt(t)}: ${a.message}`)}return he({docs:p5(t.docs),namespace:n},r)},b5=function(t,{len:e,type:n}){const r=e.toNumber();if(r>2048)throw new Error("Only support for [Type; <length>], where length <= 2048");return Or(this.registry,{info:$.VecFixed,length:r,sub:dt(this,kt,Kn).call(this,n)})},y5=function(t,{bitOrderType:e,bitStoreType:n}){const r=dt(this,kt,Kn).call(this,e),i=dt(this,kt,Kn).call(this,n),[a,s]=h5.includes(r.namespace||"")?[r,i]:[i,r];if(!a.namespace||!h5.includes(a.namespace))throw new Error(`Unexpected bitOrder found as ${a.namespace||"<unknown>"}`);if(s.info!==$.Plain||s.type!=="u8")throw new Error(`Only u8 bitStore is currently supported, found ${s.type}`);return P6.includes(a.namespace),{info:$.Plain,type:"BitVec"}},g5=function(t,{type:e}){return Or(this.registry,{info:$.Compact,sub:dt(this,kt,Kn).call(this,e)})},x5=function(t,{params:e,path:n},{fields:r}){if(n.length){const i=n[0].toString(),a=n[n.length-1].toString();if(n.length===1&&i==="BTreeMap"){if(e.length!==2)throw new Error(`BTreeMap requires 2 parameters, found ${e.length}`);return Or(this.registry,{info:$.BTreeMap,sub:e.map(({type:s})=>dt(this,kt,Kn).call(this,s.unwrap()))})}else if(n.length===1&&i==="BTreeSet"){if(e.length!==1)throw new Error(`BTreeSet requires 1 parameter, found ${e.length}`);return Or(this.registry,{info:$.BTreeSet,sub:dt(this,kt,Kn).call(this,e[0].type.unwrap())})}else if(["Range","RangeInclusive"].includes(i)){if(e.length!==1)throw new Error(`Range requires 1 parameter, found ${e.length}`);return Or(this.registry,{info:i==="Range"?$.Range:$.RangeInclusive,sub:dt(this,kt,Kn).call(this,e[0].type.unwrap()),type:i})}else if(["WrapperKeepOpaque","WrapperOpaque"].includes(a)){if(e.length!==1)throw new Error(`WrapperOpaque requires 1 parameter, found ${e.length}`);return Or(this.registry,{info:a==="WrapperKeepOpaque"?$.WrapperKeepOpaque:$.WrapperOpaque,sub:dt(this,kt,Kn).call(this,e[0].type.unwrap()),type:a})}}return JZ.some(i=>J2(i,n))?dt(this,kt,v5).call(this,t,e,r):dt(this,kt,Lp).call(this,t,r)},v5=function(t,e,n){if(e.length!==1||n.length!==1)throw new Error("Set handling expects param/field as single entries");return Or(this.registry,{info:$.Set,length:this.registry.createTypeUnsafe(this.registry.createLookupType(n[0].type),[]).bitLength(),sub:this.getSiType(e[0].type.unwrap()).def.asVariant.variants.map(({index:r,name:i})=>({index:r.toNumber(),info:$.Plain,name:i.toString(),type:"Null"}))})},Lp=function(t,e){let n=!0,r=!0;const i=e.length;for(let o=0;o<i;o++){const{name:u}=e[o];n=n&&u.isSome,r=r&&u.isNone}if(!r&&!n)throw new Error("Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)");if(i===0)return{info:$.Null,type:"Null"};if(r&&i===1){const o=dt(this,kt,Kn).call(this,e[0].type);return he({},o,t===-1?null:{lookupIndex:t,lookupName:T(this,Lr)[t],lookupNameRoot:o.lookupName},e[0].typeName.isSome?{typeName:v0(e[0].typeName.unwrap())}:null)}const[a,s]=dt(this,kt,w5).call(this,e);return Or(this.registry,he({info:r?$.Tuple:$.Struct,sub:a},s.size?{alias:s}:null,t===-1?null:{lookupIndex:t,lookupName:T(this,Lr)[t]}))},w5=function(t){const e=new Map,n=t.length,r=new Array(n);for(let i=0;i<n;i++){const{docs:a,name:s,type:o,typeName:u}=t[i],h=dt(this,kt,Kn).call(this,o);if(s.isNone)r[i]=h;else{const[p,y]=this.sanitizeField(s);p&&y&&e.set(p,y),r[i]=he({docs:p5(a),name:p},h,u.isSome?{typeName:v0(u.unwrap())}:null)}}return[r,e]},P5=function(t,e){return he({displayName:e.toString(),isFromSi:!0},Ba(e))},M5=function(t,e){const n=e.def.asPrimitive.type.toString();return{info:$.Plain,type:YZ[n]||n.toLowerCase()}},k5=function(t,e){return{info:$.Plain,type:e}},T5=function(t,{type:e}){const n=dt(this,kt,Kn).call(this,e);return n.type==="u8"?{info:$.Plain,type:"Bytes"}:Or(this.registry,{info:$.Vec,lookupIndex:t,lookupName:T(this,Lr)[t],sub:n})},N5=function(t,e){if(e.length===0)return{info:$.Null,type:"Null"};if(e.length===1)return this.getTypeDef(e[0]);const n=e.map(r=>dt(this,kt,Kn).call(this,r));return Or(this.registry,{info:$.Tuple,lookupIndex:t,lookupName:T(this,Lr)[t],sub:n})},O5=function(t,{params:e,path:n},{variants:r}){if(n.length){const i=n[0].toString();if(i==="Option"){if(e.length!==1)throw new Error(`Option requires 1 parameter, found ${e.length}`);return Or(this.registry,{info:$.Option,sub:dt(this,kt,Kn).call(this,e[0].type.unwrap())})}else if(i==="Result"){if(e.length!==2)throw new Error(`Result requires 2 parameters, found ${e.length}`);return Or(this.registry,{info:$.Result,sub:e.map(({type:a},s)=>he({name:["Ok","Error"][s]},dt(this,kt,Kn).call(this,a.unwrap())))})}}return r.length===0?{info:$.Null,type:"Null"}:dt(this,kt,V5).call(this,t,r)},V5=function(t,e){const n=[];return e.slice().sort((r,i)=>r.index.cmp(i.index)).forEach(({fields:r,index:i,name:a})=>{const s=i.toNumber();for(;n.length!==s;)n.push({index:n.length,info:$.Null,name:`__Unused${n.length}`,type:"Null"});n.push(he(dt(this,kt,Lp).call(this,-1,r),{index:s,name:a.toString()}))}),Or(this.registry,{info:$.Enum,lookupIndex:t,lookupName:T(this,Lr)[t],sub:n})};function Q2(t,e=[]){for(let n=0,r=t.length;n<r;n++){const i=t[n];Array.isArray(i)?Q2(i,e):e.push(i)}return[...new Set(e)]}function Hl(t,e){const n=t.getTypeDef(e);return n.lookupName||n.type}function zi(t,{sub:e}){const{lookupName:n,type:r}=e;return _2([n||r])}function Bs(t,{sub:e}){return _2(e.map(({lookupName:n,type:r})=>n||r))}function iu(t,{info:e}){throw new Error(`Unhandled: Unable to create and validate type from ${t} (info=${$[e]})`)}const uq={[$.BTreeMap]:Bs,[$.BTreeSet]:zi,[$.Compact]:zi,[$.DoNotConstruct]:iu,[$.Enum]:Bs,[$.HashMap]:Bs,[$.Int]:iu,[$.Linkage]:zi,[$.Null]:iu,[$.Option]:zi,[$.Plain]:(t,e)=>e.lookupName||e.type,[$.Range]:zi,[$.RangeInclusive]:zi,[$.Result]:Bs,[$.Set]:Bs,[$.Si]:iu,[$.Struct]:Bs,[$.Tuple]:Bs,[$.UInt]:iu,[$.Vec]:zi,[$.VecFixed]:zi,[$.WrapperKeepOpaque]:zi,[$.WrapperOpaque]:zi};function _2(t){const e=t.length,n=new Array(e);for(let r=0;r<e;r++){const i=t[r],a=Ba(i);n[r]=uq[a.info](i,a)}return n}const lq=Dr("metadata");function dq(t,e,n){const r=Q2(_2(n)).filter(i=>!t.hasType(i)&&!t.isLookupType(i)).sort();if(r.length!==0){const i=`Unknown types found, no types for ${r.join(", ")}`;if(e)throw new Error(i);lq.warn(i)}return n}function N6(t,e){return e.map(({type:n})=>t.getTypeDef(n).type)}function S5(t,e){return t.getSiType(e).def.asVariant.variants.map(({fields:n})=>N6(t,n))}function fq({lookup:t,pallets:e}){return e.reduce((n,{calls:r,constants:i,events:a,storage:s})=>(n.push([N6(t,i)]),r.isSome&&n.push(S5(t,r.unwrap().type)),a.isSome&&n.push(S5(t,a.unwrap().type)),s.isSome&&n.push(s.unwrap().items.map(({type:o})=>{if(o.isPlain)return[t.getTypeDef(o.asPlain).type];const{hashers:u,key:h,value:p}=o.asMap;return u.length===1?[t.getTypeDef(p).type,t.getTypeDef(h).type]:[t.getTypeDef(p).type,...t.getSiType(h).def.asTuple.map(y=>t.getTypeDef(y).type)]})),n),[])}function hq(t,e,n){return dq(t,n,Q2(fq(e)))}function pq(t){const e=t.map(r=>r.toString().trim()),n=e.findIndex(r=>!r.length);return n===-1?e:e.slice(0,n)}function mq(t,{extrinsic:e,lookup:n,pallets:r}){return t.createTypeUnsafe("MetadataLatest",[{extrinsic:e,lookup:{types:n.types.map(({id:i,type:a})=>t.createTypeUnsafe("PortableType",[{id:i,type:he({},a,{docs:pq(a.docs)})}]))},pallets:r.map(({calls:i,index:a,name:s})=>({calls:t.createTypeUnsafe("Option<PalletCallMetadataLatest>",[i.unwrapOr(null)]),index:a,name:s}))}]).toJSON()}function bq(t){return t.isPlain?t.asPlain:t.asMap.value}function cm(t,e,n){const r=Hl(t.lookup,bq(e));return n?`Option<${r}>`:r}function Dc(t,{type:e},n,r){const i={},a=t.getSiType(e).def.asVariant.variants;for(let s=0,o=a.length;s<o;s++)Zn(i,a[s],r,n,s);return i}const Hr={extrinsic:{},payload:{}},yq={LimitParathreadCommits:Hr,OnlyStakingAndClaims:Hr,PrevalidateAttests:Hr,RestrictFunctionality:Hr,TransactionCallFilter:Hr,ValidateDoubleVoteReports:Hr},gq={DisallowSigned:Hr},xq={ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"TAssetConversion"},payload:{}}},vq={extrinsic:{mode:"u8"},payload:{metadataHash:"Option<[u8;32]>"}},E5={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}},z5={extrinsic:{tip:"Compact<Balance>"},payload:{}},wq={ChargeTransactionPayment:z5,CheckBlockGasLimit:Hr,CheckEra:E5,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMetadataHash:vq,CheckMortality:E5,CheckNonZeroSender:Hr,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:Hr,LockStakingStatus:Hr,SkipCheckIfFeeless:z5,ValidateEquivocationReport:Hr,WeightReclaim:Hr},O6=he({},wq,yq,gq,xq),Hp=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function Pq(t,e={}){const n=[...Object.keys(O6),...Object.keys(e)];return t.filter(r=>!n.includes(r))}function I5(t,e,n={}){return t.map(r=>n[r]||O6[r]).filter(r=>!!r).reduce((r,i)=>he(r,i[e]),{})}function Mq(t,e){if(!(e!=null&&e.length))return{DataType:_i};const n=e.subarray(0,2);return{DataType:t.findMetaEvent(n),value:{data:e.subarray(2),index:n}}}var df,ff,Gs,hf,pf;class V6 extends lh{constructor(e,n,r,i="<unknown>",a="<unknown>"){const s=(r==null?void 0:r.fields)||[];super(e,s.map(({type:u})=>e.createLookupType(u)),n),G(this,df),G(this,ff),G(this,Gs,null),G(this,hf),G(this,pf),Q(this,df,r),Q(this,ff,a),Q(this,hf,i),Q(this,pf,s.map(({type:u})=>e.lookup.getTypeDef(u)));const o=s.map(({name:u})=>e.lookup.sanitizeField(u)[0]).filter(u=>!!u);o.length===s.length&&(Q(this,Gs,o),Ts(this,o,(u,h)=>this[h]))}get meta(){return T(this,df)}get method(){return T(this,ff)}get names(){return T(this,Gs)}get section(){return T(this,hf)}get typeDef(){return T(this,pf)}toHuman(e,n){if(T(this,Gs)!==null){const r={};for(let i=0,a=T(this,Gs).length;i<a;i++)r[T(this,Gs)[i]]=this[i].toHuman(e,n);return r}return super.toHuman(e)}}df=new WeakMap,ff=new WeakMap,Gs=new WeakMap,hf=new WeakMap,pf=new WeakMap;class kq extends xn{constructor(e,n){const{DataType:r,value:i}=Mq(e,n);super(e,{index:"EventId",data:r},i)}get data(){return this.getT("data")}get index(){return this.getT("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(e,n){return he({method:this.method,section:this.section},e?{docs:this.meta.docs.map(r=>r.toString())}:null,super.toHuman(e,n))}}const um=128,Tq=0,po=new Uint8Array,$2=new Uint8Array([0]),S6=127,E6="bare",eb=4,L5=63,z6=192,Nq=0,Oq=64,I6=4,H5=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4","ExtrinsicV5"],Vq={bare:"ExtrinsicV5",general:"GeneralExtrinsic"},A5={bare:Nq,general:Oq},mf={0:"bare",64:"general"};function bl(t,e,n,r){if(e instanceof fh)return e.unwrap();const i=(n&um)===um,a=(n&L5)===5?Vq[r]:H5[n&L5]||H5[0];return t.createTypeUnsafe(a,[e,{isSigned:i,version:n}])}function Sq(t,e,n=I6,r=E6){return Qe(e)||Array.isArray(e)||It(e)?Eq(t,qe(e),n,r):e instanceof t.createClassUnsafe("Call")?bl(t,{method:e},n,r):bl(t,e,n,r)}function Eq(t,e,n,r){if(!e.length)return bl(t,new Uint8Array,n,r);const[i,a]=_0(e),s=i+a.toNumber();if(s>e.length)throw new Error(`Extrinsic: length less than remainder, expected at least ${s}, found ${e.length}`);const o=e.subarray(i,s),u=o[0]&z6;return mf[`${u}`]==="general"?bl(t,e,o[0],mf[`${u}`]||r):bl(t,o.subarray(1),o[0],mf[`${u}`]||r)}var bf;class zq extends ch{constructor(e,n,r,i){super(e,n,r),G(this,bf);const a=Object.keys(e.getSignedExtensionTypes());if(this.version===5&&i!=="general"){const o=u=>this.inner.signature[u];for(let u=0,h=a.length;u<h;u++)x2(this,a[u],o)}const s=this.type&z6;Q(this,bf,i||mf[`${s}`])}isGeneral(){return T(this,bf)==="general"}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this.isGeneral()?this.inner.era:this.inner.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this.isGeneral()?!1:this.inner.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this.inner.method}get nonce(){return this.isGeneral()?this.inner.nonce:this.inner.signature.nonce}get signature(){if(this.isGeneral())throw new Error("Extrinsic: GeneralExtrinsic does not have signature implemented");return this.inner.signature.signature}get signer(){if(this.isGeneral())throw new Error("Extrinsic: GeneralExtrinsic does not have signer implemented");return this.inner.signature.signer}get tip(){return this.isGeneral()?this.inner.tip:this.inner.signature.tip}get assetId(){return this.isGeneral()?this.inner.assetId:this.inner.signature.assetId}get metadataHash(){return this.isGeneral()?this.inner.metadataHash:this.inner.signature.metadataHash}get mode(){return this.isGeneral()?this.inner.mode:this.inner.signature.mode}get type(){return this.inner.version}get inner(){return this.unwrap()}get version(){if(this.type<=I6)return this.type|(this.isSigned?um:Tq);if(this.isSigned)throw new Error("Signed Extrinsics are currently only available for ExtrinsicV4");return this.type|(this.isGeneral()?A5.general:A5.bare)}is(e){return this.method.is(e)}unwrap(){return super.unwrap()}}bf=new WeakMap;var as;class fh extends zq{constructor(e,n,{preamble:r,version:i}={}){const a=e.metadata.extrinsic.versions.length?e.metadata.extrinsic.versions[0]:void 0;super(e,Sq(e,n,i||a,r),void 0,r),G(this,as)}get hash(){return T(this,as)||Q(this,as,super.hash),T(this,as)}addSignature(e,n,r){return this.inner.addSignature(e,n,r),Q(this,as,void 0),this}inspect(){const e=rr(...this.toU8aInner());return{inner:this.isSigned?this.inner.inspect().inner:this.inner.method.inspect().inner,outer:[nn(e.length),new Uint8Array([this.version])]}}sign(e,n){return this.inner.sign(e,n),Q(this,as,void 0),this}signFake(e,n){return this.inner.signFake(e,n),Q(this,as,void 0),this}toHex(e){return mt(this.toU8a(e))}toHuman(e,n){return he({},{isSigned:this.isSigned,method:this.method.toHuman(e,n)},this.isSigned?{assetId:this.assetId?this.assetId.toHuman(e,n):null,era:this.era.toHuman(e,n),metadataHash:this.metadataHash?this.metadataHash.toHex():null,mode:this.mode?this.mode.toHuman():null,nonce:this.nonce.toHuman(e,n),signature:this.signature.toHex(),signer:this.signer.toHuman(e,n),tip:this.tip.toHuman(e,n)}:null)}toJSON(){return this.toHex()}toRawType(){return"Extrinsic"}toU8a(e){const n=rr(...this.toU8aInner());return e?n:No(n)}toU8aInner(){return[new Uint8Array([this.version]),this.inner.toU8a()]}}as=new WeakMap,Y(fh,"LATEST_EXTRINSIC_VERSION",eb);function Iq(t){const e=t.toString(2);let n=0;for(;e[e.length-1-n]==="0";)n++;return n}function Lq(t,e){if(Qe(e)||It(e)||Array.isArray(e))return Aq(t,qe(e));if(e){if(hr(e))return Hq(t,e)}else return[new Qr(t),new Qr(t)];throw new Error("Invalid data passed to Mortal era")}function Hq(t,e){const{current:n,period:r}=e;let i=Math.pow(2,Math.ceil(Math.log2(r)));i=Math.min(Math.max(i,4),65536);const a=n%i,s=Math.max(i>>12,1),o=a/s*s;return[new Qr(t,i),new Qr(t,o)]}function Aq(t,e){if(e.length===0)return[new Qr(t),new Qr(t)];const n=Va(e.subarray(0,1)).toNumber(),r=Va(e.subarray(1,2)).toNumber(),i=n+(r<<8),a=2<<i%16,s=Math.max(a>>12,1),o=(i>>4)*s;if(a<4||o>=a)throw new Error("Invalid data passed to Mortal era");return[new Qr(t,a),new Qr(t,o)]}function lm(t=new Uint8Array){if(Qe(t))return!t.length||t[0]===0?new Uint8Array([0]):new Uint8Array([1,t[0],t[1]]);if(t){if(t instanceof A6)return lm(t.toU8a());if(It(t))return lm($i(t));if(hr(t)){const e=Object.entries(t).map(([i,a])=>[i.toLowerCase(),a]),n=e.find(([i])=>i.toLowerCase()==="mortalera"),r=e.find(([i])=>i.toLowerCase()==="immortalera");return n?{MortalEra:n[1]}:r?{ImmortalEra:r[1]}:{MortalEra:t}}}else return new Uint8Array([0]);throw new Error("Invalid data passed to Era")}class L6 extends si{constructor(e,n){super(e,$2)}}class H6 extends lh{constructor(e,n){super(e,{period:Qr,phase:Qr},Lq(e,n))}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return{period:I1(this.period),phase:I1(this.phase)}}toJSON(){return this.toHex()}toU8a(e){const n=this.period.toNumber(),r=Math.min(15,Math.max(1,Iq(n)-1))+(this.phase.toNumber()/Math.max(n>>12,1)<<4);return new Uint8Array([r&255,r>>8])}birth(e){const n=this.phase.toNumber(),r=this.period.toNumber();return~~((Math.max(Vn(e).toNumber(),n)-n)/r)*r+n}death(e){return this.birth(e)+this.period.toNumber()}}class A6 extends Ha{constructor(e,n){super(e,{ImmortalEra:L6,MortalEra:H6},lm(n))}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){if(!this.isImmortalEra)throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);return this.inner}get asMortalEra(){if(!this.isMortalEra)throw new Error(`Cannot convert '${this.type}' via asMortalEra`);return this.inner}get isImmortalEra(){return this.index===0}get isMortalEra(){return this.index>0}toU8a(e){return this.isMortalEra?this.asMortalEra.toU8a(e):this.asImmortalEra.toU8a(e)}}const R5=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4","ExtrinsicPayloadV5"],Rq={bare:"ExtrinsicPayloadV5",general:"ExtrinsicPayloadV5"};function R6(t,e){const n=e==null?void 0:e.assetId;if(n&&It(n)){const r=t.createType("TAssetConversion",$i(n));if(n==="0x00"||n==="0x01"+r.toHex().slice(2))return{...e,assetId:r.toJSON()}}return e}function Bq(t,e,n=eb,r=E6){if(e instanceof B6)return e.unwrap();const i=n===5?Rq[r]:R5[n]||R5[0],a=R6(t,e);return t.createTypeUnsafe(i,[a,{version:n}])}class B6 extends ch{constructor(e,n,{preamble:r,version:i}={}){super(e,Bq(e,n,i,r))}get blockHash(){return this.inner.blockHash}get era(){return this.inner.era}get genesisHash(){return this.inner.genesisHash||this.registry.createTypeUnsafe("Hash",[])}get method(){return this.inner.method}get nonce(){return this.inner.nonce}get specVersion(){return this.inner.specVersion||this.registry.createTypeUnsafe("u32",[])}get tip(){return this.inner.tip||this.registry.createTypeUnsafe("Compact<Balance>",[])}get transactionVersion(){return this.inner.transactionVersion||this.registry.createTypeUnsafe("u32",[])}get assetId(){return this.inner.assetId}get metadataHash(){return this.inner.metadataHash}eq(e){return this.inner.eq(e)}sign(e){const n=this.inner.sign(e);return{signature:mt(n)}}toHuman(e,n){return this.inner.toHuman(e,n)}toJSON(){return this.toHex()}toRawType(){return"ExtrinsicPayload"}toString(){return this.toHex()}toU8a(e){return super.toU8a(e?{method:!0}:!1)}}class Xq extends xn{constructor(e,n,{version:r=0}={}){throw super(e,{}),new Error(`Unsupported extrinsic payload version ${r}`)}}class jq extends xn{constructor(e,n,{isSigned:r=!1,version:i=0}={}){throw super(e,{}),new Error(`Unsupported ${r?"":"un"}signed extrinsic version ${i&S6}`)}}const B5={address:"Address",assetId:"Option<TAssetConversion>",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",metadataHash:"Option<[u8;32]>",method:"Call",mode:"u8",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};var Au;class Cq extends xn{constructor(e,n){const r=he({},e.getSignedExtensionTypes(),e.getSignedExtensionExtra());super(e,he({},r,B5,{withSignedTransaction:"bool"}),n),G(this,Au),Q(this,Au,{});const i=a=>this.get(a);for(const[a,s]of Object.entries(r))B5[a]||(T(this,Au)[a]=s),x2(this,a,i)}get address(){return this.getT("address")}get blockHash(){return this.getT("blockHash")}get blockNumber(){return this.getT("blockNumber")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get runtimeVersion(){return this.getT("runtimeVersion")}get signedExtensions(){return this.getT("signedExtensions")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get version(){return this.getT("version")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}get withSignedTransaction(){return this.getT("withSignedTransaction").isTrue}toPayload(){const e={},n=Object.keys(T(this,Au));for(let r=0,i=n.length;r<i;r++){const a=n[r],s=this.getT(a);(!(s instanceof Ql)||s.isSome)&&(e[a]=s.toJSON())}return he(e,{address:this.address.toString(),assetId:this.assetId&&this.assetId.isSome?this.assetId.toHex():null,blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),metadataHash:this.metadataHash.isSome?this.metadataHash.toHex():null,method:this.method.toHex(),mode:this.mode.toNumber(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map(r=>r.toString()),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber(),withSignedTransaction:this.withSignedTransaction})}toRaw(){const e=this.toPayload(),n=mt(this.registry.createTypeUnsafe("ExtrinsicPayload",[e,{version:e.version}]).toU8a({method:!0}));return{address:e.address,data:n,type:"payload"}}}Au=new WeakMap;const Uq=4;class k0 extends xn{constructor(e,n,{isSigned:r}={}){super(e,{signature:"ExtrinsicSignatureV4",method:"Call"},k0.decodeExtrinsic(e,n,r))}static decodeExtrinsic(e,n,r=!1){if(n instanceof k0)return n;if(n instanceof e.createClassUnsafe("Call"))return{method:n};if(Qe(n)){const i=e.createTypeUnsafe("ExtrinsicSignatureV4",[n,{isSigned:r}]);return{method:e.createTypeUnsafe("Call",[n.subarray(i.encodedLength)]),signature:i}}return n||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get signature(){return this.getT("signature")}get version(){return Uq}addSignature(e,n,r){return this.signature.addSignature(e,n,r),this}sign(e,n){return this.signature.sign(this.method,e,n),this}signFake(e,n){return this.signature.signFake(this.method,e,n),this}}function Dq(t,e,n,r){const i=n.length>256?t.hash(n):n;return e.sign(i,r)}var yf;class dm extends xn{constructor(e,n){super(e,he({method:"Bytes"},e.getSignedExtensionTypes(),e.getSignedExtensionExtra()),R6(e,n)),G(this,yf),Q(this,yf,{withType:e.createTypeUnsafe("ExtrinsicSignature",[])instanceof Ha})}inspect(){return super.inspect({method:!0})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}get metadataHash(){return this.getT("metadataHash")}sign(e){return Dq(this.registry,e,this.toU8a({method:!0}),T(this,yf))}}yf=new WeakMap;const Fq=new Uint8Array(256).fill(1);function Ap(t,e){return t.createTypeUnsafe("Address",[Qe(e)?mt(e):e])}var Jo;const Zq=class fm extends xn{constructor(e,n,{isSigned:r}={}){const i=e.getSignedExtensionTypes();super(e,he({signer:"Address",signature:"ExtrinsicSignature"},i),fm.decodeExtrinsicSignature(n,r)),G(this,Jo),Q(this,Jo,Object.keys(i)),Ts(this,T(this,Jo),a=>this.get(a))}static decodeExtrinsicSignature(e,n=!1){if(e){if(e instanceof fm)return e}else return po;return n?e:po}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}_injectSignature(e,n,r){for(let i=0,a=T(this,Jo).length;i<a;i++){const s=T(this,Jo)[i],o=r.get(s);qt(o)||this.set(s,o)}return this.set("signer",e),this.set("signature",n),this}addSignature(e,n,r){return this._injectSignature(Ap(this.registry,e),this.registry.createTypeUnsafe("ExtrinsicSignature",[n]),new dm(this.registry,r))}createPayload(e,n){const{era:r,runtimeVersion:{specVersion:i,transactionVersion:a}}=n;return new dm(this.registry,he({},n,{era:r||$2,method:e.toHex(),specVersion:i,transactionVersion:a}))}sign(e,n,r){if(!(n!=null&&n.addressRaw))throw new Error(`Expected a valid keypair for signing, found ${bt(n)}`);const i=this.createPayload(e,r);return this._injectSignature(Ap(this.registry,n.addressRaw),this.registry.createTypeUnsafe("ExtrinsicSignature",[i.sign(n)]),i)}signFake(e,n,r){if(!n)throw new Error(`Expected a valid address for signing, found ${bt(n)}`);const i=this.createPayload(e,r);return this._injectSignature(Ap(this.registry,n),this.registry.createTypeUnsafe("ExtrinsicSignature",[Fq]),i)}toU8a(e){return this.isSigned?super.toU8a(e):po}};Jo=new WeakMap;let qq=Zq;const Wq=5;class T0 extends xn{constructor(e,n,{isSigned:r}={}){super(e,{signature:"ExtrinsicSignatureV5",method:"Call"},T0.decodeExtrinsic(e,n,r))}static decodeExtrinsic(e,n,r=!1){if(n instanceof T0)return n;if(n instanceof e.createClassUnsafe("Call"))return{method:n};if(Qe(n)){const i=e.createTypeUnsafe("ExtrinsicSignatureV5",[n,{isSigned:r}]);return{method:e.createTypeUnsafe("Call",[n.subarray(i.encodedLength)]),signature:i}}return n||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get signature(){return this.getT("signature")}get version(){return Wq}get preamble(){return this.getT("preamble")}addSignature(e,n,r){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}sign(e,n){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}signFake(e,n){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}}class X6 extends xn{constructor(e,n){super(e,he({method:"Bytes"},e.getSignedExtensionTypes(),e.getSignedExtensionExtra()),n)}inspect(){return super.inspect({method:!0})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}get metadataHash(){return this.getT("metadataHash")}sign(e){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}}var gf;const Gq=class hm extends xn{constructor(e,n,{isSigned:r}={}){const i=e.getSignedExtensionTypes();super(e,he({signer:"Address",signature:"ExtrinsicSignature",transactionExtensionVersion:"u8"},i),hm.decodeExtrinsicSignature(n,r)),G(this,gf),Q(this,gf,Object.keys(i)),Ts(this,T(this,gf),a=>this.get(a))}static decodeExtrinsicSignature(e,n=!1){if(e){if(e instanceof hm)return e}else return po;return n?e:po}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}get transactionExtensionVersion(){return this.getT("transactionExtensionVersion")}_injectSignature(e,n,r){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}addSignature(e,n,r){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}createPayload(e,n){const{era:r,runtimeVersion:{specVersion:i,transactionVersion:a}}=n;return new X6(this.registry,he({},n,{era:r||$2,method:e.toHex(),specVersion:i,transactionVersion:a}))}sign(e,n,r){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}signFake(e,n,r){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}toU8a(e){return this.isSigned?super.toU8a(e):po}};gf=new WeakMap;let Yq=Gq;function Kq(t){if(!t.length)return new Uint8Array;const[e,n]=_0(t),r=e+n.toNumber();if(r>t.length)throw new Error(`Extrinsic: length less than remainder, expected at least ${r}, found ${t.length}`);const i=t.subarray(e,r);if(i[0]!==69)throw new Error(`Extrinsic: incorrect version for General Transactions, expected 5, found ${i[0]&S6}`);return i.subarray(1)}var xf,vf;const Jq=class pm extends xn{constructor(e,n,r){const i=e.getSignedExtensionTypes();super(e,he({transactionExtensionVersion:"u8"},i,{method:"Call"}),pm.decodeExtrinsic(e,n)),G(this,xf),G(this,vf),Q(this,xf,(r==null?void 0:r.version)||5),Q(this,vf,64)}static decodeExtrinsic(e,n){if(n){if(n instanceof pm)return n;if(Qe(n)||Array.isArray(n)||It(n))return Kq(qe(n));if(hr(n)){const{payload:r,transactionExtensionVersion:i}=n;return he(r||{},{transactionExtensionVersion:i||e.getTransactionExtensionVersion()})}}else return po;return{}}get encodedLength(){return super.encodedLength}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}get transactionExtensionVersion(){return this.getT("transactionExtensionVersion")}get method(){return this.getT("method")}get version(){return T(this,xf)}get preamble(){return T(this,vf)}toHex(e){return mt(this.toU8a(e))}toU8a(e){return e?this.encode():No(this.encode())}toRawType(){return"GeneralExt"}encode(){return rr(new Uint8Array([this.version|this.preamble]),super.toU8a())}signFake(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have signFake implemented")}addSignature(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have addSignature implemented")}sign(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have sign implemented")}signature(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have the signature getter")}};xf=new WeakMap,vf=new WeakMap;let Qq=Jq;function X5(t){if(Qe(t)||Array.isArray(t))return qe(t);if(t){if(It(t))return $i(t);if(Ut(t))return Es(t.toString())}else return new Uint8Array;throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof t}`)}class j6 extends Is{constructor(e,n=264,r){const i=X5(r);if(i.length*8<n&&i.some(a=>a))throw new Error(`Invalid AccountId provided, expected ${n>>3} bytes, found ${i.length}`);super(e,i,n)}eq(e){return super.eq(X5(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return av(this,this.registry.chainSS58)}toRawType(){return"AccountId"}}class N0 extends j6{constructor(e,n){super(e,256,n)}}class _q extends j6{constructor(e,n){super(e,264,n)}}const $q=239,j5=252,C5=253,U5=254,eW=new Xe($q),tW=new Xe(1).shln(16),nW=new Xe(1).shln(32);function C6(t){return t instanceof yn?t.toBn():Ti(t)||Ht(t)||It(t)||Qe(t)||To(t)?t:C6(Es(t))}class yn extends Il{constructor(e,n=new Xe(0)){super(e,C6(n))}static calcLength(e){const n=Vn(e);return n.lte(eW)?1:n.lt(tW)?2:n.lt(nW)?4:8}static readLength(e){const n=e[0];return n===j5?[1,2]:n===C5?[1,4]:n===U5?[1,8]:[0,1]}static writeLength(e){switch(e.length){case 2:return new Uint8Array([j5]);case 4:return new Uint8Array([C5]);case 8:return new Uint8Array([U5]);default:return new Uint8Array([])}}eq(e){return Ti(e)||Ht(e)?super.eq(e):super.eq(this.registry.createTypeUnsafe("AccountIndex",[e]))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){const e=yn.calcLength(this);return av(this.toU8a().subarray(0,e),this.registry.chainSS58)}toRawType(){return"AccountIndex"}}class rW extends xn{constructor(e,n){super(e,{header:"Header",extrinsics:"Vec<Extrinsic>"},n)}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.getT("extrinsics")}get hash(){return this.header.hash}get header(){return this.getT("header")}}function tb(t,e){return e.fields.reduce((n,{name:r,type:i},a)=>(n[r.unwrapOr(`param${a}`).toString()]=t.createLookupType(i),n),{})}function iW(t,e,n){const{args:r,callIndex:i}=e,a=i instanceof U6?i.toU8a():i,s=n||t.findMetaCall(a).meta;return{args:r,argsDef:tb(t,s),callIndex:i,meta:s}}function aW(t,e,n){const r=t.firstCallIndex.slice();r.set(e.subarray(0,2),0);const i=n||t.findMetaCall(r).meta;return{args:e.subarray(2),argsDef:tb(t,i),callIndex:r,meta:i}}function sW(t,e=new Uint8Array,n){if(Qe(e)||It(e))return aW(t,qe(e),n);if(hr(e)&&e.callIndex&&e.args)return iW(t,e,n);throw new Error(`Call: Cannot decode value '${e}' of type ${typeof e}`)}class U6 extends Is{constructor(e,n){super(e,n,16)}toPrimitive(){return this.toHex()}}class oW extends xn{constructor(e,n,r){var i=(...s)=>(super(...s),Y(this,"_meta"),this);const a=sW(e,n,r);try{i(e,{callIndex:U6,args:xn.with(a.argsDef)},a)}catch(s){let o="unknown.unknown";try{const u=e.findMetaCall(a.callIndex);o=`${u.section}.${u.method}`}catch{}throw new Error(`Call: failed decoding ${o}:: ${s.message}`)}this._meta=a.meta}get args(){return[...this.getT("args").values()]}get argsDef(){return tb(this.registry,this.meta)}get argsEntries(){return[...this.getT("args").entries()]}get callIndex(){return this.getT("callIndex").toU8a()}get data(){return this.getT("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get section(){return this.registry.findMetaCall(this.callIndex).section}is(e){return e.callIndex[0]===this.callIndex[0]&&e.callIndex[1]===this.callIndex[1]}toHuman(e,n){let r;try{r=this.registry.findMetaCall(this.callIndex)}catch{}return he({args:this.argsEntries.reduce((i,[a,s])=>he(i,{[a]:s.toHuman(e,n)}),{}),method:r==null?void 0:r.method,section:r==null?void 0:r.section},e&&r?{docs:r.meta.docs.map(i=>i.toString())}:null)}toRawType(){return"Call"}}function Md(t,e,n,r=!0){return n&&Ze(n.unwrapOrDefault)?n:t.createTypeUnsafe(e,[r?lo(n)||qt(n)?null:Array.isArray(n)?n:[n]:n])}function cW(t,e,n){return e==="ss58Format"?Md(t,"Option<u32>",n,!1):e==="tokenDecimals"?Md(t,"Option<Vec<u32>>",n):e==="tokenSymbol"?Md(t,"Option<Vec<Text>>",n):e==="isEthereum"?Md(t,"Bool",n,!1):n}function uW(t,e){return(e&&Ze(e.entries)?[...e.entries()]:Object.entries(e||{})).reduce((n,[r,i])=>(n[r]=cW(t,r,i),n),{isEthereum:t.createTypeUnsafe("Bool",[]),ss58Format:t.createTypeUnsafe("Option<u32>",[]),tokenDecimals:t.createTypeUnsafe("Option<Vec<u32>>",[]),tokenSymbol:t.createTypeUnsafe("Option<Vec<Text>>",[])})}class lW extends h6{constructor(e,n){super(e,uW(e,n))}get isEthereum(){return this.getT("isEthereum")}get ss58Format(){return this.getT("ss58Format")}get tokenDecimals(){return this.getT("tokenDecimals")}get tokenSymbol(){return this.getT("tokenSymbol")}}const dW=Mi("aura"),fW=Mi("BABE"),hW=Mi("FRNK"),pW=Mi("pow_"),mW=Mi("nmbs");function bW(t,e,n){return n[t.createTypeUnsafe("RawAuraPreDigest",[e.toU8a(!0)]).slotNumber.mod(new Xe(n.length)).toNumber()]}function yW(t,e,n){const r=t.createTypeUnsafe("RawBabePreDigestCompat",[e.toU8a(!0)]);return n[r.value.toNumber()]}function gW(t,e){return t.createTypeUnsafe("AccountId",[e])}class xW extends Is{constructor(e,n){super(e,Ht(n)?Na(n,{isLe:!1}):n,32)}get isAura(){return this.eq(dW)}get isBabe(){return this.eq(fW)}get isGrandpa(){return this.eq(hW)}get isPow(){return this.eq(pW)}get isNimbus(){return this.eq(mW)}extractAuthor(e,n){if(n!=null&&n.length){if(this.isAura)return bW(this.registry,e,n);if(this.isBabe)return yW(this.registry,e,n)}if(this.isPow||this.isNimbus)return gW(this.registry,e)}toHuman(){return this.toString()}toRawType(){return"ConsensusEngineId"}toString(){return this.isAscii?Ta(this):mt(this)}}const D5=new Uint8Array([255]);function vW(t,e){const n=Es(e);return n.length===32?t.createTypeUnsafe("AccountId",[n]):t.createTypeUnsafe("AccountIndex",[Va(n)])}function wW(t,e){if(e.length===32)return t.createTypeUnsafe("AccountId",[e]);if(e[0]===255)return t.createTypeUnsafe("AccountId",[e.subarray(1)]);const[n,r]=yn.readLength(e);return t.createTypeUnsafe("AccountIndex",[Va(e.subarray(n,n+r))])}function PW(t,e){return e instanceof D6?e.inner:e instanceof N0||e instanceof yn?e:Ti(e)||Ht(e)||To(e)?t.createTypeUnsafe("AccountIndex",[e]):Array.isArray(e)||It(e)||Qe(e)?wW(t,qe(e)):vW(t,e)}class D6 extends ch{constructor(e,n=new Uint8Array){super(e,PW(e,n))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof yn?yn.calcLength(this.inner):this.inner.encodedLength}inspect(){const e=this.inner.toU8a().subarray(0,this._rawLength);return{outer:[new Uint8Array(this.inner instanceof yn?yn.writeLength(e):D5),e]}}toHex(){return mt(this.toU8a())}toRawType(){return"Address"}toU8a(e){const n=this.inner.toU8a().subarray(0,this._rawLength);return e?n:rr(this.inner instanceof yn?yn.writeLength(n):D5,n)}}function F5(t,e){return[0,32].includes(e.length)?{Id:e}:e.length===20?{Address20:e}:e.length<=8?{Index:t.createTypeUnsafe("AccountIndex",[e]).toNumber()}:e}function MW(t,e){return e instanceof N0?{Id:e}:Qe(e)?F5(t,e):e instanceof mm?e:e instanceof yn||Ti(e)||Ht(e)?{Index:Ht(e)?e:e.toNumber()}:Ut(e)?F5(t,Es(e.toString())):e}class mm extends Ha{constructor(e,n){super(e,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},MW(e,n))}inspect(){const{inner:e,outer:n=[]}=this.inner.inspect();return{inner:e,outer:[new Uint8Array([this.index]),...n]}}toString(){return this.value.toString()}}const O0=128,nb=0,kW=127,F6=0;function Z5(t){return t?new Uint8Array([O0|F6]):new Uint8Array([nb])}function TW(t){return t.length?t.subarray(0,1):new Uint8Array([nb])}function NW(t,e){return new Uint8Array([(new Bc(t,e.aye).isTrue?O0:nb)|t.createTypeUnsafe("Conviction",[e.conviction||F6]).index])}function OW(t,e){return Qe(e)?TW(e):qt(e)||e instanceof Boolean||Ol(e)?Z5(new Bc(t,e).isTrue):Ht(e)?Z5(e<0):NW(t,e)}var wf,Pf;class VW extends Is{constructor(e,n){const r=OW(e,n);super(e,r,8),G(this,wf),G(this,Pf),Q(this,wf,(r[0]&O0)===O0),Q(this,Pf,this.registry.createTypeUnsafe("Conviction",[r[0]&kW]))}get conviction(){return T(this,Pf)}get isAye(){return T(this,wf)}get isNay(){return!this.isAye}toHuman(e){return{conviction:this.conviction.toHuman(e),vote:this.isAye?"Aye":"Nay"}}toPrimitive(){return{aye:this.isAye,conviction:this.conviction.toPrimitive()}}toRawType(){return"Vote"}}wf=new WeakMap,Pf=new WeakMap;function q5(t){return Qe(t)||Array.isArray(t)?qe(t):It(t)||oX(t.toString())?$i(t.toString()):Ut(t)?qe(t):t}class Z6 extends Is{constructor(e,n=new Uint8Array){super(e,q5(n),160)}eq(e){return!!e&&super.eq(q5(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return iX(this)}toRawType(){return"AccountId"}}const SW=new Uint8Array([255]);function EW(t,e){const n=Es(e);return n.length===20?t.createTypeUnsafe("EthereumAccountId",[n]):t.createTypeUnsafe("AccountIndex",[Va(n)])}function zW(t,e){if(e.length===20)return t.createTypeUnsafe("EthereumAccountId",[e]);if(e[0]===255)return t.createTypeUnsafe("EthereumAccountId",[e.subarray(1)]);const[n,r]=yn.readLength(e);return t.createTypeUnsafe("AccountIndex",[Va(e.subarray(n,n+r))])}function IW(t,e){return e instanceof q6?e.inner:e instanceof Z6||e instanceof yn?e:Qe(e)||Array.isArray(e)||It(e)?zW(t,qe(e)):Ti(e)||Ht(e)||To(e)?t.createTypeUnsafe("AccountIndex",[e]):EW(t,e)}class q6 extends ch{constructor(e,n=new Uint8Array){super(e,IW(e,n))}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof yn?yn.calcLength(this.inner):this.inner.encodedLength}toHex(){return mt(this.toU8a())}toRawType(){return"Address"}toU8a(e){const n=this.inner.toU8a().subarray(0,this._rawLength);return e?n:rr(this.inner instanceof yn?yn.writeLength(n):SW,n)}}function LW(t,e){const n=e[0];if(n){if(n>=1&&n<=33){const r=n-1,i=e.subarray(1,r+1);return[t.createTypeUnsafe("Raw",[i]),1]}else if(n>=34&&n<=37)return[e.subarray(1,33),n-32]}else return[void 0,void 0];throw new Error(`Unable to decode Data, invalid indicator byte ${n}`)}function HW(t,e){return Qe(e)||Ut(e)?LW(t,qe(e)):e?[e,void 0]:[void 0,void 0]}class AW extends Ha{constructor(e,n){if(super(e,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...HW(e,n)),this.isRaw&&this.asRaw.length>32)throw new Error("Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return this.index===2}get isKeccak256(){return this.index===4}get isNone(){return this.index===0}get isRaw(){return this.index===1}get isSha256(){return this.index===3}get isShaThree256(){return this.index===5}get encodedLength(){return this.toU8a().length}toU8a(){if(this.index===0)return new Uint8Array(1);if(this.index===1){const n=this.value.toU8a(!0),r=Math.min(n.length,32),i=new Uint8Array(r+1);return i.set([r+1],0),i.set(n.subarray(0,r),1),i}const e=new Uint8Array(33);return e.set([this.index+32],0),e.set(this.value.toU8a(),1),e}}const RW={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function BW(t){if(Qe(t)||!t||Ut(t))return{key:t};if(t instanceof hh)return{key:t,method:t.method,section:t.section};if(Ze(t))return{key:t(),method:t.method,section:t.section};if(Array.isArray(t)){const[e,n=[]]=t;if(!Ze(e))throw new Error("Expected function input for key construction");if(e.meta&&e.meta.type.isMap){const r=e.meta.type.asMap;if(!Array.isArray(n)||n.length!==r.hashers.length)throw new Error(`Expected an array of ${r.hashers.length} values as params to a Map query`)}return{key:e(...n),method:e.method,section:e.section}}throw new Error(`Unable to convert input ${t} to StorageKey`)}function XW(t,e,n){let r=32;const i=n.length,a=new Array(i);for(let s=0;s<i;s++){const[o,u]=n[s],[h,p]=RW[o.type],y=p?t.createTypeUnsafe(Hl(t.lookup,u),[e.subarray(r+h)]):t.createTypeUnsafe("Raw",[e.subarray(r,r+h)]);r+=h+(p?y.encodedLength:0),a[s]=y}return a}function jW(t,e,n){if(!n||!n.type.isMap)return[];const{hashers:r,key:i}=n.type.asMap,a=r.length===1?[i]:t.lookup.getSiType(i).def.asTuple;return XW(t,e,r.map((s,o)=>[s,a[o]]))}function CW(t){if(t instanceof hh||Ze(t))return t.meta;if(Array.isArray(t)){const[e]=t;return e.meta}}function UW(t,e){if(e instanceof hh)return e.outputType;if(Ze(e))return cm(t,e.meta.type);if(Array.isArray(e)){const[n]=e;if(n.meta)return cm(t,n.meta.type)}return"Raw"}var Qo,Mf,Ru,Bu,Xu;class hh extends dh{constructor(e,n,r={}){const{key:i,method:a,section:s}=BW(n);super(e,i),G(this,Qo),G(this,Mf),G(this,Ru),G(this,Bu),G(this,Xu),Q(this,Ru,UW(e,n)),this.setMeta(CW(n),r.section||s,r.method||a)}get args(){return T(this,Qo)}get meta(){return T(this,Mf)}get method(){return T(this,Bu)}get outputType(){return T(this,Ru)}get section(){return T(this,Xu)}is(e){return e.section===this.section&&e.method===this.method}setMeta(e,n,r){Q(this,Mf,e),Q(this,Bu,r||T(this,Bu)),Q(this,Xu,n||T(this,Xu)),e&&Q(this,Ru,cm(this.registry,e.type));try{Q(this,Qo,jW(this.registry,this.toU8a(!0),e))}catch{}return this}toHuman(e,n){return T(this,Qo).length?T(this,Qo).map(r=>r.toHuman(void 0,n)):super.toHuman(void 0,n)}toRawType(){return"StorageKey"}}Qo=new WeakMap,Mf=new WeakMap,Ru=new WeakMap,Bu=new WeakMap,Xu=new WeakMap;const DW=Object.freeze(Object.defineProperty({__proto__:null,BitVec:iF,Bool:Bc,Bytes:dh,Data:AW,F32:D9,F64:F9,GeneralExtrinsic:Qq,GenericAccountId:N0,GenericAccountId32:N0,GenericAccountId33:_q,GenericAccountIndex:yn,GenericAddress:mm,GenericBlock:rW,GenericCall:oW,GenericChainProperties:lW,GenericConsensusEngineId:xW,GenericEthereumAccountId:Z6,GenericEthereumLookupSource:q6,GenericEvent:kq,GenericEventData:V6,GenericExtrinsic:fh,GenericExtrinsicEra:A6,GenericExtrinsicPayload:B6,GenericExtrinsicPayloadUnknown:Xq,GenericExtrinsicPayloadV4:dm,GenericExtrinsicPayloadV5:X6,GenericExtrinsicSignatureV4:qq,GenericExtrinsicSignatureV5:Yq,GenericExtrinsicUnknown:jq,GenericExtrinsicV4:k0,GenericExtrinsicV5:T0,GenericImmortalEra:L6,GenericLookupSource:D6,GenericMortalEra:H6,GenericMultiAddress:mm,GenericSignerPayload:Cq,GenericVote:VW,I128:G9,I16:q9,I256:Y9,I32:am,I64:W9,I8:Z9,ISize:K9,Null:_i,OptionBool:xF,StorageKey:hh,Text:c6,Type:PF,U128:_9,U16:Q9,U256:$9,U32:Il,U64:Qr,U8:J9,USize:e5,bool:Bc,f32:D9,f64:F9,i128:G9,i16:q9,i256:Y9,i32:am,i64:W9,i8:Z9,isize:K9,u128:_9,u16:Q9,u256:$9,u32:Il,u64:Qr,u8:J9,usize:e5},Symbol.toStringTag,{value:"Module"}));function W6(t){return({name:e})=>t(e)}const rb=W6(Rt),G6=W6(t=>t.toString());function FW(t,e){return t.callIndex[0]===e[0]&&t.callIndex[1]===e[1]}function ZW(t,e,n,r){const i=r.fields,a=Rt(r.name),s=(...o)=>{if(i.length!==o.length)throw new Error(`Extrinsic ${e}.${a} expects ${i.length} arguments, got ${o.length}.`);return t.createTypeUnsafe("Call",[{args:o,callIndex:n},r])};return s.is=o=>FW(o,n),s.callIndex=n,s.meta=r,s.method=a,s.section=e,s.toJSON=()=>r.toJSON(),s}function Y6({calls:t}){return t.isSome}function K6(t,e,n,r,i){const{fields:a,index:s}=n,o=a.length,u=new Array(o);for(let h=0;h<o;h++){const{name:p,type:y,typeName:w}=a[h];u[h]=he({name:Rt(p.unwrapOr(`param${h}`)),type:Hl(e,y)},w.isSome?{typeName:w.unwrap()}:null)}return ZW(t,r,new Uint8Array([i,s.toNumber()]),t.createTypeUnsafe("FunctionMetadataLatest",[he({args:u},n)]))}function qW(t,{lookup:e,pallets:n},r){const i={},a=n.filter(Y6);for(let s=0,o=a.length;s<o;s++){const{calls:u,index:h,name:p}=a[s],y=Rt(p),w=r>=12?h.toNumber():s;Zn(i,y,()=>Dc(e,u.unwrap(),rb,P=>K6(t,e,P,y,w)))}return i}function Rp(t,e){return e.toNumber()>=2?t.createTypeUnsafe("StorageHasherV10",[e.toNumber()+1]):t.createTypeUnsafe("StorageHasherV10",[e])}function WW(t,e){return e.isMap?[he({},e.asMap,{hasher:Rp(t,e.asMap.hasher)}),1]:e.isDoubleMap?[he({},e.asDoubleMap,{hasher:Rp(t,e.asDoubleMap.hasher),key2Hasher:Rp(t,e.asDoubleMap.key2Hasher)}),2]:[e.asPlain,0]}function GW(t,e){const n=e.storage.unwrapOr(null);return t.createTypeUnsafe("ModuleMetadataV10",[he({},e,{storage:n?he({},n,{items:n.items.map(r=>he({},r,{type:t.createTypeUnsafe("StorageEntryTypeV10",WW(t,r.type))}))}):null})])}function YW(t,{modules:e}){return t.createTypeUnsafe("MetadataV10",[{modules:e.map(n=>GW(t,n))}])}function KW(t,{modules:e}){return t.createTypeUnsafe("MetadataV11",[{extrinsic:{signedExtensions:[],version:0},modules:e}])}function JW(t,{extrinsic:e,modules:n}){return t.createTypeUnsafe("MetadataV12",[{extrinsic:e,modules:n.map(r=>t.createTypeUnsafe("ModuleMetadataV12",[he({},r,{index:255})]))}])}function QW(t,e){return t.createTypeUnsafe("MetadataV13",[e])}const _W={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}};function $W({knownTypes:t},e){var n;return{..._W[e]??{},...((n=t.typesAlias)==null?void 0:n[e])??{}}}const eG=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function va(t,e){const n=e.toString(),r=t.findIndex(({def:i})=>i.HistoricMetaCompat===n);return r!==-1?r:t.push({def:{HistoricMetaCompat:n}})-1}function tG(t,...e){for(let n=0,r=e.length;n<r;n++)va(t,e[n])}function nG(t,e){return t.push({def:{Tuple:e}})-1}function ib(t,e,n,r){return n.push({def:{Variant:{variants:r}},path:[`pallet_${t.toString()}`,"pallet",e]})-1}function rG(t,e,n){t.register({OriginCaller:{_enum:e.map((r,i)=>[r.name.toString(),n>=12?r.index.toNumber():i]).sort((r,i)=>r[1]-i[1]).reduce((r,[i,a])=>{for(let s=Object.keys(r).length;s<a;s++)r[`Empty${s}`]="Null";return r[i]=dC[i]||"Null",r},{})}})}function _l(t,e){e.forEach(n=>{const r=Object.keys(t).find(i=>n.eq(i));if(r)n.setOverride(t[r]);else{const i=n.toString(),a=Object.entries(t).reduce((s,[o,u])=>eG.reduce((h,[p,y])=>h.replace(`${p}${o}${y}`,`${p}${u}${y}`),s),i);i!==a&&n.setOverride(a)}})}function iG(t,e,n,r,i){const a=r.map(({args:s,docs:o,name:u},h)=>(_l(i,s.map(({type:p})=>p)),e.createTypeUnsafe("SiVariant",[{docs:o,fields:s.map(({name:p,type:y})=>e.createTypeUnsafe("SiField",[{name:p,type:va(t,y)}])),index:h,name:u}])));return e.createTypeUnsafe("PalletCallMetadataV14",[{type:ib(n,"Call",t,a)}])}function aG(t,e,n,r){return n.map(({docs:i,name:a,type:s,value:o})=>(_l(r,[s]),e.createTypeUnsafe("PalletConstantMetadataV14",[{docs:i,name:a,type:va(t,s),value:o}])))}function sG(t,e,n,r,i){const a=r.map(({docs:s,name:o},u)=>e.createTypeUnsafe("SiVariant",[{docs:s,fields:[],index:u,name:o}]));return e.createTypeUnsafe("PalletErrorMetadataV14",[{type:ib(n,"Error",t,a)}])}function oG(t,e,n,r,i){const a=r.map(({args:s,docs:o,name:u},h)=>(_l(i,s),e.createTypeUnsafe("SiVariant",[{docs:o,fields:s.map(p=>e.createTypeUnsafe("SiField",[{type:va(t,p)}])),index:h,name:u}])));return e.createTypeUnsafe("PalletEventMetadataV14",[{type:ib(n,"Event",t,a)}])}function Bp(t,e,n,{hashers:r,isLinked:i,isOptional:a,keys:s,value:o}){return _l(n,[o,...Array.isArray(s)?s:[s]]),e.createTypeUnsafe("StorageEntryTypeV14",[{Map:{hashers:r,key:r.length===1?va(t,s[0]):nG(t,s.map(u=>va(t,u))),value:i?va(t,`(${a?`Option<${o.toString()}>`:o.toString()}, Linkage<${s[0].toString()}>)`):va(t,o)}}])}function cG(t,e,{items:n,prefix:r},i){return e.createTypeUnsafe("PalletStorageMetadataV14",[{items:n.map(({docs:a,fallback:s,modifier:o,name:u,type:h})=>{let p;if(h.isPlain){const y=h.asPlain;_l(i,[y]),p=e.createTypeUnsafe("StorageEntryTypeV14",[{Plain:va(t,y)}])}else if(h.isMap){const y=h.asMap;p=Bp(t,e,i,{hashers:[y.hasher],isLinked:y.linked.isTrue,isOptional:o.isOptional,keys:[y.key],value:y.value})}else if(h.isDoubleMap){const y=h.asDoubleMap;p=Bp(t,e,i,{hashers:[y.hasher,y.key2Hasher],isLinked:!1,isOptional:o.isOptional,keys:[y.key1,y.key2],value:y.value})}else{const y=h.asNMap;p=Bp(t,e,i,{hashers:y.hashers,isLinked:!1,isOptional:o.isOptional,keys:y.keyVec,value:y.value})}return e.createTypeUnsafe("StorageEntryMetadataV14",[{docs:a,fallback:s,modifier:o,name:u,type:p}])}),prefix:r}])}function uG(t,{signedExtensions:e,version:n}){return t.createTypeUnsafe("ExtrinsicMetadataV14",[{signedExtensions:e.map(r=>({identifier:r,type:0})),type:0,version:n}])}function lG(t,e,n,{calls:r,constants:i,errors:a,events:s,storage:o}){const u=$W(e,Rt(n.name));return e.createTypeUnsafe("PalletMetadataV14",[{calls:r&&iG(t,e,n.name,r,u),constants:aG(t,e,i,u),errors:a&&sG(t,e,n.name,a),events:s&&oG(t,e,n.name,s,u),index:n.index,name:n.name,storage:o&&cG(t,e,o,u)}])}function dG(t,e,n){const r=[];tG(r,"Null","u8","u16","u32","u64"),rG(t,e.modules,n);const i=uG(t,e.extrinsic),a=e.modules.map(s=>lG(r,t,s,{calls:s.calls.unwrapOr(null),constants:s.constants,errors:s.errors.length?s.errors:null,events:s.events.unwrapOr(null),storage:s.storage.unwrapOr(null)}));return t.createTypeUnsafe("MetadataV14",[{extrinsic:i,lookup:{types:r.map((s,o)=>t.createTypeUnsafe("PortableType",[{id:o,type:s}]))},pallets:a}])}function fG(t,e,n){var r;const i=e.lookup.paramTypes.SpRuntimeUncheckedExtrinsic;return t.createTypeUnsafe("MetadataV15",[he({},e,{extrinsic:t.createTypeUnsafe("ExtrinsicMetadataV15",[he({},e.extrinsic,{addressType:i==null?void 0:i[0].type.unwrapOr(0),callType:i==null?void 0:i[1].type.unwrapOr(0),extraType:i==null?void 0:i[3].type.unwrapOr(0),signatureType:i==null?void 0:i[2].type.unwrapOr(0)})]),outerEnums:t.createTypeUnsafe("OuterEnums15",[{callType:i==null?void 0:i[1].type.unwrapOr(0),eventType:(r=e.lookup.paramTypes.FrameSystemEventRecord)==null?void 0:r[0].type.unwrapOr(0)}])})])}function hG(t,e){const n=t.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]),r=t.createTypeUnsafe("Vec<PalletAssociatedTypeMetadataV16>",[[]]),i=t.createTypeUnsafe("Vec<PalletViewFunctionMetadataV16>",[[]]);return t.createTypeUnsafe("PalletMetadataV16",[he({},e,{associatedTypes:r,calls:e.calls.isSome?mG(t,e.calls.unwrap()):null,constants:yG(t,e.constants),deprecationInfo:n,errors:e.errors.isSome?gG(t,e.errors.unwrap()):null,events:e.events.isSome?bG(t,e.events.unwrap()):null,storage:e.storage.isSome?pG(t,e.storage.unwrap()):null,viewFunctions:i})])}function pG(t,e){const n=t.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]),r=e.items.map(i=>t.createTypeUnsafe("StorageEntryMetadataV16",[he({},i,{deprecationInfo:n})]));return t.createTypeUnsafe("PalletStorageMetadataV16",[{items:t.createTypeUnsafe("Vec<StorageEntryMetadataV16>",[r]),prefix:e.prefix}])}function mG(t,e){const n=t.createTypeUnsafe("EnumDeprecationInfoV16",[]);return t.createTypeUnsafe("PalletCallMetadataV16",[{deprecationInfo:n,type:e.type}])}function bG(t,e){const n=t.createTypeUnsafe("EnumDeprecationInfoV16",[]);return t.createTypeUnsafe("PalletEventMetadataV16",[{deprecationInfo:n,type:e.type}])}function yG(t,e){const n=t.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]);return t.createTypeUnsafe("Vec<PalletConstantMetadataV16>",[e.map(r=>t.createTypeUnsafe("PalletConstantMetadataV16",[he({},r,{deprecationInfo:n})]))])}function gG(t,e){const n=t.createTypeUnsafe("EnumDeprecationInfoV16",[]);return t.createTypeUnsafe("PalletErrorMetadataV16",[{deprecationInfo:n,type:e.type}])}function xG(t,e){const n=e.signedExtensions.map(({additionalSigned:a,identifier:s,type:o})=>t.createTypeUnsafe("TransactionExtensionMetadataV16",[{identifier:s,implict:a,type:o}])),r=n.map((a,s)=>t.createTypeUnsafe("Compact<u32>",[s])),i=t.createTypeUnsafe("BTreeMap<u8, Vec<Compact<u32>>>",[new Map([[t.createTypeUnsafe("u8",[e.version]),t.createTypeUnsafe("Vec<Compact<u32>>",[r])]])]);return t.createTypeUnsafe("ExtrinsicMetadataV16",[{addressType:e.addressType,callType:e.callType,signatureType:e.signatureType,transactionExtensions:n,transactionExtensionsByVersion:i,versions:[e.version]}])}function vG(t,e){const n=t.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]),r=e.methods.map(i=>t.createTypeUnsafe("RuntimeApiMethodMetadataV16",[he({},i,{deprecationInfo:n})]));return t.createTypeUnsafe("RuntimeApiMetadataV16",[he({},e,{deprecationInfo:n,methods:r,version:t.createTypeUnsafe("Compact<u32>",[0])})])}function wG(t,e,n){const r=e.pallets.map(s=>hG(t,s)),i=xG(t,e.extrinsic),a=e.apis.map(s=>vG(t,s));return t.createTypeUnsafe("MetadataV16",[he({},e,{apis:a,extrinsic:i,pallets:r})])}function PG(t,e,n){return e}const W5=1635018093;class MG extends Il{constructor(e,n){if(super(e,n),!this.isEmpty&&!this.eq(W5))throw new Error(`MagicNumber mismatch: expected ${e.createTypeUnsafe("u32",[W5]).toHex()}, found ${this.toHex()}`)}}const kG=[16,15,14,13,12,11,10,9],TG=kG[0],NG=14;var ju,kf,Xi,Cu;const OG=class J6 extends xn{constructor(e,n){super(e,{magicNumber:MG,metadata:"MetadataAll"},n),G(this,ju,new Map),G(this,kf,r=>{if(this.version>r)throw new Error(`Cannot convert metadata from version ${this.version} to ${r}`);return this.version===r}),G(this,Xi,(r,i)=>{if(r!=="latest"&&T(this,kf).call(this,r)){const a=`asV${r}`;return T(this,Cu).call(this)[a]}if(!T(this,ju).has(r)){const a=r==="latest"?`asV${TG}`:`asV${r-1}`;T(this,ju).set(r,i(this.registry,this[a],this.version))}return T(this,ju).get(r)}),G(this,Cu,()=>this.getT("metadata"))}get asCallsOnly(){return new J6(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createTypeUnsafe("MetadataAll",[mq(this.registry,this.asLatest),NG])})}get asV9(){return T(this,kf).call(this,9),T(this,Cu).call(this).asV9}get asV10(){return T(this,Xi).call(this,10,YW)}get asV11(){return T(this,Xi).call(this,11,KW)}get asV12(){return T(this,Xi).call(this,12,JW)}get asV13(){return T(this,Xi).call(this,13,QW)}get asV14(){return T(this,Xi).call(this,14,dG)}get asV15(){return T(this,Xi).call(this,15,fG)}get asV16(){return T(this,Xi).call(this,16,wG)}get asLatest(){return T(this,Xi).call(this,"latest",PG)}get magicNumber(){return this.getT("magicNumber")}get version(){return T(this,Cu).call(this).index}getUniqTypes(e){return hq(this.registry,this.asLatest,e)}toJSON(){return this.asLatest,super.toJSON()}};ju=new WeakMap,kf=new WeakMap,Xi=new WeakMap,Cu=new WeakMap;let Q6=OG;const _6=new Uint8Array([109,101,116,97,9]),G5=_6.length-1;function VG(t,e){if(e.length===0)return _6;if(e[G5]===9)try{return new Q6(t,e)}catch{e[G5]=10}return e}class hc extends Q6{constructor(e,n){super(e,Qe(n)||Ut(n)?VG(e,qe(n)):n)}}function $6(t,{pallets:e},n){const r={};for(let i=0,a=e.length;i<a;i++){const{constants:s,name:o}=e[i];s.isEmpty||Zn(r,Rt(o),()=>fo({},s,u=>{const h=t.createTypeUnsafe(t.createLookupType(u.type),[$i(u.value.toHex())]);return h.meta=u,h},rb))}return r}function ew(t,e){return he({args:e.fields.map(({type:n})=>t.getTypeDef(n).type)},e)}function SG(t,{lookup:e,pallets:n},r){const i={};for(let a=0,s=n.length;a<s;a++){const{errors:o,index:u,name:h}=n[a];if(o.isSome){const p=r>=12?u.toNumber():a;Zn(i,Rt(h),()=>Dc(e,o.unwrap(),G6,y=>({is:w=>_r(w)&&_r(w.index)&&w.index.eq(p)&&(Qe(w.error)?w.error[0]===y.index.toNumber():_r(w.error)&&w.error.eq(y.index)),meta:t.createTypeUnsafe("ErrorMetadataLatest",[ew(e,y)])})))}}return i}function tw({events:t}){return t.isSome}function EG(t,{lookup:e,pallets:n},r){const i={},a=n.filter(tw);for(let s=0,o=a.length;s<o;s++){const{events:u,index:h,name:p}=a[s],y=r>=12?h.toNumber():s;Zn(i,Rt(p),()=>Dc(e,u.unwrap(),G6,w=>({is:P=>_r(P)&&Qe(P.index)&&y===P.index[0]&&w.index.eq(P.index[1]),meta:t.createTypeUnsafe("EventMetadataLatest",[ew(e,w)])})))}return i}const zG=t=>vc(t,128),IG={Blake2_128:t=>ys(t,128),Blake2_128Concat:t=>rr(ys(t,128),qe(t)),Blake2_256:t=>ys(t,256),Identity:t=>qe(t),Twox128:t=>vc(t,128),Twox256:t=>vc(t,256),Twox64Concat:t=>rr(vc(t,64),qe(t))};function LG(t){return IG[t.type]||zG}const ph={args:[],hashers:[],keys:[]};function HG(t){return!qt(t)}function nw({method:t,section:e},{args:n,keys:r}){if(Array.isArray(n)){if(n.filter(HG).length!==r.length)throw new Error(`Call to ${Rt(e||"unknown")}.${Rt(t||"unknown")} needs ${r.length} arguments, found [${n.join(", ")}]`)}else throw new Error(`Call to ${Rt(e||"unknown")}.${Rt(t||"unknown")} needs ${r.length} arguments`)}function rw(t,e,{args:n,hashers:r,keys:i}){const a=i.length,s=new Array(a);for(let o=0;o<a;o++)s[o]=LG(r[o])(t.createTypeUnsafe(t.createLookupType(i[o]),[n[o]]).toU8a());return[[vc(e.prefix,128),vc(e.method,128)],s]}function Xp(t,e,n){nw(e,n);const{meta:r}=e,[i,a]=rw(t,e,n);let s=[];if(r.type.isMap){const{hashers:u,key:h}=r.type.asMap;s=u.length===1?[`${u[0].type}(${Hl(t.lookup,h)})`]:t.lookup.getSiType(h).def.asTuple.map((p,y)=>`${u[y].type}(${Hl(t.lookup,p)})`)}const o=["module","method"].concat(...n.args.map((u,h)=>s[h]));return{inner:i.concat(...a).map((u,h)=>({name:o[h],outer:[u]}))}}function V0(t,e,n){const[r,i]=rw(t,e,n);return rr(...r,...i)}function jp(t,e,n){return nw(e,n),No(V0(t,e,n))}function AG(t,e,n){const{meta:{type:r}}=e;return(...i)=>{if(r.isPlain)return n.skipHashing?{inner:[],name:"wellKnown",outer:[qe(n.key)]}:Xp(t,e,ph);const{hashers:a,key:s}=r.asMap;return a.length===1?Xp(t,e,{args:i,hashers:a,keys:[s]}):Xp(t,e,{args:i,hashers:a,keys:t.lookup.getSiType(s).def.asTuple})}}function RG(t,e,n){const{meta:{type:r}}=e;let i=null;return(...a)=>{if(r.isPlain)return i||(i=n.skipHashing?No(qe(n.key)):jp(t,e,ph)),i;const{hashers:s,key:o}=r.asMap;return s.length===1?jp(t,e,{args:a,hashers:s,keys:[o]}):jp(t,e,{args:a,hashers:s,keys:t.lookup.getSiType(o).def.asTuple})}}function BG(t,e,n){const{meta:r,method:i,prefix:a,section:s}=e,o=RG(t,e,n);return o.inspect=AG(t,e,n),o.meta=r,o.method=Rt(i),o.prefix=a,o.section=s,o.toJSON=()=>he({storage:{method:i,prefix:a,section:s}},r.toJSON()),o}function XG(t,{meta:{docs:e,name:n,type:r},section:i},{method:a},s){const o=t.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:e,fallback:t.createTypeUnsafe("Bytes",[]),modifier:t.createTypeUnsafe("StorageEntryModifierLatest",[1]),name:n,type:t.createTypeUnsafe("StorageEntryTypeLatest",[r.asMap.key,0])}]);s.meta=o;const u=(...h)=>t.createTypeUnsafe("StorageKey",[s(...h),{method:a,section:i}]);return u.meta=o,u}function jG(t,e,n){const{meta:{type:r},method:i,section:a}=e;return n.iterKey=XG(t,e,n,(...s)=>{if(s.length&&(r.isPlain||s.length>=r.asMap.hashers.length))throw new Error(`Iteration of ${Rt(a||"unknown")}.${Rt(i||"unknown")} needs arguments to be at least one less than the full arguments, found [${s.join(", ")}]`);if(s.length&&r.isMap){const{hashers:o,key:u}=r.asMap,h=o.length===1?[u]:t.lookup.getSiType(u).def.asTuple;return new si(t,V0(t,e,{args:s,hashers:o.slice(0,s.length),keys:h.slice(0,s.length)}))}return new si(t,V0(t,e,ph))}),n}function iw(t,e,n){const{meta:{type:r}}=e,i=BG(t,e,n);return r.isMap&&jG(t,e,i),i.keyPrefix=(...a)=>i.iterKey&&i.iterKey(...a)||h0(i())[1],i}function Y5(t,e){const n=e.toLowerCase();return t.lookup.types.find(r=>r.type.def.isPrimitive&&r.type.def.asPrimitive.toString().toLowerCase()===n||r.type.def.isHistoricMetaCompat&&r.type.def.asHistoricMetaCompat.toString().toLowerCase()===n)}function CG(t,e){let n=Y5(t,e);if(!n&&(e==="Bytes"||e.startsWith("[u8;"))){const r=Y5(t,"u8");if(r)if(e==="Bytes")n=t.lookup.types.find(i=>i.type.def.isSequence&&i.type.def.asSequence.type.eq(r.id)||i.type.def.isHistoricMetaCompat&&i.type.def.asHistoricMetaCompat.eq(e));else{const i=Ba(e);n=t.lookup.types.find(a=>a.type.def.isArray&&a.type.def.asArray.eq({len:i.length,type:r.id})||a.type.def.isHistoricMetaCompat&&a.type.def.asHistoricMetaCompat.eq(e))}}return n||console.warn(`Unable to map ${e} to a lookup index`),n}function aw({method:t,prefix:e,section:n},r,{docs:i,type:a}){return s=>{var o;return iw(s,{meta:s.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:s.createTypeUnsafe("Vec<Text>",[[i]]),modifier:s.createTypeUnsafe("StorageEntryModifierLatest",["Required"]),name:s.createTypeUnsafe("Text",[t]),toJSON:()=>r,type:s.createTypeUnsafe("StorageEntryTypeLatest",[{Plain:((o=CG(s,a))==null?void 0:o.id)||0}])}]),method:t,prefix:e,section:n},{key:r,skipHashing:!0})}}const UG="Substrate",DG="substrate";function aa(t,e,n){return aw({method:t,prefix:UG,section:DG},e,n)}const FG={changesTrieConfig:aa("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:aa("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:aa("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),defaultChildStorageKeyPrefix:aa("defaultChildStorageKeyPrefix",":child_storage:default:",{docs:"Prefix of the default child storage keys in the top trie.",type:"u32"}),extrinsicIndex:aa("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:aa("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"}),intrablockEntropy:aa("intrablockEntropy",":intrablock_entropy",{docs:"Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.",type:"[u8; 32]"}),storageVersionStorageKeyPostfix:aa("storageVersionStorageKeyPostfix",":__STORAGE_VERSION__:",{docs:"The storage key postfix that is used to store the [`StorageVersion`] per pallet.",type:"u16"}),transactionLevelKey:aa("transactionLevelKey",":transaction_level:",{docs:"The key that holds the current number of active layers.",type:"u32"})};function ZG(t){const e={},n=Object.entries(FG);for(let r=0,i=n.length;r<i;r++)e[n[r][0]]=n[r][1](t);return{substrate:e}}const qG="palletVersion",WG=":__STORAGE_VERSION__:",GG={docs:"Returns the current pallet version from storage",type:"u16"};function YG(t,{pallets:e},n){const r=ZG(t);for(let i=0,a=e.length;i<a;i++){const{name:s,storage:o}=e[i];if(o.isSome){const u=Rt(s),{items:h,prefix:p}=o.unwrap(),y=p.toString();Zn(r,u,()=>fo({palletVersion:aw({method:qG,prefix:y,section:u},V0(t,{method:WG,prefix:s.toString()},ph),GG)(t)},h,w=>iw(t,{meta:w,method:w.name.toString(),prefix:y,section:u},{}),rb))}}return r}function KG(t,e){if(!(e instanceof hc))throw new Error("You need to pass a valid Metadata instance to Decorated");const n=e.asLatest,r=e.version;return{consts:$6(t,n),errors:SG(t,n,r),events:EG(t,n,r),query:YG(t,n),registry:t,tx:qW(t,n,r)}}const JG=new Uint8Array(2),K5=Dr("registry");function J5(t,e){return parseInt(t,10)-parseInt(e,10)}function sw(t){return t.toString()}function ow(t,e){const n=e.length,r=new Array(n);for(let i=0;i<n;i++)r[i]=t.getTypeDef(e[i].type).type;return r}function S0(t){const e=Object.keys(t);for(let n=0,r=e.length;n<r;n++)delete t[e[n]]}function ab({index:t}){return t.toString()}function QG(t,{lookup:e,pallets:n},r,i){S0(i);for(let a=0,s=n.length;a<s;a++){const{errors:o,index:u,name:h}=n[a];if(o.isSome){const p=Rt(h);Zn(i,r>=12?u.toNumber():a,()=>Dc(e,o.unwrap(),ab,({docs:y,fields:w,index:P,name:N})=>({args:ow(e,w),docs:y.map(sw),fields:w,index:P.toNumber(),method:N.toString(),name:N.toString(),section:p})))}}}function _G(t,{lookup:e,pallets:n},r,i){const a=n.filter(tw);S0(i);for(let s=0,o=a.length;s<o;s++){const{events:u,index:h,name:p}=a[s];Zn(i,r>=12?h.toNumber():s,()=>Dc(e,u.unwrap(),ab,y=>{const w=t.createType("EventMetadataLatest",he({},y,{args:ow(e,y.fields)}));return class extends V6{constructor(P,N){super(P,N,w,Rt(p),y.name.toString())}}}))}}function $G(t,{lookup:e,pallets:n},r,i,a){const s=n.filter(Y6);S0(i),S0(a);for(let o=0,u=s.length;o<u;o++){const{calls:h,index:p,name:y}=s[o],w=r>=12?p.toNumber():o,P=Rt(y),N=h.unwrap();Zn(i,w,()=>Dc(e,N,ab,j=>K6(t,e,j,P,w)));const{path:O}=t.lookup.getSiType(N.type),z=O.findIndex(j=>j.eq("pallet"));if(z!==-1){const j=Rt(O.slice(0,z).map((I,A)=>A===0?I.replace(/^(frame|pallet)_/,""):I).join(" "));a[j]?a[j].push(P):a[j]=[P]}}}function eY(t,e){const n=t.getChainProperties(),r=$6(t,e.asLatest,e.version),i=r.system&&(r.system.sS58Prefix||r.system.ss58Prefix);if(!i)return n;const{isEthereum:a,tokenDecimals:s,tokenSymbol:o}=n||{};return t.createTypeUnsafe("ChainProperties",[{isEthereum:a,ss58Format:i,tokenDecimals:s,tokenSymbol:o}])}var mi,Er,_o,Uu,Tf,Du,Nf,bi,$o,Ys,Fu,ec,tc,Of,Vf,Ks,Zu,qu,Sf,bm,ym;class cw{constructor(e){G(this,mi),G(this,Er,new Map),G(this,_o,new Map),G(this,Uu,null),G(this,Tf,ys),G(this,Du,{}),G(this,Nf),G(this,bi),G(this,$o,0),G(this,Ys,Hp),G(this,Fu,new Map),G(this,ec),G(this,tc),G(this,Of),G(this,Vf),G(this,Ks,{}),G(this,Zu,{}),G(this,qu,{}),G(this,Sf,{}),Y(this,"createdAtHash"),G(this,bm,r=>{const i=Object.entries(r);for(let a=0,s=i.length;a<s;a++){const[o,u]=i[a];if(Ze(u))T(this,Er).set(o,u);else{const h=Ut(u)?u:bt(u);if(o===h)throw new Error(`Unable to register circular ${o} === ${h}`);T(this,Er).has(o)&&T(this,Er).delete(o),T(this,_o).set(o,h)}}}),G(this,ym,r=>{this.setLookup(r);let i=null;if(this.hasType("SpWeightsWeightV2Weight")){const a=this.createType("SpWeightsWeightV2Weight");i=a.refTime&&a.proofSize?"SpWeightsWeightV2Weight":"WeightV1"}else Ti(this.createType("Weight"))||(i="WeightV1");i&&this.register({Weight:i})}),Q(this,tc,new Map(Object.entries({Json:h6,Metadata:hc,PortableRegistry:cq,Raw:si,...DW}))),Q(this,Of,Array.from(T(this,tc).entries())),Q(this,Vf,P0);const n=Object.values(T(this,Vf));for(let r=0,i=n.length;r<i;r++)this.register(n[r].types);e&&(this.createdAtHash=this.createType("BlockHash",e))}get chainDecimals(){var e;if((e=T(this,mi))!=null&&e.tokenDecimals.isSome){const n=T(this,mi).tokenDecimals.unwrap();if(n.length)return n.map(r=>r.toNumber())}return[12]}get chainIsEthereum(){var e;return((e=T(this,mi))==null?void 0:e.isEthereum.isTrue)||!1}get chainSS58(){var e;return(e=T(this,mi))!=null&&e.ss58Format.isSome?T(this,mi).ss58Format.unwrap().toNumber():void 0}get chainTokens(){var e;if((e=T(this,mi))!=null&&e.tokenSymbol.isSome){const n=T(this,mi).tokenSymbol.unwrap();if(n.length)return n.map(sw)}return[Vo.getDefaults().unit]}get firstCallIndex(){return T(this,Uu)||JG}isLookupType(e){return/Lookup\d+$/.test(e)}createLookupType(e){return`Lookup${typeof e=="number"?e:e.toNumber()}`}get knownTypes(){return T(this,Du)}get lookup(){return ps(T(this,Nf),"PortableRegistry has not been set on this registry")}get metadata(){return ps(T(this,bi),"Metadata has not been set on this registry")}get unknownTypes(){return[...T(this,Fu).keys()]}get signedExtensions(){return T(this,Ys)}clearCache(){Q(this,Er,new Map)}createClass(e){return pl(this,e)}createClassUnsafe(e){return pl(this,e)}createType(e,...n){return om(this,e,n)}createTypeUnsafe(e,n,r){return om(this,e,n,r)}findMetaCall(e){const[n,r]=[e[0],e[1]];return ps(T(this,Ks)[`${n}`]&&T(this,Ks)[`${n}`][`${r}`],()=>`findMetaCall: Unable to find Call with index [${n}, ${r}]/[${e.toString()}]`)}findMetaError(e){const[n,r]=Qe(e)?[e[0],e[1]]:[e.index.toNumber(),Qe(e.error)?e.error[0]:e.error.toNumber()];return ps(T(this,Zu)[`${n}`]&&T(this,Zu)[`${n}`][`${r}`],()=>`findMetaError: Unable to find Error with index [${n}, ${r}]/[${e.toString()}]`)}findMetaEvent(e){const[n,r]=[e[0],e[1]];return ps(T(this,qu)[`${n}`]&&T(this,qu)[`${n}`][`${r}`],()=>`findMetaEvent: Unable to find Event with index [${n}, ${r}]/[${e.toString()}]`)}get(e,n,r){return this.getUnsafe(e,n,r)}getUnsafe(e,n,r){let i=T(this,Er).get(e)||T(this,tc).get(e);if(!i){const a=T(this,_o).get(e);let s;a?s=pl(this,a):r?s=qF(this,r):n&&(K5.warn(`Unable to resolve type ${e}, it will fail on construction`),T(this,Fu).set(e,!0),s=Qv.with(e)),s&&(i=class extends s{},T(this,Er).set(e,i),r&&Ht(r.lookupIndex)&&T(this,Er).set(this.createLookupType(r.lookupIndex),i))}return i}getChainProperties(){return T(this,mi)}getClassName(e){const n=[];for(const[r,i]of T(this,Of))e===i&&n.push(r);for(const[r,i]of T(this,Er).entries())e===i&&n.push(r);return n.length?n.sort().reverse()[0]:void 0}getDefinition(e){return T(this,_o).get(e)}getModuleInstances(e,n){var r,i,a,s,o;return((o=(s=(a=(i=(r=T(this,Du))==null?void 0:r.typesBundle)==null?void 0:i.spec)==null?void 0:a[e.toString()])==null?void 0:s.instances)==null?void 0:o[n])||T(this,Sf)[n]}getOrThrow(e){const n=this.get(e);if(!n)throw new Error(`type ${e} not found`);return n}getOrUnknown(e){return this.get(e,!0)}getTransactionExtensionVersion(){return 0}getSignedExtensionExtra(){return I5(T(this,Ys),"payload",T(this,ec))}getSignedExtensionTypes(){return I5(T(this,Ys),"extrinsic",T(this,ec))}hasClass(e){return T(this,Er).has(e)||!!T(this,tc).has(e)}hasDef(e){return T(this,_o).has(e)}hasType(e){return!T(this,Fu).get(e)&&(this.hasClass(e)||this.hasDef(e))}hash(e){return this.createType("CodecHash",T(this,Tf).call(this,e))}register(e,n){if(Ze(e))T(this,Er).set(e.name,e);else if(Ut(e)){if(Ze(n)){if(e===n.toString())throw new Error(`Unable to register circular ${e} === ${e}`)}else throw new Error(`Expected class definition passed to '${e}' registration`);T(this,Er).set(e,n)}else T(this,bm).call(this,e)}setChainProperties(e){e&&Q(this,mi,e)}setHasher(e){Q(this,Tf,e||ys)}setKnownTypes(e){Q(this,Du,e)}setLookup(e){Q(this,Nf,e),e.register()}setMetadata(e,n,r,i){Q(this,bi,e.asLatest),Q(this,$o,e.version),Q(this,Uu,null),T(this,ym).call(this,T(this,bi).lookup),$G(this,T(this,bi),T(this,$o),T(this,Ks),T(this,Sf)),QG(this,T(this,bi),T(this,$o),T(this,Zu)),_G(this,T(this,bi),T(this,$o),T(this,qu));const[a]=Object.keys(T(this,Ks)).sort(J5);if(a){const[s]=Object.keys(T(this,Ks)[a]).sort(J5);s&&Q(this,Uu,new Uint8Array([parseInt(a,10),parseInt(s,10)]))}this.setSignedExtensions(n||(T(this,bi).extrinsic.versions.length>0&&T(this,bi).extrinsic.versions.every(s=>s>0)?T(this,bi).extrinsic.transactionExtensions.map(({identifier:s})=>s.toString()):Hp),r,i),this.setChainProperties(eY(this,e))}setSignedExtensions(e=Hp,n,r){if(Q(this,Ys,e),Q(this,ec,n),!r){const i=Pq(T(this,Ys),T(this,ec));i.length&&K5.warn(`Unknown signed extensions ${i.join(", ")} found, treating them as no-effect`)}}}mi=new WeakMap,Er=new WeakMap,_o=new WeakMap,Uu=new WeakMap,Tf=new WeakMap,Du=new WeakMap,Nf=new WeakMap,bi=new WeakMap,$o=new WeakMap,Ys=new WeakMap,Fu=new WeakMap,ec=new WeakMap,tc=new WeakMap,Of=new WeakMap,Vf=new WeakMap,Ks=new WeakMap,Zu=new WeakMap,qu=new WeakMap,Sf=new WeakMap,bm=new WeakMap,ym=new WeakMap;function uw(t=1750){return e=>{let[n,r,i,a]=[0,0,Ea.EMPTY,Ea.EMPTY];return new gn(s=>(e.subscribe(s),r++===0&&(n===1?a.unsubscribe():i=e.connect(),n=3),()=>{--r===0&&(n===2?(n=0,a.unsubscribe()):(n=1,a=aj.schedule(()=>{n=0,i.unsubscribe()},t)))}))}}function tY(t,e){return bt({t})===bt({t:e})}function nY(t){throw t}function rY(){}function sb({delay:t,skipChange:e=!1,skipTimeout:n=!1}={}){return r=>r.pipe(za(nY),e?Vs(rY):Fj(tY),Cv(1),n?A2():uw(t))}function ae(t,e){const n=pu((...r)=>new gn(i=>{const a=e(...r).subscribe(i);return()=>{n.unmemoize(...r),a.unsubscribe()}}).pipe(sb()),{getInstanceId:()=>t});return n}const iY=Dr("rpc-core"),aY={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}},sY=1024*10*10;function kd(t,{noErrorLog:e,params:n,type:r},i){e||iY.error(`${t}(${n.map(({isOptional:a,name:s,type:o})=>`${s}${a?"?":""}: ${o}`).join(", ")}): ${r}:: ${i.message}`)}function Q5(t){return["0x3a636f6465"].includes(t.toHex())}var nc,Wu,Gu,rc,Ef,Yu,zf;class oY{constructor(e,n,{isPedantic:r=!0,provider:i,rpcCacheCapacity:a,ttl:s,userRpc:o={}}){if(G(this,nc),G(this,Wu),G(this,Gu),G(this,rc),G(this,Ef,0),G(this,Yu),G(this,zf),Y(this,"mapping",new Map),Y(this,"provider"),Y(this,"sections",[]),!i||!Ze(i.send))throw new Error("Expected Provider to API create");Q(this,nc,e),Q(this,Wu,r),Q(this,Gu,n),this.provider=i;const u=Object.keys(ml);this.sections.push(...u),Q(this,rc,new z2(a||sY,s)),this.addUserInterfaces(o)}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}async disconnect(){return this.provider.disconnect()}get stats(){const e=this.provider.stats;return e?{...e,core:{cacheHits:T(this,Ef),cacheSize:T(this,rc).length}}:void 0}setRegistrySwap(e){Q(this,Yu,pu(e,{getInstanceId:()=>T(this,nc)}))}setResolveBlockHash(e){Q(this,zf,pu(e,{getInstanceId:()=>T(this,nc)}))}addUserInterfaces(e){this.sections.push(...Object.keys(e).filter(n=>!this.sections.includes(n)));for(let n=0,r=this.sections.length;n<r;n++){const i=this.sections[n],a=he({},ml[i],e[i]),s=Object.keys(a);for(let o=0,u=s.length;o<u;o++){const h=s[o],p=a[h],y=p.endpoint||`${i}_${h}`;if(!this.mapping.has(y)){const w=!!p.pubsub;this[i]||(this[i]={}),this.mapping.set(y,he({},p,{isSubscription:w,jsonrpc:y,method:h,section:i})),Zn(this[i],h,()=>w?this._createMethodSubscribe(i,h,p):this._createMethodSend(i,h,p))}}}}_memomize(e,n){const r={getInstanceId:()=>T(this,nc)},i=pu(e(!0),r);return i.raw=pu(e(!1),r),i.meta=n,i}_formatResult(e,n,r,i,a,s,o){return e?this._formatOutput(n,r,i,a,s,o):o}_createMethodSend(e,n,r){const i=r.endpoint||`${e}_${n}`,a=r.params.findIndex(({isHistoric:h})=>h);let s=null;const o=async(h,p)=>{var y;const w=a===-1?null:p[a],P=w&&r.params[a].type==="BlockNumber"?await((y=T(this,zf))==null?void 0:y.call(this,w)):w,{registry:N}=h&&P&&T(this,Yu)?await T(this,Yu).call(this,qe(P)):{registry:T(this,Gu)},O=this._formatParams(N,null,r,p),z=await this.provider.send(i,O.map(j=>j.toJSON()),!!P);return this._formatResult(h,N,P,n,r,O,z)},u=h=>(...p)=>{const y=h&&a!==-1&&!!p[a];return new gn(w=>(o(h,p).then(P=>{w.next(P),w.complete()}).catch(P=>{kd(n,r,P),w.error(P),w.complete()}),()=>{h?s==null||s.unmemoize(...p):s==null||s.raw.unmemoize(...p)})).pipe(Cv(1),y?uw():A2())};return s=this._memomize(u,r),s}_createSubscriber({paramsJson:e,subName:n,subType:r,update:i},a){return new Promise((s,o)=>{this.provider.subscribe(r,n,e,i).then(s).catch(u=>{a(u),o(u)})})}_createMethodSubscribe(e,n,r){const[i,a,s]=r.pubsub,o=`${e}_${a}`,u=`${e}_${s}`,h=`${e}_${i}`;let p=null;const y=w=>(...P)=>new gn(N=>{let O=Promise.resolve(null);const z=T(this,Gu),j=I=>{kd(n,r,I),N.error(I)};try{const I=this._formatParams(z,null,r,P),A=(U,H)=>{if(U){kd(n,r,U);return}try{N.next(this._formatResult(w,z,null,n,r,I,H))}catch(X){N.error(X)}};O=this._createSubscriber({paramsJson:I.map(U=>U.toJSON()),subName:o,subType:h,update:A},j)}catch(I){j(I)}return()=>{w?p==null||p.unmemoize(...P):p==null||p.raw.unmemoize(...P),O.then(I=>lo(I)?Promise.resolve(!1):this.provider.unsubscribe(h,u,I)).catch(I=>kd(n,r,I))}}).pipe(sb());return p=this._memomize(y,r),p}_formatParams(e,n,r,i){const a=i.length,s=r.params.filter(({isOptional:u})=>!u).length;if(a<s||a>r.params.length)throw new Error(`Expected ${r.params.length} parameters${s===r.params.length?"":` (${r.params.length-s} optional)`}, ${a} found instead`);const o=new Array(a);for(let u=0;u<a;u++)o[u]=e.createTypeUnsafe(r.params[u].type,[i[u]],{blockHash:n});return o}_formatOutput(e,n,r,i,a,s){if(i.type==="StorageData"){const o=a[0];return this._formatStorageData(e,n,o,s)}else if(i.type==="StorageChangeSet"){const o=a[0];return o?this._formatStorageSet(e,s.block,o,s.changes):e.createType("StorageChangeSet",s)}else if(i.type==="Vec<StorageChangeSet>"){const o=s,u=o.length,h=new Array(u);for(let p=0;p<u;p++){const{block:y,changes:w}=o[p];h[p]=[e.createType("BlockHash",y),this._formatStorageSet(e,y,a[0],w)]}return r==="queryStorageAt"?h[0][1]:h}return e.createTypeUnsafe(i.type,[s],{blockHash:n})}_formatStorageData(e,n,r,i){const a=lo(i),s=a?null:Q5(r)?i:qe(i);return this._newType(e,n,r,s,a)}_formatStorageSet(e,n,r,i){const a=r.length,s=a!==1,o=new Array(a);for(let u=0;u<a;u++)o[u]=this._formatStorageSetEntry(e,n,r[u],i,s,u);return o}_formatStorageSetEntry(e,n,r,i,a,s){const o=r.toHex(),u=i.find(([N])=>N===o),h=qt(u);if(h&&a){const N=T(this,rc).get(o);if(N)return n7(this,Ef)._++,N}const p=h?null:u[1],y=lo(p),w=y||Q5(r)?p:qe(p),P=this._newType(e,n,r,w,y,s);return this._setToCache(o,P),P}_setToCache(e,n){T(this,rc).set(e,n)}_newType(e,n,r,i,a,s=-1){const o=r.outputType||"Raw",u=r.meta||aY,h=s===-1?"":` entry ${s}:`;try{return e.createTypeUnsafe(o,[a?u.fallback?o.includes("Linkage<")?rr($i(u.fallback.toHex()),new Uint8Array(2)):$i(u.fallback.toHex()):void 0:u.modifier.isOptional?e.createTypeUnsafe(o,[i],{blockHash:n,isPedantic:T(this,Wu)}):i],{blockHash:n,isFallback:a&&!!u.fallback,isOptional:u.modifier.isOptional,isPedantic:T(this,Wu)&&!u.modifier.isOptional})}catch(p){throw new Error(`Unable to decode storage ${r.section||"unknown"}.${r.method||"unknown"}:${h}: ${p.message}`)}}}nc=new WeakMap,Wu=new WeakMap,Gu=new WeakMap,rc=new WeakMap,Ef=new WeakMap,Yu=new WeakMap,zf=new WeakMap;function gm(t){return y7(t.number)?t.number.unwrap():t.number}const cY={del:()=>{},forEach:()=>{},get:()=>{},set:(t,e)=>e};let $l;function uY(t="",e){$l=cY}uY();function lw(t){return t.pipe(ne(([e])=>e))}function Xa(t){return(e,n)=>ae(e,(...r)=>lw(t(n,...r)))}function dw(t,e,n,r){Zn(t,e,()=>fo({},n(e),i=>r(e,i)))}function lY(t,e){return ae(t,n=>{const r=Qe(n)?n:Es((n||"").toString());if(r.length>8)return ee(e.registry.createType(r.length===20?"AccountId20":"AccountId",r));const i=e.registry.createType("AccountIndex",r);return e.derive.accounts.indexToId(i.toString()).pipe(ne(a=>ps(a,"Unable to retrieve accountId")))})}function dY(t,[e,n,r,i,a]){const s=t==null?void 0:t.toString(),o=u=>u.toString()===s;return{isCouncil:((e==null?void 0:e.map(u=>Array.isArray(u)?u[0]:u.who))||n||[]).some(o),isSociety:(i||[]).some(o),isSudo:(a==null?void 0:a.toString())===s,isTechCommittee:(r||[]).some(o)}}function fY(t,e){return ae(t,()=>{var n,r,i,a,s;const o=[void 0,[],[],[],void 0],u=[(n=e.query.elections||e.query.phragmenElection||e.query.electionsPhragmen)==null?void 0:n.members,(r=e.query.council)==null?void 0:r.members,(i=e.query.technicalCommittee)==null?void 0:i.members,(a=e.query.society)==null?void 0:a.members,(s=e.query.sudo)==null?void 0:s.key],h=u.filter(p=>p);return h.length?e.queryMulti(h).pipe(ne(p=>{let y=-1;for(let w=0,P=u.length;w<P;w++)Ze(u[w])&&(o[w]=p[++y]);return o})):ee(o)})}function hY(t,e){return ae(t,n=>e.derive.accounts._flags().pipe(ne(r=>dY(n,r))))}function pY(t,e){return ae(t,n=>{try{const r=Qe(n)?n:Es((n||"").toString());if(r.length>8){const a=e.registry.createType(r.length===20?"AccountId20":"AccountId",r);return e.derive.accounts.idToIndex(a).pipe(ne(s=>[a,s]))}const i=e.registry.createType("AccountIndex",r);return e.derive.accounts.indexToId(i.toString()).pipe(ne(a=>[a,i]))}catch{return ee([void 0,void 0])}})}const mY={toHex:()=>{}};function or(t){return t&&(t.isRaw?Ta(t.asRaw.toU8a(!0)):t.isNone?void 0:t.toHex())}function bY(t){return t.reduce((e,[n,r])=>{const i=or(n),a=or(r);return i&&a&&(e[i]=a),e},{})}function fw(t){const e=t.unwrap();return Array.isArray(e)?e[0]:e}function yY(t,e){if(!(t!=null&&t.isSome))return{judgements:[]};const{info:n,judgements:r}=fw(t),i=or(n.display);return{discord:or(n.discord),display:e&&or(e[1])||i,displayParent:e&&i,email:or(n.email),github:or(n.github),image:or(n.image),judgements:r,legal:or(n.legal),matrix:or(n.matrix),other:n.additional?bY(n.additional):{},parent:e==null?void 0:e[0],pgp:n.pgpFingerprint.unwrapOr(mY).toHex(),riot:or(n.riot),twitter:or(n.twitter),web:or(n.web)}}function gY(t,e,n){if(e!=null&&e.isSome)return ee([e,void 0]);if(n!=null&&n.isSome){const r=n.unwrap();return me([t.derive.accounts._identity(r[0]).pipe(ne(([i])=>i)),ee(r)])}return ee([void 0,void 0])}function xY(t,e){return ae(t,n=>{var r;return n&&(r=e.query.identity)!=null&&r.identityOf?me([e.query.identity.identityOf(n),e.query.identity.superOf(n)]):ee([void 0,void 0])})}function vY(t,e){return ae(t,n=>e.derive.accounts._identity(n).pipe(be(([r,i])=>gY(e,r,i)),ne(([r,i])=>yY(r,i)),be(r=>wY(r,e,n))))}function wY(t,e,n){const r=t.parent||n;return!r||!e.query.identity?ee(t):e.query.identity.subsOf(r).pipe(ne(i=>{const a=i[1];return{...t,subs:a}}))}const PY=Xa((t,e)=>t.derive.accounts.hasIdentityMulti([e]));function MY(t,e){return ae(t,n=>{var r;return(r=e.query.identity)!=null&&r.identityOf?me([e.query.identity.identityOf.multi(n),e.query.identity.superOf.multi(n)]).pipe(ne(([i,a])=>i.map((s,o)=>{const u=a[o],h=u&&u.isSome?u.unwrap()[0].toString():void 0;let p;if(s&&s.isSome){const y=or(fw(s).info.display);y&&!It(y)&&(p=y)}return{display:p,hasIdentity:!!(p||h),parentId:h}}))):ee(n.map(()=>({hasIdentity:!1})))})}function kY(t,e){return ae(t,n=>e.derive.accounts.indexes().pipe(ne(r=>r[n.toString()])))}let Cp=null;function TY(t){return t.query.indices.accounts.entries().pipe(ne(e=>e.reduce((n,[r,i])=>(i.isSome&&(n[i.unwrap()[0].toString()]=t.registry.createType("AccountIndex",r.args[0])),n),{})))}function NY(t,e){return ae(t,()=>Cp?ee(Cp):(e.query.indices?TY(e).pipe(Jl({})):ee({})).pipe(ne(n=>(Cp=n,n))))}function OY(t,e){return ae(t,n=>e.query.indices?e.query.indices.accounts(n).pipe(ne(r=>r.unwrapOr([])[0])):ee(void 0))}function VY(t,e){var n;return(e&&(n=t.query.nicks)!=null&&n.nameOf?t.query.nicks.nameOf(e):ee(void 0)).pipe(ne(r=>r!=null&&r.isSome?Ta(r.unwrap()[0]).substring(0,t.consts.nicks.maxLength.toNumber()):void 0))}function SY(t,e){return ae(t,n=>e.derive.accounts.idAndIndex(n).pipe(be(([r,i])=>me([ee({accountId:r,accountIndex:i}),e.derive.accounts.identity(r),VY(e,r)])),ne(([{accountId:r,accountIndex:i},a,s])=>({accountId:r,accountIndex:i,identity:a,nickname:s}))))}const EY=Object.freeze(Object.defineProperty({__proto__:null,_flags:fY,_identity:xY,accountId:lY,flags:hY,hasIdentity:PY,hasIdentityMulti:MY,idAndIndex:pY,idToIndex:kY,identity:vY,indexToId:OY,indexes:NY,info:SY},Symbol.toStringTag,{value:"Module"}));function zY(t,e){const n=t.registry.getModuleInstances(t.runtimeVersion.specName,e),r=n!=null&&n.length?n[0]:e;return t.query[r]}function ed(t,e){return(n,r)=>ae(n,e(zY(r,t),r,n))}function ob(t,e){return n=>ed(n,r=>()=>Ze(r==null?void 0:r[t])?r[t]():ee(e))}const mh=ob("members",[]);function bh(t){return ed(t,e=>()=>Ze(e==null?void 0:e.prime)?e.prime().pipe(ne(n=>n.unwrapOr(null))):ee(null))}function IY(t,[e,n,r]){return n.map((i,a)=>({hash:t.registry.createType("Hash",e[a]),proposal:i&&i.isSome?i.unwrap():null,votes:r[a].unwrapOr(null)}))}function hw(t,e,n){return(Ze(e==null?void 0:e.proposals)&&n.length?me([ee(n),e.proposalOf.multi(n).pipe(za(()=>ee(n.map(()=>null)))),e.voting.multi(n)]):ee([[],[],[]])).pipe(ne(r=>IY(t,r)))}function yh(t){return ed(t,e=>()=>ee(Ze(e==null?void 0:e.proposals)))}function gh(t){return ed(t,(e,n)=>()=>n.derive[t].proposalHashes().pipe(be(r=>hw(n,e,r))))}function xh(t){return ed(t,(e,n)=>r=>Ze(e==null?void 0:e.proposals)?lw(hw(n,e,[r])):ee(null))}const vh=ob("proposalCount",null),wh=ob("proposals",[]),LY=mh("allianceMotion"),HY=yh("allianceMotion"),AY=xh("allianceMotion"),RY=vh("allianceMotion"),BY=wh("allianceMotion"),XY=gh("allianceMotion"),jY=bh("allianceMotion"),CY=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:HY,members:LY,prime:jY,proposal:AY,proposalCount:RY,proposalHashes:BY,proposals:XY},Symbol.toStringTag,{value:"Module"}));function cb(t){return t.query.voterList||t.query.voterBagsList||t.query.bagsList}function UY(t,e){const n=t.map((i,a)=>({bag:e[a].unwrapOr(null),id:i,key:i.toString()})).sort((i,a)=>a.id.cmp(i.id)),r=n.length-1;return n.map((i,a)=>he(i,{bagLower:a===r?dn:n[a+1].id,bagUpper:i.id,index:a}))}function DY(t,e){const n=cb(e);return ae(t,r=>{const i=r.map(a=>Vn(a));return i.length?n.listBags.multi(i).pipe(ne(a=>UY(i,a))):ee([])})}function FY(t,e){const n=cb(e);return ae(t,()=>n.listBags.keys().pipe(be(r=>e.derive.bagsList._getIds(r.map(({args:[i]})=>i))),ne(r=>r.filter(({bag:i})=>i))))}function ZY(t,e){return ae(t,n=>e.derive.bagsList._getIds([Vn(n)]).pipe(ne(r=>r[0])))}function qY(t,e){return ae(t,n=>e.derive.bagsList.listNodes(n.bag).pipe(ne(r=>he({nodes:r},n))))}function WY(t,e){return ae(t,n=>e.derive.bagsList.get(n).pipe(be(r=>e.derive.bagsList.expand(r))))}function GY(t,e){const n=new zl(e),r=cb(t);return n.pipe(be(i=>r.listNodes(i)),Vs(i=>{Po(()=>{i.isSome&&i.value.next.isSome?n.next(i.unwrap().next.unwrap()):n.complete()})}),sh(),ne(i=>i.map(a=>a.unwrap())))}function YY(t,e){return ae(t,n=>n&&n.head.isSome?GY(e,n.head.unwrap()):ee([]))}const KY=Object.freeze(Object.defineProperty({__proto__:null,_getIds:DY,all:FY,expand:qY,get:ZY,getExpanded:WY,listNodes:YY},Symbol.toStringTag,{value:"Module"})),JY="0x76657374696e6720";function QY(t,e,n){let r=t.registry.createType("Balance"),i=[],a=t.registry.createType("Balance"),s=!1;if(Array.isArray(n)){i=n.filter(({until:u})=>!u||e&&u.gt(e)),s=i.some(({amount:u})=>u&&u.isMax()),a=t.registry.createType("Balance",i.filter(({id:u})=>u.eq(JY)).reduce((u,{amount:h})=>u.iadd(h),new Xe(0)));const o=i.filter(({amount:u})=>u&&!u.isMax());o.length&&(r=t.registry.createType("Balance",z1(...o.map(({amount:u})=>u))))}return{allLocked:s,lockedBalance:r,lockedBreakdown:i,vestingLocked:a}}function _5(t,e,n,r){var i;const{allLocked:a,lockedBalance:s,lockedBreakdown:o,vestingLocked:u}=QY(t,e,r);let h=null;if((i=n==null?void 0:n.frameSystemAccountInfo)!=null&&i.frozen){const{frameSystemAccountInfo:p,freeBalance:y,reservedBalance:w}=n,P=p.frozen.isZero()&&w.isZero(),N=t.consts.balances.existentialDeposit,O=P?new Xe(0):N,z=p.frozen.sub(w);h=t.registry.createType("Balance",a?0:y.sub(z1(O,z)))}return he({},n,{availableBalance:t.registry.createType("Balance",a?0:z1(new Xe(0),n!=null&&n.freeBalance?n.freeBalance.sub(s):new Xe(0))),lockedBalance:s,lockedBreakdown:o,transferable:h,vestingLocked:u})}function _Y(t,e,n){const r=n||[],i=!e.vestingLocked.isZero(),a=r.map(({locked:u,perBlock:h,startingBlock:p})=>t.gt(p)?QH(u,h.mul(t.sub(p))):dn),s=a.reduce((u,h)=>u.iadd(h),new Xe(0)),o=r.reduce((u,{locked:h})=>u.iadd(h),new Xe(0));return{isVesting:i,vestedBalance:s,vestedClaimable:i?e.vestingLocked.sub(o.sub(s)):dn,vesting:r.map(({locked:u,perBlock:h,startingBlock:p},y)=>({endBlock:u.div(h).iadd(p),locked:u,perBlock:h,startingBlock:p,vested:a[y]})).filter(({locked:u})=>!u.isZero()),vestingTotal:o}}function $Y(t,e){const[n,[r,i,a],s]=e,o=_5(t,s,n,i[0]);return he(o,_Y(s,o,r),{accountId:n.accountId,accountNonce:n.accountNonce,additional:i.slice(1).map((u,h)=>_5(t,s,n.additional[h],u)),namedReserves:a})}function eK(t,e){return me([t.query.balances.locks(e),t.query.balances.vesting(e)]).pipe(ne(([n,r])=>{let i=null;if(r.isSome){const{offset:a,perBlock:s,startingBlock:o}=r.unwrap();i=t.registry.createType("VestingInfo",{locked:a,perBlock:s,startingBlock:o})}return[i?[i]:null,[n],[]]}))}const tK=t=>!!t;function $5(t){return[t.map(e=>!e),t.filter(tK)]}function nK(t,e,n=["balances"]){var r;const[i,a]=$5(n.map(u=>{var h,p;return((h=t.derive[u])==null?void 0:h.customLocks)||((p=t.query[u])==null?void 0:p.locks)})),[s,o]=$5(n.map(u=>{var h;return(h=t.query[u])==null?void 0:h.reserves}));return me([(r=t.query.vesting)!=null&&r.vesting?t.query.vesting.vesting(e):ee(t.registry.createType("Option<VestingInfo>")),a.length?me(a.map(u=>u(e))):ee([]),o.length?me(o.map(u=>u(e))):ee([])]).pipe(ne(([u,h,p])=>{let y=-1,w=-1;const P=u.unwrapOr(null);return[P?Array.isArray(P)?P:[P]:null,i.map(N=>N?t.registry.createType("Vec<BalanceLock>"):h[++y]),s.map(N=>N?t.registry.createType("Vec<PalletBalancesReserveData>"):p[++w])]}))}function pw(t,e){const n=e.registry.getModuleInstances(e.runtimeVersion.specName,"balances");return ae(t,r=>{var i,a;return me([e.derive.balances.account(r),Ze((i=e.query.system)==null?void 0:i.account)||Ze((a=e.query.balances)==null?void 0:a.account)?nK(e,r,n):eK(e,r)]).pipe(be(([s,o])=>me([ee(s),ee(o),e.derive.chain.bestNumber()])),ne(s=>$Y(e,s)))})}function dr(t){return t.registry.createType("Balance")}function e8(t,[e,n,r,i],a){const s=t.registry.createType("Balance",e.toBn());return a.isFrameAccountData?{frameSystemAccountInfo:{flags:i,frozen:r},freeBalance:e,frozenFee:t.registry.createType("Balance",0),frozenMisc:t.registry.createType("Balance",0),reservedBalance:n,votingBalance:s}:{freeBalance:e,frozenFee:r,frozenMisc:i,reservedBalance:n,votingBalance:s}}function rK(t,[e,[n,[r,...i],a]]){return he({accountId:e,accountNonce:n,additional:i.map(s=>e8(t,s,a))},e8(t,r,a))}function iK(t,e){return me([t.query.balances.freeBalance(e),t.query.balances.reservedBalance(e),t.query.system.accountNonce(e)]).pipe(ne(([n,r,i])=>[i,[[n,r,dr(t),dr(t)]],{isFrameAccountData:!1}]))}function mw(t,e){const n=r=>[r,[[dr(t),dr(t),dr(t),dr(t)]],{isFrameAccountData:!1}];return Ze(t.query.system.account)?t.query.system.account(e).pipe(ne(({nonce:r})=>n(r))):Ze(t.query.system.accountNonce)?t.query.system.accountNonce(e).pipe(ne(r=>n(r))):ee(n(t.registry.createType("Index")))}function t8(t,e,n=["balances"]){const r=n.map(a=>{var s,o;return((s=t.derive[a])==null?void 0:s.customAccount)||((o=t.query[a])==null?void 0:o.account)}).filter(a=>Ze(a)),i=(a,s)=>[a,s.map(({feeFrozen:o,free:u,miscFrozen:h,reserved:p})=>[u,p,o,h]),{isFrameAccountData:!1}];return r.length?Ze(t.query.system.account)?me([t.query.system.account(e),...r.map(a=>a(e))]).pipe(ne(([{nonce:a},...s])=>i(a,s))):me([t.query.system.accountNonce(e),...r.map(a=>a(e))]).pipe(ne(([a,...s])=>i(a,s))):mw(t,e)}function aK(t,e){return t.query.system.account(e).pipe(ne(n=>{const r=n.nonce?n.data:n[1],i=n.nonce||n[0];if(!r||r.isEmpty)return[i,[[dr(t),dr(t),dr(t),dr(t)]],{isFrameAccountData:!1}];if(n.data.frozen){const{flags:a,free:s,frozen:o,reserved:u}=r;return[i,[[s,u,o,a]],{isFrameAccountData:!0}]}else{const{feeFrozen:a,free:s,miscFrozen:o,reserved:u}=r;return[i,[[s,u,a,o]],{isFrameAccountData:!1}]}}))}function sK(t,e){const n=e.registry.getModuleInstances(e.runtimeVersion.specName,"balances"),r=n&&n[0]!=="balances";return ae(t,i=>e.derive.accounts.accountId(i).pipe(be(a=>{var s,o,u;return a?me([ee(a),r?t8(e,a,n):Ze((s=e.query.system)==null?void 0:s.account)?aK(e,a):Ze((o=e.query.balances)==null?void 0:o.account)?t8(e,a):Ze((u=e.query.balances)==null?void 0:u.freeBalance)?iK(e,a):mw(e,a)]):ee([e.registry.createType("AccountId"),[e.registry.createType("Index"),[[dr(e),dr(e),dr(e),dr(e)]],{isFrameAccountData:!1}]])}),ne(a=>rK(e,a))))}function oK(t,e){return ae(t,n=>n!=null&&n.length?me(n.map(r=>e.derive.balances.account(r))):ee([]))}const cK=pw,uK=Object.freeze(Object.defineProperty({__proto__:null,account:sK,all:pw,votingBalance:cK,votingBalances:oK},Symbol.toStringTag,{value:"Module"}));function lK(t,e){const n=t.tx.bounties?t.tx.bounties:t.tx.treasury,r=[n.approveBounty,n.closeBounty,n.proposeCurator,n.unassignCurator];return e.filter(i=>r.find(a=>i.proposal&&a.is(i.proposal)))}function n8([t,e,n,r]){const i=[];return t.forEach((a,s)=>{a.isSome&&i.push({bounty:a.unwrap(),description:e[s].unwrapOrDefault().toUtf8(),index:n[s],proposals:r.filter(o=>o.proposal&&n[s].eq(o.proposal.args[0]))})}),i}function dK(t,e){const n=e.query.bounties||e.query.treasury;return ae(t,()=>n.bounties?me([n.bountyCount(),e.query.council?e.query.council.proposalCount():ee(0)]).pipe(be(()=>me([n.bounties.keys(),e.derive.council?e.derive.council.proposals():ee([])])),be(([r,i])=>{const a=r.map(({args:[s]})=>s);return me([n.bounties.multi(a),n.bountyDescriptions.multi(a),ee(a),ee(lK(e,i))])}),ne(n8)):ee(n8([[],[],[],[]])))}const fK=Object.freeze(Object.defineProperty({__proto__:null,bounties:dK},Symbol.toStringTag,{value:"Module"}));function bw(t){return(e,n)=>ae(e,()=>t(n).pipe(ne(gm)))}function hK(t,e){var n,r,i,a;const s=(n=e.session)!=null&&n.validators?e.session.validators():ee(null),{logs:[o]}=t.digest,u=o&&(o.isConsensus&&o.asConsensus[0].isNimbus&&o.asConsensus[1]||o.isPreRuntime&&o.asPreRuntime[0].isNimbus&&o.asPreRuntime[1]);if(u){if((r=e.authorMapping)!=null&&r.mappingWithDeposit)return me([ee(t),s,e.authorMapping.mappingWithDeposit(u).pipe(ne(h=>h.unwrapOr({account:null}).account))]);if((i=e.parachainStaking)!=null&&i.selectedCandidates&&(a=e.session)!=null&&a.nextKeys){const h=u.toHex();return me([ee(t),s,e.parachainStaking.selectedCandidates().pipe(ah(p=>me([ee(p),e.session.nextKeys.multi(p).pipe(ne(y=>y.findIndex(w=>w.unwrapOrDefault().nimbus.toHex()===h)))])),ne(([p,y])=>y===-1?null:p[y]))])}}return me([ee(t),s,ee(null)])}function ub(t,e,n){return t.queryAt(e.parentHash.isEmpty?n||e.hash:e.parentHash).pipe(be(r=>hK(e,r)))}const pK=bw(t=>t.rpc.chain.subscribeNewHeads()),mK=bw(t=>t.rpc.chain.subscribeFinalizedHeads());function bK(t,e){return ae(t,()=>me([e.derive.chain.bestNumber(),e.derive.chain.bestNumberFinalized()]).pipe(ne(([n,r])=>e.registry.createType("BlockNumber",n.sub(r)))))}function yw(t,e){const[n]=t.logs.filter(s=>s.isConsensus),[r]=t.logs.filter(s=>s.isPreRuntime),[i]=t.logs.filter(s=>s.isSeal);let a;try{if(r){const[s,o]=r.asPreRuntime;a=s.extractAuthor(o,e)}if(!a&&n){const[s,o]=n.asConsensus;a=s.extractAuthor(o,e)}if(!a&&i){const[s,o]=i.asSeal;a=s.extractAuthor(o,e)}}catch{}return a}function gw(t,e,n,r){var i;const a=t.createClass("Header");class s extends a{constructor(u,h,p,y){super(u,h),G(this,i),Q(this,i,y||yw(this.digest,p||[])),this.createdAtHash=h==null?void 0:h.createdAtHash}get author(){return T(this,i)}}return i=new WeakMap,new s(t,e,n,r)}function yK(t,e){return t.map((n,r)=>{let i,a;const s=e.filter(({phase:o})=>o.isApplyExtrinsic&&o.asApplyExtrinsic.eq(r)).map(({event:o})=>(o.section==="system"&&(o.method==="ExtrinsicSuccess"?a=o.data[0]:o.method==="ExtrinsicFailed"&&(i=o.data[0],a=o.data[1])),o));return{dispatchError:i,dispatchInfo:a,events:s,extrinsic:n}})}function gK(t,e,n,r,i){var a,s,o;const u=t.createClass("SignedBlock");class h extends u{constructor(y,w,P,N,O){super(y,w),G(this,a),G(this,s),G(this,o),Q(this,a,O||yw(this.block.header.digest,N||[])),Q(this,s,P||[]),Q(this,o,yK(this.block.extrinsics,T(this,s))),this.createdAtHash=w==null?void 0:w.createdAtHash}get author(){return T(this,a)}get events(){return T(this,s)}get extrinsics(){return T(this,o)}}return a=new WeakMap,s=new WeakMap,o=new WeakMap,new h(t,e,n,r,i)}function xK(t,e){return ae(t,n=>me([e.rpc.chain.getBlock(n),e.queryAt(n)]).pipe(be(([r,i])=>me([ee(r),i.system.events(),ub(e,r.block.header,n)])),ne(([r,i,[,a,s]])=>gK(i.registry,r,i,a,s))))}function vK(t,e){return ae(t,n=>e.rpc.chain.getBlockHash(n).pipe(be(r=>e.derive.chain.getBlock(r))))}function wK(t,e){return ae(t,n=>e.rpc.chain.getHeader(n).pipe(be(r=>ub(e,r,n)),ne(([r,i,a])=>gw((i||r).registry,r,i,a))))}function PK(t,e){return ae(t,()=>e.derive.chain.subscribeFinalizedHeads().pipe(be(n=>e.derive.chain.getBlock(n.createdAtHash||n.hash))))}function MK(t,e){return ae(t,(n,r,i=[])=>e.rpc.chain.getHeader(n).pipe(be(a=>a.parentHash.eq(r)?ee([a,...i]):e.derive.chain._getHeaderRange(a.parentHash,r,[a,...i]))))}function kK(t,e){return ae(t,()=>{let n=null;return e.rpc.chain.subscribeFinalizedHeads().pipe(be(r=>{const i=n,a=r.parentHash;return n=r.createdAtHash=r.hash,i===null||a.eq(i)?ee(r):e.derive.chain._getHeaderRange(a,i,[r]).pipe(be(s=>Zi(s)))}))})}function TK(t,e){return ae(t,()=>e.derive.chain.subscribeNewHeads().pipe(be(n=>e.derive.chain.getBlock(n.createdAtHash||n.hash))))}function NK(t,e){return ae(t,()=>e.rpc.chain.subscribeNewHeads().pipe(be(n=>ub(e,n)),ne(([n,r,i])=>(n.createdAtHash=n.hash,gw(n.registry,n,r,i)))))}const OK=Object.freeze(Object.defineProperty({__proto__:null,_getHeaderRange:MK,bestNumber:pK,bestNumberFinalized:mK,bestNumberLag:bK,getBlock:xK,getBlockByNumber:vK,getHeader:wK,subscribeFinalizedBlocks:PK,subscribeFinalizedHeads:kK,subscribeNewBlocks:TK,subscribeNewHeads:NK},Symbol.toStringTag,{value:"Module"}));function VK(t){return ee([t.consts.contracts.callBaseFee||t.registry.createType("Balance"),t.consts.contracts.contractFee||t.registry.createType("Balance"),t.consts.contracts.creationFee||t.registry.createType("Balance"),t.consts.contracts.transactionBaseFee||t.registry.createType("Balance"),t.consts.contracts.transactionByteFee||t.registry.createType("Balance"),t.consts.contracts.transferFee||t.registry.createType("Balance"),t.consts.contracts.rentByteFee||t.registry.createType("Balance"),t.consts.contracts.rentDepositOffset||t.registry.createType("Balance"),t.consts.contracts.surchargeReward||t.registry.createType("Balance"),t.consts.contracts.tombstoneDeposit||t.registry.createType("Balance")])}function SK(t,e){return ae(t,()=>VK(e).pipe(ne(([n,r,i,a,s,o,u,h,p,y])=>({callBaseFee:n,contractFee:r,creationFee:i,rentByteFee:u,rentDepositOffset:h,surchargeReward:p,tombstoneDeposit:y,transactionBaseFee:a,transactionByteFee:s,transferFee:o}))))}const EK=Object.freeze(Object.defineProperty({__proto__:null,fees:SK},Symbol.toStringTag,{value:"Module"}));function zK(t){return!Array.isArray(t)}function IK(t){return t.stakeOf.entries().pipe(ne(e=>e.map(([{args:[n]},r])=>[n,r])))}function LK(t){return t.votesOf.entries().pipe(ne(e=>e.map(([{args:[n]},r])=>[n,r])))}function HK(t,e){return me([IK(e),LK(e)]).pipe(ne(([n,r])=>{const i=[];return r.forEach(([a,s])=>{i.push([a,{stake:t.registry.createType("Balance"),votes:s}])}),n.forEach(([a,s])=>{const o=i.find(([u])=>u.eq(a));o?o[1].stake=s:i.push([a,{stake:s,votes:[]}])}),i}))}function AK(t){return t.voting.entries().pipe(ne(e=>e.map(([{args:[n]},r])=>[n,zK(r)?{stake:r.stake,votes:r.votes}:{stake:r[0],votes:r[1]}])))}function RK(t,e){const n=e.query.elections||e.query.phragmenElection||e.query.electionsPhragmen;return ae(t,()=>n?n.stakeOf?HK(e,n):AK(n):ee([]))}function BK(t,e){return ae(t,n=>e.derive.council.votes().pipe(ne(r=>(r.find(([i])=>i.eq(n))||[null,{stake:e.registry.createType("Balance"),votes:[]}])[1])))}const XK=mh("council"),jK=yh("council"),CK=xh("council"),UK=vh("council"),DK=wh("council"),FK=gh("council"),ZK=bh("council"),qK=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:jK,members:XK,prime:ZK,proposal:CK,proposalCount:UK,proposalHashes:DK,proposals:FK,votes:RK,votesOf:BK},Symbol.toStringTag,{value:"Module"}));function WK(t){return mt(rr(":child_storage:default:",ys(rr("crowdloan",(t.fundIndex||t.trieIndex).toU8a()))))}function GK(t,e){return ae(t,n=>e.query.crowdloan.funds(n).pipe(ne(r=>r.isSome?WK(r.unwrap()):null)))}function xw(t,e){var n;const r=[],i=[];return e.filter(({event:{data:[,a],method:s,section:o}})=>o==="crowdloan"&&["Contributed","Withdrew"].includes(s)&&a.eq(t)).reduce((a,{event:{data:[s],method:o}})=>(o==="Contributed"?a.added.push(s.toHex()):a.removed.push(s.toHex()),a),{added:r,blockHash:((n=e.createdAtHash)==null?void 0:n.toHex())||"-",removed:i})}const Up=1e3;function YK(t,e){let n=[],r=[];return t.query.system.events().pipe(be(i=>{var a;const s=xw(e,i);return s.added.length||s.removed.length?(n=n.concat(...s.added),r=r.concat(...s.removed),ee({added:n,addedDelta:s.added,blockHash:((a=i.createdAtHash)==null?void 0:a.toHex())||"-",removed:r,removedDelta:s.removed})):Kl}),Jl({added:n,addedDelta:[],blockHash:"-",removed:r,removedDelta:[]}))}function KK(t,e){return t.query.system.events().pipe(be(n=>{var r;return n.filter(({event:{data:[i],method:a,section:s}})=>s==="crowdloan"&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(a)&&i.eq(e)).length?ee(((r=n.createdAtHash)==null?void 0:r.toHex())||"-"):Kl}),Jl("-"))}function JK(t,e){const n=new zl(void 0);return n.pipe(be(r=>t.rpc.childstate.getKeysPaged(e,"0x",Up,r)),Vs(r=>{Po(()=>{r.length===Up?n.next(r[Up-1].toHex()):n.complete()})}),sh(),ne(r=>xc(r)))}function QK(t,e,n){return KK(t,e).pipe(be(()=>Ze(t.rpc.childstate.getKeysPaged)?JK(t,n):t.rpc.childstate.getKeys(n,"0x")),ne(r=>r.map(i=>i.toHex())))}function _K(t,e,n){return me([QK(t,e,n),YK(t,e)]).pipe(ne(([r,{added:i,blockHash:a,removed:s}])=>{const o={};return r.forEach(u=>{o[u]=!0}),i.forEach(u=>{o[u]=!0}),s.forEach(u=>{delete o[u]}),{blockHash:a,contributorsHex:Object.keys(o)}}))}function $K(t,e){return ae(t,n=>e.derive.crowdloan.childKey(n).pipe(be(r=>r?_K(e,n,r):ee({blockHash:"-",contributorsHex:[]}))))}function vw(t,e,n){return me(n.map(r=>t.rpc.childstate.getStorage(e,r))).pipe(ne(r=>r.map(i=>t.registry.createType("Option<StorageData>",i)).map(i=>i.isSome?t.registry.createType("Balance",i.unwrap()):t.registry.createType("Balance")).reduce((i,a,s)=>he(i,{[n[s]]:a}),{})))}function eJ(t,e,n,r){return t.query.system.events().pipe(be(i=>{const a=xw(e,i),s=r.filter(o=>a.added.includes(o)||a.removed.includes(o));return s.length?vw(t,n,s):Kl}),Jl({}))}function tJ(t,e,n,r){return me([vw(t,n,r),eJ(t,e,n,r)]).pipe(ne(([i,a])=>he({},i,a)))}function nJ(t,e){return ae(t,(n,r)=>e.derive.crowdloan.childKey(n).pipe(be(i=>i&&r.length?tJ(e,n,i,r):ee({}))))}const rJ=Object.freeze(Object.defineProperty({__proto__:null,childKey:GK,contributions:$K,ownContributions:nJ},Symbol.toStringTag,{value:"Module"}));function iJ(t){return!!t.proposalHash}function aJ(t){return!!t.tally}function r8(t,e,n,r){for(;;){const i=t.div(e),a=n.div(r);if(i.lt(a))return!0;if(a.lt(i))return!1;const s=t.mod(e),o=n.mod(r);if(o.isZero())return!1;if(s.isZero())return!0;t=r,n=e,e=o,r=s}}function sJ(t,e,{votedAye:n,votedNay:r,votedTotal:i}){const a=f7(i);return a.isZero()?!1:t.isSuperMajorityApprove?r8(r,a,n,e):r8(r,e,n,a)}function oJ(t,e,n){return t.isSimpleMajority?n.votedAye.gt(n.votedNay):sJ(t,e,n)}function cJ(t){return t.reduce((e,n)=>{const{balance:r,vote:i}=n,a=i.conviction.index===0,s=r.muln(a?1:i.conviction.index).divn(a?10:1);return i.isAye?(e.allAye.push(n),e.voteCountAye++,e.votedAye.iadd(s)):(e.allNay.push(n),e.voteCountNay++,e.votedNay.iadd(s)),e.voteCount++,e.votedTotal.iadd(s),e},{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new Xe(0),votedNay:new Xe(0),votedTotal:new Xe(0)})}function uJ(t,e){const n=[],r=[];return e.forEach(i=>{i.vote.isAye?n.push(i):r.push(i)}),{allAye:n,allNay:r,voteCount:n.length+r.length,voteCountAye:n.length,voteCountNay:r.length,votedAye:t.ayes,votedNay:t.nays,votedTotal:t.turnout}}function lJ(t,e,n){const r=aJ(e.status)?uJ(e.status.tally,n):cJ(n);return he({},r,{isPassing:oJ(e.status.threshold,t,r),votes:n})}function dJ(t){if(t.isNone)return null;const e=t.unwrap();return iJ(e)?e:e.isOngoing?e.asOngoing:null}function zo(t){return t.isLegacy?t.asLegacy.hash_.toHex():t.isLookup?t.asLookup.hash_.toHex():t.isInline?t.asInline.hash.toHex():Ut(t)?It(t)?t:v7(t):Qe(t)?mt(t):t.toHex()}function fJ(t){return zo(t.proposal||t.proposalHash)}const hJ=v7("democrac");function pJ(t){return t instanceof Ha}function mJ(t){return t.isInline||t.isLegacy||t.isLookup}function bJ(t){return t.query.democracy.dispatchQueue().pipe(be(e=>me([ee(e),t.derive.democracy.preimages(e.map(([,n])=>n))])),ne(([e,n])=>e.map(([r,i,a],s)=>({at:r,image:n[s],imageHash:zo(i),index:a}))))}function yJ(t){return t.derive.democracy.referendumsFinished().pipe(be(()=>t.query.scheduler.agenda.keys()),be(e=>{const n=e.map(({args:[r]})=>r);return n.length?me([ee(n),t.query.scheduler.agenda.multi(n).pipe(za(()=>ee(n.map(()=>[]))))]):ee([[],[]])}))}function gJ(t){return yJ(t).pipe(be(([e,n])=>{const r=[];return e.forEach((i,a)=>{(n[a]||[]).filter(s=>s.isSome).forEach(s=>{const o=s.unwrap();if(o.maybeId.isSome){const u=o.maybeId.unwrap().toHex();if(u.startsWith(hJ)){const h=pJ(o.call)?mJ(o.call)?zo(o.call):o.call.isHash?o.call.asHash.toHex():o.call.asValue.args[0].toHex():o.call.args[0].toHex();r.push({at:i,imageHash:h,index:t.registry.createType("(u64, ReferendumIndex)",u)[1]})}}})}),me([ee(r),r.length?t.derive.democracy.preimages(r.map(({imageHash:i})=>i)):ee([])])}),ne(([e,n])=>e.map((r,i)=>he({image:n[i]},r))))}function xJ(t,e){return ae(t,()=>{var n;return Ze((n=e.query.scheduler)==null?void 0:n.agenda)?gJ(e):e.query.democracy.dispatchQueue?bJ(e):ee([])})}const ww=[0,1,2,4,8,16,32];function vJ(t,e,{approved:n,end:r}){return[r,n.isTrue&&e.isAye||n.isFalse&&e.isNay?r.add((t.consts.democracy.voteLockingPeriod||t.consts.democracy.enactmentPeriod).muln(ww[e.conviction.index])):dn]}function wJ(t,[e,n],r){const{balance:i,vote:a}=n.asStandard,[s,o]=r.isFinished?vJ(t,a,r.asFinished):[dn,dn];return{balance:i,isDelegated:!1,isFinished:r.isFinished,referendumEnd:s,referendumId:e,unlockAt:o,vote:a}}function PJ(t,{balance:e,conviction:n,target:r}){return t.derive.democracy.locks(r).pipe(ne(i=>i.map(({isFinished:a,referendumEnd:s,referendumId:o,unlockAt:u,vote:h})=>({balance:e,isDelegated:!0,isFinished:a,referendumEnd:s,referendumId:o,unlockAt:u.isZero()?u:s.add((t.consts.democracy.voteLockingPeriod||t.consts.democracy.enactmentPeriod).muln(ww[n.index])),vote:t.registry.createType("Vote",{aye:h.isAye,conviction:n})}))))}function MJ(t,{votes:e}){return e.length?t.query.democracy.referendumInfoOf.multi(e.map(([n])=>n)).pipe(ne(n=>e.map((r,i)=>[r,n[i].unwrapOr(null)]).filter(r=>!!r[1]&&qt(r[1].end)&&r[0][1].isStandard).map(([r,i])=>wJ(t,r,i)))):ee([])}function kJ(t,e){return ae(t,n=>e.query.democracy.votingOf?e.query.democracy.votingOf(n).pipe(be(r=>r.isDirect?MJ(e,r.asDirect):r.isDelegating?PJ(e,r.asDelegating):ee([]))):ee([]))}function TJ(t,e){if(e.isNone)return ee(null);const[n,r]=e.unwrap();return t.derive.democracy.preimage(n).pipe(ne(i=>({image:i,imageHash:zo(n),threshold:r})))}function NJ(t,e){return ae(t,()=>{var n;return(n=e.query.democracy)!=null&&n.nextExternal?e.query.democracy.nextExternal().pipe(be(r=>TJ(e,r))):ee(null)})}function OJ(t){return t.ticket||t.deposit}function VJ(t){return(t.maybeTicket||t.deposit).unwrapOrDefault()}function SJ(t,e){return!!e&&!t.query.democracy.dispatchQueue}function i8(t,[e,n,r,i]){let a;try{a=t.registry.createType("Call",e.toU8a(!0))}catch(s){console.error(s)}return{at:i,balance:r,proposal:a,proposer:n}}function EJ(t,e){if(!e.isNone){if(SJ(t,e)){const n=e.unwrap();if(n.isMissing)return;const{data:r,deposit:i,provider:a,since:s}=n.asAvailable;return i8(t,[r,a,i,s])}return i8(t,e.unwrap())}}function zJ(t,[e,n,r]){if(!n)return;const[i,a]=n.isUnrequested?OJ(n.asUnrequested):VJ(n.asRequested);let s;if(r)try{s=t.registry.createType("Call",r.toU8a(!0))}catch(o){console.error(o)}return{at:dn,balance:a,proposal:s,proposalHash:e,proposer:i}}function IJ(t,e){const n=e.map(r=>zo(r));return t.query.democracy.preimages.multi(n).pipe(ne(r=>r.map(i=>EJ(t,i))))}function LJ(t,e){const n=e.map(i=>zo(i)),r=t.registry.lookup.getTypeDef(t.query.preimage.preimageFor.creator.meta.type.asMap.key).type;return t.query.preimage.statusFor.multi(n).pipe(be(i=>{const a=i.map(o=>o.unwrapOr(null)),s=a.map((o,u)=>o?r==="H256"?n[u]:o.isRequested?[n[u],o.asRequested.len.unwrapOr(0)]:[n[u],o.asUnrequested.len]:null).filter(o=>!!o);return t.query.preimage.preimageFor.multi(s).pipe(ne(o=>{let u=-1;return a.map((h,p)=>h?[n[p],h,o[++u].unwrapOr(null)]:[n[p],null,null]).map(h=>zJ(t,h))}))}))}function HJ(t,e){return ae(t,n=>n.length?Ze(e.query.democracy.preimages)?IJ(e,n):Ze(e.query.preimage.preimageFor)?LJ(e,n):ee([]):ee([]))}const AJ=Xa((t,e)=>t.derive.democracy.preimages([e]));function RJ(t){return Ze(t[1].mul)}function BJ([t,e,n]){return t.filter(([,,r],i)=>{var a;return!!((a=n[i])!=null&&a.isSome)&&!r.isEmpty}).map(([r,i,a],s)=>{const o=n[s].unwrap();return he({image:e[s],imageHash:zo(i),index:r,proposer:a},RJ(o)?{balance:o[1],seconds:o[0]}:{balance:o[0],seconds:o[1]})})}function XJ(t,e){return ae(t,()=>{var n;return Ze((n=e.query.democracy)==null?void 0:n.publicProps)?e.query.democracy.publicProps().pipe(be(r=>r.length?me([ee(r),e.derive.democracy.preimages(r.map(([,i])=>i)),e.query.democracy.depositOf.multi(r.map(([i])=>i))]):ee([[],[],[]])),ne(BJ)):ee([])})}function jJ(t,e){return ae(t,()=>{var n;return(n=e.query.democracy)!=null&&n.lowestUnbaked?e.queryMulti([e.query.democracy.lowestUnbaked,e.query.democracy.referendumCount]).pipe(ne(([r,i])=>i.gt(r)?[...Array(i.sub(r).toNumber())].map((a,s)=>r.addn(s)):[])):ee([])})}function CJ(t,e){return ae(t,()=>e.derive.democracy.referendumsActive().pipe(be(n=>n.length?me([ee(n),e.derive.democracy._referendumsVotes(n)]):ee([[],[]])),ne(([n,r])=>n.map((i,a)=>he({},i,r[a])))))}function UJ(t,e){return ae(t,()=>e.derive.democracy.referendumIds().pipe(be(n=>n.length?e.derive.democracy.referendumsInfo(n):ee([]))))}function DJ(t,e){return ae(t,()=>e.derive.democracy.referendumIds().pipe(be(n=>e.query.democracy.referendumInfoOf.multi(n)),ne(n=>n.map(r=>r.unwrapOr(null)).filter(r=>!!r&&r.isFinished).map(r=>r.asFinished))))}function FJ(t,e){return t.query.democracy.votersFor(e).pipe(be(n=>me([ee(n),n.length?t.query.democracy.voteOf.multi(n.map(r=>[e,r])):ee([]),t.derive.balances.votingBalances(n)])),ne(([n,r,i])=>n.map((a,s)=>({accountId:a,balance:i[s].votingBalance||t.registry.createType("Balance"),isDelegating:!1,vote:r[s]||t.registry.createType("Vote")}))))}function ZJ(t,e){return t.filter(([,n])=>n.isDirect).map(([n,r])=>[n,r.asDirect.votes.filter(([i])=>i.eq(e))]).filter(([,n])=>!!n.length).reduce((n,[r,i])=>i.reduce((a,[,s])=>(s.isStandard&&a.push(he({accountId:r,isDelegating:!1},s.asStandard)),a),n),[])}function qJ(t,e){return t.query.democracy.votingOf.entries().pipe(ne(n=>{const r=n.map(([{args:[s]},o])=>[s,o]),i=ZJ(r,e),a=r.filter(([,s])=>s.isDelegating).map(([s,o])=>[s,o.asDelegating]);return a.forEach(([s,{balance:o,conviction:u,target:h}])=>{const p=a.find(([w])=>w.eq(h)),y=i.find(({accountId:w})=>w.eq(p?p[0]:h));y&&i.push({accountId:s,balance:o,isDelegating:!0,vote:t.registry.createType("Vote",{aye:y.vote.isAye,conviction:u})})}),i}))}function WJ(t,e){return ae(t,n=>me([e.derive.democracy.sqrtElectorate(),Ze(e.query.democracy.votingOf)?qJ(e,n.index):FJ(e,n.index)]).pipe(ne(([r,i])=>lJ(r,n,i))))}function GJ(t,e){return ae(t,n=>n.length?me(n.map(r=>e.derive.democracy._referendumVotes(r))):ee([]))}function YJ(t,e){return ae(t,(n,r)=>{const i=dJ(r);return i?e.derive.democracy.preimage(i.proposal||i.proposalHash).pipe(ne(a=>({image:a,imageHash:fJ(i),index:e.registry.createType("ReferendumIndex",n),status:i}))):ee(null)})}function KJ(t,e){return ae(t,n=>n.length?e.query.democracy.referendumInfoOf.multi(n).pipe(be(r=>me(n.map((i,a)=>e.derive.democracy._referendumInfo(i,r[a])))),ne(r=>r.filter(i=>!!i))):ee([]))}function JJ(t,e){return ae(t,()=>e.query.balances.totalIssuance().pipe(ne(f7)))}const QJ=Object.freeze(Object.defineProperty({__proto__:null,_referendumInfo:YJ,_referendumVotes:WJ,_referendumsVotes:GJ,dispatchQueue:xJ,locks:kJ,nextExternal:NJ,preimage:AJ,preimages:HJ,proposals:XJ,referendumIds:jJ,referendums:CJ,referendumsActive:UJ,referendumsFinished:DJ,referendumsInfo:KJ,sqrtElectorate:JJ},Symbol.toStringTag,{value:"Module"}));function _J(t){return!Array.isArray(t)}function $J(t){return Array.isArray(t)}function a8(t){return _J(t)?[t.who,t.stake]:t}function eQ(t){return $J(t)?t[0]:t}function s8([,t],[,e]){return e.cmp(t)}function tQ(t,e){return e?{candidacyBond:t.consts[e].candidacyBond,desiredRunnersUp:t.consts[e].desiredRunnersUp,desiredSeats:t.consts[e].desiredMembers,termDuration:t.consts[e].termDuration,votingBond:t.consts[e].votingBond,votingBondBase:t.consts[e].votingBondBase,votingBondFactor:t.consts[e].votingBondFactor}:{}}function nQ(t){const[e]=t.registry.getModuleInstances(t.runtimeVersion.specName,"council")||["council"],n=t.query.phragmenElection?"phragmenElection":t.query.electionsPhragmen?"electionsPhragmen":t.query.elections?"elections":null;return[t.query[e]?e:"council",n]}function rQ(t,e,n){return t.queryMulti([t.query[e].members,t.query[n].candidates,t.query[n].members,t.query[n].runnersUp])}function iQ(t,e){return me([t.query[e].members(),ee([]),ee([]),ee([])])}function aQ(t,e){return ae(t,()=>{const[n,r]=nQ(e);return(r?rQ(e,n,r):iQ(e,n)).pipe(ne(([i,a,s,o])=>he({},tQ(e,r),{candidateCount:e.registry.createType("u32",a.length),candidates:a.map(eQ),members:s.length?s.map(a8).sort(s8):i.map(u=>[u,e.registry.createType("Balance")]),runnersUp:o.map(a8).sort(s8)})))})}const sQ=Object.freeze(Object.defineProperty({__proto__:null,info:aQ},Symbol.toStringTag,{value:"Module"}));function oQ([t,e,n,r]){return e.forEach((i,a)=>{const s=i.toString(),o=r[a],u=!n[a].isEmpty,h=t[s];(!h||h.hasMessage!==u||!h.blockCount.eq(o))&&(t[s]={blockCount:o,hasMessage:u,isOnline:u||o.gt(dn)})}),t}function cQ(t,e){return ae(t,()=>{var n;return(n=e.query.imOnline)!=null&&n.receivedHeartbeats?e.derive.staking.overview().pipe(be(({currentIndex:r,validators:i})=>me([ee({}),ee(i),e.query.imOnline.receivedHeartbeats.multi(i.map((a,s)=>[r,s])),e.query.imOnline.authoredBlocks.multi(i.map(a=>[r,a]))])),ne(oQ)):ee({})})}const uQ=Object.freeze(Object.defineProperty({__proto__:null,receivedHeartbeats:cQ},Symbol.toStringTag,{value:"Module"})),lQ=mh("membership"),dQ=yh("membership"),fQ=xh("membership"),hQ=vh("membership"),pQ=wh("membership"),mQ=gh("membership"),bQ=bh("membership"),yQ=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:dQ,members:lQ,prime:bQ,proposal:fQ,proposalCount:hQ,proposalHashes:pQ,proposals:mQ},Symbol.toStringTag,{value:"Module"}));function Pw(t,e){return t.isSome?t.unwrap().some(n=>n.eq(e)):!1}function gQ(t,e){const n=e.find(([r])=>r===t);if(n&&n[1].isSome){const[r,i]=n[1].unwrap();return he({collatorId:r},i.isWithRetries?{isRetriable:!0,retries:i.asWithRetries.toNumber()}:{isRetriable:!1,retries:0})}return null}function o8(t,e){return e.map(n=>{const r=n.find(([i])=>i===t);return r?r[1]:null})}function xQ(t,[e,n,r,i,a,s,o,u]){return a.isNone?null:{active:gQ(t,e),didUpdate:Pw(i,t),heads:o,id:t,info:he({id:t},a.unwrap()),pendingSwapId:s.unwrapOr(null),relayDispatchQueue:u,retryCollators:o8(t,n),selectedCollators:o8(t,r)}}function vQ(t,e){return ae(t,n=>e.query.registrar&&e.query.parachains?e.queryMulti([e.query.registrar.active,e.query.registrar.retryQueue,e.query.registrar.selectedThreads,e.query.parachains.didUpdate,[e.query.registrar.paras,n],[e.query.registrar.pendingSwap,n],[e.query.parachains.heads,n],[e.query.parachains.relayDispatchQueue,n]]).pipe(ne(r=>xQ(e.registry.createType("ParaId",n),r))):ee(null))}function wQ([t,e,n,r,i]){return t.map((a,s)=>({didUpdate:Pw(e,a),id:a,info:he({id:a},r[s].unwrapOr(null)),pendingSwapId:i[s].unwrapOr(null),relayDispatchQueueSize:n[s][0].toNumber()}))}function PQ(t,e){return ae(t,()=>{var n;return(n=e.query.registrar)!=null&&n.parachains&&e.query.parachains?e.query.registrar.parachains().pipe(be(r=>me([ee(r),e.query.parachains.didUpdate(),e.query.parachains.relayDispatchQueueSize.multi(r),e.query.registrar.paras.multi(r),e.query.registrar.pendingSwap.multi(r)])),ne(wQ)):ee([])})}const MQ=Object.freeze(Object.defineProperty({__proto__:null,info:vQ,overview:PQ},Symbol.toStringTag,{value:"Module"}));function lb([t,e,n,r,i]){return{activeEra:e,activeEraStart:n,currentEra:r,currentIndex:t,validatorCount:i}}function kQ(t){return t.queryMulti([t.query.session.currentIndex,t.query.staking.activeEra,t.query.staking.currentEra,t.query.staking.validatorCount]).pipe(ne(([e,n,r,i])=>{const{index:a,start:s}=n.unwrapOrDefault();return lb([e,a,s,r.unwrapOrDefault(),i])}))}function TQ(t){return t.query.session.currentIndex().pipe(ne(e=>lb([e,t.registry.createType("EraIndex"),t.registry.createType("Option<Moment>"),t.registry.createType("EraIndex"),t.registry.createType("u32")])))}function NQ(t){return ee(lb([t.registry.createType("SessionIndex",1),t.registry.createType("EraIndex"),t.registry.createType("Option<Moment>"),t.registry.createType("EraIndex"),t.registry.createType("u32")]))}function OQ(t,e){return ae(t,()=>e.query.session?e.query.staking?kQ(e):TQ(e):NQ(e))}function VQ(t,e){return ae(t,()=>e.derive.session.indexes().pipe(ne(n=>{var r,i,a,s;const o=((i=(r=e.consts)==null?void 0:r.babe)==null?void 0:i.epochDuration)||e.registry.createType("u64",1),u=((s=(a=e.consts)==null?void 0:a.staking)==null?void 0:s.sessionsPerEra)||e.registry.createType("SessionIndex",1);return he({eraLength:e.registry.createType("BlockNumber",u.mul(o)),isEpoch:!!e.query.babe,sessionLength:o,sessionsPerEra:u},n)})))}function db(t){return(e,n)=>ae(e,()=>n.derive.session.progress().pipe(ne(r=>r[t])))}function SQ(t,e,[n,r,i,a]){const s=r.mul(e.sessionLength).iadd(i),o=n.sub(s),u=e.currentIndex.sub(a).imul(e.sessionLength).iadd(o);return he({eraProgress:t.registry.createType("BlockNumber",u),sessionProgress:t.registry.createType("BlockNumber",o)},e)}function EQ(t){return t.derive.session.info().pipe(ne(e=>he({eraProgress:t.registry.createType("BlockNumber"),sessionProgress:t.registry.createType("BlockNumber")},e)))}function zQ(t){return t.derive.session.info().pipe(be(e=>{var n;return me([ee(e),(n=t.query.staking)!=null&&n.erasStartSessionIndex?t.queryMulti([t.query.babe.currentSlot,t.query.babe.epochIndex,t.query.babe.genesisSlot,[t.query.staking.erasStartSessionIndex,e.activeEra]]):t.queryMulti([t.query.babe.currentSlot,t.query.babe.epochIndex,t.query.babe.genesisSlot])])}),ne(([e,[n,r,i,a]])=>[e,[n,r,i,a&&a.isSome?a.unwrap():t.registry.createType("SessionIndex",1)]]))}function IQ(t,e){return ae(t,()=>e.query.babe?zQ(e).pipe(ne(([n,r])=>SQ(e,n,r))):EQ(e))}const LQ=db("eraLength"),HQ=db("eraProgress"),AQ=db("sessionProgress"),RQ=Object.freeze(Object.defineProperty({__proto__:null,eraLength:LQ,eraProgress:HQ,indexes:OQ,info:VQ,progress:IQ,sessionProgress:AQ},Symbol.toStringTag,{value:"Module"}));function BQ(t){return t.query.society.candidates().pipe(be(e=>me([ee(e),t.query.society.suspendedCandidates.multi(e.map(({who:n})=>n))])),ne(([e,n])=>e.map(({kind:r,value:i,who:a},s)=>({accountId:a,isSuspended:n[s].isSome,kind:r,value:i}))))}function XQ(t){return t.query.society.candidates.entries().pipe(ne(e=>e.filter(([,n])=>n.isSome).map(([{args:[n]},r])=>[n,r.unwrap()]).map(([n,{bid:r,kind:i}])=>({accountId:n,isSuspended:!1,kind:i,value:r}))))}function jQ(t,e){return ae(t,()=>e.query.society.suspendedCandidates&&e.query.society.candidates.creator.meta.type.isPlain?BQ(e):XQ(e))}function CQ(t,e){return ae(t,()=>me([e.query.society.bids(),e.query.society.defender?e.query.society.defender():ee(void 0),e.query.society.founder(),e.query.society.head(),e.query.society.maxMembers?e.query.society.maxMembers():ee(void 0),e.query.society.pot()]).pipe(ne(([n,r,i,a,s,o])=>({bids:n,defender:r==null?void 0:r.unwrapOr(void 0),founder:i.unwrapOr(void 0),hasDefender:(r==null?void 0:r.isSome)&&a.isSome&&!a.eq(r)||!1,head:a.unwrapOr(void 0),maxMembers:s,pot:o}))))}function UQ(t,e){return ae(t,n=>e.derive.society._members([n]).pipe(ne(([r])=>r)))}function DQ(t,e){return me([ee(e),t.query.society.payouts.multi(e),t.query.society.strikes.multi(e),t.query.society.defenderVotes.multi(e),t.query.society.suspendedMembers.multi(e),t.query.society.vouching.multi(e)]).pipe(ne(([n,r,i,a,s,o])=>n.map((u,h)=>({accountId:u,isDefenderVoter:a[h].isSome,isSuspended:s[h].isTrue,payouts:r[h],strikes:i[h],vote:a[h].unwrapOr(void 0),vouching:o[h].unwrapOr(void 0)}))))}function FQ(t,e){return me([ee(e),t.query.society.members.multi(e),t.query.society.payouts.multi(e),t.query.society.challengeRoundCount().pipe(be(n=>t.query.society.defenderVotes.multi(e.map(r=>[n,r])))),t.query.society.suspendedMembers.multi(e)]).pipe(ne(([n,r,i,a,s])=>n.map((o,u)=>r[u].isSome?{accountId:o,isDefenderVoter:a[u].isSome,isSuspended:s[u].isSome,member:r[u].unwrap(),payouts:i[u].payouts}:null).filter(o=>!!o).map(({accountId:o,isDefenderVoter:u,isSuspended:h,member:p,payouts:y})=>({accountId:o,isDefenderVoter:u,isSuspended:h,payouts:y,strikes:p.strikes,vouching:p.vouching.unwrapOr(void 0)}))))}function ZQ(t,e){return ae(t,n=>e.query.society.members.creator.meta.type.isMap?FQ(e,n):DQ(e,n))}function qQ(t,e){return ae(t,()=>e.query.society.members.creator.meta.type.isMap?e.query.society.members.keys().pipe(be(n=>e.derive.society._members(n.map(({args:[r]})=>r)))):e.query.society.members().pipe(be(n=>e.derive.society._members(n))))}const WQ=Object.freeze(Object.defineProperty({__proto__:null,_members:ZQ,candidates:jQ,info:CQ,member:UQ,members:qQ},Symbol.toStringTag,{value:"Module"})),GQ={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function YQ(t){return t.reduce((e,{era:n,value:r})=>{const i=n.toString();return e[i]=(e[i]||dn).add(r.unwrap()),e},{})}function KQ(t,e,n){const r=Object.entries(YQ(((e==null?void 0:e.unlocking)||[]).filter(({era:i})=>i.unwrap().gt(n.activeEra)))).map(([i,a])=>({remainingEras:new Xe(i).isub(n.activeEra),value:t.registry.createType("Balance",a)}));return r.length?r:void 0}function JQ(t,e,n){return t.registry.createType("Balance",((e==null?void 0:e.unlocking)||[]).reduce((r,{era:i,value:a})=>i.unwrap().gt(n.currentEra)?r:r.iadd(a.unwrap()),new Xe(0)))}function QQ(t,e,n,r){return he({},n,r,{redeemable:JQ(t,r.stakingLedger,e),unlocking:KQ(t,r.stakingLedger,e)})}function _Q(t,e){return ae(t,(n,r=GQ)=>e.derive.session.info().pipe(be(i=>me([e.derive.staking.keysMulti(n),e.derive.staking.queryMulti(n,r)]).pipe(ne(([a,s])=>s.map((o,u)=>QQ(e,i,a[u],o)))))))}const $Q=Xa((t,e,n)=>t.derive.staking.accounts([e],n));function e_(t,e){return ae(t,()=>e.derive.session.indexes().pipe(be(({activeEra:n})=>e.query.staking.erasRewardPoints(n))))}const t_={withController:!0,withExposure:!0,withPrefs:!0};function n_(t,e){return xc([t,e.filter(n=>!t.find(r=>r.eq(n)))])}function r_(t,e){return ae(t,(n=t_,r=0)=>e.derive.staking.validators().pipe(be(({nextElected:i,validators:a})=>e.derive.staking.queryMulti(n_(i,a),n,r).pipe(ne(s=>({info:s,nextElected:i,validators:a}))))))}function fb(t,e,n){const r=`${t}-${e.toString()}`;return[r,n?void 0:$l.get(r)]}function Mw(t,e,n){return n?[]:e.map(r=>$l.get(`${t}-${r.toString()}`)).filter(r=>!!r)}function E0(t,e,n){return!e&&$l.set(t,n),n}function kw(t,e,n){return!e&&n.forEach(r=>$l.set(`${t}-${r.era.toString()}`,r)),n}function Tw(t,e,n){return t.map(r=>e.find(({era:i})=>r.eq(i))||n.find(({era:i})=>r.eq(i))).filter(r=>!!r)}const i_=14;function a_(t,e){const n=E1(t,i_);let r=0;const i=new zl(n[r]);return i.pipe(be(e),Vs(()=>{Po(()=>{r++,r===n.length?i.complete():i.next(n[r])})}),sh(),ne(xc))}function Nw(t,e){return t.filter(n=>!e.some(({era:r})=>n.eq(r)))}function td(t){return(e,n)=>ae(e,(r=!1)=>n.derive.staking.erasHistoric(r).pipe(be(i=>n.derive.staking[t](i,r))))}function nd(t){return(e,n)=>ae(e,(r,i=!1,a)=>n.derive.staking.erasHistoric(i).pipe(be(s=>n.derive.staking[t](r,s,i,a||0))))}function hb(t){return(e,n)=>ae(e,r=>n.derive.staking[t](r,!0))}function pb(t){return(e,n)=>ae(e,(r,i)=>r.length?a_(r,a=>me(a.map(s=>n.derive.staking[t](s,i)))):ee([]))}const s_="eraExposure";function o_(t,e){const n={},r={};return e.forEach(([i,a])=>{const s=i.args[1].toString();r[s]=a,a.others.forEach(({who:o},u)=>{const h=o.toString();n[h]=n[h]||[],n[h].push({validatorId:s,validatorIndex:u})})}),{era:t,nominators:n,validators:r}}function c_(t,e){const n={},r={};return e.forEach(([i,a])=>{if(a.isSome){const s=i.args[1].toString(),o=a.unwrap();r[s]=o,o.others.forEach(({who:u},h)=>{const p=u.toString();n[p]=n[p]||[],n[p].push({validatorId:s,validatorIndex:h})})}}),{era:t,nominators:n,validators:r}}function u_(t,e){return ae(t,(n,r=!1)=>{const[i,a]=fb(s_,n,r);return a?ee(a):e.query.staking.erasStakersPaged?e.query.staking.erasStakersPaged.entries(n).pipe(ne(s=>E0(i,r,c_(n,s)))):e.query.staking.erasStakersClipped.entries(n).pipe(ne(s=>E0(i,r,o_(n,s))))})}const l_=hb("_eraExposure"),d_=pb("_eraExposure"),f_=td("_erasExposure");function h_(t,e){return ae(t,n=>me([e.query.staking.activeEra(),e.consts.staking.historyDepth?ee(e.consts.staking.historyDepth):e.query.staking.historyDepth()]).pipe(ne(([r,i])=>{const a=[],s=i.toNumber(),o=r.unwrapOrDefault().index;let u=o;for(;u.gte(dn)&&a.length<s;)(u!==o||n===!0)&&a.push(e.registry.createType("EraIndex",u)),u=u.sub(Uc);return a.reverse()})))}const c8="eraPoints";function p_({individual:t}){return[...t.entries()].filter(([,e])=>e.gt(dn)).reduce((e,[n,r])=>(e[n.toString()]=r,e),{})}function m_(t,e){return t.map((n,r)=>({era:n,eraPoints:e[r].total,validators:p_(e[r])}))}function b_(t,e){return ae(t,(n,r)=>{if(!n.length)return ee([]);const i=Mw(c8,n,r),a=Nw(n,i);return a.length?e.query.staking.erasRewardPoints.multi(a).pipe(ne(s=>Tw(n,i,kw(c8,r,m_(a,s))))):ee(i)})}const y_=td("_erasPoints"),g_="eraPrefs";function x_(t,e){const n={};return e.forEach(([r,i])=>{n[r.args[1].toString()]=i}),{era:t,validators:n}}function v_(t,e){return ae(t,(n,r)=>{const[i,a]=fb(g_,n,r);return a?ee(a):e.query.staking.erasValidatorPrefs.entries(n).pipe(ne(s=>E0(i,r,x_(n,s))))})}const w_=hb("_eraPrefs"),P_=pb("_eraPrefs"),M_=td("_erasPrefs"),u8="eraRewards";function k_(t,e){return t.map((n,r)=>({era:n,eraReward:e[r].unwrapOrDefault()}))}function T_(t,e){return ae(t,(n,r)=>{if(!n.length)return ee([]);const i=Mw(u8,n,r),a=Nw(n,i);return a.length?e.query.staking.erasValidatorReward.multi(a).pipe(ne(s=>Tw(n,i,kw(u8,r,k_(a,s))))):ee(i)})}const N_=td("_erasRewards"),O_="eraSlashes";function V_(t,e,n){const r={},i={};return e.forEach(([a,s])=>{r[a.args[1].toString()]=s.unwrap()}),n.forEach(([a,s])=>{i[a.args[1].toString()]=s.unwrapOrDefault()[1]}),{era:t,nominators:r,validators:i}}function S_(t,e){return ae(t,(n,r)=>{const[i,a]=fb(O_,n,r);return a?ee(a):me([e.query.staking.nominatorSlashInEra.entries(n),e.query.staking.validatorSlashInEra.entries(n)]).pipe(ne(([s,o])=>E0(i,r,V_(n,s,o))))})}const E_=hb("_eraSlashes"),z_=pb("_eraSlashes"),I_=td("_erasSlashes");function L_(t,e,n){const r=(e.find(([a])=>a.eq(t))||[void 0,[]])[1],i=n.unwrapOr([]);return{nextSessionIds:Array.isArray(i)?i:[...i.values()],sessionIds:Array.isArray(r)?r:[...r.values()]}}const H_=Xa((t,e)=>t.derive.staking.keysMulti([e]));function A_(t,e){return ae(t,n=>n.length?e.query.session.queuedKeys().pipe(be(r=>{var i;return me([ee(r),(i=e.consts.session)!=null&&i.dedupKeyPrefix?e.query.session.nextKeys.multi(n.map(a=>[e.consts.session.dedupKeyPrefix,a])):me(n.map(a=>e.query.session.nextKeys(a)))])}),ne(([r,i])=>n.map((a,s)=>L_(a,r,i[s])))):ee([]))}function R_(t,e){return ae(t,()=>me([e.derive.session.indexes(),e.derive.staking.validators()]).pipe(ne(([n,{nextElected:r,validators:i}])=>he({},n,{nextElected:r,validators:i}))))}function B_(t,e){return ae(t,(n,r,i,a)=>{const s=e.registry.createType("Exposure"),o=e.registry.createType("Option<Null>"),u=e.registry.createType("Option<Null>");return r.length?me([e.query.staking.erasStakersClipped?me(r.map(h=>e.query.staking.erasStakersClipped(h,n))):ee(r.map(h=>s)),e.query.staking.erasStakers?me(r.map(h=>e.query.staking.erasStakers(h,n))):ee(r.map(h=>s)),e.query.staking.erasStakersPaged?me(r.map(h=>e.query.staking.erasStakersPaged(h,n,a))):ee(r.map(h=>o)),e.query.staking.erasStakersOverview?me(r.map(h=>e.query.staking.erasStakersOverview(h,n))):ee(r.map(h=>u))]).pipe(ne(([h,p,y,w])=>r.map((P,N)=>({clipped:h[N],era:P,exposure:p[N],exposureMeta:w[N],exposurePaged:y[N]})))):ee([])})}const X_=Xa((t,e,n,r)=>t.derive.staking._ownExposures(e,[n],!0,r||0)),j_=nd("_ownExposures");function C_(t,e){return ae(t,(n,r,i)=>r.length?me([me(r.map(a=>e.query.staking.validatorSlashInEra(a,n))),me(r.map(a=>e.query.staking.nominatorSlashInEra(a,n)))]).pipe(ne(([a,s])=>r.map((o,u)=>({era:o,total:a[u].isSome?a[u].unwrap()[1]:s[u].unwrapOrDefault()})))):ee([]))}const U_=Xa((t,e,n)=>t.derive.staking._ownSlashes(e,[n],!0)),D_=nd("_ownSlashes");function F_(t){return typeof t.isSome=="boolean"?t.unwrapOr(null):t}function Z_(t,e){return t.registry.createType("Vec<u32>",e.filter(n=>n!==-1))}function q_(t,e,n,r){const i={},a={},s=t.map(o=>o.toString());return n.forEach(([o,u])=>{const h=o.args[1].toString(),p=o.args[0].toNumber();s.includes(h)&&(i[h]||(i[h]=new Map),i[h].set(p,u.toArray()))}),r.forEach(([o,u])=>{const h=o.args[1].toString(),p=o.args[0].toNumber();s.includes(h)&&u.isSome&&(a[h]||(a[h]=new Map),a[h].set(p,u.unwrap().pageCount))}),t.map(o=>{const u=i[o.toString()],h=a[o.toString()];return e.map(p=>{if(u&&u.has(p)&&h&&h.has(p)){const y=u.get(p),w=h.get(p);return y.length===w.toNumber()?p:-1}return-1})})}function W_(t,e,n,r,i,a,s,o,u,h,p){return{accountId:e,claimedRewardsEras:Z_(t,h),controllerId:(n==null?void 0:n.unwrapOr(null))||null,exposureEraStakers:p,exposureMeta:u,exposurePaged:s,nominators:r.isSome?r.unwrap().targets:[],rewardDestination:F_(i),stakingLedger:o.unwrapOrDefault(),stashId:e,validatorPrefs:a}}function G_(t,e,{withLedger:n=!1}){const r=e.filter(a=>n&&!!a&&a.isSome).map(a=>a.unwrap()),i=t.registry.createType("Option<StakingLedger>");return(r.length?me(r.map(a=>t.query.staking.ledger(a))):ee([])).pipe(ne(a=>{let s=-1;return e.map(o=>o&&o.isSome&&a[++s]||i)}))}function Y_(t,e,n,{withClaimedRewardsEras:r,withController:i,withDestination:a,withExposure:s,withExposureErasStakersLegacy:o,withExposureMeta:u,withLedger:h,withNominations:p,withPrefs:y},w){const P=t.registry.createType("Option<Nominations>"),N=t.registry.createType("RewardDestination"),O=t.registry.createType("Exposure"),z=t.registry.createType("ValidatorPrefs"),j=t.registry.createType("Option<Null>"),I=t.registry.createType("Option<Null>"),A=[-1],U=Number(t.consts.staking.historyDepth.toNumber()),H=new Array(U).fill(0).map((X,C)=>C===0?n.toNumber()-1:n.toNumber()-C-1);return me([i||h?me(e.map(X=>t.query.staking.bonded(X))):ee(e.map(()=>null)),p?me(e.map(X=>t.query.staking.nominators(X))):ee(e.map(()=>P)),a?me(e.map(X=>t.query.staking.payee(X))):ee(e.map(()=>N)),y?me(e.map(X=>t.query.staking.validators(X))):ee(e.map(()=>z)),s&&t.query.staking.erasStakersPaged?me(e.map(X=>t.query.staking.erasStakersPaged(n,X,w))):ee(e.map(()=>j)),u&&t.query.staking.erasStakersOverview?me(e.map(X=>t.query.staking.erasStakersOverview(n,X))):ee(e.map(()=>I)),r&&t.query.staking.claimedRewards?me([t.query.staking.claimedRewards.entries(),t.query.staking.erasStakersOverview.entries()]).pipe(ne(([X,C])=>q_(e,H,X,C))):ee(e.map(()=>A)),o&&t.query.staking.erasStakers?me(e.map(X=>t.query.staking.erasStakers(n,X))):ee(e.map(()=>O))])}function K_(t,e,n,r,i){return Y_(t,n,e,r,i).pipe(be(([a,s,o,u,h,p,y,w])=>G_(t,a,r).pipe(ne(P=>n.map((N,O)=>W_(t,N,a[O],s[O],o[O],u[O],h[O],P[O],p[O],y[O],w[O]))))))}const J_=Xa((t,e,n,r)=>t.derive.staking.queryMulti([e],n,r));function Q_(t,e){return ae(t,(n,r,i)=>e.derive.session.indexes().pipe(be(({activeEra:a})=>{const s=n.map(u=>e.registry.createType("AccountId",u)),o=i||0;return s.length?K_(e,a,s,r,o):ee([])})))}function __(t,e){return ae(t,(n,r,i=!1)=>{const a=n.map(s=>e.registry.createType("AccountId",s).toString());return e.derive.staking._erasExposure(r,i).pipe(ne(s=>a.map(o=>s.map(({era:u,nominators:h,validators:p})=>{const y=!!p[o],w={},P=h[o]||[];return y?w[o]=p[o]:P&&P.forEach(({validatorId:N})=>{w[N]=p[N]}),{era:u,isEmpty:!Object.keys(w).length,isValidator:y,nominating:P,validators:w}}))))})}function $_(t,e){return ae(t,(n,r=!1)=>e.derive.staking.erasHistoric(r).pipe(be(i=>e.derive.staking._stakerExposures(n,i,r))))}const e$=Xa((t,e,n)=>t.derive.staking.stakerExposures([e],n));function t$(t,e){return ae(t,(n,r,i)=>{const a=e.registry.createType("AccountId",n).toString();return e.derive.staking._erasPoints(r,i).pipe(ne(s=>s.map(({era:o,eraPoints:u,validators:h})=>({era:o,eraPoints:u,points:h[a]||e.registry.createType("RewardPoint")}))))})}const n$=nd("_stakerPoints");function r$(t,e){return ae(t,(n,r,i)=>e.query.staking.erasValidatorPrefs.multi(r.map(a=>[a,n])).pipe(ne(a=>a.map((s,o)=>({era:r[o],validatorPrefs:s})))))}const i$=nd("_stakerPrefs");function Ow(t,e){const n=e?(e.legacyClaimedRewards||e.claimedRewards).toArray():[];return t.toArray().concat(n)}function a$(t,e,[n,r,i],a,s){return a.map(({era:o,isEmpty:u,isValidator:h,nominating:p,validators:y})=>{const{eraPoints:w,validators:P}=n.find(I=>I.era.eq(o))||{eraPoints:dn,validators:{}},{eraReward:N}=i.find(I=>I.era.eq(o))||{eraReward:t.registry.createType("Balance")},{validators:O}=r.find(I=>I.era.eq(o))||{validators:{}},z={},j=e.toString();return Object.entries(y).forEach(([I,A])=>{var U,H,X;const C=P[I]||dn,F=((U=O[I])==null?void 0:U.commission.unwrap())||dn,S=A.total?(H=A.total)==null?void 0:H.unwrap():A.pageTotal?(X=A.pageTotal)==null?void 0:X.unwrap():dn;let R=dn,E;if(!(S.isZero()||C.isZero()||w.isZero())){R=N.mul(C).div(w);const L=F.mul(R).div(f0);let c;if(I===j)if(A.own)c=A.own.unwrap();else{const l=A.others.find(({who:f})=>f.eq(I));c=l?l.value.unwrap():dn}else{const l=A.others.find(({who:f})=>f.eq(j));c=l?l.value.unwrap():dn}E=R.sub(L).imul(c).div(S).iadd(I===j?L:dn)}z[I]={total:t.registry.createType("Balance",R),value:t.registry.createType("Balance",E)}}),{era:o,eraReward:N,isClaimed:s.some(I=>I.eq(o)),isEmpty:u,isValidator:h,nominating:p,validators:z}})}function s$(t){return t.reduce(([e,n],r)=>{const i=[];return n.push(i),r.forEach(({validators:a})=>Object.keys(a).forEach(s=>{i.includes(s)||(i.push(s),e.includes(s)||e.push(s))})),[e,n]},[[],[]])}function o$(t,e,n,r){const i=[];Object.keys(n.validators).forEach(a=>{const s=t.indexOf(a);if(s!==-1){const o=e[s].stakingLedger;Ow(r,o).some(u=>n.era.eq(u))&&i.push(a)}}),i.forEach(a=>{delete n.validators[a]})}function c$(t,e,{claimedRewardsEras:n,rewards:r,stakingLedger:i}){const a=t.filter(u=>!Ow(n,i).some(h=>h.eq(u))),s=e.map(([u])=>u),o=e.map(([,u])=>u);return r.filter(({isEmpty:u})=>!u).filter(u=>a.some(h=>u.era.eq(h))?(o$(s,o,u,n),!0):!1).filter(({validators:u})=>Object.keys(u).length!==0).map(u=>{let h=u.isClaimed;const p=Object.keys(u.validators);if(!u.isClaimed&&p.length)for(const y of p){const w=o.find(P=>P.accountId.toString()===y);if(w){h=w.claimedRewardsEras.toArray().some(P=>P.eq(u.era));break}}return he({},u,{isClaimed:h,nominators:u.nominating.filter(y=>u.validators[y.validatorId])})})}function u$(t,e){return ae(t,(n,r=!1)=>me([e.derive.staking._erasPoints(n,r),e.derive.staking._erasPrefs(n,r),e.derive.staking._erasRewards(n,r)]))}function l$(t,e){return ae(t,(n,r,i=!1)=>{const a=r.map(s=>typeof s=="number"||typeof s=="string"?e.registry.createType("u32",s):s);return me([e.derive.staking.queryMulti(n,{withClaimedRewardsEras:!0,withLedger:!0}),e.derive.staking._stakerExposures(n,a,i),e.derive.staking._stakerRewardsEras(a,i)]).pipe(be(([s,o,u])=>{const h=s.map(({claimedRewardsEras:w,stakingLedger:P,stashId:N},O)=>!N||!P&&!w?[]:a$(e,N,u,o[O],w));if(i)return ee(h);const[p,y]=s$(h);return e.derive.staking.queryMulti(p,{withClaimedRewardsEras:!0,withLedger:!0}).pipe(ne(w=>s.map(({claimedRewardsEras:P,stakingLedger:N},O)=>c$(r,y[O].map(z=>[z,w.find(j=>j.accountId.eq(z))]).filter(z=>!!z[1]),{claimedRewardsEras:P,rewards:h[O],stakingLedger:N}))))}))})}const d$=Xa((t,e,n)=>t.derive.staking.erasHistoric(n).pipe(be(r=>t.derive.staking._stakerRewards([e],r,n))));function f$(t,e){return ae(t,(n,r)=>n.length&&r.length?e.derive.staking._stakerRewards(n,r,!1):ee([]))}function h$(t,e){return ae(t,(n,r=!1)=>e.derive.staking.erasHistoric(r).pipe(be(i=>e.derive.staking.stakerRewardsMultiEras(n,i))))}function p$(t,e){return ae(t,(n,r,i)=>{const a=e.registry.createType("AccountId",n).toString();return e.derive.staking._erasSlashes(r,i).pipe(ne(s=>s.map(({era:o,nominators:u,validators:h})=>({era:o,total:u[a]||h[a]||e.registry.createType("Balance")}))))})}const m$=nd("_stakerSlashes");function b$(t){let e=Date.now();return t.query.system.events().pipe(ne(n=>(e=n.filter(({event:r,phase:i})=>{try{return i.isApplyExtrinsic&&r.section==="staking"&&r.method==="Bonded"}catch{return!1}})?Date.now():e,e)),Jl(e),sb({skipTimeout:!0}))}function y$(t,e){return ae(t,()=>b$(e).pipe(be(()=>e.query.staking.validators.keys()),ne(n=>n.map(({args:[r]})=>r).filter(r=>r))))}function g$(t,e){return ae(t,()=>e.query.staking.erasStakersOverview?e.derive.session.indexes().pipe(be(({currentEra:n})=>e.query.staking.erasStakersOverview.keys(n)),ne(n=>[...new Set(n.map(({args:[,r]})=>r.toString()))].map(r=>e.registry.createType("AccountId",r)))):e.query.staking.erasStakers?e.derive.session.indexes().pipe(be(({currentEra:n})=>e.query.staking.erasStakers.keys(n)),ne(n=>[...new Set(n.map(({args:[,r]})=>r.toString()))].map(r=>e.registry.createType("AccountId",r)))):e.query.staking.currentElected())}function x$(t,e){return ae(t,()=>me([e.query.session?e.query.session.validators():ee([]),e.query.staking?e.derive.staking.nextElected():ee([])]).pipe(ne(([n,r])=>({nextElected:r.length?r:n,validators:n}))))}const v$={withController:!0,withPrefs:!0};function w$(t,e){return ae(t,(n=v$)=>me([e.derive.staking.validators(),e.derive.staking.stashes()]).pipe(be(([{nextElected:r},i])=>{const a=r.map(o=>o.toString()),s=i.filter(o=>!a.includes(o.toString()));return e.derive.staking.queryMulti(s,n).pipe(ne(o=>({info:o,waiting:s})))})))}const P$=Object.freeze(Object.defineProperty({__proto__:null,_eraExposure:u_,_eraPrefs:v_,_eraSlashes:S_,_erasExposure:d_,_erasPoints:b_,_erasPrefs:P_,_erasRewards:T_,_erasSlashes:z_,_ownExposures:B_,_ownSlashes:C_,_stakerExposures:__,_stakerPoints:t$,_stakerPrefs:r$,_stakerRewards:l$,_stakerRewardsEras:u$,_stakerSlashes:p$,account:$Q,accounts:_Q,currentPoints:e_,electedInfo:r_,eraExposure:l_,eraPrefs:w_,eraSlashes:E_,erasExposure:f_,erasHistoric:h_,erasPoints:y_,erasPrefs:M_,erasRewards:N_,erasSlashes:I_,keys:H_,keysMulti:A_,nextElected:g$,overview:R_,ownExposure:X_,ownExposures:j_,ownSlash:U_,ownSlashes:D_,query:J_,queryMulti:Q_,stakerExposure:e$,stakerExposures:$_,stakerPoints:n$,stakerPrefs:i$,stakerRewards:d$,stakerRewardsMulti:h$,stakerRewardsMultiEras:f$,stakerSlashes:m$,stashes:y$,validators:x$,waitingInfo:w$},Symbol.toStringTag,{value:"Module"})),M$=mh("technicalCommittee"),k$=yh("technicalCommittee"),T$=xh("technicalCommittee"),N$=vh("technicalCommittee"),O$=wh("technicalCommittee"),V$=gh("technicalCommittee"),S$=bh("technicalCommittee"),E$=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:k$,members:M$,prime:S$,proposal:T$,proposalCount:N$,proposalHashes:O$,proposals:V$},Symbol.toStringTag,{value:"Module"}));function z$(t,{allIds:e,allProposals:n,approvalIds:r,councilProposals:i,proposalCount:a}){const s=[],o=[],u=i.filter(({proposal:h})=>h&&(t.tx.treasury.approveProposal&&t.tx.treasury.approveProposal.is(h)||t.tx.treasury.rejectProposal&&t.tx.treasury.rejectProposal.is(h)));return e.forEach((h,p)=>{if(n[p].isSome){const y=u.filter(({proposal:N})=>N&&h.eq(N.args[0])).sort((N,O)=>N.proposal&&O.proposal?N.proposal.method.localeCompare(O.proposal.method):N.proposal?-1:1),w=r.some(N=>N.eq(h)),P={council:y,id:h,proposal:n[p].unwrap()};w?s.push(P):o.push(P)}}),{approvals:s,proposalCount:a,proposals:o}}function I$(t,e,n){const r=[],i=e.toNumber();for(let s=0;s<i;s++)n.some(o=>o.eqn(s))||r.push(t.registry.createType("ProposalIndex",s));const a=[...r,...n];return me([t.query.treasury.proposals.multi(a),t.derive.council?t.derive.council.proposals():ee([])]).pipe(ne(([s,o])=>z$(t,{allIds:a,allProposals:s,approvalIds:n,councilProposals:o,proposalCount:e})))}function L$(t,e){return ae(t,()=>e.query.treasury?me([e.query.treasury.proposalCount(),e.query.treasury.approvals()]).pipe(be(([n,r])=>I$(e,n,r))):ee({approvals:[],proposalCount:e.registry.createType("ProposalIndex"),proposals:[]}))}const H$=Object.freeze(Object.defineProperty({__proto__:null,proposals:L$},Symbol.toStringTag,{value:"Module"}));function A$(t,e){return ae(t,n=>me([e.rpc.chain.getBlock(n),e.queryAt(n).pipe(be(r=>r.system.events()))]).pipe(ne(([r,i])=>({block:r,events:i}))))}function R$(t,e){return ae(t,(n,r)=>e.derive.tx.events(n).pipe(ne(({block:i,events:a})=>{const s=i.block.extrinsics.findIndex(u=>u.hash.toString()===r);if(s===-1)return null;const o=a.filter(({phase:u})=>u.isApplyExtrinsic&&u.asApplyExtrinsic.eq(s));return{blockHash:i.hash.toHex(),blockNumber:i.block.header.number.toNumber(),events:o,extrinsic:i.block.extrinsics[s],success:o.findIndex(u=>u.event.method==="ExtrinsicSuccess")!==-1}})))}function B$(t,e){return ae(t,(n,r)=>e.derive.tx.events(n).pipe(ne(({block:i,events:a})=>{const s=[];return{blockHash:i.hash.toHex(),blockNumber:i.block.header.number.toNumber(),extrinsics:i.block.extrinsics.filter((o,u)=>o.signer.toString()===r?(s.push(u),!0):!1).map((o,u)=>{const h=a.filter(({phase:p})=>p.isApplyExtrinsic&&p.asApplyExtrinsic.eq(s[u]));return{events:h,extrinsic:o,success:h.findIndex(p=>p.event.method==="ExtrinsicSuccess")!==-1}})}})))}const X$=250,j$=new Xe(6*1e3),Vw=new Xe(5),C$=new Xe(5*60*1e3);function Sw(t,e){return t.derive.balances.account(e).pipe(ne(({accountNonce:n})=>n))}function U$(t,e){var n;return t.call.accountNonceApi?t.call.accountNonceApi.accountNonce(e):(n=t.rpc.system)!=null&&n.accountNextIndex?t.rpc.system.accountNextIndex(e):Sw(t,e)}function D$(t){return me([t.rpc.chain.getHeader().pipe(be(e=>e.parentHash.isEmpty?ee(e):t.rpc.chain.getHeader(e.parentHash).pipe(za(()=>ee(e))))),t.rpc.chain.getFinalizedHead().pipe(be(e=>t.rpc.chain.getHeader(e).pipe(za(()=>ee(null)))))]).pipe(ne(([e,n])=>!n||gm(e).sub(gm(n)).gt(Vw)?e:n))}function F$(t){var e,n,r;const i=((e=t.consts.babe)==null?void 0:e.expectedBlockTime)||((n=t.consts.aura)==null?void 0:n.slotDuration)||((r=t.consts.timestamp)==null?void 0:r.minimumPeriod.muln(2));return i&&i.isZero&&!i.isZero()?i:void 0}function Z$(t,e){return(n,r,i)=>me([qt(r)?Sw(e,n):r===-1?U$(e,n):ee(e.registry.createType("Index",r)),qt(i)||Ht(i)&&i>0?D$(e):ee(null)]).pipe(ne(([a,s])=>{var o,u;return{header:s,mortalLength:Math.min(((u=(o=e.consts.system)==null?void 0:o.blockHashCount)==null?void 0:u.toNumber())||X$,C$.div(F$(e)||j$).iadd(Vw).toNumber()),nonce:a}}))}const q$=Object.freeze(Object.defineProperty({__proto__:null,accountExtrinsics:B$,events:A$,extrinsicInfo:R$,signingInfo:Z$},Symbol.toStringTag,{value:"Module"})),W$={accounts:EY,alliance:CY,bagsList:KY,balances:uK,bounties:fK,chain:OK,contracts:EK,council:qK,crowdloan:rJ,democracy:QJ,elections:sQ,imOnline:uQ,membership:yQ,parachains:MQ,session:RQ,society:WQ,staking:P$,technicalCommittee:E$,treasury:H$,tx:q$},Xs={allianceMotion:{instances:["allianceMotion"],methods:[]},bagsList:{instances:["voterBagsList","voterList","bagsList"],methods:[],withDetect:!0},contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function G$(t,e,n){return t.registry.getModuleInstances(e,n)||[]}function l8(t,e,n){const r={},i=Object.keys(n),a=Object.keys(e.query),s=e.runtimeVersion.specName,o=P=>a.includes(P),u=P=>G$(e,s,P).some(o),h=P=>N=>P.some(O=>a.includes(O)&&e.query[O][N]),p=P=>Object.keys(n[P]),y=(P,N)=>n[P][N](t,e),w=P=>!Xs[P]||Xs[P].instances.some(o)&&(!Xs[P].methods.length||Xs[P].methods.every(h(Xs[P].instances)))||Xs[P].withDetect&&Xs[P].instances.some(u);for(let P=0,N=i.length;P<N;P++){const O=i[P];w(O)&&dw(r,O,p,y)}return r}function Y$(t,e,n={}){return{...l8(t,e,W$),...l8(t,e,n)}}function d8(t,e){const n=s=>Object.keys(e[s]),r=(s,o)=>t(e[s][o]),i={},a=Object.keys(e);for(let s=0,o=a.length;s<o;s++)dw(i,a[s],n,r);return i}const K$=t=>t;function mb(t,e,n,r){return t.filter(({event:i})=>e===i.section&&n.includes(i.method)).map(i=>r(i))}function J$({event:{data:[t]}}){return t}function Q$({event:{data:t,method:e}}){return e==="ExtrinsicSuccess"?t[0]:t[1]}function _$(t=[]){return mb(t,"system",["ExtrinsicFailed"],J$)[0]}function $$(t=[]){return mb(t,"system",["ExtrinsicFailed","ExtrinsicSuccess"],Q$)[0]}class Dp{constructor({blockNumber:e,dispatchError:n,dispatchInfo:r,events:i,internalError:a,status:s,txHash:o,txIndex:u}){Y(this,"dispatchError"),Y(this,"dispatchInfo"),Y(this,"internalError"),Y(this,"events"),Y(this,"status"),Y(this,"txHash"),Y(this,"txIndex"),Y(this,"blockNumber"),this.dispatchError=n||_$(i),this.dispatchInfo=r||$$(i),this.events=i||[],this.internalError=a,this.status=s,this.txHash=o,this.txIndex=u,this.blockNumber=e}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(e,n){return mb(this.events,e,Array.isArray(n)?n:[n],K$)}findRecord(e,n){return this.filterRecords(e,n)[0]}toHuman(e){var n,r,i;return{dispatchError:(n=this.dispatchError)==null?void 0:n.toHuman(),dispatchInfo:(r=this.dispatchInfo)==null?void 0:r.toHuman(),events:this.events.map(a=>a.toHuman(e)),internalError:(i=this.internalError)==null?void 0:i.message.toString(),status:this.status.toHuman(e)}}}function f8(t,e,n,{header:r,mortalLength:i,nonce:a}){if(!r){if(n.era&&!n.blockHash)throw new Error("Expected blockHash to be passed alongside non-immortal era options");return Ht(n.era)&&(delete n.era,delete n.blockHash),xm(t,n,{nonce:a})}return xm(t,n,{blockHash:r.hash,era:e.createTypeUnsafe("ExtrinsicEra",[{current:r.number,period:n.era||i}]),nonce:a})}function h8(t,e){let n={};return Ze(t)?e=t:n=he({},t),[n,e]}function xm(t,e,n){return he({blockHash:t.genesisHash,genesisHash:t.genesisHash},e,n,{runtimeVersion:t.runtimeVersion,signedExtensions:t.registry.signedExtensions,version:t.extrinsicType})}function eee(t={}){return Ti(t)||Ht(t)?{nonce:t}:t}function tee({api:t,apiType:e,blockHash:n,decorateMethod:r}){var i,a,s,o,u,h,p,y,w;const P=t.registry.createClass("Extrinsic"),N=new WeakMap,O=class Ew extends P{constructor(I,A){super(I,A,{version:t.extrinsicType}),G(this,i),G(this,a,So),G(this,s,(U,H)=>{const X=Mp(U)?U.address:U.toString(),C=eee(H);return t.derive.tx.signingInfo(X,C.nonce,C.era).pipe(y9(),ah(async F=>{const S=f8(t,this.registry,C,F);let R=-1,E=null;if(Mp(U))this.sign(U,S);else{const L=await T(this,p).call(this,X,S,F.header);R=L.id,L.signedTransaction&&(E=L.signedTransaction)}return{options:S,signedTransaction:E,updateId:R}}))}),G(this,o,(U,H)=>{if(!H.isFinalized&&!H.isInBlock)return ee(T(this,a).call(this,new Dp({status:H,txHash:U})));const X=H.isInBlock?H.asInBlock:H.asFinalized;return t.derive.tx.events(X).pipe(ne(({block:C,events:F})=>T(this,a).call(this,new Dp({...Kj(U,C,F,H),status:H,txHash:U}))),za(C=>ee(T(this,a).call(this,new Dp({internalError:C,status:H,txHash:U})))))}),G(this,u,U=>t.rpc.author.submitExtrinsic((U==null?void 0:U.signedTransaction)||this).pipe(Vs(H=>{T(this,y).call(this,H,U)}))),G(this,h,U=>{const H=this.hash;return t.rpc.author.submitAndWatchExtrinsic((U==null?void 0:U.signedTransaction)||this).pipe(be(X=>T(this,o).call(this,H,X)),Vs(X=>{T(this,y).call(this,X,U)}))}),G(this,p,async(U,H,X)=>{const C=H.signer||t.signer,F=H.allowCallDataAlteration??!0;if(!C)throw new Error("No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const S=this.registry.createTypeUnsafe("SignerPayload",[he({},H,{address:U,blockNumber:X?X.number:0,method:this.method})]);let R;if(Ze(C.signPayload)){if(R=await C.signPayload(S.toPayload()),R.signedTransaction&&!H.withSignedTransaction)throw new Error("The `signedTransaction` field may not be submitted when `withSignedTransaction` is disabled");if(R.signedTransaction&&H.withSignedTransaction){const E=this.registry.createTypeUnsafe("Extrinsic",[R.signedTransaction]),L=this.registry.createTypeUnsafe("SignerPayload",[he({},{address:U,assetId:E.assetId&&E.assetId.isSome?E.assetId.toHex():null,blockHash:S.blockHash,blockNumber:X?X.number:0,era:E.era.toHex(),genesisHash:S.genesisHash,metadataHash:E.metadataHash?E.metadataHash.toHex():null,method:E.method.toHex(),mode:E.mode?E.mode.toHex():null,nonce:E.nonce.toHex(),runtimeVersion:S.runtimeVersion,signedExtensions:S.signedExtensions,tip:E.tip?E.tip.toHex():null,version:S.version})]);if(!E.isSigned)throw new Error(`When using the signedTransaction field, the transaction must be signed. Recieved isSigned: ${E.isSigned}`);return F||T(this,w).call(this,S,E),super.addSignature(U,R.signature,L.toPayload()),{id:R.id,signedTransaction:R.signedTransaction}}}else if(Ze(C.signRaw))R=await C.signRaw(S.toRaw());else throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");return super.addSignature(U,R.signature,S.toPayload()),{id:R.id}}),G(this,y,(U,H)=>{if(H&&H.updateId!==-1){const{options:X,updateId:C}=H,F=X.signer||t.signer;F&&Ze(F.update)&&F.update(C,U)}}),G(this,w,(U,H)=>{const X=U.toPayload(),C=F=>`signAndSend: ${F} does not match the original payload`;if(X.method!==H.method.toHex())throw new Error(C("call data"))}),Q(this,i,e==="rxjs")}get hasDryRun(){var I;return Ze((I=t.rpc.system)==null?void 0:I.dryRun)}get hasPaymentInfo(){var I;return Ze((I=t.call.transactionPaymentApi)==null?void 0:I.queryInfo)}dryRun(I,A){if(!this.hasDryRun)throw new Error("The system.dryRun RPC call is not available in your environment");return n||Ut(A)||Qe(A)?r(()=>t.rpc.system.dryRun(this.toHex(),n||A)):r(()=>T(this,s).call(this,I,A).pipe(be(()=>t.rpc.system.dryRun(this.toHex()))))()}paymentInfo(I,A){if(!this.hasPaymentInfo)throw new Error("The transactionPaymentApi.queryInfo runtime call is not available in your environment");if(n||Ut(A)||Qe(A))return r(()=>t.callAt(n||A).pipe(be(X=>{const C=this.toU8a();return X.transactionPaymentApi.queryInfo(C,C.length)})));const[U]=h8(A),H=Mp(I)?I.address:I.toString();return r(()=>t.derive.tx.signingInfo(H,U.nonce,U.era).pipe(y9(),be(X=>{const C=f8(t,this.registry,U,X),F=xm(t,C,{}),S=t.tx(this.toU8a()).signFake(H,F).toU8a();return t.call.transactionPaymentApi.queryInfo(S,S.length)})))()}send(I){const A=t.hasSubscriptions&&(T(this,i)||!!I),U=N.get(this);return N.delete(this),r(A?()=>T(this,h).call(this,U):()=>T(this,u).call(this,U))(I)}signAsync(I,A){return r(()=>T(this,s).call(this,I,A).pipe(ne(U=>{if(U.signedTransaction){const H=new Ew(t.registry,U.signedTransaction);return N.set(this,U),H}return this})))()}signAndSend(I,A,U){const[H,X]=h8(A,U),C=t.hasSubscriptions&&(T(this,i)||!!X);return r(()=>T(this,s).call(this,I,H).pipe(be(F=>C?T(this,h).call(this,F):T(this,u).call(this,F))))(X)}withResultTransform(I){return Q(this,a,I),this}};return i=new WeakMap,a=new WeakMap,s=new WeakMap,o=new WeakMap,u=new WeakMap,h=new WeakMap,p=new WeakMap,y=new WeakMap,w=new WeakMap,O}function p8(t,e,n,r,i){const a=tee({api:e,apiType:t,blockHash:i,decorateMethod:n});return s=>new a(r||e.registry,s)}function zw(t,e){return t.findMetaCall(qe(e))}function Iw(t,e){return t.findMetaError(qe(e))}const nee={},Lw={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},DispatchErrorModule:"DispatchErrorModuleU8",PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},m8={...Lw,AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"},ree=[{minmax:[240,243],types:{...m8,ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}}},{minmax:[244,999],types:{...m8}},{minmax:[1e3,void 0],types:{...Lw}}],Wr={CompactAssignments:"CompactAssignmentsWith24",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]},Weight:"WeightV1"},Fp={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},ns={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},iee=[{minmax:[1019,1031],types:{...Fp,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1032,1042],types:{...Fp,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1043,1045],types:{...Fp,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1046,1049],types:{...Wr,...ns,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo223",Weight:"u32"}},{minmax:[1050,1054],types:{...Wr,...ns,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo240",Weight:"u32"}},{minmax:[1055,1056],types:{...Wr,...ns,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo240",Weight:"u32"}},{minmax:[1057,1061],types:{...Wr,...ns,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Scheduled:"ScheduledTo254"}},{minmax:[1062,2012],types:{...Wr,...ns,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[2013,2022],types:{...Wr,...ns,CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"}},{minmax:[2023,2024],types:{...Wr,...ns,RefCount:"RefCountTo259"}},{minmax:[2025,2027],types:{...Wr,...ns}},{minmax:[2028,2029],types:{...Wr,AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"}},{minmax:[2030,9e3],types:{...Wr,CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"}},{minmax:[9010,9099],types:{...Wr,...Ur("V0")}},{minmax:[9100,9105],types:{...Wr,...Ur("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],aee=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}],see=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}],js={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}},Weight:"WeightV1"},au={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",DispatchErrorModule:"DispatchErrorModuleU8",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},oee=[{minmax:[0,10],types:{...js,...au,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ElectionResult:"ElectionResultToSpec10"}},{minmax:[11,12],types:{...js,...au,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[13,22],types:{...js,...au,CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"}},{minmax:[23,24],types:{...js,...au,RefCount:"RefCountTo259"}},{minmax:[25,27],types:{...js,...au}},{minmax:[28,29],types:{...js,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[30,9109],types:{...js}},{minmax:[9110,void 0],types:{Weight:"WeightV1"}}],su={DispatchErrorModule:"DispatchErrorModuleU8",FullIdentification:"()",Keys:"SessionKeys7B",Weight:"WeightV1"},cee=[{minmax:[0,200],types:{...su,AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"}},{minmax:[201,214],types:{...su,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[215,228],types:{...su,Keys:"SessionKeys6"}},{minmax:[229,9099],types:{...su,...Ur("V0")}},{minmax:[9100,9105],types:{...su,...Ur("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],uee=[{minmax:[0,void 0],types:{}}],b8={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},lee=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...b8,...Ur("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...b8,...Ur("V1")}},{minmax:[500,9999],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[1e4,void 0],types:{Weight:"WeightV1"}}],y8={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},dee=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...y8,...Ur("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...y8,...Ur("V1")}},{minmax:[500,1001003],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[1002e3,void 0],types:{Weight:"WeightV1"}}],rs={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]},Weight:"WeightV1"},ou={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"},fee=[{minmax:[1,2],types:{...rs,...ou,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"}},{minmax:[3,22],types:{...rs,...ou,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[23,42],types:{...rs,...ou,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"}},{minmax:[43,44],types:{...rs,...ou,DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"}},{minmax:[45,47],types:{...rs,...ou}},{minmax:[48,49],types:{...rs,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[50,9099],types:{...rs,...Ur("V0")}},{minmax:[9100,9105],types:{...rs,...Ur("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],g8={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},hee=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...g8,...Ur("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...g8,...Ur("V1")}},{minmax:[500,9434],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[9435,void 0],types:{Weight:"WeightV1"}}],pee={"centrifuge-chain":ree,kusama:iee,node:aee,"node-template":see,polkadot:oee,rococo:cee,shell:uee,statemine:lee,statemint:dee,westend:fee,westmint:hee},mee=[[0,1020,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[26669,1021,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[38245,1022,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[54248,1023,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[59659,1024,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[67651,1025,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[82191,1027,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[83238,1028,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[101503,1029,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[203466,1030,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[295787,1031,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[461692,1032,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[504329,1033,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[569327,1038,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[587687,1039,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[653183,1040,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[693488,1042,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[901442,1045,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1375086,1050,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1445458,1051,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1472960,1052,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1475648,1053,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1491596,1054,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1574408,1055,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2064961,1058,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2201991,1062,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2671528,2005,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2704202,2007,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2728002,2008,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2832534,2011,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2962294,2012,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[324e4,2013,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3274408,2015,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3323565,2019,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3534175,2022,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3860281,2023,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4143129,2024,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4401242,2025,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4841367,2026,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5961600,2027,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6137912,2028,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6561855,2029,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7100891,2030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7468792,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7668600,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7812476,9040,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8010981,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8073833,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8555825,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8945245,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9611377,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9625129,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9866422,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10403784,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10960765,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11006614,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11404482,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11601803,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12008022,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12405451,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12665416,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12909508,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13109752,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13555777,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13727747,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[14248044,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[14433840,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[14645900,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15048375,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15426015,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15680713,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15756296,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15912007,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[16356547,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[17335450,9381,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1]]],[18062739,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[18625e3,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[20465806,1e6,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[2157e4,1001e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21786291,1001002,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[22515962,1001003,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[2279e4,1002e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23176015,1002001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23450253,1002004,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23565293,1002005,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23780224,1002006,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[24786390,1003e3,[["0xc51ff1fa3f5d0cca",1],["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]]],bee=[[0,0,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[29231,1,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[188836,5,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[199405,6,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[214264,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[244358,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[303079,9,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[314201,10,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[342400,11,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[443963,12,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[528470,13,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[687751,14,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[746085,15,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[787923,16,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[799302,17,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1205128,18,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1603423,23,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1733218,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2005673,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2436698,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3613564,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3899547,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4345767,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4876134,30,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5661442,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6321619,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6713249,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7217907,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7229126,9110,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7560558,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8115869,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8638103,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9280179,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9738717,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10156856,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10458576,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10655116,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10879371,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11328884,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11532856,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11933818,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12217535,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12245277,9281,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12532644,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12876189,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[13800015,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[14188833,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[14543918,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[15978362,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[1645e4,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[1784e4,9431,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[18407475,1000001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[19551e3,1001002,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[20181758,1001003,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[20438530,1002e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21169168,1002004,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21455374,1002005,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21558004,1002006,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21800141,1002007,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]]],yee=[[214356,4,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[392764,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[409740,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[809976,20,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[877581,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[879238,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[889472,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[902937,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[932751,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[991142,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1030162,31,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1119657,32,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1199282,33,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1342534,34,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1392263,35,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1431703,36,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1433369,37,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1490972,41,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2087397,43,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2316688,44,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2549864,45,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925782,46,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925843,47,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4207800,48,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4627944,49,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5124076,50,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5478664,900,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5482450,9e3,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5584305,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5784566,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5879822,9031,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5896856,9032,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5897316,9033,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6117927,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6210274,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6379314,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6979141,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7568453,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7766394,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7911691,9120,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7968866,9121,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7982889,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8514322,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091726,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091774,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9406726,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9921066,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10007115,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10480973,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10578091,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10678509,9210,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10811001,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11096116,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11409279,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11584820,9251,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11716837,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11876919,9261,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11987927,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12077324,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12301871,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12604343,9290,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12841034,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13128237,9310,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13272363,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13483497,9330,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13649433,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13761100,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13847400,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[14249200,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[14576855,9380,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1]]],[14849830,9390,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15146832,9400,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15332317,9401,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15661793,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[16165469,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[18293984,102e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18293991,103e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",8],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18451783,104e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",9],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18679741,1005e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",9],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19166695,1006e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19234157,1006001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19542944,1007e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19621258,1007001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19761406,1008e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20056997,1009e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20368318,101e4,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20649086,1011e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21217837,1011001,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21300429,1013e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21460051,1014e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21925427,1015e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",4],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[22500517,1016e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[22759684,1016001,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23056976,1016002,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23544582,1017e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1],["0x2609be83ac4468dc",1]]],[24002343,1017001,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1],["0x2609be83ac4468dc",1]]]],gee=Object.freeze(Object.defineProperty({__proto__:null,kusama:mee,polkadot:bee,westend:yee},Symbol.toStringTag,{value:"Module"})),xee={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function vee([t,e]){const n=cB.find(r=>r.network===t)||xee[t];if(!n)throw new Error(`Unable to find info for chain ${t}`);return{genesisHash:$i(n.genesisHash[0]),network:t,versions:e.map(([r,i,a])=>({apis:a,blockNumber:new Xe(r),specVersion:new Xe(i)}))}}const wee=Object.entries(gee).map(vee);function Fc(t,e,n){return n(t.toString(),e.toString())}function Td(t=[],e){return t.filter(({minmax:[n,r]})=>(n==null||e>=n)&&(r==null||e<=r)).reduce((n,{types:r})=>({...n,...r}),{})}function Pee({knownTypes:t},e,n){return Fc(e,n,(r,i)=>{var a,s,o,u,h,p;return{...((o=(s=(a=t.typesBundle)==null?void 0:a.spec)==null?void 0:s[i])==null?void 0:o.signedExtensions)??{},...((p=(h=(u=t.typesBundle)==null?void 0:u.chain)==null?void 0:h[r])==null?void 0:p.signedExtensions)??{}}})}function Mee({knownTypes:t},e,n,r){const i=Vn(r).toNumber();return Fc(e,n,(a,s)=>{var o,u,h,p,y,w,P,N;return{...Td(pee[s],i),...Td(nee[a],i),...Td((h=(u=(o=t.typesBundle)==null?void 0:o.spec)==null?void 0:u[s])==null?void 0:h.types,i),...Td((w=(y=(p=t.typesBundle)==null?void 0:p.chain)==null?void 0:y[a])==null?void 0:w.types,i),...((P=t.typesSpec)==null?void 0:P[s])??{},...((N=t.typesChain)==null?void 0:N[a])??{},...t.types??{}}})}function kee({knownTypes:t},e,n){return Fc(e,n,(r,i)=>{var a,s,o,u,h,p;return t.hasher||((o=(s=(a=t.typesBundle)==null?void 0:a.chain)==null?void 0:s[r])==null?void 0:o.hasher)||((p=(h=(u=t.typesBundle)==null?void 0:u.spec)==null?void 0:h[i])==null?void 0:p.hasher)||null})}function x8({knownTypes:t},e,n){return Fc(e,n,(r,i)=>{var a,s,o,u,h,p;return{...((o=(s=(a=t.typesBundle)==null?void 0:a.spec)==null?void 0:s[i])==null?void 0:o.rpc)??{},...((p=(h=(u=t.typesBundle)==null?void 0:u.chain)==null?void 0:h[r])==null?void 0:p.rpc)??{}}})}function Tee({knownTypes:t},e,n){return Fc(e,n,(r,i)=>{var a,s,o,u,h,p;return{...((o=(s=(a=t.typesBundle)==null?void 0:a.spec)==null?void 0:s[i])==null?void 0:o.runtime)??{},...((p=(h=(u=t.typesBundle)==null?void 0:u.chain)==null?void 0:h[r])==null?void 0:p.runtime)??{}}})}function Nee({knownTypes:t},e,n){return Fc(e,n,(r,i)=>{var a,s,o,u,h,p;return{...((o=(s=(a=t.typesBundle)==null?void 0:a.spec)==null?void 0:s[i])==null?void 0:o.alias)??{},...((p=(h=(u=t.typesBundle)==null?void 0:u.chain)==null?void 0:h[r])==null?void 0:p.alias)??{},...t.typesAlias??{}}})}function Oee(t,e){const n=wee.find(r=>t.eq(r.genesisHash));return n?[n.versions.reduce((r,i)=>e.gt(i.blockNumber)?i:r,void 0),n.versions.find(r=>e.lte(r.blockNumber))]:[void 0,void 0]}const Vee=Dr("api/augment");function v8(t,e,n=[]){return e.length?` ${e.length} ${t}${n.length?" and":""}`:""}function w8(t,e){return e.length?`
	${t.padStart(7)}: ${e.sort().join(", ")}`:""}function P8(t,e,[n,r]){(n.length||r.length)&&Vee.warn(`api.${t}: Found${v8("added",n,r)}${v8("removed",r)} ${e}:${w8("added",n)}${w8("removed",r)}`)}function M8(t,e){return t.filter(n=>!e.includes(n))}function See(t,e){return t.filter(n=>e.includes(n))}function Eee(t,e){const n=Object.keys(t),r=Object.keys(e);return[M8(n,r),M8(r,n)]}function k8(t,e){const n=Object.keys(t),r=See(Object.keys(e),n),i=[];for(let a=0,s=r.length;a<s;a++){const o=r[a],u=Object.keys(t[o]),h=Object.keys(e[o]);for(let p=0,y=h.length;p<y;p++){const w=h[p];u.includes(w)||i.push(`${o}.${w}`)}}return i}function zee(t,e){return[k8(e,t),k8(t,e)]}function Ii(t,e,n,r=!1){r&&SA(n),t&&Object.keys(n).length&&(P8(t,"modules",Eee(e,n)),P8(t,"calls",zee(e,n)));const i=Object.keys(e);for(let a=0,s=i.length;a<s;a++){const o=i[a],u=e[o];n[o]||(n[o]={}),fo(n[o],Object.keys(u),h=>u[h])}return n}function T8({lookup:t},{method:e,section:n},r){return`${n}.${e}(${r.map(i=>t.getTypeDef(i).type).join(", ")})`}function Nd(t,e,n){const r=n.filter(i=>!qt(i));if(e.meta.type.isPlain){if(r.length!==0)throw new Error(`${T8(t,e,[])} does not take any arguments, ${r.length} found`)}else{const{hashers:i,key:a}=e.meta.type.asMap,s=i.length===1?[a]:t.lookup.getSiType(a).def.asTuple.map(o=>o);if(r.length!==s.length)throw new Error(`${T8(t,e,s)} is a map, requiring ${s.length} arguments, ${r.length} found`)}return[e,r]}var ic;class Iee{constructor(){G(this,ic,new yv)}emit(e,...n){return T(this,ic).emit(e,...n)}on(e,n){return T(this,ic).on(e,n),this}off(e,n){return T(this,ic).removeListener(e,n),this}once(e,n){return T(this,ic).once(e,n),this}}ic=new WeakMap;const Od=1e3,Zp=250,Lee=50,qp=Dr("api/init");let Hee=0;function Wp(t,{method:e,section:n}){return ps(t.rx.query[n]&&t.rx.query[n][e],()=>`query.${n}.${e} is not available in this version of the metadata`)}var Fn,If,zr,vm,Lf;class Aee extends Iee{constructor(e,n,r){var i,a;super(),G(this,Fn),G(this,If,{}),G(this,zr),G(this,vm,[]),G(this,Lf,[]),Y(this,"__phantom",new Xe(0)),Y(this,"_type"),Y(this,"_call",{}),Y(this,"_consts",{}),Y(this,"_derive"),Y(this,"_errors",{}),Y(this,"_events",{}),Y(this,"_extrinsics"),Y(this,"_extrinsicType",fh.LATEST_EXTRINSIC_VERSION),Y(this,"_genesisHash"),Y(this,"_isConnected"),Y(this,"_isReady",!1),Y(this,"_query",{}),Y(this,"_queryMulti"),Y(this,"_rpc"),Y(this,"_rpcCore"),Y(this,"_runtimeMap",{}),Y(this,"_runtimeChain"),Y(this,"_runtimeMetadata"),Y(this,"_runtimeVersion"),Y(this,"_rx",{call:{},consts:{},query:{},tx:{}}),Y(this,"_options"),Y(this,"_decorateMethod"),Y(this,"_rxDecorateMethod",o=>o),Q(this,Fn,`${++Hee}`),Q(this,zr,((i=e.source)==null?void 0:i.registry)||e.registry||new cw),this._rx.callAt=(o,u)=>Zi(this.at(o,u)).pipe(ne(h=>h.rx.call)),this._rx.queryAt=(o,u)=>Zi(this.at(o,u)).pipe(ne(h=>h.rx.query)),this._rx.registry=T(this,zr),this._decorateMethod=r,this._options=e,this._type=n;const s=e.source?e.source._rpcCore.provider.isClonable?e.source._rpcCore.provider.clone():e.source._rpcCore.provider:e.provider||new xv;this._rpcCore=new oY(T(this,Fn),T(this,zr),{isPedantic:this._options.isPedantic,provider:s,rpcCacheCapacity:this._options.rpcCacheCapacity,ttl:(a=this._options.provider)==null?void 0:a.ttl,userRpc:this._options.rpc}),this._isConnected=new zl(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions}get registry(){return T(this,zr)}createType(e,...n){return T(this,zr).createType(e,...n)}registerTypes(e){e&&T(this,zr).register(e)}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_emptyDecorated(e,n){return{call:{},consts:{},errors:{},events:{},query:{},registry:e,rx:{call:{},query:{}},tx:p8(this._type,this._rx,this._decorateMethod,e,n)}}_createDecorated(e,n,r,i){r||(r=this._emptyDecorated(e.registry,i)),(n||!e.decoratedMeta)&&(e.decoratedMeta=KG(e.registry,e.metadata));const a=this._decorateCalls(e,this._decorateMethod,i),s=this._decorateCalls(e,this._rxDecorateMethod,i),o=this._decorateStorage(e.decoratedMeta,this._decorateMethod,i),u=this._decorateStorage(e.decoratedMeta,this._rxDecorateMethod,i);return Ii("consts",e.decoratedMeta.consts,r.consts,n),Ii("errors",e.decoratedMeta.errors,r.errors,n),Ii("events",e.decoratedMeta.events,r.events,n),Ii("query",o,r.query,n),Ii("query",u,r.rx.query,n),Ii("call",a,r.call,n),Ii("call",s,r.rx.call,n),r.findCall=h=>zw(e.registry,h),r.findError=h=>Iw(e.registry,h),r.queryMulti=i?this._decorateMultiAt(r,this._decorateMethod,i):this._decorateMulti(this._decorateMethod),r.runtimeVersion=e.runtimeVersion,{createdAt:i,decoratedApi:r,decoratedMeta:e.decoratedMeta}}_injectMetadata(e,n=!1){(n||!e.decoratedApi)&&(e.decoratedApi=this._emptyDecorated(e.registry));const{decoratedApi:r,decoratedMeta:i}=this._createDecorated(e,n,e.decoratedApi);this._call=r.call,this._consts=r.consts,this._errors=r.errors,this._events=r.events,this._query=r.query,this._rx.call=r.rx.call,this._rx.query=r.rx.query;const a=this._decorateExtrinsics(i,this._decorateMethod),s=this._decorateExtrinsics(i,this._rxDecorateMethod);n||!this._extrinsics?(this._extrinsics=a,this._rx.tx=s):(Ii("tx",a,this._extrinsics,!1),Ii(null,s,this._rx.tx,!1)),Ii(null,i.consts,this._rx.consts,n),this.emit("decorated")}injectMetadata(e,n,r){this._injectMetadata({counter:0,metadata:e,registry:r||T(this,zr),runtimeVersion:T(this,zr).createType("RuntimeVersionPartial")},n)}_decorateFunctionMeta(e,n){return n.meta=e.meta,n.method=e.method,n.section=e.section,n.toJSON=e.toJSON,e.callIndex&&(n.callIndex=e.callIndex),n}_filterRpc(e,n){Object.keys(n).length!==0&&(this._rpcCore.addUserInterfaces(n),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc));const r={};for(let a=0,s=e.length;a<s;a++){const[o]=e[a].split("_");r[o]=!0}const i=Object.keys(r);for(let a=0,s=i.length;a<s;a++){const o=IA(i[a]),u=`${o}Api`;this._runtimeMap[mu(o,64)]=o,this._runtimeMap[mu(u,64)]=u}this._filterRpcMethods(e)}_filterRpcMethods(e){const n=e.length!==0,r=[...this._rpcCore.mapping.entries()],i=[],a=r.length;for(let o=0;o<a;o++){const[,{alias:u,endpoint:h,method:p,pubsub:y,section:w}]=r[o];i.push(`${w}_${p}`),y&&(i.push(`${w}_${y[1]}`),i.push(`${w}_${y[2]}`)),u&&i.push(...u),h&&i.push(h)}const s=e.filter(o=>!i.includes(o)&&!o.includes("_unstable_"));s.length&&!this._options.noInitWarn&&qp.warn(`RPC methods not decorated: ${s.join(", ")}`);for(let o=0;o<a;o++){const[u,{method:h,section:p}]=r[o];n&&!e.includes(u)&&u!=="rpc_methods"&&this._rpc[p]&&(delete this._rpc[p][h],delete this._rx.rpc[p][h])}}_rpcSubmitter(e){return e((n,...r)=>Zi(this._rpcCore.provider.send(n,r)))}_decorateRpc(e,n,r=this._rpcSubmitter(n)){const i=r,a=(s,o)=>{const u=e[s][o],h=n(u,{methodName:o});return h.meta=u.meta,h.raw=n(u.raw,{methodName:o}),h};for(let s=0,o=e.sections.length;s<o;s++){const u=e.sections[s];if(!Object.prototype.hasOwnProperty.call(i,u)){const h=Object.keys(e[u]),p=y=>a(u,y);for(let y=0,w=h.length;y<w;y++){const P=h[y];(this.hasSubscriptions||!(P.startsWith("subscribe")||P.startsWith("unsubscribe")))&&(Object.prototype.hasOwnProperty.call(i,u)||(i[u]={}),Zn(i[u],P,p))}}}return i}_addRuntimeDef(e,n){if(!n)return;const r=Object.entries(n);for(let i=0,a=r.length;i<a;i++){const[s,o]=r[i];if(e[s])for(let u=0,h=o.length;u<h;u++){const p=o[u],y=e[s].find(({version:w})=>p.version===w);y?he(y.methods,p.methods):e[s].push(p)}else e[s]=o}}_getRuntimeDefs(e,n,r=""){const i={},a=Object.values(P0);for(let s=0,o=a.length;s<o;s++)this._addRuntimeDef(i,a[s].runtime);return this._addRuntimeDef(i,Tee(e,r,n)),this._addRuntimeDef(i,this._options.runtime),Object.entries(i)}_getMethods(e,n){const r={};return n.forEach(i=>{const{docs:a,inputs:s,name:o,output:u}=i;r[o.toString()]={description:a.map(h=>h.toString()).join(),params:s.map(({name:h,type:p})=>({name:h.toString(),type:e.lookup.getName(p)||e.lookup.getTypeDef(p).type})),type:e.lookup.getName(u)||e.lookup.getTypeDef(u).type}}),r}_getRuntimeDefsViaMetadata(e){const n={},{apis:r}=e.metadata;for(let i=0,a=r.length;i<a;i++){const{methods:s,name:o}=r[i];n[o.toString()]=[{methods:this._getMethods(e,s),version:0}]}return Object.entries(n)}_decorateCalls({registry:e,runtimeVersion:{apis:n,specName:r,specVersion:i}},a,s){const o={},u={},h={},p=e.metadata.apis.length>0,y=p?this._getRuntimeDefsViaMetadata(e):this._getRuntimeDefs(e,r,this._runtimeChain),w=[],P=`${r.toString()}/${i.toString()}`,N=T(this,If)[P]||!1;if(T(this,If)[P]=!0,p)for(let I=0,A=y.length;I<A;I++){const[U,H]=y[I],X=H[0],C=mu(U,64),F=Rt(U),S=Object.entries(X.methods);u[F]||(u[F]={});for(let R=0,E=S.length;R<E;R++){const[L,c]=S[R],l=Rt(L);u[F][l]=he({method:l,name:`${U}_${L}`,section:F,sectionHash:C},c)}}else{for(let A=0,U=y.length;A<U;A++){const[H,X]=y[A],C=mu(H,64),F=n.find(([S])=>S.eq(C));if(h[C]=!0,F){const S=X.map(({version:E})=>E).sort(),R=X.find(({version:E})=>F[1].eq(E));if(R){const E=Rt(H),L=Object.entries(R.methods);if(L.length){u[E]||(u[E]={});for(let c=0,l=L.length;c<l;c++){const[f,b]=L[c],g=Rt(f);u[E][g]=he({method:g,name:`${H}_${f}`,section:E,sectionHash:C},b)}}}else w.push(`${H}/${F[1].toString()} (${S.join("/")} known)`)}}const I=n.map(([A,U])=>[A.toHex(),U.toString()]).filter(([A])=>!h[A]).map(([A,U])=>`${this._runtimeMap[A]||A}/${U}`);!this._options.noInitWarn&&!N&&(w.length&&qp.warn(`${P}: Not decorating runtime apis without matching versions: ${w.join(", ")}`),I.length&&qp.warn(`${P}: Not decorating unknown runtime apis: ${I.join(", ")}`))}const O=s?(I,A)=>this._rpcCore.state.call(I,A,s):(I,A)=>this._rpcCore.state.call(I,A),z=I=>fo({},Object.keys(u[I]),A=>this._decorateCall(e,u[I][A],O,a)),j=Object.keys(u);for(let I=0,A=j.length;I<A;I++)Zn(o,j[I],z);return o}_decorateCall(e,n,r,i){const a=i((...s)=>{if(s.length!==n.params.length)throw new Error(`${n.name}:: Expected ${n.params.length} arguments, found ${s.length}`);const o=e.createType("Raw",li(s.map((u,h)=>e.createTypeUnsafe(n.params[h].type,[u]).toU8a())));return r(n.name,o).pipe(ne(u=>e.createTypeUnsafe(n.type,[u])))});return a.meta=n,a}_decorateMulti(e){return e(n=>n.length?(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(n.map(r=>Array.isArray(r)?r[0].creator.meta.type.isPlain?[r[0].creator]:r[0].creator.meta.type.asMap.hashers.length===1?[r[0].creator,r.slice(1)]:[r[0].creator,...r.slice(1)]:[r.creator])):ee([]))}_decorateMultiAt(e,n,r){return n(i=>i.length?this._rpcCore.state.queryStorageAt(i.map(a=>{if(Array.isArray(a)){const{creator:s}=Wp(e,a[0].creator);return s.meta.type.isPlain?[s]:s.meta.type.asMap.hashers.length===1?[s,a.slice(1)]:[s,...a.slice(1)]}return[Wp(e,a.creator).creator]}),r):ee([]))}_decorateExtrinsics({tx:e},n){const r=p8(this._type,this._rx,n),i=s=>fo({},Object.keys(e[s]),o=>o.startsWith("$")?e[s][o]:this._decorateExtrinsicEntry(e[s][o],r)),a=Object.keys(e);for(let s=0,o=a.length;s<o;s++)Zn(r,a[s],i);return r}_decorateExtrinsicEntry(e,n){const r=(...i)=>n(e(...i));return r.is=i=>e.is(i),this._decorateFunctionMeta(e,r)}_decorateStorage({query:e,registry:n},r,i){const a={},s=u=>fo({},Object.keys(e[u]),h=>i?this._decorateStorageEntryAt(n,e[u][h],r,i):this._decorateStorageEntry(e[u][h],r)),o=Object.keys(e);for(let u=0,h=o.length;u<h;u++)Zn(a,o[u],s);return a}_decorateStorageEntry(e,n){const r=(s,o)=>Nd(o||T(this,zr),e,s),i=s=>Zi(this.at(s)).pipe(ne(o=>Wp(o,e))),a=this._decorateStorageCall(e,n);return a.creator=e,a.at=n((s,...o)=>i(s).pipe(be(u=>u(...o)))),a.hash=n((...s)=>this._rpcCore.state.getStorageHash(r(s))),a.is=s=>s.section===e.section&&s.method===e.method,a.key=(...s)=>mt(h0(e(...s))[1]),a.keyPrefix=(...s)=>mt(e.keyPrefix(...s)),a.size=n((...s)=>this._rpcCore.state.getStorageSize(r(s))),a.sizeAt=n((s,...o)=>i(s).pipe(be(u=>this._rpcCore.state.getStorageSize(r(o,u.creator.meta.registry),s)))),e.iterKey&&e.meta.type.isMap&&(a.entries=n(ae(T(this,Fn),(...s)=>this._retrieveMapEntries(e,null,s))),a.entriesAt=n(ae(T(this,Fn),(s,...o)=>i(s).pipe(be(u=>this._retrieveMapEntries(u.creator,s,o))))),a.entriesPaged=n(ae(T(this,Fn),s=>this._retrieveMapEntriesPaged(e,void 0,s))),a.keys=n(ae(T(this,Fn),(...s)=>this._retrieveMapKeys(e,null,s))),a.keysAt=n(ae(T(this,Fn),(s,...o)=>i(s).pipe(be(u=>this._retrieveMapKeys(u.creator,s,o))))),a.keysPaged=n(ae(T(this,Fn),s=>this._retrieveMapKeysPaged(e,void 0,s)))),this.supportMulti&&e.meta.type.isMap&&(a.multi=n(s=>e.meta.type.asMap.hashers.length===1?this._retrieveMulti(s.map(o=>[e,[o]])):this._retrieveMulti(s.map(o=>[e,o])))),this._decorateFunctionMeta(e,a)}_decorateStorageEntryAt(e,n,r,i){const a=o=>Nd(e,n,o),s=r((...o)=>this._rpcCore.state.getStorage(a(o),i));return s.creator=n,s.hash=r((...o)=>this._rpcCore.state.getStorageHash(a(o),i)),s.is=o=>o.section===n.section&&o.method===n.method,s.key=(...o)=>mt(h0(n(...o))[1]),s.keyPrefix=(...o)=>mt(n.keyPrefix(...o)),s.size=r((...o)=>this._rpcCore.state.getStorageSize(a(o),i)),n.iterKey&&n.meta.type.isMap&&(s.entries=r(ae(T(this,Fn),(...o)=>this._retrieveMapEntries(n,i,o))),s.entriesPaged=r(ae(T(this,Fn),o=>this._retrieveMapEntriesPaged(n,i,o))),s.keys=r(ae(T(this,Fn),(...o)=>this._retrieveMapKeys(n,i,o))),s.keysPaged=r(ae(T(this,Fn),o=>this._retrieveMapKeysPaged(n,i,o)))),this.supportMulti&&n.meta.type.isMap&&(s.multi=r(o=>n.meta.type.asMap.hashers.length===1?this._retrieveMulti(o.map(u=>[n,[u]]),i):this._retrieveMulti(o.map(u=>[n,u]),i))),this._decorateFunctionMeta(n,s)}_queueStorage(e,n){const r=n===T(this,Lf)?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;let i=n.length-1,a=0,s;return i===-1||!n[i]||n[i][1].length===Lee?(i++,s=Zi(new Promise(o=>{Po(()=>{const u=n[i][1];delete n[i],o(u)})})).pipe(be(o=>r(o))),n.push([s,[e]])):(s=n[i][0],a=n[i][1].length,n[i][1].push(e)),s.pipe(ne(o=>o[a]))}_decorateStorageCall(e,n){const r=ae(T(this,Fn),(...i)=>{const a=Nd(T(this,zr),e,i);return this.hasSubscriptions?this._queueStorage(a,T(this,Lf)):this._rpcCore.state.getStorage(a)});return n(r,{methodName:e.method,overrideNoSub:(...i)=>this._queueStorage(Nd(T(this,zr),e,i),T(this,vm))})}_retrieveMulti(e,n){if(!e.length)return ee([]);const r=this.hasSubscriptions&&!n?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return e.length<=Zp?n?r(e,n):r(e):me(E1(e,Zp).map(i=>n?r(i,n):r(i))).pipe(ne(xc))}_retrieveMapKeys({iterKey:e,meta:n,method:r,section:i},a,s){if(!e||!n.type.isMap)throw new Error("keys can only be retrieved on maps");const o=e(...s).toHex(),u=new zl(o),h=a?y=>this._rpcCore.state.getKeysPaged(o,Od,y,a):y=>this._rpcCore.state.getKeysPaged(o,Od,y),p=y=>y.setMeta(n,i,r);return u.pipe(be(h),ne(y=>y.map(p)),Vs(y=>Po(()=>{y.length===Od?u.next(y[Od-1].toHex()):u.complete()})),sh(),ne(xc))}_retrieveMapKeysPaged({iterKey:e,meta:n,method:r,section:i},a,s){if(!e||!n.type.isMap)throw new Error("keys can only be retrieved on maps");const o=u=>u.setMeta(n,i,r);return(a?u=>this._rpcCore.state.getKeysPaged(u,s.pageSize,s.startKey||u,a):u=>this._rpcCore.state.getKeysPaged(u,s.pageSize,s.startKey||u))(e(...s.args).toHex()).pipe(ne(u=>u.map(o)))}_retrieveMapEntries(e,n,r){const i=n?a=>this._rpcCore.state.queryStorageAt(a,n):a=>this._rpcCore.state.queryStorageAt(a);return this._retrieveMapKeys(e,n,r).pipe(be(a=>a.length?me(E1(a,Zp).map(i)).pipe(ne(s=>xc(s).map((o,u)=>[a[u],o]))):ee([])))}_retrieveMapEntriesPaged(e,n,r){const i=n?a=>this._rpcCore.state.queryStorageAt(a,n):a=>this._rpcCore.state.queryStorageAt(a);return this._retrieveMapKeysPaged(e,n,r).pipe(be(a=>a.length?i(a).pipe(ne(s=>s.map((o,u)=>[a[u],o]))):ee([])))}_decorateDeriveRx(e){var n,r,i,a;const s=(n=this._runtimeVersion)==null?void 0:n.specName.toString(),o=Y$(T(this,Fn),this._rx,he({},this._options.derives,(a=(i=(r=this._options.typesBundle)==null?void 0:r.spec)==null?void 0:i[s||""])==null?void 0:a.derives));return d8(e,o)}_decorateDerive(e){return d8(e,this._rx.derive)}}Fn=new WeakMap,If=new WeakMap,zr=new WeakMap,vm=new WeakMap,Lf=new WeakMap;const Ree=1e4,N8=[16,15,14],da=Dr("api/init");function Bee(t){return t.toString()}var ac,sc,ji,Js,oc,cc,wm,Hw,Aw;class Xee extends Aee{constructor(e,n,r){super(e,n,r),G(this,cc),G(this,ac,null),G(this,sc,null),G(this,ji,[]),G(this,Js,null),G(this,oc,{}),this.registry.setKnownTypes(e),e.source?Q(this,ji,T(e.source,ji)):this.registerTypes(e.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=e.signer,this._rpcCore.setRegistrySwap(i=>this.getBlockRegistry(i)),this._rpcCore.setResolveBlockHash(i=>Sn(this._rpcCore.chain.getBlockHash(i))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",()=>dt(this,cc,Hw).call(this)),this._rpcCore.provider.on("error",i=>dt(this,cc,Aw).call(this,i)),this._rpcCore.provider.on("connected",()=>dt(this,cc,wm).call(this))):this._options.noInitWarn||da.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&dt(this,cc,wm).call(this).catch(Qi)}_initRegistry(e,n,r,i,a){e.clearCache(),e.setChainProperties(a||this.registry.getChainProperties()),e.setKnownTypes(this._options),e.register(Mee(e,n,r.specName,r.specVersion)),e.setHasher(kee(e,n,r.specName)),e.knownTypes.typesBundle&&(e.knownTypes.typesAlias=Nee(e,n,r.specName)),e.setMetadata(i,void 0,he({},Pee(e,n,r.specName),this._options.signedExtensions),this._options.noInitWarn)}_getDefaultRegistry(){return ps(T(this,ji).find(({isDefault:e})=>e),"Initialization error, cannot find the default registry")}async at(e,n){const r=qe(e),i=mt(r),a=await this.getBlockRegistry(r,n);return(!T(this,ac)||T(this,ac)[0]!==i)&&Q(this,ac,[i,this._createDecorated(a,!0,null,r).decoratedApi]),T(this,ac)[1]}async _createBlockRegistry(e,n,r){const i=new cw(e),a=await this._retrieveMetadata(r.apis,n.parentHash,i),s=this._runtimeChain;if(!s)throw new Error("Invalid initializion order, runtimeChain is not available");this._initRegistry(i,s,r,a);const o={counter:0,lastBlockHash:e,metadata:a,registry:i,runtimeVersion:r};return T(this,ji).push(o),o}_cacheBlockRegistryProgress(e,n){let r=T(this,oc)[e];return qt(r)&&(r=T(this,oc)[e]=new Promise((i,a)=>{n().then(s=>{delete T(this,oc)[e],i(s)}).catch(s=>{delete T(this,oc)[e],a(s)})})),r}_getBlockRegistryViaVersion(e,n){if(n){const r=T(this,ji).find(({runtimeVersion:{specName:i,specVersion:a}})=>i.eq(n.specName)&&a.eq(n.specVersion));if(r)return r.counter++,r.lastBlockHash=e,r}return null}async _getBlockRegistryViaHash(e){if(!this._genesisHash||!this._runtimeVersion)throw new Error("Cannot retrieve data on an uninitialized chain");const n=this.registry.createType("HeaderPartial",this._genesisHash.eq(e)?{number:dn,parentHash:this._genesisHash}:await Sn(this._rpcCore.chain.getHeader.raw(e)));if(n.parentHash.isEmpty)throw da.warn(`Unable to retrieve header ${e.toString()} and parent ${n.parentHash.toString()} from supplied hash`),new Error("Unable to retrieve header and parent from supplied hash");Oee(this._genesisHash,n.number);const r=this.registry.createType("RuntimeVersionPartial",await Sn(this._rpcCore.state.getRuntimeVersion.raw(n.parentHash)));return this._getBlockRegistryViaVersion(e,r)||await this._cacheBlockRegistryProgress(r.toHex(),()=>this._createBlockRegistry(e,n,r))}async getBlockRegistry(e,n){return T(this,ji).find(({lastBlockHash:r})=>r&&l7(r,e))||this._getBlockRegistryViaVersion(e,n)||await this._cacheBlockRegistryProgress(mt(e),()=>this._getBlockRegistryViaHash(e))}async _loadMeta(){var e;return this._isReady?(this._options.source||this._subscribeUpdates(),!0):(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=(e=this._options.source)!=null&&e._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(e){this._extrinsicType=e.extrinsicVersion,this._runtimeChain=e.runtimeChain,this._runtimeVersion=e.runtimeVersion;const n=Object.keys(e.rpc),r=[];for(let i=0,a=n.length;i<a;i++){const s=n[i],o=Object.keys(e.rpc[s]);for(let u=0,h=o.length;u<h;u++)r.push(`${s}_${o[u]}`)}return this._filterRpc(r,x8(this.registry,e.runtimeChain,e.runtimeVersion.specName)),[e.genesisHash,e.runtimeMetadata]}_subscribeUpdates(){T(this,Js)||!this.hasSubscriptions||Q(this,Js,this._rpcCore.state.subscribeRuntimeVersion().pipe(be(e=>{var n;return(n=this._runtimeVersion)!=null&&n.specVersion.eq(e.specVersion)?ee(!1):this._rpcCore.state.getMetadata().pipe(ne(r=>{da.log(`Runtime version updated to spec=${e.specVersion.toString()}, tx=${e.transactionVersion.toString()}`),this._runtimeMetadata=r,this._runtimeVersion=e,this._rx.runtimeVersion=e;const i=this._getDefaultRegistry(),a=this._runtimeChain;if(!a)throw new Error("Invalid initializion order, runtimeChain is not available");return i.metadata=r,i.runtimeVersion=e,this._initRegistry(this.registry,a,e,r),this._injectMetadata(i,!0),!0}))})).subscribe())}async _metaFromChain(e){const[n,r,i,a,s]=await Promise.all([Sn(this._rpcCore.chain.getBlockHash(0)),Sn(this._rpcCore.state.getRuntimeVersion()),Sn(this._rpcCore.system.chain()),Sn(this._rpcCore.system.properties()),Sn(this._rpcCore.rpc.methods())]);this._runtimeChain=i,this._runtimeVersion=r,this._rx.runtimeVersion=r;const o=`${n.toHex()||"0x"}-${r.specVersion.toString()}`,u=e!=null&&e[o]?new hc(this.registry,e[o]):await this._retrieveMetadata(r.apis);return this._initRegistry(this.registry,i,r,u,a),this._filterRpc(s.methods.map(Bee),x8(this.registry,i,r.specName)),this._subscribeUpdates(),T(this,ji).length||T(this,ji).push({counter:0,isDefault:!0,metadata:u,registry:this.registry,runtimeVersion:r}),u.getUniqTypes(this._options.throwOnUnknown||!1),[n,u]}_initFromMeta(e){const n=this._runtimeVersion;if(!n)throw new Error("Invalid initializion order, runtimeVersion is not available");return this._extrinsicType=e.asLatest.extrinsic.versions.at(0)||eb,this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=n,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),!0}async _retrieveMetadata(e,n,r){let i=null;const a=e.find(([o])=>o.eq(mu("Metadata",64))),s=r||this.registry;if(!a||a[1].toNumber()<2)return da.warn("MetadataApi not available, rpc::state::get_metadata will be used."),n?new hc(s,await Sn(this._rpcCore.state.getMetadata.raw(n))):await Sn(this._rpcCore.state.getMetadata());try{const o=n?await Sn(this._rpcCore.state.call.raw("Metadata_metadata_versions","0x",n)):await Sn(this._rpcCore.state.call("Metadata_metadata_versions","0x"));i=s.createType("Vec<u32>",o).filter(u=>N8.includes(u.toNumber())).reduce((u,h)=>h.gt(u)?h:u)}catch(o){da.debug(o.message),da.warn("error with state_call::Metadata_metadata_versions, rpc::state::get_metadata will be used")}if(i&&!N8.includes(i.toNumber())&&(i=null),i)try{const o=n?await Sn(this._rpcCore.state.call.raw("Metadata_metadata_at_version",mt(i.toU8a()),n)):await Sn(this._rpcCore.state.call("Metadata_metadata_at_version",mt(i.toU8a()))),u=n?s.createType("Raw",o).toU8a():o,h=s.createType("Option<OpaqueMetadata>",u).unwrapOr(null);if(h)return new hc(s,h.toHex())}catch(o){da.debug(o.message),da.warn("error with state_call::Metadata_metadata_at_version, rpc::state::get_metadata will be used")}return n?new hc(s,await Sn(this._rpcCore.state.getMetadata.raw(n))):await Sn(this._rpcCore.state.getMetadata())}_subscribeHealth(){this._unsubscribeHealth(),Q(this,sc,this.hasSubscriptions?setInterval(()=>{Sn(this._rpcCore.system.health.raw()).catch(Qi)},Ree):null)}_unsubscribeHealth(){T(this,sc)&&(clearInterval(T(this,sc)),Q(this,sc,null))}_unsubscribeUpdates(){T(this,Js)&&(T(this,Js).unsubscribe(),Q(this,Js,null))}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates()}}ac=new WeakMap,sc=new WeakMap,ji=new WeakMap,Js=new WeakMap,oc=new WeakMap,cc=new WeakSet,wm=async function(){this._isConnected.next(!0),this.emit("connected");try{const t=this._options.initWasm===!1?!0:await cR(),e=await this._loadMeta();this._subscribeHealth(),e&&!this._isReady&&t&&(this._isReady=!0,this.emit("ready",this))}catch(t){const e=new Error(`FATAL: Unable to initialize the API: ${t.message}`);da.error(e),this.emit("error",e)}},Hw=function(){this._isConnected.next(!1),this._unsubscribe(),this.emit("disconnected")},Aw=function(t){this.emit("error",t)};function ir(t){if(t===void 0)throw new Error("Api interfaces needs to be initialized before using, wait for 'isReady'");return t}class jee extends Xee{get call(){return ir(this._call)}get consts(){return ir(this._consts)}get derive(){return ir(this._derive)}get errors(){return ir(this._errors)}get events(){return ir(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return ir(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return`${Xy.name} v${Xy.version}`}get query(){return ir(this._query)}get queryMulti(){return ir(this._queryMulti)}get rpc(){return ir(this._rpc)}get runtimeChain(){return ir(this._runtimeChain)}get runtimeMetadata(){return ir(this._runtimeMetadata)}get runtimeVersion(){return ir(this._runtimeVersion)}get rx(){return ir(this._rx)}get stats(){return this._rpcCore.stats}get type(){return this._type}get tx(){return ir(this._extrinsics)}findCall(e){return zw(this.registry,e)}findError(e){return Iw(this.registry,e)}}class Cee extends jee{constructor(e={},n,r){super(e,n,r)}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(e){this._rx.signer=e}async sign(e,n,{signer:r}={}){if(Ut(e)){const i=r||this._rx.signer;if(!(i!=null&&i.signRaw))throw new Error("No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");return(await i.signRaw(he({type:"bytes"},n,{address:e}))).signature}return mt(e.sign(qe(n.data)))}}var Ku,Ju,Qu,Pm,_u,Hf,Af;class Uee{constructor(e,n){G(this,Ku,!1),G(this,Ju),G(this,Qu,[]),G(this,Pm,[]),G(this,_u,!0),G(this,Hf,[]),G(this,Af,[]),Q(this,Ju,n),Q(this,Af,e.map(async(r,i)=>{const[a,...s]=Array.isArray(r)?r:[r];return T(this,Qu).push(!1),T(this,Pm).push(a),a(...s,this._createCallback(i))}))}_allHasFired(){return T(this,Ku)||Q(this,Ku,T(this,Qu).filter(e=>!e).length===0),T(this,Ku)}_createCallback(e){return n=>{T(this,Qu)[e]=!0,T(this,Hf)[e]=n,this._triggerUpdate()}}_triggerUpdate(){if(!(!T(this,_u)||!Ze(T(this,Ju))||!this._allHasFired()))try{Promise.resolve(T(this,Ju).call(this,T(this,Hf))).catch(Qi)}catch{}}unsubscribe(){T(this,_u)&&(Q(this,_u,!1),Promise.all(T(this,Af).map(async e=>{try{const n=await e;Ze(n)&&n()}catch{}})).catch(()=>{}))}}Ku=new WeakMap,Ju=new WeakMap,Qu=new WeakMap,Pm=new WeakMap,_u=new WeakMap,Hf=new WeakMap,Af=new WeakMap;function bb(t,e){let n=!1;return{reject:r=>(n||(n=!0,e(r)),Kl),resolve:r=>{n||(n=!0,t(r))}}}function Dee(t,e){const n=t.slice(),r=t.length&&Ze(t[t.length-1])?n.pop():void 0;if(e&&!Ze(r))throw new Error("Expected a callback to be passed with subscriptions");return[n,r]}function Fee(t,e){return new Promise((n,r)=>{const i=bb(n,r),a=t(...e).pipe(za(s=>i.reject(s))).subscribe(s=>{i.resolve(s),Po(()=>a.unsubscribe())})})}function Zee(t,e,n){return new Promise((r,i)=>{const a=bb(r,i),s=t(...e).pipe(za(o=>a.reject(o)),Vs(()=>a.resolve(()=>s.unsubscribe()))).subscribe(o=>{Po(()=>n(o))})})}function qee(t,e){const n=!!(e!=null&&e.methodName&&e.methodName.includes("subscribe"));return function(...r){const[i,a]=Dee(r,n);return a?Zee(t,i,a):Fee((e==null?void 0:e.overrideNoSub)||t,i)}}var Rf,Bf;const Wee=class Mm extends Cee{constructor(e){super(e,"promise",qee),G(this,Rf),G(this,Bf),Q(this,Rf,new Promise(n=>{super.once("ready",()=>n(this))})),Q(this,Bf,new Promise((n,r)=>{const i=bb(n,r);super.once("ready",()=>i.resolve(this)),super.once("error",a=>i.reject(a))}))}static create(e){const n=new Mm(e);return e&&e.throwOnConnect?n.isReadyOrError:(n.isReadyOrError.catch(Qi),n.isReady)}get isReady(){return T(this,Rf)}get isReadyOrError(){return T(this,Bf)}clone(){return new Mm(he({},this._options,{source:this}))}async combineLatest(e,n){const r=new Uee(e,n);return()=>{r.unsubscribe()}}};Rf=new WeakMap,Bf=new WeakMap;let Gee=Wee;const Yee={rpc:{checkDelegations:{description:"Test a list of MSAs to see if they have delegated to the provider MSA",params:[{name:"delegator_msa_ids",type:"Vec<DelegatorId>"},{name:"provider_msa_id",type:"ProviderId"},{name:"block_number",type:"BlockNumber"},{name:"schema_id",type:"Option<SchemaId>"}],type:"Vec<(DelegatorId, bool)>"},grantedSchemaIdsByMsaId:{description:"Fetch the list of schema ids that a delegator has granted to provider",params:[{name:"delegator_msa_id",type:"DelegatorId"},{name:"provider_msa_id",type:"ProviderId"}],type:"Option<Vec<SchemaGrantResponse>>"},getKeysByMsaId:{description:"Fetch Keys for an MSA Id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<KeyInfoResponse>"},getAllGrantedDelegationsByMsaId:{description:"Get the list of all delegated providers with schema permission grants",params:[{name:"delegator_msa_id",type:"DelegatorId"}],type:"Vec<DelegationResponse>"}},types:{MessageSourceId:"u64",DelegatorId:"MessageSourceId",ProviderId:"MessageSourceId",KeyInfoResponse:{msa_keys:"Vec<AccountId>",msa_id:"MessageSourceId"},SchemaGrantResponse:{schema_id:"SchemaId",revoked_at:"BlockNumber"},DelegationResponse:{provider_id:"ProviderId",permissions:"Vec<SchemaGrantResponse>"},CommonPrimitivesMsaDelegatorId:"u64",CommonPrimitivesMsaProviderId:"u64"}},Kee={rpc:{getBySchemaId:{description:"Get messages by schemaId paginated",params:[{name:"schema_id",type:"SchemaId"},{name:"pagination",type:"BlockPaginationRequest"}],type:"BlockPaginationResponseMessage"}},types:{BlockPaginationRequest:{from_block:"BlockNumber",from_index:"u32",to_block:"BlockNumber",page_size:"u32"},MessageResponse:{payload:"Option<Vec<u8>>",cid:"Option<Vec<u8>>",provider_msa_id:"MessageSourceId",msa_id:"Option<MessageSourceId>",index:"u16",block_number:"BlockNumber",payload_length:"Option<u32>"},BlockPaginationResponseMessage:{content:"Vec<MessageResponse>",has_next:"bool",next_block:"Option<BlockNumber>",next_index:"Option<u32>"}}},Jee={rpc:{getBySchemaId:{description:"Get a Schema by Id",params:[{name:"schema_id",type:"SchemaId"}],type:"Option<SchemaResponse>"},checkSchemaValidity:{description:"",params:[{name:"model",type:"SchemaModel"},{name:"at",type:"BlockHash",isOptional:!0}],type:"bool"},getVersions:{description:"Get different versions and schema ids for a complete schema name or only a namespace",params:[{name:"schema_name",type:"String"}],type:"Option<Vec<SchemaVersionResponse>>"}},types:{SchemaId:"u16",SchemaModel:"Vec<u8>",SchemaVersion:"u8",SchemaResponse:{schema_id:"SchemaId",model:"SchemaModel",model_type:"ModelType",payload_location:"PayloadLocation",settings:"Vec<SchemaSetting>"},ModelType:{_enum:["AvroBinary","Parquet"]},PayloadLocation:{_enum:["OnChain","IPFS","Itemized","Paginated"]},SchemaSetting:{_enum:["AppendOnly","SignatureRequired"]},SchemaVersionResponse:{schema_name:"String",schema_version:"SchemaVersion",schema_id:"SchemaId"}}},Qee={rpc:{getPaginatedStorage:{description:"Gets pages of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"Vec<PaginatedStorageResponse>"},getItemizedStorage:{description:"Gets itemized of stateful storage",params:[{name:"msa_id",type:"MessageSourceId"},{name:"schema_id",type:"SchemaId"}],type:"ItemizedStoragePageResponse"}},types:{PageId:"u16",PageHash:"u32",PageNonce:"u16",ItemizedStorageResponse:{index:"u16",payload:"Vec<u8>"},PaginatedStorageResponse:{page_id:"PageId",msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",payload:"Vec<u8>"},ItemizedStoragePageResponse:{msa_id:"MessageSourceId",schema_id:"SchemaId",content_hash:"PageHash",nonce:"PageNonce",items:"Vec<ItemizedStorageResponse>"}}},_ee={rpc:{getHandleForMsa:{description:"Get handle for a given msa_id",params:[{name:"msa_id",type:"MessageSourceId"}],type:"Option<HandleResponse>"},getMsaForHandle:{description:"Get msa_id for a given handle",params:[{name:"display_handle",type:"String"}],type:"Option<MessageSourceId>"},getNextSuffixes:{description:"Get next suffixes for a given handle and count",params:[{name:"base_handle",type:"String"},{name:"count",type:"u16"}],type:"PresumptiveSuffixesResponse"},validateHandle:{description:"Check whether the supplied handle passes all the checks performed by claim_handle call.",params:[{name:"base_handle",type:"String"}],type:"bool"}},types:{HandleSuffix:"u16",HandleResponse:{base_handle:"String",canonical_base:"String",suffix:"u16"},PresumptiveSuffixesResponse:{suffixes:"Vec<HandleSuffix>",base_handle:"String"}}},$ee={rpc:{getEvents:{description:"Get block Events",params:[{name:"at",type:"H256"}],type:"Vec<RpcEvent>"},getMissingNonceValues:{description:"Get missing nonce values for an account",params:[{name:"account",type:"AccountId32"}],type:"Vec<Index>"}},types:{RpcEvent:{phase:"Option<u32>",pallet:"u8",event:"u8",data:"Vec<u8>"},SpConsensusSlotsSlotDuration:"u64"}},ete={rpc:{computeCapacityFeeDetails:{description:"Compute the capacity fee details for a given transaction",params:[{name:"encoded_xt",type:"Vec<u8>"},{name:"at",type:"Option<BlockHash>"}],type:"FeeDetails"}},types:{}},tte={rpc:{dummy:{description:"This API has no custom RPCs",params:[],type:"undefined"}},types:{RewardEra:"u32",UnclaimedRewardInfo:{reward_era:"RewardEra",expires_at_block:"BlockNumber",staked_amount:"Balance",eligible_amount:"Balance",earned_amount:"Balance"}}},Rw=Object.freeze(Object.defineProperty({__proto__:null,capacity:tte,frequency:$ee,frequencyTxPayment:ete,handles:_ee,messages:Kee,msa:Yee,schemas:Jee,statefulStorage:Qee},Symbol.toStringTag,{value:"Module"})),nte={transactionWatch_v1:{submitAndWatch:{description:"",type:"",params:[]},unwatch:{description:"",type:"",params:[]}},transaction_v1:{broadcast:{description:"",type:"",params:[]},stop:{description:"",type:"",params:[]}},chainHead_v1:{body:{description:"",type:"",params:[]},call:{description:"",type:"",params:[]},continue:{description:"",type:"",params:[]},follow:{description:"",type:"",params:[]},header:{description:"",type:"",params:[]},stopOperation:{description:"",type:"",params:[]},storage:{description:"",type:"",params:[]},unfollow:{description:"",type:"",params:[]},unpin:{description:"",type:"",params:[]}}},rte=Object.entries(Rw).reduce((t,[e,n])=>({...t,...n.types}),{}),ite=Object.entries(Rw).reduce((t,[e,n])=>({...t,[e]:n.rpc}),{...nte}),ate={CheckFreeExtrinsicUse:{extrinsic:{},payload:{}},HandlesSignedExtension:{extrinsic:{},payload:{}},StaleHashCheckExtension:{extrinsic:{},payload:{}},StorageWeightReclaim:{extrinsic:{},payload:{}}},ste={rpc:ite,types:rte,signedExtensions:ate};let Gp,Xf;const ote=new Promise(t=>{Xf=t});function cte(t){console.log("Setting chain URL to ",t),Xf&&(Xf(t),Xf=void 0)}async function ute(){if(!Gp){const t=await ote;Gp=new Promise((e,n)=>{console.log("Connecting to ",t);const r=t.startsWith("http")?new OX(t):new xv(t);Gee.create({provider:r,throwOnConnect:!0,throwOnUnknown:!0,...ste}).then(i=>i.isReadyOrError).then(i=>{e(i)}).catch(i=>{console.error(i),n(i)})})}return Gp}const Bw=new Map([["dsnp.broadcast@v1",2],["dsnp.broadcast@v2",17],["dsnp.dsnp-content-attribute-set@v1",12],["dsnp.ext-content-attribute-set@v1",13],["dsnp.private-connections@v1",10],["dsnp.private-follows@v1",9],["dsnp.profile-resources@v1",15],["dsnp.profile@v1",6],["dsnp.public-follows@v1",8],["dsnp.public-key-assertion-method@v1",14],["dsnp.public-key-key-agreement@v1",7],["dsnp.reaction@v1",4],["dsnp.reply@v1",3],["dsnp.reply@v2",18],["dsnp.tombstone@v1",1],["dsnp.tombstone@v2",16],["dsnp.update@v1",5],["dsnp.update@v2",19],["dsnp.user-attribute-set@v1",11],["dsnp.user-attribute-set@v2",20],["frequency.default-token-address@v1",21]]);Object.fromEntries(Bw);const lte=t=>{const e=t.match(/(\w+)\.([^@]+)@v(\d+)/);return e&&e[1]&&e[2]?{namespace:e[1],name:e[2],version:e[3]?parseInt(e[3]):void 0}:null};function O8(t,e,n){const r=t.slice();return r[17]=e[n],r}function V8(t,e,n){const r=t.slice();return r[20]=e[n],r}function S8(t){let e,n=t[20].name+"",r;return{c(){e=Oe("option"),r=nr(n),this.h()},l(i){e=Ne(i,"OPTION",{});var a=ot(e);r=tr(a,n),a.forEach(oe),this.h()},h(){e.__value=t[20],ms(e,e.__value)},m(i,a){_e(i,e,a),de(e,r)},p:Bt,d(i){i&&oe(e)}}}function E8(t){let e,n=t[17].name+"",r;return{c(){e=Oe("option"),r=nr(n),this.h()},l(i){e=Ne(i,"OPTION",{});var a=ot(e);r=tr(a,n),a.forEach(oe),this.h()},h(){e.__value=t[17],ms(e,e.__value)},m(i,a){_e(i,e,a),de(e,r)},p:Bt,d(i){i&&oe(e)}}}function z8(t){let e,n;return e=new $4({}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function I8(t){let e,n=JSON.stringify(t[7],null,4)+"",r;return{c(){e=Oe("pre"),r=nr(n)},l(i){e=Ne(i,"PRE",{});var a=ot(e);r=tr(a,n),a.forEach(oe)},m(i,a){_e(i,e,a),de(e,r)},p(i,a){a&128&&n!==(n=JSON.stringify(i[7],null,4)+"")&&$r(r,n)},d(i){i&&oe(e)}}}function dte(t){let e,n="Please click 'Login'";return{c(){e=Oe("p"),e.textContent=n,this.h()},l(r){e=Ne(r,"P",{class:!0,"data-svelte-h":!0}),Kt(e)!=="svelte-124wpro"&&(e.textContent=n),this.h()},h(){ie(e,"class","mt-4")},m(r,i){_e(r,e,i)},p:Bt,i:Bt,o:Bt,d(r){r&&oe(e)}}}function fte(t){let e,n,r,i=t[7].signIn&&L8(t),a=t[7].signUp&&H8(t);return{c(){i&&i.c(),e=pt(),a&&a.c(),n=fn()},l(s){i&&i.l(s),e=ht(s),a&&a.l(s),n=fn()},m(s,o){i&&i.m(s,o),_e(s,e,o),a&&a.m(s,o),_e(s,n,o),r=!0},p(s,o){s[7].signIn?i?(i.p(s,o),o&128&&fe(i,1)):(i=L8(s),i.c(),fe(i,1),i.m(e.parentNode,e)):i&&(en(),we(i,1,1,()=>{i=null}),tn()),s[7].signUp?a?(a.p(s,o),o&128&&fe(a,1)):(a=H8(s),a.c(),fe(a,1),a.m(n.parentNode,n)):a&&(en(),we(a,1,1,()=>{a=null}),tn())},i(s){r||(fe(i),fe(a),r=!0)},o(s){we(i),we(a),r=!1},d(s){s&&(oe(e),oe(n)),i&&i.d(s),a&&a.d(s)}}}function L8(t){let e,n;return e=new GO({props:{response:t[7].signIn,api:t[6]}}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},p(r,i){const a={};i&128&&(a.response=r[7].signIn),i&64&&(a.api=r[6]),e.$set(a)},i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function H8(t){let e,n;return e=new ML({props:{response:t[7].signUp,api:t[6],providerId:t[4]}}),{c(){on(e.$$.fragment)},l(r){sn(e.$$.fragment,r)},m(r,i){an(e,r,i),n=!0},p(r,i){const a={};i&128&&(a.response=r[7].signUp),i&64&&(a.api=r[6]),i&16&&(a.providerId=r[4]),e.$set(a)},i(r){n||(fe(e.$$.fragment,r),n=!0)},o(r){we(e.$$.fragment,r),n=!1},d(r){rn(e,r)}}}function hte(t){let e,n,r="Welcome to ACME!",i,a,s="Login with Frequency",o,u,h,p="Select a Frequency chain",y,w,P,N,O="Select a login URL",z,j,I,A,U="Provider ID",H,X,C,F,S="Login payload expiration (seconds)",R,E,L,c,l="Requested schemas",f,b,g,v,M,x,d="Signup/Login Response Payload",m,V,B,k,Z,q,W,J,_,K=qi(t[8]),se=[];for(let te=0;te<K.length;te+=1)se[te]=S8(V8(t,K,te));let pe=qi(t[9]),re=[];for(let te=0;te<pe.length;te+=1)re[te]=E8(O8(t,pe,te));function Fe(te){t[16](te)}let Ce={options:t[10]};t[3]!==void 0&&(Ce.selected=t[3]),b=new gH({props:Ce}),uc.push(()=>X8(b,"selected",Fe));let le=t[5]&&z8(),Ye=!t[5]&&t[7]&&I8(t);const je=[fte,dte],ge=[];function Ke(te,ce){return te[7]?0:1}return Z=Ke(t),q=ge[Z]=je[Z](t),{c(){e=Oe("div"),n=Oe("h1"),n.textContent=r,i=pt(),a=Oe("button"),a.textContent=s,o=pt(),u=Oe("div"),h=Oe("label"),h.textContent=p,y=pt(),w=Oe("select");for(let te=0;te<se.length;te+=1)se[te].c();P=pt(),N=Oe("label"),N.textContent=O,z=pt(),j=Oe("select");for(let te=0;te<re.length;te+=1)re[te].c();I=pt(),A=Oe("label"),A.textContent=U,H=pt(),X=Oe("input"),C=pt(),F=Oe("label"),F.textContent=S,R=pt(),E=Oe("input"),L=pt(),c=Oe("label"),c.textContent=l,f=pt(),on(b.$$.fragment),v=pt(),M=Oe("div"),x=Oe("h1"),x.textContent=d,m=pt(),le&&le.c(),V=pt(),Ye&&Ye.c(),B=pt(),k=Oe("div"),q.c(),this.h()},l(te){e=Ne(te,"DIV",{class:!0});var ce=ot(e);n=Ne(ce,"H1",{class:!0,"data-svelte-h":!0}),Kt(n)!=="svelte-16u9nvg"&&(n.textContent=r),i=ht(ce),a=Ne(ce,"BUTTON",{class:!0,"data-svelte-h":!0}),Kt(a)!=="svelte-645tpi"&&(a.textContent=s),o=ht(ce),u=Ne(ce,"DIV",{class:!0});var Ve=ot(u);h=Ne(Ve,"LABEL",{for:!0,"data-svelte-h":!0}),Kt(h)!=="svelte-u1ra61"&&(h.textContent=p),y=ht(Ve),w=Ne(Ve,"SELECT",{id:!0});var Ue=ot(w);for(let xe=0;xe<se.length;xe+=1)se[xe].l(Ue);Ue.forEach(oe),P=ht(Ve),N=Ne(Ve,"LABEL",{for:!0,"data-svelte-h":!0}),Kt(N)!=="svelte-1jzot3s"&&(N.textContent=O),z=ht(Ve),j=Ne(Ve,"SELECT",{id:!0});var ue=ot(j);for(let xe=0;xe<re.length;xe+=1)re[xe].l(ue);ue.forEach(oe),I=ht(Ve),A=Ne(Ve,"LABEL",{for:!0,"data-svelte-h":!0}),Kt(A)!=="svelte-chlazf"&&(A.textContent=U),H=ht(Ve),X=Ne(Ve,"INPUT",{id:!0,type:!0,placeholder:!0}),C=ht(Ve),F=Ne(Ve,"LABEL",{for:!0,"data-svelte-h":!0}),Kt(F)!=="svelte-42yu8n"&&(F.textContent=S),R=ht(Ve),E=Ne(Ve,"INPUT",{type:!0,placeholder:!0}),L=ht(Ve),c=Ne(Ve,"LABEL",{for:!0,"data-svelte-h":!0}),Kt(c)!=="svelte-1ns1oui"&&(c.textContent=l),f=ht(Ve),sn(b.$$.fragment,Ve),Ve.forEach(oe),v=ht(ce),M=Ne(ce,"DIV",{class:!0});var lt=ot(M);x=Ne(lt,"H1",{class:!0,"data-svelte-h":!0}),Kt(x)!=="svelte-y5n4gw"&&(x.textContent=d),m=ht(lt),le&&le.l(lt),V=ht(lt),Ye&&Ye.l(lt),lt.forEach(oe),B=ht(ce),k=Ne(ce,"DIV",{class:!0});var We=ot(k);q.l(We),We.forEach(oe),ce.forEach(oe),this.h()},h(){ie(n,"class","text-3xl"),ie(a,"class","btn-primary bg-violet-400"),a.disabled=!1,ie(h,"for","chainselect"),ie(w,"id","chainselect"),t[0]===void 0&&Yp(()=>t[12].call(w)),ie(N,"for","proxyurl"),ie(j,"id","proxyurl"),t[1]===void 0&&Yp(()=>t[13].call(j)),ie(A,"for","provider-id"),ie(X,"id","provider-id"),ie(X,"type","number"),ie(X,"placeholder","1"),ie(F,"for","expiration"),ie(E,"type","text"),ie(E,"placeholder","300"),ie(c,"for","schemas"),ie(u,"class","grid grid-cols-2"),ie(x,"class","text-2xl"),ie(M,"class","mt-12"),ie(k,"class","mt-12"),ie(e,"class","p-12 text-violet-300")},m(te,ce){_e(te,e,ce),de(e,n),de(e,i),de(e,a),de(e,o),de(e,u),de(u,h),de(u,y),de(u,w);for(let Ve=0;Ve<se.length;Ve+=1)se[Ve]&&se[Ve].m(w,null);id(w,t[0],!0),de(u,P),de(u,N),de(u,z),de(u,j);for(let Ve=0;Ve<re.length;Ve+=1)re[Ve]&&re[Ve].m(j,null);id(j,t[1],!0),de(u,I),de(u,A),de(u,H),de(u,X),ms(X,t[4]),de(u,C),de(u,F),de(u,R),de(u,E),ms(E,t[2]),de(u,L),de(u,c),de(u,f),an(b,u,null),de(e,v),de(e,M),de(M,x),de(M,m),le&&le.m(M,null),de(M,V),Ye&&Ye.m(M,null),de(e,B),de(e,k),ge[Z].m(k,null),W=!0,J||(_=[ct(a,"click",Kp(t[11])),ct(w,"change",t[12]),ct(j,"change",t[13]),ct(X,"input",t[14]),ct(E,"input",t[15])],J=!0)},p(te,[ce]){if(ce&256){K=qi(te[8]);let ue;for(ue=0;ue<K.length;ue+=1){const lt=V8(te,K,ue);se[ue]?se[ue].p(lt,ce):(se[ue]=S8(lt),se[ue].c(),se[ue].m(w,null))}for(;ue<se.length;ue+=1)se[ue].d(1);se.length=K.length}if(ce&257&&id(w,te[0]),ce&512){pe=qi(te[9]);let ue;for(ue=0;ue<pe.length;ue+=1){const lt=O8(te,pe,ue);re[ue]?re[ue].p(lt,ce):(re[ue]=E8(lt),re[ue].c(),re[ue].m(j,null))}for(;ue<re.length;ue+=1)re[ue].d(1);re.length=pe.length}ce&514&&id(j,te[1]),ce&16&&C8(X.value)!==te[4]&&ms(X,te[4]),ce&4&&E.value!==te[2]&&ms(E,te[2]);const Ve={};!g&&ce&8&&(g=!0,Ve.selected=te[3],j8(()=>g=!1)),b.$set(Ve),te[5]?le?ce&32&&fe(le,1):(le=z8(),le.c(),fe(le,1),le.m(M,V)):le&&(en(),we(le,1,1,()=>{le=null}),tn()),!te[5]&&te[7]?Ye?Ye.p(te,ce):(Ye=I8(te),Ye.c(),Ye.m(M,null)):Ye&&(Ye.d(1),Ye=null);let Ue=Z;Z=Ke(te),Z===Ue?ge[Z].p(te,ce):(en(),we(ge[Ue],1,1,()=>{ge[Ue]=null}),tn(),q=ge[Z],q?q.p(te,ce):(q=ge[Z]=je[Z](te),q.c()),fe(q,1),q.m(k,null))},i(te){W||(fe(b.$$.fragment,te),fe(le),fe(q),W=!0)},o(te){we(b.$$.fragment,te),we(le),we(q),W=!1},d(te){te&&oe(e),jf(se,te),jf(re,te),rn(b),le&&le.d(),Ye&&Ye.d(),ge[Z].d(),J=!1,Ss(_)}}}function pte(t,e,n){kb({proxyUrl:"https://projectlibertylabs.github.io/siwf/ui",frequencyRpcUrl:"https://0.rpc.frequency.xyz"});const r=[{name:"Local dev node",http:"http://127.0.0.1:9944",ws:"ws://127.0.0.1:9944"},{name:"Mainnet #1",http:"https://0.rpc.frequency.xyz",ws:"wss://0.rpc.frequency.xyz"},{name:"Mainnet #2",http:"https://1.rpc.frequency.xyz",ws:"wss://1.rpc.frequency.xyz"},{name:"Mainnet Dwellir",http:"https://frequency-rpc.dwellir.com",ws:"wss://frequency-rpc.dwellir.com"},{name:"Mainnet OnFinality",http:"https://frequency-polkadot.api.onfinality.io/public-http",ws:"wss://frequency-polkadot.api.onfinality.io/public-ws"},{name:"Frequency Paseo",http:"https://0.rpc.testnet.amplica.io",ws:"wss://0.rpc.testnet.amplica.io"}],i=[{name:"Localhost",url:"http://localhost:5173"},{name:"Production",url:"https://projectlibertylabs.github.io/siwf/v1/ui"}];let a,s,o=300,u=Y8.schemas.map(U=>U.name),h=[...Bw.keys()],p="1",y=!1,w,P;const N=async()=>{const U={providerId:p.toString(),frequencyRpcUrl:a.http,proxyUrl:s.url,schemas:u.map(H=>lte(H)),siwsOptions:{expiresInMsecs:o*1e3}};kb(U),cte(a.ws),n(6,w=await ute()),n(7,P=void 0),n(5,y=!0),n(7,P=await ON()),n(5,y=!1)};function O(){a=Mb(this),n(0,a),n(8,r)}function z(){s=Mb(this),n(1,s),n(9,i)}function j(){p=C8(this.value),n(4,p)}function I(){o=this.value,n(2,o)}function A(U){u=U,n(3,u)}return[a,s,o,u,p,y,w,P,r,i,h,N,O,z,j,I,A]}class Dte extends oi{constructor(e){super(),ci(this,e,pte,hte,ui,{})}}export{Bm as B,Nb as D,$8 as E,Tb as F,yo as G,ig as H,mc as J,Vd as P,I0 as R,Mo as W,Sm as X,ag as Z,WP as a,mg as b,Wf as c,Mte as d,Bl as e,kte as f,GP as g,Ob as h,NT as i,Ft as j,ng as k,Lte as l,Hte as m,XT as n,Pte as o,$p as p,go as q,Tte as r,CT as s,Xc as t,jP as u,Vte as v,qP as w,hs as x,_8 as y,Dte as z};
